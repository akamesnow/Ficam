PROC CYCLE210(INT _MODE) PREPRO SBLOF DISPLOF
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.60.00 ;DATE: 2014-03-06
;Cycle support HMIsl
;Analyse machine configuration
DEF INT _I,_J,_J2,_INT,_INT2,_PLANE,_WS_CINV,_HS_CINV,_GS_CINV,_KODIR[48]
DEF STRING[30] S_STRAL
DEF STRING[200] _STR
DEF CHAR _QUOT=34
DEF AXIS _AX
DEF INT _LOG,_LOG_ON
DEF STRING[35] _LOG_FILE
_LOG_FILE="/_N_MPF_DIR/_N_LOG_CYCLE210_"<<$P_CHANNO<<"_MPF"
_LOG_ON=ISFILE(_LOG_FILE)
IF(_MODE==0)AND(_F_MCONF[0]==0)
_F_MCONF[0]=1
_M_INIT_BEGIN:
IF(_LOG_ON)
DELETE(_LOG,_LOG_FILE)
WRITE(_LOG,_LOG_FILE,"; Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<"  Time: "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
_INT=$MCS_DISP_COORDINATE_SYSTEM
WRITE(_LOG,_LOG_FILE,"$MCS_DISP_COORDINATE_SYSTEM="<<_INT)
_INT=$MCS_FUNCTION_MASK_TECH
WRITE(_LOG,_LOG_FILE,"$MCS_FUNCTION_MASK_TECH="<<_INT)
FOR _J=0 TO 19
_INT=$MCS_AXIS_USAGE[_J]
WRITE(_LOG,_LOG_FILE,"$MCS_AXIS_USAGE["<<_J<<"]="<<_INT)
ENDFOR
WRITE(_LOG,_LOG_FILE,"")
FOR _J=0 TO 19
_INT=$MCS_AXIS_USAGE_ATTRIB[_J]
WRITE(_LOG,_LOG_FILE,"$MCS_AXIS_USAGE_ATTRIB["<<_J<<"]="<<_INT)
ENDFOR
WRITE(_LOG,_LOG_FILE,"")
ENDIF
FOR _J=0 TO 19
_INT=$MC_AXCONF_MACHAX_USED[_J]
IF(_INT)
IF(STRINGIS($MC_AXCONF_CHANAX_NAME_TAB[_J])<>201)
S_STRAL="MD 10000["<<(_INT-1)<<"] <-> MD 20080["<<_J<<"]"
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: Maschinendatum prüfen: "<<S_STRAL<<" (Kanalachsbezeichner von der NC nicht erkannt)")
ENDIF
GOTOF _FEHL13
ENDIF
ENDIF
ENDFOR
FOR _J=0 TO 6
_F_AX_EXISTS[_J]=FALSE
_F_AX_NR[_J]=0
ENDFOR
FOR _J=0 TO 19
IF(_F_AX_EXISTS[0]==FALSE)AND($MCS_AXIS_USAGE[_J]==3)
_F_AX_EXISTS[0]=TRUE
_F_AX_NR[0]=_J+1
ENDIF
IF(_F_AX_EXISTS[1]==FALSE)AND($MCS_AXIS_USAGE[_J]==1)
_F_AX_EXISTS[1]=TRUE
_F_AX_NR[1]=_J+1
ENDIF
IF(_F_AX_EXISTS[2]==FALSE)AND($MCS_AXIS_USAGE[_J]==5)
_F_AX_EXISTS[2]=TRUE
_F_AX_NR[2]=_J+1
ENDIF
IF(_F_AX_EXISTS[3]==FALSE)AND($MCS_AXIS_USAGE[_J]==7)
_F_AX_EXISTS[3]=TRUE
_F_AX_NR[3]=_J+1
ENDIF
IF(_F_AX_EXISTS[4]==FALSE)AND($MCS_AXIS_USAGE[_J]==4)
_F_AX_EXISTS[4]=TRUE
_F_AX_NR[4]=_J+1
ENDIF
IF(_F_AX_EXISTS[5]==FALSE)AND($MCS_AXIS_USAGE[_J]==6)
_F_AX_EXISTS[5]=TRUE
_F_AX_NR[5]=_J+1
ENDIF
IF(_F_AX_EXISTS[6]==FALSE)AND($MCS_AXIS_USAGE[_J]==10)AND($MCS_FUNCTION_MASK_TECH B_AND 'H01')
_F_AX_EXISTS[6]=TRUE
_F_AX_NR[6]=_J+1
ENDIF
IF(_F_AX_EXISTS[7]==FALSE)AND($MCS_AXIS_USAGE[_J]==11)AND($MCS_FUNCTION_MASK_TECH B_AND 'H01')
_F_AX_EXISTS[7]=TRUE
_F_AX_NR[7]=_J+1
ENDIF
IF(_F_AX_EXISTS[8]==FALSE)AND($MCS_AXIS_USAGE[_J]==12)AND($MCS_FUNCTION_MASK_TECH B_AND 'H01')
_F_AX_EXISTS[8]=TRUE
_F_AX_NR[8]=_J+1
ENDIF
IF(_F_AX_EXISTS[9]==FALSE)AND($MCS_AXIS_USAGE[_J]==13)
_F_AX_EXISTS[9]=TRUE
_F_AX_NR[9]=_J+1
ENDIF
IF(_F_AX_EXISTS[10]==FALSE)AND($MCS_AXIS_USAGE[_J]==8)
_F_AX_EXISTS[10]=TRUE
_F_AX_NR[10]=_J+1
ENDIF
IF(_F_AX_EXISTS[11]==FALSE)AND($MCS_AXIS_USAGE[_J]==9)
_F_AX_EXISTS[11]=TRUE
_F_AX_NR[11]=_J+1
ENDIF
ENDFOR
IF(_LOG_ON)
FOR _J=0 TO 6
IF(_F_AX_EXISTS[_J])
WRITE(_LOG,_LOG_FILE,"_F_AX_EXISTS["<<_J<<"]=TRUE")
ELSE
WRITE(_LOG,_LOG_FILE,"_F_AX_EXISTS["<<_J<<"]=FALSE")
ENDIF
ENDFOR
ENDIF
_M_INIT_END:
IF($MC_AXCONF_GEOAX_ASSIGN_TAB[0]>0)
FOR _J=0 TO 6
_F_S_AX[_J]=NO_AXIS
_F_S_STR[_J]=""
ENDFOR
ENDIF
_M_SPIND_BEGIN:
FOR _J=0 TO 2
_F_S_NR[_J]=0
ENDFOR
IF(_F_AX_EXISTS[0])
IF(($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[0]-1]=="")OR($MC_AXCONF_MACHAX_USED[_F_AX_NR[0]-1]==0))
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: Hauptspindel ist nicht korrekt eingerichtet")
IF($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[0]-1]=="")
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_CHANAX_NAME_TAB["<<_F_AX_NR[0]-1<<"]=leer")
ELSE
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_MACHAX_USED["<<_F_AX_NR[0]-1<<"]=0")
ENDIF
ENDIF
GOTOF _FEHL6
ENDIF
_F_S_AX[0]=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[0]-1])
_F_S_AX[5]=_F_S_AX[0]
_F_S_NR[0]=$MA_SPIND_ASSIGN_TO_MACHAX[_F_S_AX[0]]
_F_MA_AX_NR[0]=$MC_AXCONF_MACHAX_USED[_F_AX_NR[0]-1]
IF(_F_AX_EXISTS[4])
IF(($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[4]-1]=="")OR($MC_AXCONF_MACHAX_USED[_F_AX_NR[4]-1]==0))
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: C-Achse der Hauptspindel ist nicht korrekt eingerichtet")
IF($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[4]-1]=="")
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_CHANAX_NAME_TAB["<<_F_AX_NR[4]-1<<"]=leer")
ELSE
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_MACHAX_USED["<<_F_AX_NR[4]-1<<"]=0")
ENDIF
ENDIF
GOTOF _FEHL7
ENDIF
_F_S_AX[0]=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[4]-1])
ENDIF
_F_S_STR[0]=AXSTRING(_F_S_AX[0])
_F_S_STR[5]=AXSTRING(_F_S_AX[5])
ELSE
IF ($MCS_TECHNOLOGY==1)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: Hauptspindel ist nicht eingerichtet (nur bei Technologie Drehen erforderlich)")
ENDIF
GOTOF _FEHL1
ENDIF
ENDIF
IF(NOT _F_AX_EXISTS[4])
_F_AX_NR[4]=_F_AX_NR[0]
ENDIF
IF(_LOG_ON)
IF(_F_AX_EXISTS[4])
WRITE(_LOG,_LOG_FILE,"HSP S"<<_F_S_NR[0]<<": "<<_F_S_STR[5]<<"  AX"<<_F_AX_NR[0]<<" M-AX"<<_F_MA_AX_NR[0]<<" ("<<_F_S_STR[0]<<"=AX"<<_F_AX_NR[4]<<")")
ELSE
WRITE(_LOG,_LOG_FILE,"HSP S"<<_F_S_NR[0]<<": AX"<<_F_AX_NR[0]<<" M-AX"<<_F_MA_AX_NR[0]<<" ("<<_F_S_STR[0]<<")")
ENDIF
ENDIF
IF(_F_AX_EXISTS[1])
IF(($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[1]-1]=="")OR($MC_AXCONF_MACHAX_USED[_F_AX_NR[1]-1]==0))
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: Werkzeugspindel ist nicht korrekt eingerichtet")
IF($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[1]-1]=="")
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_CHANAX_NAME_TAB["<<_F_AX_NR[1]-1<<"]=leer")
ELSE
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_MACHAX_USED["<<_F_AX_NR[1]-1<<"]=0")
ENDIF
ENDIF
GOTOF _FEHL10
ENDIF
_F_S_AX[1]=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[1]-1])
_F_S_NR[1]=$MA_SPIND_ASSIGN_TO_MACHAX[_F_S_AX[1]]
_F_S_STR[1]=AXSTRING(_F_S_AX[1])
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"WSP S"<<_F_S_NR[1]<<": AX"<<_F_AX_NR[1]<<" ("<<_F_S_STR[1]<<")")
ENDIF
ELSE
IF($MCS_TECHNOLOGY==2)
_INT=0
FOR _J=0 TO 19
IF($MC_AXCONF_MACHAX_USED[_J])
_AX=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_J])
IF($MA_SPIND_ASSIGN_TO_MACHAX[_AX])
IF(_INT==0)
_INT=_J+1
ELSE
_INT=-1
ENDIF
ENDIF
ENDIF
ENDFOR
IF(_INT>0)
_F_AX_EXISTS[1]=1
_F_AX_NR[1]=_INT
_F_S_AX[1]=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[1]-1])
_F_S_NR[1]=$MA_SPIND_ASSIGN_TO_MACHAX[_F_S_AX[1]]
_F_S_STR[1]=AXSTRING(_F_S_AX[1])
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"WSP S"<<_F_S_NR[1]<<": AX"<<_F_AX_NR[1]<<" ("<<_F_S_STR[1]<<") Fraesmaschine mit nur 1 Spindel")
ENDIF
ENDIF
ENDIF
ENDIF
IF(_F_AX_EXISTS[2])
IF(($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[2]-1]=="")OR($MC_AXCONF_MACHAX_USED[_F_AX_NR[2]-1]==0))
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: Gegenspindel ist nicht korrekt eingerichtet")
IF($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[2]-1]=="")
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_CHANAX_NAME_TAB["<<_F_AX_NR[2]-1<<"]=leer")
ELSE
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_MACHAX_USED["<<_F_AX_NR[2]-1<<"]=0")
ENDIF
ENDIF
GOTOF _FEHL8
ENDIF
_F_S_AX[2]=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[2]-1])
_F_S_AX[6]=_F_S_AX[2]
_F_S_NR[2]=$MA_SPIND_ASSIGN_TO_MACHAX[_F_S_AX[2]]
_F_MA_AX_NR[2]=$MC_AXCONF_MACHAX_USED[_F_AX_NR[2]-1]
IF(_F_AX_EXISTS[5])
IF(($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[5]-1]=="")OR($MC_AXCONF_MACHAX_USED[_F_AX_NR[5]-1]==0))
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: C-Achse der Gegenspindel ist nicht korrekt eingerichtet")
IF($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[5]-1]=="")
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_CHANAX_NAME_TAB["<<_F_AX_NR[5]-1<<"]=leer")
ELSE
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_MACHAX_USED["<<_F_AX_NR[5]-1<<"]=0")
ENDIF
ENDIF
GOTOF _FEHL9
ENDIF
_F_S_AX[2]=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[5]-1])
ENDIF
_F_S_STR[2]=AXSTRING(_F_S_AX[2])
_F_S_STR[6]=AXSTRING(_F_S_AX[6])
IF(NOT _F_AX_EXISTS[5])
_F_AX_NR[5]=_F_AX_NR[2]
ENDIF
IF(NOT _F_AX_EXISTS[3])
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: Linearachse der Gegenspindel ist nicht eingerichtet")
ENDIF
;GOTOF _FEHL4
ENDIF
IF(_LOG_ON)
IF(_F_AX_EXISTS[5])
WRITE(_LOG,_LOG_FILE,"GSP S"<<_F_S_NR[2]<<": "<<_F_S_STR[6]<<" AX"<<_F_AX_NR[2]<<" M-AX"<<_F_MA_AX_NR[2]<<" ("<<_F_S_STR[2]<<"=AX"<<_F_AX_NR[5]<<")")
ELSE
WRITE(_LOG,_LOG_FILE,"GSP S"<<_F_S_NR[2]<<": AX"<<_F_AX_NR[2]<<" M-AX"<<_F_MA_AX_NR[2]<<" ("<<_F_S_STR[2]<<")")
ENDIF
ENDIF
ENDIF
IF(_F_AX_EXISTS[3])
IF(($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[3]-1]=="")OR($MC_AXCONF_MACHAX_USED[_F_AX_NR[3]-1]==0))
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: Linearachse der Gegenspindel ist nicht korrekt eingerichtet")
IF($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[3]-1]=="")
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_CHANAX_NAME_TAB["<<_F_AX_NR[3]-1<<"]=leer")
ELSE
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_MACHAX_USED["<<_F_AX_NR[3]-1<<"]=0")
ENDIF
ENDIF
GOTOF _FEHL11
ENDIF
_F_S_AX[3]=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[3]-1])
_F_S_STR[3]=AXSTRING(_F_S_AX[3])
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Lin.Achse GSP: AX"<<_F_AX_NR[3]<<" ("<<_F_S_STR[3]<<")")
ENDIF
ENDIF
IF(_F_AX_EXISTS[6])
IF(($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[6]-1]=="")OR($MC_AXCONF_MACHAX_USED[_F_AX_NR[6]-1]==0))
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: B-Achse ist nicht korrekt eingerichtet")
IF($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[6]-1]=="")
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_CHANAX_NAME_TAB["<<_F_AX_NR[6]-1<<"]=leer")
ELSE
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_MACHAX_USED["<<_F_AX_NR[6]-1<<"]=0")
ENDIF
ENDIF
GOTOF _FEHL12
ENDIF
_F_S_AX[4]=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[6]-1])
_F_S_STR[4]=AXSTRING(_F_S_AX[4])
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"B-Achse: AX"<<_F_AX_NR[6]<<" ("<<_F_S_STR[4]<<")")
ENDIF
ENDIF
IF(_F_AX_EXISTS[7])
IF(($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[7]-1]=="")OR($MC_AXCONF_MACHAX_USED[_F_AX_NR[7]-1]==0))
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: B-Achse (HSP) ist nicht korrekt eingerichtet")
IF($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[7]-1]=="")
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_CHANAX_NAME_TAB["<<_F_AX_NR[7]-1<<"]=leer")
ELSE
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_MACHAX_USED["<<_F_AX_NR[7]-1<<"]=0")
ENDIF
ENDIF
GOTOF _FEHL12
ENDIF
_F_S_AX[7]=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[7]-1])
_F_S_STR[7]=AXSTRING(_F_S_AX[7])
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"B-Achse: AX"<<_F_AX_NR[7]<<" ("<<_F_S_STR[7]<<")")
ENDIF
ENDIF
IF(_F_AX_EXISTS[8])
IF(($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[8]-1]=="")OR($MC_AXCONF_MACHAX_USED[_F_AX_NR[8]-1]==0))
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: B-Achse (GSP) ist nicht korrekt eingerichtet")
IF($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[8]-1]=="")
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_CHANAX_NAME_TAB["<<_F_AX_NR[8]-1<<"]=leer")
ELSE
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_MACHAX_USED["<<_F_AX_NR[8]-1<<"]=0")
ENDIF
ENDIF
GOTOF _FEHL12
ENDIF
_F_S_AX[8]=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[8]-1])
_F_S_STR[8]=AXSTRING(_F_S_AX[8])
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"B-Achse: AX"<<_F_AX_NR[8]<<" ("<<_F_S_STR[8]<<")")
ENDIF
ENDIF
IF(_F_AX_EXISTS[9])
IF(($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[9]-1]=="")OR($MC_AXCONF_MACHAX_USED[_F_AX_NR[9]-1]==0))
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: Querhub (GSP) ist nicht korrekt eingerichtet")
IF($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[9]-1]=="")
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_CHANAX_NAME_TAB["<<_F_AX_NR[9]-1<<"]=leer")
ELSE
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_MACHAX_USED["<<_F_AX_NR[9]-1<<"]=0")
ENDIF
ENDIF
GOTOF _FEHL11
ENDIF
_F_S_AX[9]=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[9]-1])
_F_S_STR[9]=AXSTRING(_F_S_AX[9])
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"B-Achse: AX"<<_F_AX_NR[9]<<" ("<<_F_S_STR[9]<<")")
ENDIF
ENDIF
IF(_F_AX_EXISTS[10])
IF(($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[10]-1]=="")OR($MC_AXCONF_MACHAX_USED[_F_AX_NR[10]-1]==0))
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: Reitstock ist nicht korrekt eingerichtet")
IF($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[10]-1]=="")
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_CHANAX_NAME_TAB["<<_F_AX_NR[10]-1<<"]=leer")
ELSE
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_MACHAX_USED["<<_F_AX_NR[10]-1<<"]=0")
ENDIF
ENDIF
GOTOF _FEHL11
ENDIF
_F_S_AX[10]=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[10]-1])
_F_S_STR[10]=AXSTRING(_F_S_AX[10])
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"B-Achse: AX"<<_F_AX_NR[10]<<" ("<<_F_S_STR[10]<<")")
ENDIF
ENDIF
IF(_F_AX_EXISTS[11])
IF(($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[11]-1]=="")OR($MC_AXCONF_MACHAX_USED[_F_AX_NR[11]-1]==0))
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Alarm: Reitstock ist nicht korrekt eingerichtet")
IF($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[11]-1]=="")
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_CHANAX_NAME_TAB["<<_F_AX_NR[11]-1<<"]=leer")
ELSE
WRITE(_LOG,_LOG_FILE,"$MC_AXCONF_MACHAX_USED["<<_F_AX_NR[11]-1<<"]=0")
ENDIF
ENDIF
GOTOF _FEHL11
ENDIF
_F_S_AX[11]=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_F_AX_NR[11]-1])
_F_S_STR[11]=AXSTRING(_F_S_AX[11])
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"B-Achse: AX"<<_F_AX_NR[11]<<" ("<<_F_S_STR[11]<<")")
ENDIF
ENDIF
_M_SPIND_END:
_KODIR[0 ]=SET( 1,-1,-1 ,1,-1, 1, 1,-1, 1,-1,-1, 1,-1, 1, 1,-1, 1,-1,-1, 1,-1, 1, 1,-1)
_KODIR[24]=SET(-1, 1, 1,-1, 1,-1,-1, 1,-1, 1, 1,-1, 1,-1,-1, 1,-1, 1, 1,-1, 1,-1,-1, 1)
_SC_KODIR=_KODIR[$MCS_DISP_COORDINATE_SYSTEM]
IF(_LOG_ON)
_INT=$MCS_DISP_COORDINATE_SYSTEM
WRITE(_LOG,_LOG_FILE,"")
WRITE(_LOG,_LOG_FILE,"KO-System: "<<_INT<<" Dir="<<_SC_KODIR)
ENDIF
IF(_F_AX_EXISTS[0])
_HS_CINV=($MCS_AXIS_USAGE_ATTRIB[_F_AX_NR[0]-1] B_AND'B1000')/'B1000'
_F_C_DIR[0]=_KODIR[$MCS_DISP_COORDINATE_SYSTEM]*(2*_HS_CINV-1)
IF(_LOG_ON)
_INT=$MCS_DISP_COORDINATE_SYSTEM
WRITE(_LOG,_LOG_FILE,"")
WRITE(_LOG,_LOG_FILE,"KO-System: "<<_INT)
WRITE(_LOG,_LOG_FILE,"HSP: "<<_F_S_STR[0]<<"-Dir="<<_F_C_DIR[0])
ENDIF
ENDIF
IF(_F_AX_EXISTS[1])
_WS_CINV=($MCS_AXIS_USAGE_ATTRIB[_F_AX_NR[1]-1] B_AND'B1000')/'B1000'
_E_C_DIR=_KODIR[$MCS_DISP_COORDINATE_SYSTEM]*(2*_WS_CINV-1)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"WSP: "<<_F_S_STR[1]<<"-Dir="<<_E_C_DIR)
ENDIF
ELSE
_WS_CINV=0
_E_C_DIR=1
ENDIF
IF(_F_AX_EXISTS[2])
_GS_CINV=($MCS_AXIS_USAGE_ATTRIB[_F_AX_NR[2]-1] B_AND'B1000')/'B1000'
_F_C_DIR[1]=-_KODIR[$MCS_DISP_COORDINATE_SYSTEM]*(2*_GS_CINV-1)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"GSP: "<<_F_S_STR[2]<<"-Dir="<<_F_C_DIR[1])
ENDIF
ELSE
_F_C_DIR[1]=1
ENDIF
_SC_ROT_AX[0,0]=REP(0)
FOR _J=0 TO 19
IF($MC_AXCONF_MACHAX_USED[_J])
_AX=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_J])
IF($MA_IS_ROT_AX[_AX])
_STR="_INT=$MCS_AXIS_USAGE_ATTRIB["<<_J<<"]"
EXECSTRING(_STR)
IF(_INT B_AND 'B10000000')
IF(_INT B_AND 'H1C00')
IF(_INT B_AND 'H0400')
_SC_ROT_AX[0,0]=_SC_ROT_AX[0,0]+1
_SC_ROT_AX[_SC_ROT_AX[0,0],0]=_J+1
ELSE
IF(_INT B_AND 'H0800')
_SC_ROT_AX[0,1]=_SC_ROT_AX[0,1]+1
_SC_ROT_AX[_SC_ROT_AX[0,1],1]=_J+1
ELSE
IF(_INT B_AND 'H1000')
_SC_ROT_AX[0,2]=_SC_ROT_AX[0,2]+1
_SC_ROT_AX[_SC_ROT_AX[0,2],2]=_J+1
ENDIF
ENDIF
ENDIF
ELSE
IF(_INT B_AND 'B001')
_SC_ROT_AX[0,0]=_SC_ROT_AX[0,0]+1
_SC_ROT_AX[_SC_ROT_AX[0,0],0]=_J+1
ELSE
IF(_INT B_AND 'B010')
_SC_ROT_AX[0,1]=_SC_ROT_AX[0,1]+1
_SC_ROT_AX[_SC_ROT_AX[0,1],1]=_J+1
ELSE
IF(_INT B_AND 'B100')
_SC_ROT_AX[0,2]=_SC_ROT_AX[0,2]+1
_SC_ROT_AX[_SC_ROT_AX[0,2],2]=_J+1
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDFOR
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Rundachsen für Positionsmuster:")
_STR="  um X: "
FOR _J=1 TO 20
IF(_J<=_SC_ROT_AX[0,0])
_STR=_STR<<_SC_ROT_AX[_J,0]<<":"<<$MC_AXCONF_CHANAX_NAME_TAB[_SC_ROT_AX[_J,0]-1]<<" "
ENDIF
ENDFOR
WRITE(_LOG,_LOG_FILE,_STR)
_STR="  um Y: "
FOR _J=1 TO 20
IF(_J<=_SC_ROT_AX[0,1])
_STR=_STR<<_SC_ROT_AX[_J,1]<<":"<<$MC_AXCONF_CHANAX_NAME_TAB[_SC_ROT_AX[_J,1]-1]<<" "
ENDIF
ENDFOR
WRITE(_LOG,_LOG_FILE,_STR)
_STR="  um Z: "
FOR _J=1 TO 20
IF(_J<=_SC_ROT_AX[0,2])
_STR=_STR<<_SC_ROT_AX[_J,2]<<":"<<$MC_AXCONF_CHANAX_NAME_TAB[_SC_ROT_AX[_J,2]-1]<<" "
ENDIF
ENDFOR
WRITE(_LOG,_LOG_FILE,_STR)
ENDIF
_SC_CHUCK[0,0]=REP(0)
_I=1
IF($MCS_FUNCTION_MASK_MILL B_AND 'B10')
_SC_CHUCK[0,0]=1
ENDIF
FOR _J=0 TO 19
IF($MC_AXCONF_MACHAX_USED[_J])
_AX=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[_J])
IF($MA_IS_ROT_AX[_AX])
_STR="_INT=$MCS_AXIS_USAGE_ATTRIB["<<_J<<"]"
EXECSTRING(_STR)
IF(_INT B_AND 'B100000000')
_SC_CHUCK[_I,0]=_J+1
IF(_INT B_AND 'B001')
_SC_CHUCK[_I,1]=1
ELSE
IF(_INT B_AND 'B010')
_SC_CHUCK[_I,1]=2
ELSE
_SC_CHUCK[_I,1]=3
ENDIF
ENDIF
_I=_I+1
ENDIF
ENDIF
ENDIF
ENDFOR
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Rohteilaufnahmen:")
IF(_SC_CHUCK[0,0])
WRITE(_LOG,_LOG_FILE,"  Tisch")
ENDIF
FOR _J=1 TO 20
IF(_SC_CHUCK[_J,0])
WRITE(_LOG,_LOG_FILE,"  Rundachse "<<$MC_AXCONF_CHANAX_NAME_TAB[_SC_CHUCK[_J,0]-1]<<"("<<$MC_AXCONF_CHANAX_NAME_TAB[_SC_CHUCK[_J,0]]<<") dreht um "<<SUBSTR("XYZ",_SC_CHUCK[_J,1]-1,1))
ENDIF
ENDFOR
ENDIF
_I=0
_SC_TRACYL[0,0]=REP(0)
FOR _J=1 TO 20
_STR="_INT=ISVAR("<<_QUOT<<"$MC_TRAFO_TYPE_"<<_J<<_QUOT<<")"
EXECSTRING(_STR)
IF(_INT)
_STR="_INT=$MC_TRAFO_TYPE_"<<_J
EXECSTRING(_STR)
IF(_INT B_AND 'H200')AND(_I<2)
_SC_TRACYL[_I,0]=_INT
_STR="_INT=$MC_TRAFO_AXES_IN_"<<_J<<"[2]"
EXECSTRING(_STR)
FOR _J2=0 TO 2
_STR="_INT2=$MC_TRAFO_GEOAX_ASSIGN_TAB_"<<_J<<"["<<_J2<<"]"
EXECSTRING(_STR)
IF(_INT==_INT2)
_SC_TRACYL[_I,1]=_J2+1
ENDIF
ENDFOR
_STR="_INT=$MC_TRAFO_AXES_IN_"<<_J<<"[0]"
EXECSTRING(_STR)
FOR _J2=0 TO 2
_STR="_INT2=$MC_TRAFO_GEOAX_ASSIGN_TAB_"<<_J<<"["<<_J2<<"]"
EXECSTRING(_STR)
IF(_INT==_INT2)
_SC_TRACYL[_I,2]=19-_J2
ENDIF
ENDFOR
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Trafo "<<_J<<" = TRACYL "<<_I+1<<": "<<_SC_TRACYL[_I,0]<<" (um "<<$MC_AXCONF_GEOAX_NAME_TAB[_SC_TRACYL[_I,1]-1]<<" G"<<_SC_TRACYL[_I,2]<<")")
ENDIF
_I=_I+1
ENDIF
ENDIF
ENDFOR
_F_TRAANG=0
IF($ON_TRAFO_TYPE_MASK B_AND 'H08')
IF($MC_TRAFO_MODE_MASK B_AND 'H01')AND($MC_TRAFO_RESET_VALUE>0)
_INT=$MC_TRAFO_RESET_VALUE
_STR="_INT=$MC_TRAFO_TYPE_"<<_INT
EXECSTRING(_STR)
IF(_INT B_AND 'H400')
_F_TRAANG=2
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"TRAANG persistent")
ENDIF
ENDIF
ENDIF
IF(_F_TRAANG==0)
IF($P_TRAFO B_AND 'H400')
_F_TRAANG=1
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"TRAANG aktiv (nicht persistent)")
ENDIF
ENDIF
ENDIF
ENDIF
_F_Y_AXIS=0
IF($MC_AXCONF_GEOAX_ASSIGN_TAB[1])OR(_F_TRAANG)
_F_Y_AXIS=1
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"reale Y-Achse vorhanden")
ENDIF
ENDIF
FOR _J=0 TO 2
_F_TC_DEF[_J]=0
ENDFOR
IF(_F_AX_EXISTS[6])AND($MCS_FUNCTION_MASK_TECH B_AND 'H01')
_J=1
WHILE(_J<=$P_TCNUM)AND((_F_TC_DEF[0]==0)OR(_F_TC_DEF[1]==0)OR(_F_TC_DEF[2]==0))
IF(_F_TC_DEF[0]==0)
IF($TC_CARR35[_J]==_F_S_STR[0])OR($TC_CARR36[_J]==_F_S_STR[0])
_F_TC_DEF[0]=_J
ENDIF
ENDIF
IF(_F_TC_DEF[1]==0)
IF($TC_CARR35[_J]==_F_S_STR[2])OR($TC_CARR36[_J]==_F_S_STR[2])
_F_TC_DEF[1]=_J
ENDIF
ENDIF
IF(_F_TC_DEF[2]==0)
IF($TC_CARR35[_J]==_F_S_STR[1])OR($TC_CARR36[_J]==_F_S_STR[1])
_F_TC_DEF[2]=_J
ENDIF
ENDIF
_J=_J+1
ENDWHILE
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Toolcarrier ShopTurn:")
WRITE(_LOG,_LOG_FILE,"  Fräsen HSP: "<<_F_TC_DEF[0])
WRITE(_LOG,_LOG_FILE,"  Fräsen GSP: "<<_F_TC_DEF[1])
WRITE(_LOG,_LOG_FILE,"  Drehen WSP: "<<_F_TC_DEF[2])
ENDIF
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"")
ENDIF
ENDIF
IF(_MODE==1)AND(_F_MCONF[1]==0)
_F_MCONF[1]=1
REPEAT _M_INIT_BEGIN _M_INIT_END
REPEAT _M_SPIND_BEGIN _M_SPIND_END
ENDIF
RET
_FEHL1: STOPRE
N721001 SETAL(61288)
RET
_FEHL2: STOPRE
N721002 SETAL(61289)
RET
_FEHL3: STOPRE
N721003 SETAL(61290)
RET
_FEHL4: STOPRE
N721004 SETAL(61291)
RET
_FEHL5: STOPRE
N721005 SETAL(61292)
RET
_FEHL6: STOPRE
N721006 SETAL(61140)
RET
_FEHL7: STOPRE
N721007 SETAL(61141)
RET
_FEHL8: STOPRE
N721008 SETAL(61142)
RET
_FEHL9: STOPRE
N721009 SETAL(61143)
RET
_FEHL10: STOPRE
N721010 SETAL(61144)
RET
_FEHL11: STOPRE
N721011 SETAL(61145)
RET
_FEHL12: STOPRE
N721012 SETAL(61146)
RET
_FEHL13: STOPRE
N721013 SETAL(61166,S_STRAL)
RET
