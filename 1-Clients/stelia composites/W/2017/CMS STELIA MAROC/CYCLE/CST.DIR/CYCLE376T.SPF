PROC CYCLE376T SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 02.06.03.00 Nov 13, 2008
;ISO-T thread cutting (G78/G76)
DEF AXIS _XX,_ZZ
DEF INT _ABC=2,_BA=0,_DIA,_FCX_P,_FCZ_P,_FCU_P,_FCW_P,_FP1,_G40,_G76,_G78,_G91,_NRC,_FNID,_FWSW,_ZYK
DEF REAL _APX,_AAPX,_APZ,_AVZ,_FAFF,_AFW,_EPX,_EPZ,_FAK1,_FAL,_FCR,_FCUT,_FMUL,_FROP,_FROPX,_PP1,_PP2,_SPX,_SPZ,_TDEP,_TTDEP,_TW2,_XAUSL,_ZPX,_ZPX1,_ZPZ,_ZRX,_NRCR,_G76LDIST,_SWVS
DEF INT _TEMP
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE376T_MPF"
DEF STRING[200] _TEMP_LINE=""
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE376T_MPF")
IF((($C_G==78)AND($C_G_PROG==1))OR(($C_G==76)AND($C_X_PROG==0)AND($C_U_PROG==0)AND($C_Z_PROG==0)AND($C_W_PROG==0)))
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,"G290")
WRITE(_TEMP,_TEMP_FILE,";Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<"  Time: "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T="<<$TC_TP2[$P_TOOLNO]<<" D"<<$P_TOOL<<" T"<<$P_TOOLNO<<"   ; active TOOL")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$TC_DP1[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-TYPE") ; Werkzeugtyp
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$TC_DP2[$P_TOOLNO,$P_TOOL]<<"     ; EDGE-POSITION") ; Schneidenlage
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$TC_DP6[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-RADIUS") ; Werkzeugradius
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
WRITE(_TEMP,_TEMP_FILE,";D1")
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19") ; aktive Ebene
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...") ; Inch/Metrisch
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...") ; DIAMON/DIAMOF/DIAM90
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/...") ; Vorschubart
WRITE(_TEMP,_TEMP_FILE,"G[14]="<<$P_GG[14]<<"    ; G90/G91/...") ; Positionierung abs./ink.
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F) ; Vorschub
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$AC_MSNUM]) ; Drehzahl und Drehrichtung
WRITE(_TEMP,_TEMP_FILE,";")
WRITE(_TEMP,_TEMP_FILE,"G291")
ENDIF
_TEMP_LINE=""
IF $C_G_PROG<>0
IF $MN_MM_EXTERN_GCODE_SYSTEM == 0
_TEMP_LINE=_TEMP_LINE<<"G"<<$C_G<<" "
ENDIF
IF $MN_MM_EXTERN_GCODE_SYSTEM == 1
IF $C_G==78
_TEMP_LINE=_TEMP_LINE<<"G92 "
ELSE
_TEMP_LINE=_TEMP_LINE<<"G76 "
ENDIF
ENDIF
IF $MN_MM_EXTERN_GCODE_SYSTEM == 2
IF $C_G==78
_TEMP_LINE=_TEMP_LINE<<"G21 "
ELSE
_TEMP_LINE=_TEMP_LINE<<"G78 "
ENDIF
ENDIF
ENDIF
IF $C_X_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"X"<<$C_X<<" "
ENDIF
IF $C_U_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"U"<<$C_U<<" "
ENDIF
IF $C_Z_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Z"<<$C_Z<<" "
ENDIF
IF $C_W_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"W"<<$C_W<<" "
ENDIF
IF $C_P_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"P"<<$C_P<<" "
ENDIF
IF $C_Q_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Q"<<$C_Q<<" "
ENDIF
IF $C_R_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"R"<<$C_R<<" "
ENDIF
IF $C_F_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"F"<<$C_F<<" "
ENDIF
IF $C_S_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"S"<<$C_S<<" "
ENDIF
IF $C_T_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"T"<<$C_T<<" "
ENDIF
WRITE(_TEMP,_TEMP_FILE,_TEMP_LINE)
ENDIF
STOPRE
IF($MN_MM_EXTERN_LANGUAGE<>1) GOTOF _FEHL1
IF $MCS_ISO_ENABLE_INTERRUPTS==1
IF $MN_EXTERN_INTERRUPT_BITS_M96 B_AND 'B1'
$AC_PARAM[1]=0
$A_OUT[1]=0
STOPRE
IF($MN_EXTERN_INTERRUPT_BITS_M96) B_AND 'B1000'
DISABLE(1)
ID=1 WHEN $A_IN[1]==1 DO $AC_PARAM[1]=1
ENDIF
ENDIF
ENDIF
CASE($MN_MM_EXTERN_GCODE_SYSTEM) OF 0 GOTOF _BCOD 1 GOTOF _ACOD 2 GOTOF _CCOD DEFAULT GOTOF _FEHL6
_ACOD: _ABC=1
GOTOF _ECOD
_BCOD: _ABC=2
GOTOF _ECOD
_CCOD: _ABC=3
_ECOD:
IF(_ABC==1)
IF($C_X_PROG==1)AND($C_U_PROG==1)GOTOF _FEHL5
IF($C_Z_PROG==1)AND($C_W_PROG==1)GOTOF _FEHL5
ENDIF
IF($C_Y_PROG>0)OR ($C_V_PROG>0)GOTOF _FEHL8
IF($C_C_PROG>0)OR ($C_H_PROG>0)GOTOF _FEHL8
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
IF($P_GG[14]==2)
_G91=1
ELSE
_G91=0
ENDIF
IF($P_GG[29]==1)
_DIA=1
ELSE
_DIA=2
ENDIF
IF($P_GG[13]==2)OR($P_GG[13]==4)
_FMUL=1000
ELSE
_FMUL=10000
ENDIF
IF($C_G==78)
_ZYK=78
IF($C_G_PROG==1)
_G78=1
ELSE
_G78=0
ENDIF
ELSE
_ZYK=76
ENDIF
IF(_ZYK==76)
IF($C_X_PROG>0)OR($C_U_PROG>0)OR($C_Z_PROG>0)OR($C_W_PROG>0)
_G76=0
ELSE
_G76=1
ENDIF
IF(_G76==1)
IF($C_F_PROG>0)OR ($C_S_PROG>0)OR ($C_T_PROG>0)GOTOF _FEHL4
IF($C_P_PROG>0)
_FP1=ABS($C_P)
_FNID=(_FP1 MOD 1000000) DIV 10000
_FAFF=(_FP1 MOD 10000) DIV 100
_FWSW=(_FP1 MOD 100)
IF(_FNID<0)OR(_FNID>=100)GOTOF _FEHL4
_ZSFI[24]=_FNID
_ZSFI[26]=_FAFF
_ZSFI[25]=_FWSW
ENDIF
IF($C_Q_PROG>0)
IF($MN_EXTERN_FLOATINGPOINT_PROG==1)
IF(ROUND($C_Q)<>$C_Q) GOTOF _FEHL44
_ZSFI[27]=$C_Q
ELSE
_ZSFI[27]=$C_Q*_FMUL
ENDIF
ENDIF
IF($C_R_PROG>0)
_ZSFI[28]=$C_R*_FMUL
ENDIF
ENDIF
IF(_G76==1)GOTOF _RET
ENDIF
_G40=$P_GG[07]
IF(_G40<>1)GOTOF _FEHL10
G18
_ZZ=$P_AXN1 _XX=$P_AXN2
_SPX=$P_EP[_XX]*_FAK1 _SPZ=$P_EP[_ZZ]*_FAK1
IF((_ZYK==76)AND(_G76==0)) OR ((_ZYK==78)AND(_G78==1))
_FCX_P=0 _FCU_P=0 _FCZ_P=0 _FCW_P=0
IF($C_U_PROG==3)
_FCU_P=3
ELSE
_FCX_P=$C_X_PROG
ENDIF
IF($C_W_PROG==3)
_FCW_P=3
ELSE
_FCZ_P=$C_Z_PROG
ENDIF
IF(_FCX_P==0)AND(_FCU_P==0)GOTOF _FEHL4
IF(_FCZ_P==0)AND(_FCW_P==0)GOTOF _FEHL4
_ZFPR[30]=_SPX _ZFPR[31]=_SPZ
ENDIF
IF(_ABC==1)
IF(_FCX_P>0)
_ZFPR[27]=$C_X
ELSE
IF(_FCU_P>0)
_ZFPR[27]=_ZFPR[30]+$C_U
ENDIF
ENDIF
ELSE
IF(_FCX_P>0)
IF(_FCX_P==1)
_ZFPR[27]=$C_X
ELSE
_ZFPR[27]=_ZFPR[30]+$C_X
ENDIF
ELSE
IF(_FCU_P>0)
_ZFPR[27]=_ZFPR[30]+$C_U
ENDIF
ENDIF
ENDIF
_EPX=_ZFPR[27]
_EPX=_EPX*2/_DIA
IF(_ABC==1)
IF(_FCZ_P>0)
_ZFPR[28]=$C_Z
ELSE
IF(_FCW_P>0)
_ZFPR[28]=_ZFPR[31]+$C_W
ENDIF
ENDIF
ELSE
IF(_FCZ_P>0)
IF(_FCZ_P==1)
_ZFPR[28]=$C_Z
ELSE
_ZFPR[28]=_ZFPR[31]+$C_Z
ENDIF
ELSE
IF(_FCW_P>0)
_ZFPR[28]=_ZFPR[31]+$C_W
ENDIF
ENDIF
ENDIF
_EPZ=_ZFPR[28]
IF(_ZYK==78)
IF($C_R_PROG>0)
_ZFPR[29]=$C_R
ELSE
IF(_G78==1)
_ZFPR[29]=0
ENDIF
ENDIF
_FCR=_ZFPR[29]
_APX=(_ZFPR[30]*2/_DIA)+(_FCR*2)
_AAPX=(_ZFPR[30]*2/_DIA)
ELSE
_AAPX=_EPX
IF($C_R_PROG>0)
_APX=_EPX+($C_R*2)
_ZFPR[29]=$C_R
ELSE
_APX=_EPX
_ZFPR[29]=0
ENDIF
ENDIF
_APZ=_ZFPR[31]
IF(_ZYK==76)
_TDEP=ABS($C_P/_FMUL)
ELSE
_TDEP=((_ZFPR[30]*2/_DIA)-_EPX)
_EPX=_EPX+_TDEP
_TDEP=_TDEP/2
ENDIF
IF(_TDEP==0)GOTOF _FEHL4
IF(_ZYK==76)
IF(_ZSFI[25]<0)OR(_ZSFI[25]>=121)GOTOF _FEHL9
_FWSW=_ZSFI[25]/2
ELSE
_FWSW=0
ENDIF
IF(_ZYK==76)
_FAL=_ZSFI[28]/_FMUL
ELSE
_FAL=0
ENDIF
_TW2=TAN(_ZSFI[25]/2)
IF(_ZYK==76)
IF($MN_EXTERN_FLOATINGPOINT_PROG==1)
IF(ROUND($C_Q)<>$C_Q) GOTOF _FEHL44
_FCUT=($C_Q/_FMUL)
ELSE
_FCUT=$C_Q
ENDIF
IF(_FCUT==0)GOTOF _FEHL4
_NRCR=POT((_TDEP-_FAL)/_FCUT)
IF(_NRCR==0)
_NRCR=1
ENDIF
IF(_NRCR-TRUNC(_NRCR)<>0)
_NRCR=ROUND(_NRCR+0.5)
ENDIF
ELSE
_NRCR=1
ENDIF
_NRC=_NRCR
IF(_ZYK==76)
IF(_ZSFI[24]>=0)
_FNID=_ZSFI[24]
ELSE
_FNID=0
ENDIF
ELSE
_FNID=0
ENDIF
IF(_ZYK==78)
IF($C_F_PROG>0)
_ZFPR[24]=$C_F
ELSE
IF(_G78==1)
_ZFPR[24]=$P_F
ENDIF
ENDIF
_PP1=_ZFPR[24]
ELSE
_PP1=$C_F
ENDIF
IF(_PP1<=0)GOTOF _FEHL2
IF(_ZYK==76)
_ZRX=_EPX-(_ZFPR[30]*2/_DIA)
IF(_ZRX<0)
_BA=3
ELSE
_BA=4
ENDIF
ELSE
IF(_TDEP>=0)
_BA=3
ELSE
_BA=4
_TDEP=ABS(_TDEP)
ENDIF
ENDIF
IF(_ZSFI[26]<0)OR(_ZSFI[26]>=128)GOTOF _FEHL9
_FROP=_ZSFI[26]/10*_PP1
IF((_APZ-_EPZ)==0)
_FROPX=0
ELSE
_FROPX=(_APX-_EPX)/(_APZ-_EPZ)*_FROP*(-1)
ENDIF
_XAUSL=0
_AAPX=_ZFPR[30]*2/_DIA
IF(_APZ>_EPZ)
IF(_BA==3)
_ZPX=_EPX+(_FROP*2)-_FROPX
IF(_ZPX>(_AAPX+(_TDEP*2)))
_XAUSL=(_ZPX-(_AAPX+(_TDEP*2)))/2
_ZPX=(_AAPX+(_TDEP*2))
ENDIF
ELSE
_ZPX=_EPX-(_FROP*2)-_FROPX
IF(_ZPX<(_AAPX-(_TDEP*2)))
_XAUSL=((_AAPX-(_TDEP*2))-_ZPX)/2
_ZPX=(_AAPX-(_TDEP*2))
ENDIF
ENDIF
ELSE
IF(_BA==3)
_ZPX=_EPX+(_FROP*2)+_FROPX
IF(_ZPX>(_AAPX+(_TDEP*2)))
_XAUSL=(_ZPX-(_AAPX+(_TDEP*2)))/2
_ZPX=(_AAPX+(_TDEP*2))
ENDIF
ELSE
_ZPX=_EPX-(_FROP*2)+_FROPX
IF(_ZPX<(_AAPX-(_TDEP*2)))
_XAUSL=((_AAPX-(_TDEP*2))-_ZPX)/2
_ZPX=(_AAPX-(_TDEP*2))
ENDIF
ENDIF
ENDIF
IF(_APZ>_EPZ)
_ZPZ=_EPZ+_FROP
ELSE
_ZPZ=_EPZ-_FROP
ENDIF
IF(_APZ>_EPZ)
_ZPX1=_EPX-_FROPX
ELSE
_ZPX1=_EPX+_FROPX
ENDIF
_AVZ=_TDEP*_TW2
IF(_ZYK==76)
IF(_APZ>_EPZ)
_APZ=_APZ-_AVZ
ELSE
_APZ=_APZ+_AVZ
ENDIF
ENDIF
IF(_ZYK==76)
IF(_BA==3)
_TTDEP=_TDEP*2
ELSE
_TTDEP=_TDEP*(-2)
ENDIF
ELSE
_TTDEP=0
ENDIF
IF(_APZ>_EPZ)
_EPZ=_EPZ+_XAUSL
ELSE
_EPZ=_EPZ-_XAUSL
ENDIF
IF(_ZYK==76)
_G76LDIST = 2 *_TDEP
IF(_BA==3)
IF((_APX+6*_TDEP)>(_ZFPR[30]*2/_DIA))
_G76LDIST=((_ZFPR[30]*2/_DIA)-(_APX+2*_TDEP))/2
ENDIF
IF(((_ZPX+6*_TDEP)>(_ZFPR[30]*2/_DIA))AND((_ZPX+6*_TDEP)>(_APX+6*_TDEP)))
_G76LDIST=((_ZFPR[30]*2/_DIA)-(_ZPX+2*_TDEP))/2
ENDIF
ELSE
IF((_ZPX-6*_TDEP)<(_ZFPR[30]*2/_DIA))
_G76LDIST=ABS((_ZFPR[30]*2/_DIA)-(_ZPX-2*_TDEP))/2
ENDIF
IF(((_APX-6*_TDEP)<(_ZFPR[30]*2/_DIA))AND((_APX-6*_TDEP)<(_ZPX-6*_TDEP)))
_G76LDIST=ABS((_ZFPR[30]*2/_DIA)-(_APX-2*_TDEP))/2
ENDIF
ENDIF
IF(_G76LDIST==0)
_G76LDIST = 0.000000001
ENDIF
IF(_G76LDIST<0)
GOTOF _FEHL7
ENDIF
ELSE
_G76LDIST = 0.000000001
ENDIF
IF(_ZSFI[38]==1)
_BA=_BA+10
ENDIF
IF(_ZYK==76)
_BA=_BA+2000
ELSE
_BA=_BA+1000
ENDIF
IF(_ZYK==78)
IF($C_Q_PROG>0)
IF($C_Q<0) GOTOF _FEHL44
IF($MN_EXTERN_FLOATINGPOINT_PROG==1)
IF(ROUND($C_Q)<>$C_Q) GOTOF _FEHL44
_ZFPR[35]=($C_Q/_FMUL) MOD 360.0
ELSE
_ZFPR[35]=$C_Q MOD 360.0
ENDIF
ELSE
IF(_G78==1)
_ZFPR[35]=0
ENDIF
ENDIF
_SWVS=_ZFPR[35]
ELSE
_SWVS=0
ENDIF
G90
SBLON
N376 CYCLE398(_APZ,(_APX+_TTDEP),_ZPZ,(_ZPX1+_TTDEP),_ZPZ,(_ZPX1+_TTDEP),_EPZ,(_ZPX+_TTDEP),0,0,_TDEP,_FAL,_FWSW,_SWVS,_NRC,_FNID,_PP1,_PP1,_PP1,_BA,1,_G76LDIST)
SBLOF
IF(_ZYK==76)
SBLON
G0 G90 AX[_XX]=_ZFPR[30] AX[_ZZ]=_ZFPR[31]
SBLOF
ENDIF
IF(_G91==1)
G91
ENDIF
IF(_ABC==1)
G90
ENDIF
IF $MCS_ISO_ENABLE_INTERRUPTS==1
IF $MN_EXTERN_INTERRUPT_BITS_M96 B_AND 'B1'
ENABLE(1)
IF $AC_PARAM[1]==1
$A_OUT[1]=0
$A_OUT[1]=1
ENDIF
ENDIF
ENDIF
GOTOF _RET
_FEHL1: STOPRE
N337601 SETAL(61800)
RET
_FEHL2: STOPRE
N337602 SETAL(61001)
RET
_FEHL4: STOPRE
N337604 SETAL(61812)
RET
_FEHL44: STOPRE
N337644 SETAL(61812)
RET
_FEHL5: STOPRE
N337605 SETAL(61805)
RET
_FEHL6: STOPRE
N337606 SETAL(61801)
RET
_FEHL7: STOPRE
N337607 SETAL(61607)
RET
_FEHL8: STOPRE
N337608 SETAL(61811)
RET
_FEHL9: STOPRE
N337609 SETAL(61813)
RET
_FEHL10:
N337610 SETAL(61815)
STOPRE
RET
_RET:
RET
