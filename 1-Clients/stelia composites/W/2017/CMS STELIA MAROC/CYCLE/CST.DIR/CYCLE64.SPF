PROC CYCLE64(STRING[100] _PRG,INT _VARI,REAL _RP,REAL _Z0,REAL _SC,REAL _Z1,REAL _F,REAL _DXY,REAL _UXY,REAL _UZ,INT _CDIR,STRING[32] _TR,INT _DR,INT _UMODE,INT _GMODE,INT _DMODE,INT _AMODE) SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.43.00 ;DATE: 2013-01-07
;Cycle support HMIsl
;pre-drill-/centre cycle
DEF BOOL _FIRSTCALL=1,_M_CHAN=0,_HOST=0
DEF INT _H_GMODE[3],_H_DMODE[2],_H_AMODE[4],_H_VARI[4],_H_MSNUM,_MA_NR_SP,_KA_NR_SP,_GG06,_GG15,_WZT,_T,_FILEA=0,_FILEB=0,_ANUM
DEF INT _INCOAP_I_0,_G94,_TEMP,_MI_AXIS[3],_ERR,_I,_III,_CONT_ERR=0,_M3_M4,_G2_G3,_MIRR,_ANZ_Z1=24,_ANZ_Z2=100,_GEO_D=1,_VER_D=1
DEF INT _BFC=0,_BCIF=1,_BA=2,_BLFR=3,_BR2=4,_BIS=5,_BDIP=6,_BSCOO=7,_BCDP=8,_BCODP=9,_BSPTC=10
DEF INT _IEM=0,_INC=1,_INEIF=2,_IDRM=3,_IDRI=4,_ITT=5,_ISP=6,_IOC=7,_ISC=8,_ISPMOI=9,_ICDA=10,_IOL=11
DEF INT _IMT=12,_IWD=13,_ISL=14,_II=15,_ISAIZ=16
DEF INT _RTCH=0,_RTCA=1,_RTT=2,_RSITM=3,_RPDZ=4,_RSC=5,_RTA=6,_RDSPA=7,_RDSPO=8,_RSFP=9,_RSF3=10,_RZ0=11
DEF INT _RZ1=12,_RID=13,_RMCR=14,_RRR=15,_RPDXY=16,_RFAB=17,_RFABO=18,_RIA=19,_RIG=20,_RIR=21,_RBC=22,_RPR=23,_RSR=24
DEF INT _RTED=25,_RMDR=26,_RSPXM=27,_RSPYM=28,_S16NAX=0,_S16NAY=1,_S16NAZ=2,_S16NAI=3,_S16NAJ=4,_S16NAK=5
DEF INT _S32SFC=0,_S32EFC=1,_S32CC=2,_S32SFI=3,_S32EFI=4,_S160WAE=0,_S160NGNF=1,_S160NFWFC=2,_S160NC=3,_S160NDF=4
DEF INT _S160RFP=5,_S160RFW=6,_S160RCON=7,_S160RCOFF=8,_S160RDC=9,_S160RW40=10,_S160RW41=11,_S160RW42=12,_S160NFWFIC=13
DEF INT _TRAFO
DEF REAL _KONTAB[600,6],_FAK,__Z1,_LSPITZE,_R_THEO,_R_RUND
DEF STRING[255] _ZEILE[21]
DEF STRING[160] _DATEINAME1[11],_PFADAUFRUF,_PFAD,_ERR_AND_WARN,_SERR,_STR[3],_ROU_PRG
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE64_MPF",_TEMP_FILEA="/_N_MPF_DIR/_N_LOG_CYCLE64A_MPF",_TEMP_FILEB="/_N_MPF_DIR/_N_LOG_CYCLE64B_MPF"
DEF STRING[35] _AX,_PROG,_PROGS
DEF STRING[16] _CS[1]
DEF STRING[4] _PTYP="_MPF",_CHANNU=""
DEF AXIS _XX,_YY,_ZZ,_MAX
IF (ISVAR("$MN_MACHGEN_DEBUG_MASK"))
_HOST=1
ENDIF
IF ( $ON_NUM_CHANNELS>1 )
_TEMP=0
FOR _I=0 TO 9
IF ( $MN_ASSIGN_CHAN_TO_MODE_GROUP[_I]>0 )
_TEMP=_TEMP+1
ENDIF
ENDFOR
IF (_TEMP>1)
_M_CHAN=1 _TEMP=0 _ANZ_Z1=20 _ANZ_Z2=96
ENDIF
ENDIF
IF ( (_M_CHAN)AND(STRLEN($P_PROG[0])>4) )
_STR[0]=SUBSTR($P_PROG[0],STRLEN($P_PROG[0])-8,4)
_STR[1]=SUBSTR(_STR[0],0,2) _STR[2]=SUBSTR(_STR[0],2)
IF ( (_STR[1]=="_C") AND (ISNUMBER(_STR[2])) )
_SERR=$P_PROG[0]
GOTOF _FEHL45
ENDIF
ENDIF
IF ( ($P_INCOAP_SIZE[2]==0)AND(_HOST==0) )
_SERR=<<"Advanced contour cycle"
GOTOF _FEHL42
ENDIF
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE64_MPF")
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,";! only for internal diagnostics ! Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T-Number $P_TOOLNO="<<$P_TOOLNO)
WRITE(_TEMP,_TEMP_FILE,";D-Number $P_TOOL="<<$P_TOOL)
IF (($P_TOOL)AND($P_TOOLNO))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$P_AD[1]<<"    ; Tool type")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$P_AD[2]<<"    ; Cutting edge position")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$P_AD[6]<<"    ; Tool geo radius")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP15[1,1]="<<$P_AD[15]<<"    ; Tool wear radius")
IF (($P_AD[1]>=200) AND ($P_AD[1]<300))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP24[1,1]="<<$P_AD[24]<<"    ; Tool tip angle")
ENDIF
IF (($P_AD[1]>=100) AND ($P_AD[1]<200))
IF ($P_AD[1]<>145)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP11[1,1]="<<$P_AD[11]<<"    ; Tool angle")
ENDIF
WRITE(_TEMP,_TEMP_FILE,";$TC_DP35[1,1]="<<$P_AD[35]<<"    ; Number of teeth")
ENDIF
IF ($P_AD[1]==140)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP7[1,1]="<<$P_AD[7]<<"   ; Outside radius ")
ENDIF
IF ($P_AD[1]==240)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP9[1,1]="<<$P_AD[9]<<"   ; Thread pitch")
ENDIF
ENDIF
IF ($P_TOOLNO>0)
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
ELSE
WRITE(_TEMP,_TEMP_FILE,";T0")
WRITE(_TEMP,_TEMP_FILE,";M6")
ENDIF
IF ($P_TOOL==0)
WRITE(_TEMP,_TEMP_FILE,";D0")
ELSE
WRITE(_TEMP,_TEMP_FILE,";D1")
ENDIF
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19")
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...")
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...")
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/... $P_F_TYPE="<<$P_F_TYPE)
IF($P_F_TYPE==11)OR($P_F_TYPE==33)
WRITE(_TEMP,_TEMP_FILE,"FZ="<<$P_FZ)
ELSE
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F)
ENDIF
IF $P_MSNUM==0
WRITE(_TEMP,_TEMP_FILE,";$P_MSNUM=0 no spindle existant")
ELSE
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$P_MSNUM])
ENDIF
WRITE(_TEMP,_TEMP_FILE,"_SC_LAST_CONT="<<_SC_LAST_CONT)
FOR _I=0 TO _SC_LAST_CONT-1
IF(_SC_CONT_NAME[_I]<>"")
WRITE(_TEMP,_TEMP_FILE,"_SC_CONT_NAME["<<_I<<"]="<<"'"'"<<_SC_CONT_NAME[_I]<<"'"'")
ENDIF
IF(_SC_CONT_LAB1[_I]<>"")
WRITE(_TEMP,_TEMP_FILE,"_SC_CONT_LAB1["<<_I<<"]="<<"'"'"<<_SC_CONT_LAB1[_I]<<"'"'")
ENDIF
IF(_SC_CONT_LAB2[_I]<>"")
WRITE(_TEMP,_TEMP_FILE,"_SC_CONT_LAB2["<<_I<<"]="<<"'"'"<<_SC_CONT_LAB2[_I]<<"'"'")
ENDIF
ENDFOR
WRITE(_TEMP,_TEMP_FILE,"CYCLE64("<<"'"'"<<_PRG<<"'"'"<<","<<_VARI<<","<<_RP<<","<<_Z0<<","<<_SC<<","<<_Z1<<","<<_F<<","<<_DXY<<","<<_UXY<<","<<_UZ<<","<<_CDIR<<","<<"'"'"<<_TR<<"'"'"<<","<<_DR<<","<<_UMODE<<","<<_GMODE<<","<<_DMODE<<","<<_AMODE<<")")
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
_H_VARI[2]=(_VARI _DEC3) _H_VARI[3]=(_VARI _DEC4)
_H_GMODE[2]=(_GMODE _DEC3)
_H_DMODE[0]=(_DMODE _DEC1) _H_DMODE[1]=(_DMODE _DEC2)
_H_AMODE[0]=(_AMODE _DEC1) _H_AMODE[1]=(_AMODE _DEC2) _H_AMODE[3]=(_AMODE _DEC4)
IF ($P_TOOL>0)
_WZT=$P_ADT[1]
IF ( (_WZT<100)OR(_WZT>299) )
GOTOF _FEHL1
ENDIF
ELSE
GOTOF _FEHL0
ENDIF
IF ( (_H_VARI[3]<0)OR(_H_VARI[3]>1) )
_SERR=<<"(_VARI: dec4)"
GOTOF _FEHL2
ENDIF
IF ( (_H_GMODE[2]<0)OR(_H_GMODE[2]>2) )
_SERR=<<"(_GMODE: dec3)"
GOTOF _FEHL2
ENDIF
IF ( (_H_DMODE[0]<0)OR(_H_DMODE[0]>3) )
_SERR=<<"(_DMODE: dec1)"
GOTOF _FEHL2
ENDIF
IF ( (_H_DMODE[1]<1)OR(_H_DMODE[1]>2) )
_SERR=<<"(_DMODE: dec2)"
GOTOF _FEHL2
ENDIF
IF ( (_H_AMODE[0]<0)OR(_H_AMODE[0]>1) )
_SERR=<<"(_AMODE: dec1)"
GOTOF _FEHL2
ENDIF
IF ( (_H_AMODE[1]<0)OR(_H_AMODE[1]>1) )
_SERR=<<"(_AMODE: dec2)"
GOTOF _FEHL2
ENDIF
IF ( (_H_AMODE[3]<0)OR(_H_AMODE[3]>1) )
_SERR=<<"(_AMODE: dec4)"
GOTOF _FEHL2
ENDIF
IF (_SC_LAST_CONT==0) GOTOF _FEHL16
IF ( (_H_DMODE[1]==1)AND(_UZ<0) )
_SERR=<<"UZ"
GOTOF _FEHL2
ENDIF
IF ( _SC<0 )
_SERR=<<"SC"
GOTOF _FEHL2
ENDIF
IF ( _UXY<0 )
_SERR=<<"UXY"
GOTOF _FEHL2
ENDIF
IF ( _DXY<0 )
_SERR=<<"DXY"
GOTOF _FEHL2
ENDIF
IF ( ($P_SUBPAR[1]==0)OR(_PRG=="") )
GOTOF _FEHL3
ELSE
_ERR=MINDEX(_PRG,"(,),[,],{,},<,>,:,=,*,+,-,.,,,;,%,&,$,?,!,^,@,#,\, ,|,'H22','H27'")
IF (_ERR<>(-1))
_SERR=<<"PRG, "<<_PRG[_ERR]
GOTOF _FEHL46
ENDIF
IF NOT(SUBSTR(TOUPPER(_PRG),0,4)=="/_N_")
_ERR=MINDEX(_PRG,"/")
IF (_ERR<>(-1))
_SERR=<<"PRG, "<<_PRG[_ERR]
GOTOF _FEHL46
ENDIF
IF (STRLEN(_PRG)>_ANZ_Z1)
_SERR=<<"PRG: "<<_PRG
GOTOF _FEHL47
ENDIF
IF (_M_CHAN==0)
_STR[0]=SUBSTR($P_PROG[0],3,STRLEN($P_PROG[0])-7)
IF (_STR[0]==TOUPPER(_PRG))
GOTOF _FEHL48
ENDIF
ENDIF
ELSE
IF (STRLEN(_PRG)>_ANZ_Z2)
_SERR=<<"PRG: "<<_PRG
GOTOF _FEHL47
ENDIF
IF (_M_CHAN==0)
_STR[0]=$P_PATH[0]<<$P_PROG[0]
IF (_STR[0]==TOUPPER(_PRG))
GOTOF _FEHL48
ENDIF
ENDIF
ENDIF
ENDIF
IF ( (_CDIR<0)OR(_CDIR>1) )
GOTOF _FEHL37
ENDIF
IF ( _F<=0 ) GOTOF _FEHL39
IF ( _H_DMODE[1]==2 )
_H_AMODE[0]=1
ENDIF
IF (_M_CHAN)
IF ($P_CHANNO<10)
_CHANNU="_C0"<<$P_CHANNO
ELSE
_CHANNU="_C"<<$P_CHANNO
ENDIF
ENDIF
IF ($P_EXTBUF[$P_STACK-1]=="")
_PROG=SUBSTR($P_PROG[$P_STACK-1],3,STRLEN($P_PROG[$P_STACK-1])-7) _PROGS=SUBSTR($P_PROG[$P_STACK-1],3,5)
ELSE
_PROG=SUBSTR($P_EXTBUF[$P_STACK-1],3,STRLEN($P_EXTBUF[$P_STACK-1])-7) _PROGS=SUBSTR($P_EXTBUF[$P_STACK-1],3,5)
ENDIF
IF ( (_PROGS=="E_CP_")OR(_PROGS=="F_CP_")OR(_PROG=="CYCLE73") )
IF ($P_EXTPATH[$P_STACK-2]=="")
_PFADAUFRUF=$P_PATH[$P_STACK-2]
ELSE
_PFADAUFRUF=$P_EXTPATH[$P_STACK-2]
ENDIF
ELSE
IF ($P_EXTPATH[$P_STACK-1]=="")
_PFADAUFRUF=$P_PATH[$P_STACK-1]
ELSE
_PFADAUFRUF=$P_EXTPATH[$P_STACK-1]
ENDIF
ENDIF
IF (_PFADAUFRUF=="/_N_SPF_DIR/")
_PTYP="_SPF"
ENDIF
IF(SUBSTR(TOUPPER(_PRG),0,4)=="/_N_")
_ROU_PRG=(SUBSTR(_PRG,0,STRLEN(_PRG)-4))<<_CHANNU<<(SUBSTR(_PRG,STRLEN(_PRG)-4))
ELSE
IF ( SUBSTR(_PFADAUFRUF,0,12)=="/_N_SYF_DIR/" )
_ROU_PRG=<<"/_N_WKS_DIR/_N_TEMP_WPD/_N_"<<_PRG<<_CHANNU<<_PTYP
ELSE
_ROU_PRG=_PFADAUFRUF<<"_N_"<<_PRG<<_CHANNU<<_PTYP
ENDIF
ENDIF
IF (_HOST) GOTOF _SYNC
$P_INCOAP_S32[_S32SFC]=_SC_CONT_LAB1[0] $P_INCOAP_S32[_S32EFC]=_SC_CONT_LAB2[0]
FOR _I=1 TO _SC_LAST_CONT-1
$P_INCOAP_S32[_S32SFI+2*(_I-1)]=_SC_CONT_LAB1[_I] $P_INCOAP_S32[_S32EFI+2*(_I-1)]=_SC_CONT_LAB2[_I]
ENDFOR
FOR _I=0 TO _SC_LAST_CONT-1
IF NOT(SUBSTR(TOUPPER(_SC_CONT_NAME[_I]),0,4)=="/_N_")
IF (STRLEN(_SC_CONT_NAME[_I])>24)
_SERR=<<_SC_CONT_NAME[_I]
GOTOF _FEHL2
ENDIF
IF ( _PFADAUFRUF=="/_N_SPF_DIR/" )
_PFAD=_PFADAUFRUF _DATEINAME1[_I]=<<"_N_"<<_SC_CONT_NAME[_I]<<"_SPF"
IF NOT(ISFILE(_PFAD<<_DATEINAME1[_I]))
_SERR=<<_SC_CONT_NAME[_I]
GOTOF _FEHL4
ELSE
GOTOF _PFADFOUND
ENDIF
ENDIF
IF ( _PFADAUFRUF=="/_N_MPF_DIR/" )
_PFAD=_PFADAUFRUF _DATEINAME1[_I]=<<"_N_"<<_SC_CONT_NAME[_I]<<"_MPF"
IF NOT(ISFILE(_PFAD<<_DATEINAME1[_I]))
_PFAD="/_N_SPF_DIR/" _DATEINAME1[_I]=<<"_N_"<<_SC_CONT_NAME[_I]<<"_SPF"
IF NOT(ISFILE(_PFAD<<_DATEINAME1[_I]))
_SERR=<<_SC_CONT_NAME[_I]
GOTOF _FEHL4
ELSE
GOTOF _PFADFOUND
ENDIF
ELSE
GOTOF _PFADFOUND
ENDIF
ENDIF
IF ( SUBSTR(_PFADAUFRUF,0,12)=="/_N_WKS_DIR/" )
_PFAD=_PFADAUFRUF _DATEINAME1[_I]=<<"_N_"<<_SC_CONT_NAME[_I]<<"_MPF"
IF NOT(ISFILE(_PFAD<<_DATEINAME1[_I]))
_DATEINAME1[_I]=<<"_N_"<<_SC_CONT_NAME[_I]<<"_SPF"
IF NOT(ISFILE(_PFAD<<_DATEINAME1[_I]))
_PFAD="/_N_SPF_DIR/" _DATEINAME1[_I]=<<"_N_"<<_SC_CONT_NAME[_I]<<"_SPF"
IF NOT(ISFILE(_PFAD<<_DATEINAME1[_I]))
_PFAD="/_N_MPF_DIR/" _DATEINAME1[_I]=<<"_N_"<<_SC_CONT_NAME[_I]<<"_MPF"
IF NOT(ISFILE(_PFAD<<_DATEINAME1[_I]))
_SERR=<<_SC_CONT_NAME[_I]
GOTOF _FEHL4
ELSE
GOTOF _PFADFOUND
ENDIF
ELSE
GOTOF _PFADFOUND
ENDIF
ELSE
GOTOF _PFADFOUND
ENDIF
ELSE
GOTOF _PFADFOUND
ENDIF
ENDIF
IF ( SUBSTR(_PFADAUFRUF,0,12)=="/_N_EXT_DIR/" )
_PFAD=_PFADAUFRUF _DATEINAME1[_I]=<<"_N_"<<_SC_CONT_NAME[_I]<<"_MPF"
IF NOT(ISFILE(_PFAD<<_DATEINAME1[_I]))
_SERR=<<_SC_CONT_NAME[_I]
GOTOF _FEHL4
ELSE
GOTOF _PFADFOUND
ENDIF
ENDIF
IF ( SUBSTR(_PFADAUFRUF,0,12)=="/_N_SYF_DIR/" )
_PFAD=_PFADAUFRUF _DATEINAME1[_I]=<<"_N_"<<_DATEINAME1[_I]<<"_MPF"
IF NOT(ISFILE(_PFAD<<_DATEINAME1[_I]))
_SERR=<<_SC_CONT_NAME[_I]
GOTOF _FEHL4
ELSE
GOTOF _PFADFOUND
ENDIF
ENDIF
_SERR=<<_SC_CONT_NAME[_I]
GOTOF _FEHL4
_PFADFOUND:
IF (_I==0)
$P_INCOAP_S160[_S160NFWFC]=_PFAD<<_DATEINAME1[_I]
ELSE
$P_INCOAP_S160[_S160NFWFIC+(_I-1)]=_PFAD<<_DATEINAME1[_I]
ENDIF
ELSE
IF (STRLEN(_SC_CONT_NAME[_I])>100)
_SERR=<<_SC_CONT_NAME[_I]
GOTOF _FEHL2
ENDIF
IF (_I==0)
$P_INCOAP_S160[_S160NFWFC]=_SC_CONT_NAME[_I]
ELSE
$P_INCOAP_S160[_S160NFWFIC+(_I-1)]=_SC_CONT_NAME[_I]
ENDIF
ENDIF
ENDFOR
IF ( (_H_DMODE[0]>0)AND($P_GG[6]<>_H_DMODE[0]) )
_GG06=(_H_DMODE[0])
G[6]=_GG06
ENDIF
_XX=$P_AXN1 _YY=$P_AXN2 _ZZ=$P_AXN3
IF($P_ACTFRAME[_XX,SC]<>$P_ACTFRAME[_YY,SC]) GOTOF _FEHL5
_MIRR=$P_ACTFRAME[_XX,MI]+$P_ACTFRAME[_YY,MI]+$P_ACTFRAME[_ZZ,MI]
IF($P_GG[13]<3)
_FAK=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK=1
ENDIF
IF (_H_VARI[2]<>0)
IF ( (_UMODE<>3)AND(_UMODE<>23) )
GOTOF _FEHL7
ENDIF
IF (_H_VARI[2]==2)
_TRAFO=$P_TRAFO
IF (_TRAFO B_AND 'H300')
GOTOF _FEHL7
ENDIF
ENDIF
ENDIF
_H_MSNUM=$P_MSNUM
IF (_H_MSNUM==0) GOTOF _FEHL6
IF ( ($P_SMODE[0]==1) OR ($P_SMODE[0]==3) )
_M3_M4=$P_SDIR[$P_MSNUM]
IF(_M3_M4<3)OR(_M3_M4>4)
GOTOF _FEHL36
ENDIF
ELSE
GOTOF _FEHL36
ENDIF
IF (_PROG=="CYCLE73")
IF ( (_H_AMODE[0]==1)AND(_RP==_Z0) ) GOTOF _FEHL8
ELSE
IF (_RP==_Z0) GOTOF _FEHL8
ENDIF
IF (_H_DMODE[1]==1)
IF (_H_AMODE[0]==1)
__Z1=ABS(_Z1)-_UZ
ELSE
IF (_RP>_Z0)
__Z1=_Z1+_UZ
ELSE
__Z1=_Z1-_UZ
ENDIF
ENDIF
ELSE
IF (_H_AMODE[0]==1)
__Z1=ABS(_Z1)
ELSE
__Z1=_Z1
ENDIF
ENDIF
IF(_H_AMODE[0]==1)
IF(__Z1==0) GOTOF _FEHL9
__Z1=_Z0-(_RP-_Z0)/ABS(_RP-_Z0)*__Z1
_H_AMODE[0]=0
ENDIF
_SC_TMI_STAT[0]=10*_CDIR+_H_DMODE[1]
_SC_FIRST_CONT=0
$P_INCOAP_B[_BCIF]=1
$P_INCOAP_B[_BA]=0
$P_INCOAP_B[_BLFR]=$ON_TECHNO_FUNCTION_MASK B_AND 'B10000000000000000'
$P_INCOAP_B[_BR2]=0
$P_INCOAP_B[_BIS]=0
$P_INCOAP_B[_BDIP]=_H_AMODE[1]
$P_INCOAP_B[_BCDP]=1
$P_INCOAP_B[_BCODP]=1
IF ( (_H_VARI[2]==0)OR(_H_VARI[2]==2) )
$P_INCOAP_B[_BSCOO]=0
ELSE
$P_INCOAP_B[_BSCOO]=1
ENDIF
$P_INCOAP_B[_BSPTC]=_H_AMODE[3]
$P_INCOAP_I[_INC]=_SC_LAST_CONT
$P_INCOAP_I[_INEIF]=0
$P_INCOAP_I[_IDRM]=$MNS_DISP_RES_MM
$P_INCOAP_I[_IDRI]=$MNS_DISP_RES_INCH
$P_INCOAP_I[_ITT]=$P_ADT[1]
$P_INCOAP_I[_ISP]=$P_GG[6]
$P_INCOAP_I[_IOC]=101
_GG15=$P_GG[15]
IF ( (_GG15==1)OR(_GG15==6) ) GOTOF _FEHL10
IF ( (_GG15==2)OR(_GG15==7)OR(_GG15==8) )
_G94=1
ELSE
_G94=0
ENDIF
$P_INCOAP_I[_ISC]=0
$P_INCOAP_I[_ISPMOI]=$P_GG[13]
$P_INCOAP_I[_ICDA]=0
IF (ISFILE(_TEMP_FILEA))
_FILEA=1
ENDIF
IF (ISFILE(_TEMP_FILEB))
_FILEB=2
ENDIF
$P_INCOAP_I[_IOL]=_FILEA+_FILEB
$P_INCOAP_I[_IMT]=0
$P_INCOAP_I[_II]=0
$P_INCOAP_I[_ISAIZ]=_H_AMODE[0]
IF (_CDIR==0)
IF (_M3_M4==3)
_G2_G3=3
ELSE
_G2_G3=2
ENDIF
ELSE
IF (_M3_M4==3)
_G2_G3=2
ELSE
_G2_G3=3
ENDIF
ENDIF
IF (_MIRR MOD 2)
IF (_G2_G3==2)
_G2_G3=_G2_G3+1
ELSE
_G2_G3=_G2_G3-1
ENDIF
ENDIF
$P_INCOAP_I[_IWD]=_G2_G3
$P_INCOAP_I[_ISL]=_H_VARI[3]
$P_INCOAP_R[_RSITM]=$MN_SCALING_VALUE_INCH
$P_INCOAP_R[_RPDZ]=1
$P_INCOAP_R[_RSC]=_SC
IF ( (_WZT>=200)AND(_WZT<=299) )
$P_INCOAP_R[_RTA]=$P_ADT[24]
ELSE
$P_INCOAP_R[_RTA]=0
ENDIF
$P_INCOAP_R[_RDSPA]=0
$P_INCOAP_R[_RDSPO]=0
$P_INCOAP_R[_RSFP]=$P_ACTFRAME[_XX,SC]
$P_INCOAP_R[_RSF3]=$P_ACTFRAME[_ZZ,SC]
$P_INCOAP_R[_RZ0]=_Z0
$P_INCOAP_R[_RZ1]=__Z1
$P_INCOAP_R[_RID]=0
_T=GETT(_TR,0)
IF (_T<0)
_SERR=_TR
GOTOF _FEHL44
ENDIF
IF ($MC_TOOL_PARAMETER_DEF_MASK B_AND 'H800')
_GEO_D=2
ENDIF
IF ($MC_TOOL_PARAMETER_DEF_MASK B_AND 'H1000')
_VER_D=2
ENDIF
$P_INCOAP_R[_RMCR]=(($TC_DP6[_T,_DR]/_GEO_D)+($TC_DP15[_T,_DR]/_VER_D))*_FAK
IF ($P_INCOAP_R[_RMCR]<=0) GOTOF _FEHL40
$P_INCOAP_R[_RRR]=0
$P_INCOAP_R[_RPDXY]=_DXY
IF (_H_DMODE[1]==1)
$P_INCOAP_R[_RFAB]=_UZ
ELSE
$P_INCOAP_R[_RFAB]=0
ENDIF
$P_INCOAP_R[_RFABO]=_UXY
$P_INCOAP_R[_RIA]=0 $P_INCOAP_R[_RIG]=0 $P_INCOAP_R[_RIR]=0 $P_INCOAP_R[_RBC]=0
$P_INCOAP_R[_RPR]=_RP
$P_INCOAP_R[_RSR]=0 $P_INCOAP_R[_RTED]=0
FOR _I=30 TO 42
$P_INCOAP_R[_I]=0
ENDFOR
$P_INCOAP_S16[_S16NAX]=$MC_AXCONF_GEOAX_NAME_TAB[0]
$P_INCOAP_S16[_S16NAY]=$MC_AXCONF_GEOAX_NAME_TAB[1]
$P_INCOAP_S16[_S16NAZ]=$MC_AXCONF_GEOAX_NAME_TAB[2]
$P_INCOAP_S16[_S16NAI]=$MN_IPO_PARAM_NAME_TAB[0]
$P_INCOAP_S16[_S16NAJ]=$MN_IPO_PARAM_NAME_TAB[1]
$P_INCOAP_S16[_S16NAK]=$MN_IPO_PARAM_NAME_TAB[2]
$P_INCOAP_S160[_S160NGNF]=_ROU_PRG
$P_INCOAP_S160[_S160NDF]=_ROU_PRG
$P_INCOAP_S160[_S160RFP]=""
IF(_G94==1)
$P_INCOAP_S160[_S160RFW]="G94 F="<<_F
ELSE
$P_INCOAP_S160[_S160RFW]="G95 F="<<_F
ENDIF
IF (_H_VARI[2]==1)
$P_INCOAP_S160[_S160RCON]="CUST_TECHCYC("<<_UMODE<<")"
$P_INCOAP_S160[_S160RCOFF]="CUST_TECHCYC("<<_UMODE+1<<")"
ELSE
$P_INCOAP_S160[_S160RCOFF]=""
$P_INCOAP_S160[_S160RCON]=""
ENDIF
$P_INCOAP_S160[_S160RDC]="CYCLE82("<<_RP<<","<<_Z0<<","<<_SC<<","<<__Z1<<",,0,0,"<<_H_DMODE[0]<<",12)"
$P_INCOAP_S160[_S160RW40]="" $P_INCOAP_S160[_S160RW41]="" $P_INCOAP_S160[_S160RW42]=""
REPEAT
IF _FIRSTCALL
$P_INCOAP_B[_BFC]=1 _FIRSTCALL=0
ELSE
IF ( _INCOAP_I_0==2000 )
G4 F0
$P_INCOAP_B[_BFC]=1
ELSE
_INCOAP_I_0=_INCOAP_I_0-1000
IF (_INCOAP_I_0==0)
CONTDCON(_KONTAB)
IF ( ($P_INCOAP_S160[_S160NFWFC]<>"")AND($P_INCOAP_S32[_S32SFC]<>"")AND($P_INCOAP_S32[_S32EFC]<>"") )
CALL $P_INCOAP_S160[_S160NFWFC] BLOCK $P_INCOAP_S32[_S32SFC] TO $P_INCOAP_S32[_S32EFC]
ELSE
CALL $P_INCOAP_S160[_S160NFWFC]
ENDIF
ELSE
CONTDCON(_KONTAB)
IF ( ($P_INCOAP_S160[_S160NFWFIC+(_INCOAP_I_0-1)]<>"")AND($P_INCOAP_S32[_S32SFI+2*(_INCOAP_I_0-1)]<>"")AND($P_INCOAP_S32[_S32EFI+2*(_INCOAP_I_0-1)]<>"") )
CALL $P_INCOAP_S160[_S160NFWFIC+(_INCOAP_I_0-1)] BLOCK $P_INCOAP_S32[_S32SFI+2*(_INCOAP_I_0-1)] TO $P_INCOAP_S32[_S32EFI+2*(_INCOAP_I_0-1)]
ELSE
CALL $P_INCOAP_S160[_S160NFWFIC+(_INCOAP_I_0-1)]
ENDIF
ENDIF
EXECUTE(_ERR)
IF _ERR<>0
$P_INCOAP_B[_BCIF]=0
IF (_INCOAP_I_0==0)
_CONT_ERR=-1
ELSE
_CONT_ERR=_INCOAP_I_0
ENDIF
ELSE
_ERR=CHECKSUM(_CS[0],"_KONTAB",0,_KONTAB[0,5])
IF _ERR<>0
_SERR=<<_ERR
GOTOF _FEHL11
ENDIF
$P_INCOAP_S160[_S160NC]="_KONTAB" $P_INCOAP_S32[_S32CC]=_CS[0] $P_INCOAP_I[_INEIF]=_KONTAB[0,5]
ENDIF
ENDIF
ENDIF
MACHGEN
_INCOAP_I_0=$P_INCOAP_I[_IEM]
UNTIL ( _INCOAP_I_0<1000 )
_SC_POS[0]=$P_INCOAP_R[_RSPXM] _SC_POS[1]=$P_INCOAP_R[_RSPYM]
_ERR_AND_WARN=$P_INCOAP_S160[_S160WAE]
WHILE ((_ERR_AND_WARN<>"")OR(_CONT_ERR<>0))
IF (_ERR_AND_WARN<>"")
_I=MATCH(_ERR_AND_WARN,",")
IF (_I<>-1)
_ANUM=NUMBER(SUBSTR(_ERR_AND_WARN,0,_I))
_ERR_AND_WARN=SUBSTR(_ERR_AND_WARN,_I+1)
ELSE
_ANUM=NUMBER(_ERR_AND_WARN) _ERR_AND_WARN=""
ENDIF
ENDIF
IF ( _ANUM==(-19) )
GOTOF _FEHL43
ENDIF
IF ( _ANUM==(-20) )
GOTOF _FEHL12
ENDIF
IF ( (_ANUM==(-1))OR(_ANUM==(-9))OR(_ANUM==(-10))OR(_ANUM==(-12))OR(_ANUM==(-15))OR(_ANUM==(-16))OR(_ANUM==3002)OR(_ANUM==3003)OR(_ANUM==3028)OR(_ANUM==3030)OR(_ANUM==3042)OR(_ANUM==3100) )
_SERR=<<_ANUM
GOTOF _FEHL11
ENDIF
IF ( (_ANUM==3103)OR(_ANUM==3104)OR(_ANUM==3106)OR(_ANUM==3108)OR(_ANUM==3126) )
_SERR=<<_ANUM
GOTOF _FEHL11
ENDIF
IF ( ((_ANUM>=3020)AND(_ANUM<=3026))OR((_ANUM>=3113)AND(_ANUM<=3115))OR((_ANUM>=3117)AND(_ANUM<=3119))OR((_ANUM>=3128)AND(_ANUM<=3132)) )
_SERR=<<_ANUM
GOTOF _FEHL11
ENDIF
IF ( (_ANUM==(-1000))OR(_ANUM==(-2000)) )
IF (_ANUM==(-1000))
_SERR=<<_SC_CONT_LAB1[ABS(_ANUM+1000)]
ELSE
_SERR=<<_SC_CONT_LAB2[ABS(_ANUM+2000)]
ENDIF
GOTOF _FEHL13
ENDIF
IF ( (_ANUM<(-1000))AND(_ANUM>(-3000)) )
IF (_ANUM<(-1000))AND(_ANUM>(-2000))
_SERR=<<_SC_CONT_LAB1[ABS(_ANUM+1000)]
ELSE
_SERR=<<_SC_CONT_LAB2[ABS(_ANUM+2000)]
ENDIF
GOTOF _FEHL13
ENDIF
IF ( (_ANUM==(-3000))OR(_ANUM==(-4000))OR(_ANUM==(-5000))OR(_ANUM==(-6000))OR(_CONT_ERR==(-1)) )
_I=RINDEX($P_INCOAP_S160[_S160NFWFC], "/")+1 _SERR=SUBSTR($P_INCOAP_S160[_S160NFWFC],_I)
IF (_SC_CONT_LAB1[0]<>"")
_SERR=_SERR<<", "<<_SC_CONT_LAB1[0]
ENDIF
GOTOF _FEHL14
ENDIF
IF ( ((_ANUM<(-3000))AND(_ANUM>(-4000)))OR((_ANUM<(-4000))AND(_ANUM>(-5000)))OR((_ANUM<(-5000))AND(_ANUM>(-6000)))OR((_ANUM<(-6000))AND(_ANUM>(-7000)))OR((_CONT_ERR<>(-1))AND(_CONT_ERR<>0)) )
IF ((_CONT_ERR<>(-1))AND(_CONT_ERR<>0))
_I=RINDEX($P_INCOAP_S160[_S160NFWFIC-1+_CONT_ERR], "/")+1 _SERR=SUBSTR($P_INCOAP_S160[_S160NFWFIC-1+_CONT_ERR],_I)
IF (_SC_CONT_LAB1[_CONT_ERR]<>"")
_SERR=_SERR<<", "<<_SC_CONT_LAB1[_CONT_ERR]
ENDIF
ELSE
_I=RINDEX($P_INCOAP_S160[_S160NFWFIC-1+ABS(_ANUM MOD 1000)], "/")+1 _SERR=SUBSTR($P_INCOAP_S160[_S160NFWFIC-1+ABS(_ANUM MOD 1000)],_I)
IF (_SC_CONT_LAB1[ABS(_ANUM MOD 1000)]<>"")
_SERR=_SERR<<", "<<_SC_CONT_LAB1[ABS(_ANUM MOD 1000)]
ENDIF
ENDIF
GOTOF _FEHL14
ENDIF
CASE (_ANUM) OF -2 GOTOF _FEHL3 3111 GOTOF _FEHL3 -6 GOTOF _FEHL15 -7 GOTOF _FEHL16 -13 GOTOF _FEHL17 3041 GOTOF _FEHL17 -5 GOTOF _FEHL18 3040 GOTOF _FEHL18
CASE (_ANUM) OF -14 GOTOF _FEHL19 -8 GOTOF _FEHL20 -11 GOTOF _FEHL21 3001 GOTOF _FEHL22 3011 GOTOF _FEHL23 3105 GOTOF _FEHL23 3120 GOTOF _FEHL23
CASE (_ANUM) OF 3027 GOTOF _FEHL24 3029 GOTOF _FEHL25 3101 GOTOF _FEHL26 3102 GOTOF _FEHL27 3107 GOTOF _FEHL28 3116 GOTOF _FEHL29 3124 GOTOF _FEHL30
CASE (_ANUM) OF 3133 GOTOF _FEHL31 3134 GOTOF _FEHL32 3313 GOTOF _FEHL33 3109 GOTOF _FEHL35 3127 GOTOF _FEHL41
IF ( (_ANUM<3200)OR(_ANUM>3299) )
_SERR=<<_ANUM
GOTOF _FEHL11
ENDIF
ENDWHILE
_SYNC:
IF (_HOST)
IF NOT(ISFILE(_ROU_PRG))
_SERR=<<_ROU_PRG
GOTOF _FEHL49
ENDIF
IF (_H_GMODE[2]==2)
_ZEILE[0]=REP("")
READ(_TEMP,_ROU_PRG,1,20,_ZEILE)
IF (_TEMP<>0)
_SERR=<<_TEMP
GOTOF _FEHL50
ENDIF
_STR[0]=REP("")
_STR[0]=";startpoint first axis :" _STR[1]=";startpoint second axis:"
FOR _I=0 TO 1
FOR _III=0 TO 20
_TEMP=MATCH(_ZEILE[_III],_STR[_I])
IF (_TEMP<>(-1))
GOTOF _M1
ENDIF
ENDFOR
_M1:
_TEMP=INDEX(_ZEILE[_III],":")
IF (_TEMP==-1)
_SERR=<<_TEMP
GOTOF _FEHL50
ENDIF
_ZEILE[_III]=SUBSTR(_ZEILE[_III],_TEMP+1)
_SC_POS[_I]=NUMBER(_ZEILE[_III])
ENDFOR
GOTOF _ENDE
ELSE
GOTOF _BOHR
ENDIF
ENDIF
IF ( (_INCOAP_I_0>=0)AND(_INCOAP_I_0<1000)AND(_H_GMODE[2]<>2) )
_BOHR:
IF (_H_VARI[2]==2)
CUST_TECHCYC(_UMODE)
ENDIF
IF ($P_GG[10]<2)
G[10]=2
ENDIF
CALL _ROU_PRG
IF ( (_PROGS<>"E_CP_")AND(_PROGS<>"F_CP_") )
G0 AX[_ZZ]=_RP
ENDIF
IF (_H_VARI[2]==2)
CUST_TECHCYC(_UMODE+1)
ENDIF
ENDIF
_ENDE: RET
_FEHL0: STOPRE
N706400 SETAL(61000)
RET
_FEHL1: STOPRE
N706401 SETAL(61212)
RET
_FEHL2: STOPRE
N706402 SETAL(61019,_SERR)
RET
_FEHL3: STOPRE
N706403 SETAL(61900)
RET
_FEHL4: STOPRE
N706404 SETAL(61901,_SERR)
RET
_FEHL5: STOPRE
N706405 SETAL(61012)
RET
_FEHL6: STOPRE
N706406 SETAL(61287)
RET
_FEHL7: STOPRE
N706407 SETAL(61002)
RET
_FEHL8: STOPRE
N706408 SETAL(61101)
RET
_FEHL9: STOPRE
N706409 SETAL(61154)
RET
_FEHL10: STOPRE
N706410 SETAL(61240)
RET
_FEHL11: STOPRE
N706411 SETAL(61920,_SERR)
RET
_FEHL12: STOPRE
N706412 SETAL(61006)
RET
_FEHL13: STOPRE
N706413 SETAL(61906,_SERR)
RET
_FEHL14: STOPRE
N706414 SETAL(61913,_SERR)
RET
_FEHL15: STOPRE
N706415 SETAL(61908)
RET
_FEHL16: STOPRE
N706416 SETAL(61907)
RET
_FEHL17: STOPRE
N706417 SETAL(61914)
RET
_FEHL18: STOPRE
N706418 SETAL(61915)
RET
_FEHL19: STOPRE
N706419 SETAL(61916)
RET
_FEHL20: STOPRE
N706420 SETAL(61519)
RET
_FEHL21: STOPRE
N706421 SETAL(61158)
RET
_FEHL22: STOPRE
N706422 SETAL(61930)
RET
_FEHL23: STOPRE
N706423 SETAL(61931)
RET
_FEHL24: STOPRE
N706424 SETAL(61932)
RET
_FEHL25: STOPRE
N706425 SETAL(61933)
RET
_FEHL26: STOPRE
N706426 SETAL(61934)
RET
_FEHL27: STOPRE
N706427 SETAL(61935)
RET
_FEHL28: STOPRE
N706428 SETAL(61936)
RET
_FEHL29: STOPRE
N706429 SETAL(61939)
RET
_FEHL30: STOPRE
N706431 SETAL(61943)
RET
_FEHL31: STOPRE
N706431 SETAL(61946)
RET
_FEHL32: STOPRE
N706432 SETAL(61947)
RET
_FEHL33: STOPRE
N706433 SETAL(61948)
RET
_FEHL34: STOPRE
N706434 SETAL(61949)
RET
_FEHL35: STOPRE
N706435 SETAL(61157)
RET
_FEHL36: STOPRE
N706436 SETAL(61102)
RET
_FEHL37: STOPRE
N706437 SETAL(61109)
RET
_FEHL38: STOPRE
N706438 SETAL(61027,"CUST_TECHCYC")
RET
_FEHL39: STOPRE
N706439 SETAL(61003)
RET
_FEHL40: STOPRE
N706440 SETAL(61919)
RET
_FEHL41: STOPRE
N706441 SETAL(61945)
RET
_FEHL42: STOPRE
N706442 SETAL(61017,_SERR)
RET
_FEHL43: STOPRE
N706443 SETAL(61357)
RET
_FEHL44: STOPRE
N706444 SETAL(61343,_SERR)
RET
_FEHL45: STOPRE
N706445 SETAL(61042,_SERR)
RET
_FEHL46: STOPRE
N706446 SETAL(61044,_SERR)
RET
_FEHL47: STOPRE
N706447 SETAL(61029,_SERR)
RET
_FEHL48: STOPRE
N706448 SETAL(61051)
RET
RET
_FEHL49: STOPRE
N706449 SETAL(61032,_SERR)
RET
_FEHL50: STOPRE
N706450 SETAL(61038,_SERR)
RET
