PROC CYCLE840(REAL RTP,REAL RFP,REAL SDIS,REAL DP,REAL DPR,REAL DTB,INT SDR,INT SDAC,INT ENC,REAL MPIT,REAL PIT,INT _AXN,INT _PITA,INT _TECHNO,STRING[15] _PITM,STRING[20] _PTAB,STRING[20] _PTABA,INT _GMODE,INT _DMODE,INT _AMODE)SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.46.00 ;DATE: 2013-02-28
;Cycle support HMIsl
;Tapping with compensating chuck, with or without encoder, G33 and G63
N11 DEF AXIS _Z
N12 DEF REAL PP,HH1,HH2,HH3,HH4,_FNEU,_HMF,_BEP,_BEPVOR,_NIST,_NSOLL,_EPS=0.001,_FAK1
N13 DEF INT SPINU,MRI,RRI,_TEC_0,_TEC_1,_TEC_2,_TEC_3,_II,_JJ,_CO1,_CO2,_OLD12,_OLD24,_AXZAHL
DEF INT _ABS,_ORD,_APP,_TYP
DEF INT _ARTIS[16],_TEMP,_DMODE1,_DMODE4,_AMODE1,_TEMPA
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE840_MPF"
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE840_MPF")
_TEMPA=1
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,";! only for internal diagnostics ! Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T-Number $P_TOOLNO="<<$P_TOOLNO)
WRITE(_TEMP,_TEMP_FILE,";D-Number $P_TOOL="<<$P_TOOL)
IF (($P_TOOL)AND($P_TOOLNO))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$P_AD[1]<<"    ; Tool type")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$P_AD[2]<<"    ; Cutting edge position")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$P_AD[6]<<"    ; Tool geo radius")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP15[1,1]="<<$P_AD[15]<<"    ; Tool wear radius")
IF (($P_AD[1]>=200) AND ($P_AD[1]<300))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP24[1,1]="<<$P_AD[24]<<"    ; Tool tip angle")
ENDIF
IF (($P_AD[1]>=100) AND ($P_AD[1]<200))
IF ($P_AD[1]<>145)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP11[1,1]="<<$P_AD[11]<<"    ; Tool angle")
ENDIF
WRITE(_TEMP,_TEMP_FILE,";$TC_DP35[1,1]="<<$P_AD[35]<<"    ; Number of teeth")
ENDIF
IF ($P_AD[1]==140)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP7[1,1]="<<$P_AD[7]<<"   ; Outside radius ")
ENDIF
IF ($P_AD[1]==240)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP9[1,1]="<<$P_AD[9]<<"   ; Thread pitch")
ENDIF
ENDIF
IF ($P_TOOLNO>0)
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
ELSE
WRITE(_TEMP,_TEMP_FILE,";T0")
WRITE(_TEMP,_TEMP_FILE,";M6")
ENDIF
IF ($P_TOOL==0)
WRITE(_TEMP,_TEMP_FILE,";D0")
ELSE
WRITE(_TEMP,_TEMP_FILE,";D1")
ENDIF
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19")
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...")
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...")
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/... $P_F_TYPE="<<$P_F_TYPE)
IF($P_F_TYPE==11)OR($P_F_TYPE==33)
WRITE(_TEMP,_TEMP_FILE,"FZ="<<$P_FZ)
ELSE
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F)
ENDIF
IF $P_MSNUM==0
WRITE(_TEMP,_TEMP_FILE,";$P_MSNUM=0 no spindle existant")
ELSE
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$P_MSNUM])
ENDIF
WRITE(_TEMP,_TEMP_FILE,";G[12]="<<$P_GG[12]<<" G[21]="<<$P_GG[21]<<" G[24]="<<$P_GG[24]<<"    ; G601.. SOFT.. FFWON")
WRITE(_TEMP,_TEMP_FILE,"CYCLE840("<<RTP<<","<<RFP<<","<<SDIS<<","<<DP<<","<<DPR<<","<<DTB<<","<<SDR<<","<<SDAC<<","<<ENC<<","<<MPIT<<","<<PIT<<","<<_AXN<<","<<_PITA<<","<<_TECHNO<<","<<_PITM<<","<<_PTAB<<","<<_PTABA<<","<<_GMODE<<","<<_DMODE<<","<<_AMODE<<")")
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
_DMODE1=_DMODE _DEC1
IF(_DMODE1<0)OR(_DMODE1>3)
GOTOF _FEHL22
ELSE
IF($P_MC)
IF(_DMODE1==0)OR($P_GG[6]==_DMODE1)
_Z=$P_AXN3
ELSE
GOTOF _FEHL23
ENDIF
ELSE
IF((_DMODE1>0)AND($P_GG[6]<>_DMODE1))
G[6]=_DMODE1
ENDIF
ENDIF
ENDIF
_AMODE1=(_AMODE _DEC1)
IF(_AMODE1<0)OR(_AMODE1>2) GOTOF _FEHL24
IF((_AMODE1==2) AND ($P_SUBPAR[4]==0)) GOTOF _FEHL29
IF((_AMODE1==1) AND ($P_SUBPAR[5]==0)) GOTOF _FEHL30
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
IF (ENC==0) OR (ENC==1) OR (ENC==11) OR (ENC==20)
GOTOF _ENC_OK
ELSE
GOTOF _FEHL4
ENDIF
_ENC_OK:
IF _SC_TOOL_VALI[0]<>0
_ARTIS[0]=_SC_TOOL_VALI[0] _ARTIS[1]=_SC_TOOL_VALI[1] _ARTIS[2]=_SC_TOOL_VALI[2] _ARTIS[3]=_SC_TOOL_VALI[3] _ARTIS[4]=_SC_TOOL_VALI[4] _ARTIS[5]=_SC_TOOL_VALI[5] _ARTIS[6]=_SC_TOOL_VALI[6]
_ARTIS[7]=_SC_TOOL_ON_OFF[0] _ARTIS[8]=_SC_TOOL_ON_OFF[1]
IF (SUBSTR($P_PROG[$P_STACK-1],3,6)=="HOLES1") OR (SUBSTR($P_PROG[$P_STACK-1],3,6)=="HOLES2") OR (SUBSTR($P_PROG[$P_STACK-1],3,8)=="CYCLE801")
_ARTIS[15]=1
GOTOF _END_ARTIS_STAT
ENDIF
IF (_ARTIS[0] MOD 10 <>1 )
GOTOF _FEHL10
ENDIF
_II=_ARTIS[0] DIV 10
IF ((_II MOD 10 > 3) OR (_II MOD 10 < 1))
GOTOF _FEHL10
ENDIF
_II=_II DIV 10
IF ((_II MOD 10 > 2) OR (_II MOD 10 < 0))
GOTOF _FEHL10
ENDIF
ENDIF
_END_ARTIS_STAT:
_DMODE4=_DMODE _DEC4
IF(_DMODE4<0)OR(_DMODE4>1) GOTOF _FEHL31
IF (NOT($MCS_FUNCTION_MASK_DRILL B_AND 'B10'))
_TEC_0=$SCS_DRILL_TAPPING_SET_GG12[0] _TEC_1=$SCS_DRILL_TAPPING_SET_GG24[0]
ELSE
IF (_DMODE4==0)
_TEC_0=_TECHNO _DEC1 _TEC_1=_TECHNO _DEC2
ELSE
_TEC_0=0 _TEC_1=0
ENDIF
ENDIF
_TEC_3= ($SCS_FUNCTION_MASK_DRILL_SET B_AND 'B10000')
IF (_TEC_3>0)
_TEC_3=1
ENDIF
IF(_TEC_0<0)OR(_TEC_0>3)OR(_TEC_1<0)OR(_TEC_1>2) GOTOF _FEHL5
_ABS=1 _ORD=2 _APP=3
IF $P_GG[6]==2
_ABS=3 _ORD=1 _APP=2
ENDIF
IF $P_GG[6]==3
_ABS=2 _ORD=3 _APP=1
ENDIF
CASE _AXN OF 1 GOTOF _AX1 2 GOTOF _AX2 DEFAULT GOTOF _AX3
_AX1:
IF ISAXIS(_ABS)
_Z=$P_AXN1
GOTOF _AX
ELSE
GOTOF _FEHL9
ENDIF
_AX2:
IF ISAXIS(_ORD)
_Z=$P_AXN2
GOTOF _AX
ELSE
GOTOF _FEHL9
ENDIF
_AX3:
IF ISAXIS(_APP)
_Z=$P_AXN3
ELSE
GOTOF _FEHL9
ENDIF
_AX:
_HMF=$P_ACTFRAME[_Z,SC]
DPR=ABS(DPR) SDIS=ABS(SDIS) HH3=$P_S[0] HH4=$P_F SPINU=$P_MSNUM
IF(((DPR==0)AND(_AMODE1==0))OR(_AMODE1==2)) GOTOF _MD1
IF RTP==RFP GOTOF _FEHL1
N16 HH2=RFP-((RTP-RFP)/ABS(RTP-RFP)*DPR)
IF DP==0 GOTOF _MB1 IF DP==HH2 GOTOF _MD1
_MB1:DP=HH2
_MD1:HH2=RTP-RFP
N17 IF RFP==DP GOTOF _FEHL30 IF HH2==0 GOTOF _MA2 IF HH2/ABS(HH2)<>(RFP-DP)/ABS(RFP-DP) GOTOF _FEHL1
N18 HH1=SDIS*(RFP-DP)/ABS(RFP-DP)
_MA2:MRI=$P_SDIR[SPINU]
IF MRI==3
RRI=4
ENDIF
IF MRI==4
RRI=3
ENDIF
IF ($MN_ENABLE_CHAN_AX_GAP==0)
_AXZAHL=$ON_NUM_AXES_IN_SYSTEM-1
ELSE
_AXZAHL=31
ENDIF
FOR _II=0 TO _AXZAHL
_JJ=$MC_AXCONF_MACHAX_USED[_II]
IF _JJ<>0
IF $MA_SPIND_ASSIGN_TO_MACHAX[AXNAME("AX"<<_JJ)]==SPINU GOTOF _MASAXEND
ENDIF
ENDFOR
GOTOF _GG63
_MASAXEND:IF $MA_NUM_ENCS[AXNAME("AX"<<_JJ)]==0 GOTOF _GG63
IF ((ENC==1) OR (ENC==11)) GOTOF _GG63
CASE _PITA OF 0 GOTOF _P0TAB 1 GOTOF _P1TAB 2 GOTOF _P2TAB 3 GOTOF _P3TAB 4 GOTOF _P4TAB DEFAULT GOTOF _FEHL2
_P0TAB:IF (PIT<=0) AND (MPIT==0) GOTOF _FEHL2
PP=PIT
IF MPIT<>0
IF (MPIT<3)OR(MPIT>48) GOTOF _FEHL2
N3 CYCLE204(PP,MPIT)
IF (PP<>PIT)AND(PIT<>0) GOTOF _FEHL2
ENDIF
GOTOF _ENDTAB
_P1TAB:IF (PIT<=0) GOTOF _FEHL2
IF ($P_GG[13]==1) OR ($P_GG[13]==3)
PP=PIT/$MN_SCALING_VALUE_INCH
ELSE
PP=PIT
ENDIF
GOTOF _ENDTAB
_P2TAB:IF (PIT<=0) GOTOF _FEHL2
IF ($P_GG[13]==1) OR ($P_GG[13]==3)
PP=1/PIT
ELSE
PP=$MN_SCALING_VALUE_INCH/PIT
ENDIF
GOTOF _ENDTAB
_P3TAB:IF (PIT<=0) GOTOF _FEHL2
IF ($P_GG[13]==1) OR ($P_GG[13]==3)
PP=PIT
ELSE
PP=$MN_SCALING_VALUE_INCH*PIT
ENDIF
GOTOF _ENDTAB
_P4TAB:IF (PIT<=0) GOTOF _FEHL2
IF ($P_GG[13]==1) OR ($P_GG[13]==3)
PP=PIT*$PI/$MN_SCALING_VALUE_INCH
ELSE
PP=PIT*$PI
ENDIF
_ENDTAB:
IF($P_TOOL>0)
_TYP=$P_AD[1]
IF(_TYP==240) AND ($P_AD[9]<>0)
IF(ABS(ABS(PP)-ABS($P_AD[9])*_FAK1)>_EPS) GOTOF _FEHL13
ENDIF
ENDIF
_MB3:IF SDR==0 GOTOF _MD3
IF(SDR<3)OR(SDR>4) GOTOF _FEHL3
IF (SDAC<3)OR(SDAC>5) GOTOF _MC3
MRI=SDAC
_MC3:RRI=SDR
_MD3:IF (RRI<3)OR(RRI>4) GOTOF _FEHL3
_BEP=0
IF NOT (($AN_NCK_VERSION < 450000) )
IF _TEC_3==1
IF $MA_PARAMSET_CHANGE_ENABLE[_Z]==2
IF ($MA_DRIVE_AX_RATIO_DENOM[($AA_SCPAR[_Z]-1),_Z] <> $MA_DRIVE_AX_RATIO_DENOM[1,_Z]) GOTOF _FEHL7
IF ($MA_DRIVE_AX_RATIO_NUMERA[($AA_SCPAR[_Z]-1),_Z] <> $MA_DRIVE_AX_RATIO_NUMERA[1,_Z]) GOTOF _FEHL7
ELSE
IF ($MA_DRIVE_AX_RATIO_DENOM[$AC_SGEAR[SPINU],_Z] <> $MA_DRIVE_AX_RATIO_DENOM[1,_Z]) GOTOF _FEHL7
IF ($MA_DRIVE_AX_RATIO_NUMERA[$AC_SGEAR[SPINU],_Z] <> $MA_DRIVE_AX_RATIO_NUMERA[1,_Z]) GOTOF _FEHL7
ENDIF
ENDIF
ENDIF
SBLON
N30 G0 G09 G90 LFOF AX[_Z]=RFP+HH1/_HMF
SBLOF
_OLD12=$P_GG[12]
IF _TEC_0
G60 G[12]=_TEC_0
ENDIF
_OLD24=$P_GG[24]
IF _TEC_1==1
FFWON
ENDIF
IF _TEC_1==2
FFWOF
ENDIF
IF ((_ARTIS[0]==11) OR((_ARTIS[15]==1)AND(_ARTISUP==1)))
M=QU(_ARTIS[7])
ENDIF
N31 G33 AX[_Z]=(DP+_BEP) IP[_Z]=PP
N33 G33 G90 AX[_Z]=RFP+HH1/_HMF IP[_Z]=PP M=RRI
IF ((_ARTIS[0]==11) OR((_ARTIS[15]==1)AND(_ARTISUP==1)))
M=QU(_ARTIS[8])
ENDIF
IF _TEMPA
WRITE(_TEMP,_TEMP_FILE,";G[12]="<<$P_GG[12]<<" G[21]="<<$P_GG[21]<<" G[24]="<<$P_GG[24]<<"    ; G601.. SOFT.. FFWON")
ENDIF
G[12]=_OLD12 G[24]=_OLD24
IF ENC==20
N337 G4 F=DTB
ENDIF
SBLON
IF ($P_GG[10] < 2)
G[10]=2
ENDIF
IF NOT ((SDR==0) AND (SDAC==5))
N34 G0 AX[_Z]=RTP S=HH3 M=MRI
ELSE
N34 G0 AX[_Z]=RTP S=HH3 M=SDAC
ENDIF
SBLOF
IF HH4
F=HH4
ENDIF
GOTOF _MRET
_GG63:
IF ENC==11
CASE _PITA OF 0 GOTOF _P5TAB 1 GOTOF _P6TAB 2 GOTOF _P7TAB 3 GOTOF _P8TAB DEFAULT GOTOF _FEHL2
_P5TAB:PP=PIT
IF MPIT<>0
IF (MPIT<3)OR(MPIT>48) GOTOF _FEHL2
CYCLE204(PP,MPIT)
IF (PP<>PIT)AND(PIT<>0) GOTOF _FEHL2
ENDIF
GOTOF _ENTTAB63
_P6TAB:IF (PIT<=0) GOTOF _FEHL2
IF ($P_GG[13]==1) OR ($P_GG[13]==3)
PP=PIT/$MN_SCALING_VALUE_INCH
ELSE
PP=PIT
ENDIF
GOTOF _ENTTAB63
_P7TAB:IF (PIT<=0) GOTOF _FEHL2
IF ($P_GG[13]==1) OR ($P_GG[13]==3)
PP=1/PIT
ELSE
PP=$MN_SCALING_VALUE_INCH/PIT
ENDIF
GOTOF _ENTTAB63
_P8TAB:IF (PIT<=0) GOTOF _FEHL2
IF ($P_GG[13]==1) OR ($P_GG[13]==3)
PP=PIT
ELSE
PP=$MN_SCALING_VALUE_INCH*PIT
ENDIF
_ENTTAB63:
IF PP==0
_FNEU=HH4 ENC=1
GOTOF _M5302
ENDIF
IF($P_TOOL>0)
_TYP=$P_AD[1]
IF(_TYP==240)
IF(ABS(ABS(PP)-ABS($P_AD[9])*_FAK1)>_EPS) GOTOF _FEHL13
ENDIF
ENDIF
_FNEU=HH4
IF $P_GG[15]==2
_FNEU=PP*HH3
IF ($P_GG[13]==1) AND ($MN_SCALING_SYSTEM_IS_METRIC==1)
_FNEU=_FNEU*$MN_SCALING_VALUE_INCH
ENDIF
IF ($P_GG[13]==2) AND ($MN_SCALING_SYSTEM_IS_METRIC==0)
_FNEU=_FNEU/$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
IF $P_GG[15]==3
_FNEU=PP
IF ($P_GG[13]==1) AND ($MN_SCALING_SYSTEM_IS_METRIC==1)
_FNEU=_FNEU*$MN_SCALING_VALUE_INCH
ENDIF
IF ($P_GG[13]==2) AND ($MN_SCALING_SYSTEM_IS_METRIC==0)
_FNEU=_FNEU/$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FNEU=HH4
ENDIF
_M5302:
IF ((SDR<0) OR (SDR==1) OR (SDR==2) OR (SDR>4)) GOTOF _FEHL3
IF (SDAC<3)OR(SDAC>5) GOTOF _MA4
MRI=SDAC
IF (RRI<3)OR(RRI>4) GOTOF _FEHL3
IF NOT (($AN_NCK_VERSION < 450000) )
IF _TEC_3==1
IF ($MA_DRIVE_AX_RATIO_DENOM[($AA_SCPAR[_Z]-1),_Z] <> $MA_DRIVE_AX_RATIO_DENOM[1,_Z]) GOTOF _FEHL7
IF ($MA_DRIVE_AX_RATIO_NUMERA[($AA_SCPAR[_Z]-1),_Z] <> $MA_DRIVE_AX_RATIO_NUMERA[1,_Z]) GOTOF _FEHL7
ENDIF
ENDIF
_MA4:
SBLON
N4 G0 G09 G90 AX[_Z]=RFP+HH1/_HMF F=_FNEU
SBLOF
N400 SBLOF
IF (_TEC_3==1) AND ($P_SEARCH==0) AND ($P_DRYRUN==0)
IF ($AC_SDIR[SPINU]==SDR) OR ($AC_SDIR[SPINU]==5)GOTOF _FEHL8
ENDIF
IF NOT (($AN_NCK_VERSION < 450000) )
IF (_TEC_3==1) AND ($P_SEARCH==0) AND ($P_DRYRUN==0)
_NSOLL=$P_S[SPINU]
IF _NSOLL>$MA_GEAR_STEP_MAX_VELO_LIMIT[$AC_SGEAR[SPINU],AXNAME("AX"<<_JJ)]
_NSOLL=$MA_GEAR_STEP_MAX_VELO_LIMIT[$AC_SGEAR[SPINU],AXNAME("AX"<<_JJ)]
ENDIF
IF _NSOLL<$MA_GEAR_STEP_MIN_VELO_LIMIT[$AC_SGEAR[SPINU],AXNAME("AX"<<_JJ)]
_NSOLL=$MA_GEAR_STEP_MIN_VELO_LIMIT[$AC_SGEAR[SPINU],AXNAME("AX"<<_JJ)]
ENDIF
IF _NSOLL>$SA_SPIND_MAX_VELO_G26[AXNAME("AX"<<_JJ)]
_NSOLL=$SA_SPIND_MAX_VELO_G26[AXNAME("AX"<<_JJ)]
ENDIF
IF _NSOLL<$SA_SPIND_MIN_VELO_G25[AXNAME("AX"<<_JJ)]
_NSOLL=$SA_SPIND_MIN_VELO_G25[AXNAME("AX"<<_JJ)]
ENDIF
_CO2=0
GOTOF _W13C
_W12C:
_W13C:
IF(ABS(_NSOLL-ABS($AA_S[SPINU]))>($MA_SPIND_DES_VELO_TOL[AXNAME("AX"<<_JJ)]*_NSOLL))
GOTOB _W12C
ENDIF
_CO2=_CO2+1
IF(_CO2<3)
GOTOB _W13C
ENDIF
ENDIF
ENDIF
_OLD12=$P_GG[12]
IF _TEC_0
G60 G[12]=_TEC_0
ENDIF
_OLD24=$P_GG[24]
IF _TEC_1==1
FFWON
ENDIF
IF _TEC_1==2
FFWOF
ENDIF
IF ((_ARTIS[0]==11) OR((_ARTIS[15]==1)AND(_ARTISUP==1)))
M=QU(_ARTIS[7])
ENDIF
N41 G63 AX[_Z]=DP
_NIST=$AA_S[SPINU]
N42 M=RRI
N43 G4 F=DTB
IF (_TEC_3==1) AND ($P_SEARCH==0) AND ($P_DRYRUN==0)
_CO1=0
GOTOF _W13B
_W12B:
_W13B:
IF(_NIST<0)
IF($AA_S[SPINU]<0) GOTOB _W12B
_CO1=_CO1+1
IF(_CO1<3) GOTOB _W13B
ELSE
IF($AA_S[SPINU]>0) GOTOB _W12B
_CO1=_CO1+1
IF(_CO1<3) GOTOB _W13B
ENDIF
ENDIF
N44 G63 AX[_Z]=RFP+HH1/_HMF
IF ((_ARTIS[0]==11) OR((_ARTIS[15]==1)AND(_ARTISUP==1)))
M=QU(_ARTIS[8])
ENDIF
IF _TEMPA
WRITE(_TEMP,_TEMP_FILE,";G[12]="<<$P_GG[12]<<" G[21]="<<$P_GG[21]<<" G[24]="<<$P_GG[24]<<"    ; G601.. SOFT.. FFWON")
ENDIF
G[12]=_OLD12 G[24]=_OLD24
SBLON
IF ($P_GG[10] < 2)
G[10]=2
ENDIF
IF NOT ((SDR==0) AND (SDAC==5))
N45 G0 AX[_Z]=RTP S=HH3 M=MRI
ELSE
N45 G0 AX[_Z]=RTP S=HH3 M=SDAC
ENDIF
SBLOF
IF HH4
F=HH4
ENDIF
_MRET:
RET
_FEHL1:STOPRE
N784001 SETAL(61101)
RET
_FEHL2:STOPRE
N784002 SETAL(61001)
RET
_FEHL3:STOPRE
N784003 SETAL(61102)
RET
_FEHL4:STOPRE
N784004 SETAL(61002)
RET
_FEHL5:STOPRE
N784005 SETAL(61125)
RET
_FEHL6:STOPRE
N784006 SETAL(61126)
RET
_FEHL7:STOPRE
N784007 SETAL(61127)
RET
_FEHL8:STOPRE
N784008 SETAL(61807)
RET
_FEHL9:STOPRE
N784009 SETAL(61803)
RET
_FEHL10:STOPRE
N784010 SETAL(62106)
RET
_FEHL13: STOPRE
N784013 SETAL(61262)
RET
_FEHL22: STOPRE
N784022 SETAL(61158)
RET
_FEHL23: STOPRE
N784023 SETAL(61159)
RET
_FEHL24: STOPRE
N784024 SETAL(61019,"(_AMODE: dec1)")
RET
_FEHL29: STOPRE
N784029 SETAL(61019,"(_AMODE: dec1/DP)")
RET
_FEHL30: STOPRE
N784030 SETAL(61019,"(_AMODE: dec1/DPR)")
RET
_FEHL31: STOPRE
N784031 SETAL(61019,"(_DMODE: dec4)")
RET
