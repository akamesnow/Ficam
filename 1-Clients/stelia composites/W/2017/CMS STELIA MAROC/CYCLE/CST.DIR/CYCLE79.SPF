PROC CYCLE79(REAL _RTP,REAL __RFP,REAL __SDIS,REAL __DP,INT _NUM,REAL __SWL,REAL _PA,REAL _PO,REAL _STA,REAL __RC,REAL _AP1,REAL __MIDA,REAL __MID,REAL __FAL,REAL __FALD,REAL _FFP1,INT __CDIR,INT _VARI,REAL _FS,REAL __ZFS,INT _GMODE,INT _DMODE,INT _AMODE) SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.60.00 ;DATE: 2014-04-04
;Cycle support HMIsl
;Multi edge cycle
DEF AXIS _XX,_YY,_ZZ
DEF INT _CDIR,_WTYP
DEF INT _I,_MUN,_MUN_ACT,_J,_J0,_EBEN,_T,_TIEF,_SII,_MIRR,_M3_4,_MODE,_MOD1,_FFA_P1,_FFA_D,_STAFA,_ERR,_PMZ,_DMODE1,_AMODE1,_AMODE2,_AMODE3,_ZZSD[9]
DEF INT _II,_ARTIS[16]
DEF REAL _DP,_FAL,_FALD,_MID,_MIDA,_RC,_RFP,_SDIS,_SWL,_ZFS,S_WB,S_DIST
DEF REAL _DEB,_DTI,_PHI,_ALFA,_BETA,_GAMA,_RUM,_RIN,_RUV,_RIV,_LP,_R,_RP,_RZ,_RPZ,_RVF,_RVFZ,_RPFZ,_KATOS,_ZITOS,_FASOS,_NORM,_NORM1,_NORM2,_NORM3,_USCH,_USCHI,_USCHI1
DEF REAL _WR,_SKX,_SKZ,_FAK1,_FAK2,_FFD,_XS,_YS,_ZS,_PR,_KANT_S[2],_KANT_E[2],_FASE_S[2],_FASE_E[2],_RUND_S[2],_RUND_E[2],_RUND_M[2],_RUND_D,_TOOLOFFN,_SDIZ,_PRAD
DEF REAL _FRND1_S[2],_FRND1_E[2],_FRND1_M[2],_FRND1_D,_FRND2_S[2],_FRND2_E[2],_FRND2_M[2],_FRND2_D
DEF REAL _START_S[2],_START_E[2],_START_M[2],_START_D,_ZIEL_S[2],_ZIEL_E[2],_DEPART_S[2],_DEPART_E[2],_DEPART_M[2],_DEPART_D,_SP1[3],_SP2[3],_VPKT[2],_WPKT[2]
DEF REAL _KT[2,11],_S[2],_S1_A[2],_S1_E[2],_S1_M[2],_S1_G,_S2_A[2],_S2_E[2],_S2_M[2],_S2_G,_KR_A[2],_KR_E[2],_KR_M[2],_RADIUS,_DIST_E
DEF BOOL _ZUSTELL,_RUNDUNG,_DRAN,_DRIN,_OPTIMIZE,_SCHLIGRND,_FALG,_DEEP1,S_DISC_CUTTER,S_IS_ST
DEF STRING[30] _S_FFP1,_S_FFC
DEF FRAME _RE_CYCFR
DEF INT _TEMP
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE79_MPF"
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE79_MPF")
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,";! only for internal diagnostics ! Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T-Number $P_TOOLNO="<<$P_TOOLNO)
WRITE(_TEMP,_TEMP_FILE,";D-Number $P_TOOL="<<$P_TOOL)
IF (($P_TOOL)AND($P_TOOLNO))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$P_AD[1]<<"    ; Tool type")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$P_AD[2]<<"    ; Cutting edge position")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$P_AD[6]<<"    ; Tool geo radius")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP15[1,1]="<<$P_AD[15]<<"    ; Tool wear radius")
IF (($P_AD[1]>=200) AND ($P_AD[1]<300))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP24[1,1]="<<$P_AD[24]<<"    ; Tool tip angle")
ENDIF
IF (($P_AD[1]>=100) AND ($P_AD[1]<200))
IF ($P_AD[1]<>145)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP11[1,1]="<<$P_AD[11]<<"    ; Tool angle")
ENDIF
WRITE(_TEMP,_TEMP_FILE,";$TC_DP35[1,1]="<<$P_AD[35]<<"    ; Number of teeth")
ENDIF
IF ($P_AD[1]==140)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP7[1,1]="<<$P_AD[7]<<"   ; Outside radius ")
ENDIF
IF ($P_AD[1]==240)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP9[1,1]="<<$P_AD[9]<<"   ; Thread pitch")
ENDIF
IF ($P_AD[1]==150) OR ($P_AD[1]==151)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP9[1,1]="<<$P_AD[9]<<"   ; Cutting Edge Width")
ENDIF
ENDIF
IF ($P_TOOLNO>0)
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
ELSE
WRITE(_TEMP,_TEMP_FILE,";T0")
WRITE(_TEMP,_TEMP_FILE,";M6")
ENDIF
IF ($P_TOOL==0)
WRITE(_TEMP,_TEMP_FILE,";D0")
ELSE
WRITE(_TEMP,_TEMP_FILE,";D1")
ENDIF
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19")
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...")
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...")
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/... $P_F_TYPE="<<$P_F_TYPE)
IF($P_F_TYPE==11)OR($P_F_TYPE==33)
WRITE(_TEMP,_TEMP_FILE,"FZ="<<$P_FZ)
ELSE
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F)
ENDIF
IF $P_MSNUM==0
WRITE(_TEMP,_TEMP_FILE,";$P_MSNUM=0 no spindle existant")
ELSE
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$P_MSNUM])
ENDIF
WRITE(_TEMP,_TEMP_FILE,"CYCLE79("<<_RTP<<","<<_RFP<<","<<__SDIS<<","<<__DP<<","<<_NUM<<","<<__SWL<<","<<_PA<<","<<_PO<<","<<_STA<<","<<__RC<<","<<_AP1<<","<<__MIDA<<","<<__MID<<","<<__FAL<<","<<__FALD<<","<<_FFP1<<","<<__CDIR<<","<<_VARI<<","<<_FS<<","<<__ZFS<<","<<_GMODE<<","<<_DMODE<<","<<_AMODE<<")")
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
IF (_VARI _DEC1<>1)
IF ($P_TRAFO B_AND 'H201')=='H201'
GOTOF _FEHL39
ENDIF
IF ($P_TRAFO B_AND 'H202')=='H202'
IF ($P_TRAFO_PAR[1]==1) GOTOF _FEHL40
ENDIF
ENDIF
DIAMCYCOF
IF ($P_GG[30]>1)
COMPOF
ENDIF
_CDIR=__CDIR _DP=__DP _SDIS=__SDIS _SWL=__SWL _RC=__RC _RFP=__RFP _MIDA=__MIDA _MID=__MID _FAL=__FAL _FALD=__FALD _ZFS=__ZFS
_PRAD=_AP1/2
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
_FAK2=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK2=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)OR($P_GG[13]==4)
_FAK2=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
_WR=$P_TOOLR*_FAK1
IF(_WR<=0) GOTOF _FEHL6
IF(_SDIS<=0) GOTOF _FEHL8
IF(_NUM<=0) GOTOF _FEHL11
G40 G90 NORM
_RE_CYCFR=$P_CYCFRAME
IF(_FFP1<=0) GOTOF _FEHL2
IF($P_F_TYPE==1)OR($P_F_TYPE==3)
_S_FFP1="G95 F"<<_FFP1
ELSE
IF($P_F_TYPE==11)OR($P_F_TYPE==31)
_WTYP=$P_AD[1]
IF(_WTYP<100)OR(_WTYP>199) GOTOF _FEHL29
_S_FFP1="G95 FZ="<<_FFP1
ELSE
_S_FFP1="G94 F"<<_FFP1
ENDIF
ENDIF
_S_FFC="G94 F"<<$SCS_CIRCLE_RAPID_FEED
IF(_FFP1<=0) GOTOF _FEHL2
_FFA_P1=$P_GG[15]
_FFD=$SCS_CIRCLE_RAPID_FEED
IF(_FFD<=0) GOTOF _FEHL16
_FFA_D=2
_ZZSD[8]=_GMODE _DEC3
IF(_ZZSD[8]<0)OR(_ZZSD[8]>2) GOTOF _FEHL17
IF(_ZZSD[8]==2)
_ZZSD[8]=1
ELSE
_ZZSD[8]=0
ENDIF
_DMODE1=_DMODE _DEC1
IF(_DMODE1<0)OR(_DMODE1>3) GOTOF _FEHL19
IF($P_MC)
IF(_DMODE1==0)OR($P_GG[6]==_DMODE1)
_XX=$P_AXN1 _YY=$P_AXN2 _ZZ=$P_AXN3
_PA=$P_EP[_XX]*_FAK1 _PO=$P_EP[_YY]*_FAK1
ELSE
GOTOF _FEHL26
ENDIF
ELSE
IF(_DMODE1>0)AND($P_GG[6]<>_DMODE1)
G[6]=_DMODE1
ENDIF
ENDIF
_XX=$P_AXN1 _YY=$P_AXN2 _ZZ=$P_AXN3
IF(_VARI _DEC1<>5)
_AMODE2=_AMODE _DEC2
IF(_AMODE2<0)OR(_AMODE2>1) GOTOF _FEHL22
IF(_AMODE2==1)
IF(_MIDA<0)OR(_MIDA>100)
GOTOF _FEHL21
ELSE
_MIDA=_MIDA/100*(2*_WR)
ENDIF
ENDIF
ENDIF
IF(_VARI _DEC1<>5)
_AMODE1=_AMODE _DEC1
IF(_AMODE1<0)OR(_AMODE1>1) GOTOF _FEHL23
IF(_AMODE1==1)
IF(_RTP==_RFP) GOTOF _FEHL24
IF(_RTP>_RFP)
_DP=_RFP-ABS(_DP)
ELSE
_DP=_RFP+ABS(_DP)
ENDIF
ENDIF
IF(_RFP==_DP) GOTOF _FEHL28
IF(_DP<_RFP)
_PMZ=1
ELSE
_PMZ=-1
ENDIF
ENDIF
$P_CYCFRAME=$P_CYCFRAME:CTRANS(_XX,_PA*1/_FAK1,_YY,_PO*1/_FAK1)
IF($P_ACTFRAME[_XX,SC]<>$P_ACTFRAME[_YY,SC]) GOTOF _FEHL4
_SKX=$P_ACTFRAME[_XX,SC] _SKZ=$P_ACTFRAME[_ZZ,SC]
_MIDA=_MIDA/_SKX _MID=_MID/_SKZ _FAL=_FAL/_SKX _FALD=_FALD/_SKZ _SDIS=_SDIS/_SKX
_WR=_WR/_SKX _TOOLOFFN=0
IF($SCS_FUNCTION_MASK_MILL_SET B_AND 'B100')
_ZZSD[1]=1 _SDIZ=0
ELSE
_ZZSD[1]=0 _SDIZ=_SDIS
ENDIF
_MODE=_VARI MOD 10
IF(_MODE<1)OR(_MODE==4)OR(_MODE>5) GOTOF _FEHL1
IF(_MODE==5)
_AMODE3=_AMODE _DEC3
IF(_AMODE3<0)OR(_AMODE3>1) GOTOF _FEHL25
IF(_AMODE3==1)
IF(_RTP==_RFP) GOTOF _FEHL24
_PMZ=(_RTP-_RFP)/ABS(_RTP-_RFP)
_DP=_RFP-ABS(_ZFS)*_PMZ
ELSE
_DP=_ZFS
IF (_RFP<>_DP)
_PMZ=(_RFP-_DP)/ABS(_RFP-_DP)
ENDIF
_ZFS=ABS(_RFP-_ZFS) _AMODE3=1
ENDIF
_MID=ABS(_ZFS) _MIDA=_FS _FALD=0 _FAL=_FS
IF(_ZZSD[8]==0)
CYCLE203(1,_FS,_ZFS)
ENDIF
_TOOLOFFN=$P_OFFN*_FAK2
_MODE=3
ENDIF
_WR=_WR+_TOOLOFFN
IF (_RTP<>_RFP) AND (_RFP<>_DP)
IF ((_RFP-_DP)/ABS(_RFP-_DP))<>((_RTP-_RFP)/ABS(_RTP-_RFP)) GOTOF _FEHL24
ELSE
IF(_RFP==_DP) GOTOF _FEHL28
ENDIF
IF(_MODE==3)
_FALG=FALSE
_MODE=2 _MIDA=_WR
ELSE
_FALG=TRUE
ENDIF
IF(_MODE==2)
_USCH=_FAL+_SDIS+_WR
_FAL =0
_FALD=0
ENDIF
_MOD1=TRUNC(_VARI/10) MOD 10
IF(_NUM==1)
IF((_MOD1==0)AND(_SWL<_PRAD))OR((_MOD1==1)AND(_SWL<0))
_DEEP1=TRUE
ELSE
_DEEP1=FALSE
ENDIF
ENDIF
_SWL=ABS(_SWL)
IF(_SWL==0) GOTOF _FEHL12
IF(_VARI _DEC1<>5)
IF(_MIDA>2*_WR) GOTOF _FEHL7
IF(_MIDA<=0)AND(_FALG==TRUE) GOTOF _FEHL21
IF(_MID<=0) GOTOF _FEHL10
IF(_FAL>_MIDA)AND(_MODE==2) GOTOF _FEHL3
IF(_FALD>_MID)AND(_MODE==2) GOTOF _FEHL3
IF(_PRAD<=0) GOTOF _FEHL9
ENDIF
S_IS_ST=FALSE
S_DISC_CUTTER=FALSE
IF($MCS_FUNCTION_MASK_MILL B_AND 'H04')AND($P_TOOL)AND(($P_AD[1]==150)OR($P_AD[1]==151))
S_DISC_CUTTER=TRUE
IF(SUBSTR($P_PROG[$P_STACK-1],3,8)=="F_MI_EDG")
S_IS_ST=TRUE
ENDIF
S_WB=$P_AD[9]*_FAK1
IF(S_WB>0)AND(S_WB>ABS(_DP-_RFP)) GOTOF _FEHL30
IF(S_WB>0)AND(S_WB<ABS(_MID)) GOTOF _FEHL31
ENDIF
IF(_NUM<=2)
IF(_MOD1==0)
IF(_NUM==1)
IF(_SWL+_FAL>=2*_PRAD) GOTOF _FEHL13
_SWL=2*SQRT(POT(_PRAD)-POT(_SWL-_PRAD))
ELSE
IF(_SWL/2+_FAL>=_PRAD) GOTOF _FEHL13
_SWL=2*SQRT(POT(_PRAD)-POT(_SWL/2))
ENDIF
ENDIF
IF(_SWL>2*_PRAD) GOTOF _FEHL13
ENDIF
IF(_NUM>=3)
IF(_MOD1==0)
_SWL=_SWL*TAN(180/_NUM)
ENDIF
IF(0.5*_SWL/TAN(180/_NUM)+_FAL>_PRAD)
GOTOF _FEHL13
ENDIF
IF(_AMODE _DEC4 <0)OR(_AMODE _DEC4 >1) GOTOF _FEHL18
IF(_RC<0) GOTOF _FEHL20
IF(_AMODE _DEC4 == 1)
IF(_RC>0.5*_SWL/(1+SIN(180*(_NUM-2)/(2*_NUM)))) GOTOF _FEHL14
_RC=-_RC
ELSE
IF(_RC>0.5*_SWL*TAN(180*(_NUM-2)/(2*_NUM))) GOTOF _FEHL14
ENDIF
ENDIF
IF(_SC_TOOL_VALI[0]<>0)
_ARTIS[0]=_SC_TOOL_VALI[0] _ARTIS[1]=_SC_TOOL_VALI[1] _ARTIS[2]=_SC_TOOL_VALI[2] _ARTIS[3]=_SC_TOOL_VALI[3] _ARTIS[4]=_SC_TOOL_VALI[4] _ARTIS[5]=_SC_TOOL_VALI[5] _ARTIS[6]=_SC_TOOL_VALI[6]
_ARTIS[7]=_SC_TOOL_ON_OFF[0] _ARTIS[8]=_SC_TOOL_ON_OFF[1]
IF(_ARTIS[0] MOD 10 <>1)
GOTOF _FEHL15
ENDIF
_II=_ARTIS[0] DIV 10
IF((_II MOD 10 > 3) OR (_II MOD 10 < 1))
GOTOF _FEHL15
ELSE
_ARTIS[11]=_II MOD 10
IF(_ARTIS[3]<>0)
_ARTIS[13]=_ARTIS[1]
ENDIF
IF(_ARTIS[6]<>0)
_ARTIS[14]=_ARTIS[4]
ENDIF
ENDIF
_II=_II DIV 10
IF((_II MOD 10 > 2) OR (_II MOD 10 < 0))
GOTOF _FEHL15
ELSE
_ARTIS[12]=_II MOD 10
ENDIF
_ARTIS[0]=_ARTIS[0] MOD 100
ENDIF
IF(($P_ACTFRAME[_XX,MI]+$P_ACTFRAME[_YY,MI])==1)
IF(_CDIR==0)OR(_CDIR==2)
_CDIR=_CDIR+1
ELSE
_CDIR=_CDIR-1
ENDIF
ENDIF
IF(_RFP<_DP)
IF(_CDIR==0)OR(_CDIR==2)
_CDIR=_CDIR+1
ELSE
_CDIR=_CDIR-1
ENDIF
ENDIF
IF($P_ACTFRAME[_ZZ,MI])
IF(_CDIR==0)OR(_CDIR==2)
_CDIR=_CDIR+1
ELSE
_CDIR=_CDIR-1
ENDIF
ENDIF
_MIRR=0
_STAFA=1
IF(_CDIR==2)OR(_CDIR==3)
IF(_CDIR==2)
_MIRR=1
_STAFA=-1
ENDIF
ELSE
IF($P_SMODE[$P_MSNUM]<>0)
_M3_4=$P_SDIR[$P_MSNUM]
IF(_M3_4<3)OR(_M3_4>4) GOTOF _FEHL5
IF((_M3_4==3)AND(_CDIR==0))OR((_M3_4==4)AND(_CDIR==1))
_MIRR=1
_STAFA=-1
ENDIF
ELSE
SETAL(62101)
ENDIF
ENDIF
IF(_NUM<=2)
$P_CYCFRAME=$P_CYCFRAME:CRPL(0,-90)
ELSE
$P_CYCFRAME=$P_CYCFRAME:CRPL(0,180/_NUM)
ENDIF
IF(_MIRR)
$P_CYCFRAME=$P_CYCFRAME:CMIRROR(_YY)
IF(_NUM<=2)
$P_CYCFRAME=$P_CYCFRAME:CRPL(0,180)
ENDIF
ENDIF
$P_CYCFRAME=$P_CYCFRAME:CRPL(0,_STAFA*_STA)
IF(_VARI _DEC1<>5)
_RFP=_RFP+_SDIZ*_PMZ
ENDIF
IF((_ARTIS[0]==11) OR (_ARTIS[11]==3))
M=QU(_ARTIS[7])
ENDIF
IF(_NUM<=2)
_PHI=2*ASIN(0.5*_SWL/_PRAD)
_RIN=_PRAD*COS(_PHI/2)+_FAL
_RUM=_PRAD+_WR+_SDIS
IF(_NUM==1)AND(_DEEP1)
_RIN=-_RIN+2*_FAL
ENDIF
_EBEN=ROUND((_PRAD-_RIN)/_MIDA)
IF(_EBEN<(_PRAD-_RIN)/_MIDA)
_EBEN=_EBEN+1
ENDIF
IF(_EBEN<>0)
_DEB=(_PRAD-_RIN)/_EBEN
ENDIF
_TIEF=ROUND((ABS(_RFP-_DP)-_FALD)/_MID)
IF(_TIEF<(ABS(_RFP-_DP)-_FALD)/_MID)
_TIEF=_TIEF+1
ENDIF
IF(_TIEF<>0)
_DTI=(ABS(_RFP-_DP)-_FALD)/_TIEF
ENDIF
IF(S_DISC_CUTTER)AND(S_WB>0)
_TIEF=ROUND((ABS(_RFP-_DP)-_FALD-S_WB)/_MID)
IF(_TIEF<(ABS(_RFP-_DP)-_FALD-S_WB)/_MID)
_TIEF=_TIEF+1
ENDIF
IF(_TIEF<>0)
_DTI=(ABS(_RFP-_DP)-_FALD-S_WB)/_TIEF
ENDIF
_TIEF=_TIEF+1
_RFP=_RFP-ABS(S_WB-_DTI)*_PMZ
ENDIF
FOR _I=1 TO _NUM
_SCHLIGRND=FALSE
FOR _T=1 TO _TIEF
IF(_TIEF>1)
IF(_T==1)
ENDIF
IF(_T==_TIEF)
ENDIF
ENDIF
IF(_MODE==1)
_J0=1
ENDIF
IF(_MODE==2)
_J0=_EBEN
ENDIF
IF(_MODE==2)AND(_FALG)AND(_T==_TIEF)
_J0=1
_SCHLIGRND=TRUE
ENDIF
IF(_MODE==1)OR(_SCHLIGRND==TRUE)
_RIV=_PRAD+_WR-_DEB
_ALFA=ASIN(_RIV/_RUM)
_RUV=_RUM*COS(_ALFA)
ELSE
_RIV=_RIN+_WR
_ALFA=ASIN(_RIV/_RUM)
_RUV=_RUM*COS(_ALFA)
ENDIF
IF(_ZZSD[8]==1)
_XS=_RUV
_YS=_RIV
_ZS=_RFP-(_T*_DTI-_SDIS)*_PMZ
GOTOF _M_ST_POS
ENDIF
SBLON
N10 G0 AX[_XX]=_RUV AX[_YY]=_RIV
IF(_T==_TIEF)
N15 G0 AX[_ZZ]=_RFP-(_T*_DTI-_SDIS)*_PMZ
ELSE
N16 G0 AX[_ZZ]=_RFP-_T*_DTI*_PMZ
ENDIF
EXECSTRING(_S_FFP1)
N20 G1 AX[_ZZ]=_RFP-_T*_DTI*_PMZ
SBLOF
FOR _J=_J0 TO _EBEN
_RIV=_PRAD+_WR-_J*_DEB
_ALFA=ASIN(_RIV/_RUM)
_RUV=_RUM*COS(_ALFA)
IF(_MODE==1)
N25 G1 AX[_XX]=-_RUV AX[_YY]=_RIV
ELSE
N30 G1 AX[_XX]=-_RUV AX[_YY]=_RIV
ENDIF
IF(_J<_EBEN)
_RIV=_PRAD+_WR-(_J+1)*_DEB
_ALFA=ASIN(_RIV/_RUM)
_RUV=_RUM*COS(_ALFA)
EXECSTRING(_S_FFC)
N35 G2 AX[_XX]=_RUV AX[_YY]=_RIV IP[_XX]=AC(0) IP[_YY]=AC(0)
EXECSTRING(_S_FFP1)
ENDIF
ENDFOR
IF(_T<_TIEF)
_RIV=_PRAD+_WR-_DEB
_ALFA=ASIN(_RIV/_RUM)
_RUV=_RUM*COS(_ALFA)
EXECSTRING(_S_FFC)
SBLON
N40 G2 AX[_XX]=_RUV AX[_YY]=_RIV IP[_XX]=AC(0) IP[_YY]=AC(0)
SBLOF
EXECSTRING(_S_FFP1)
ENDIF
ENDFOR
SBLON
IF(S_IS_ST==FALSE)
N45 G0 AX[_ZZ]=_RTP
ENDIF
SBLOF
IF(_NUM==2)AND(_I==1)
$P_CYCFRAME=$P_CYCFRAME:CRPL(0,180)
IF(_MODE==1)OR(_SCHLIGRND==TRUE)
_RIV=_PRAD+_WR-_DEB
ELSE
_RIV=_RIN+_WR
ENDIF
_ALFA=ASIN(_RIV/_RUM)
_RUV=_RUM*COS(_ALFA)
EXECSTRING(_S_FFC)
N50 G3 AX[_XX]=_RUV AX[_YY]=_RIV IP[_XX]=AC(0) IP[_YY]=AC(0)
EXECSTRING(_S_FFP1)
ENDIF
ENDFOR
IF(_NUM==2)
$P_CYCFRAME=$P_CYCFRAME:CRPL(0,-180)
IF(S_DISC_CUTTER)
N51 G3 AX[_XX]=_RUV AX[_YY]=_RIV IP[_XX]=AC(0) IP[_YY]=AC(0)
ENDIF
ENDIF
ELSE
_ZUSTELL=FALSE
_RUNDUNG=FALSE
_OPTIMIZE=FALSE
_SCHLIGRND=FALSE
_DRIN=TRUE
_DRAN=TRUE
_I=0
IF(_MODE==2)
_USCHI=_SDIS+_WR
_WR=0
ELSE
_USCHI=_SDIS
ENDIF
_USCHI1=_USCHI
_ALFA=90*(2*_NUM-4)/_NUM
_PHI =360/_NUM
_PRAD=_PRAD+_WR
_RUM =_SWL/(2*SIN(_PHI/2))
_RIN =_RUM*COS(_PHI/2)+_FAL+_WR
_RUM =_RIN/COS(_PHI/2)
_EBEN=ROUND((_PRAD-_RIN)/_MIDA)
IF(_EBEN<(_PRAD-_RIN)/_MIDA)
_EBEN=_EBEN+1
ENDIF
IF(_EBEN<>0)
_DEB=(_PRAD-_RIN)/_EBEN
ENDIF
_TIEF=ROUND((ABS(_RFP-_DP)-_FALD)/_MID)
IF(_TIEF<(ABS(_RFP-_DP)-_FALD)/_MID)
_TIEF=_TIEF+1
ENDIF
IF(_TIEF<>0)
_DTI=(ABS(_RFP-_DP)-_FALD)/_TIEF
ENDIF
IF(S_DISC_CUTTER)AND(S_WB>0)
_TIEF=ROUND((ABS(_RFP-_DP)-_FALD-S_WB)/_MID)
IF(_TIEF<(ABS(_RFP-_DP)-_FALD-S_WB)/_MID)
_TIEF=_TIEF+1
ENDIF
IF(_TIEF<>0)
_DTI=(ABS(_RFP-_DP)-_FALD-S_WB)/_TIEF
ENDIF
_TIEF=_TIEF+1
_RFP=_RFP-ABS(S_WB-_DTI)*_PMZ
ENDIF
_RIV =(_PRAD-(_EBEN-1)*_DEB)
_RUV =_RIV/COS(_PHI/2)
_LP =2*_RUV*SIN(_PHI/2)
_RIV =_RIV-_DEB
_NORM= SQRT((1-COS(_PHI))*(1-COS(_PHI))+SIN(_PHI)*SIN(_PHI))
IF(_RC<0)
_R =ABS(_RC)+((_FAL+_WR)/(TAN(_ALFA/2)*SIN(_PHI/2))-(_FAL+_WR))/COS(_ALFA/2)
_RP =_R+(_RUV-_RUM-_DEB)/COS(_ALFA/2)
_RZ =_R
_RVF=_FAL+_WR+_DEB
ELSE
_R =_RC+_FAL+_WR
_RP =(_R+_DEB)/TAN(_ALFA/2)
_RZ =_R+0.5*_DEB
ENDIF
_ZIEL_S[0]=_RIV/COS(_PHI/2)*COS(0*_PHI)+_PRAD*2/_NORM*(1-COS(_PHI))
_ZIEL_S[1]=_RIV/COS(_PHI/2)*SIN(0*_PHI)-_PRAD*2/_NORM*SIN(_PHI)
_ZIEL_E[0]=_RIV/COS(_PHI/2)*COS(1*_PHI)+0.5*_RIV/COS(_PHI/2)*(1-COS(_PHI))
_ZIEL_E[1]=_RIV/COS(_PHI/2)*SIN(1*_PHI)-0.5*_RIV/COS(_PHI/2)*SIN(_PHI)
WHILE(_I<_NUM)AND(_ZUSTELL==FALSE)
_KANT_S[0]=_RUV*COS(_I*_PHI)+_RP/_LP*_RUV*(COS((_I+1)*_PHI)-COS(_I*_PHI))
_KANT_S[1]=_RUV*SIN(_I*_PHI)+_RP/_LP*_RUV*(SIN((_I+1)*_PHI)-SIN(_I*_PHI))
_KANT_E[0]=_RUV*COS((_I+1)*_PHI)-_RP/_LP*_RUV*(COS((_I+1)*_PHI)-COS(_I*_PHI))
_KANT_E[1]=_RUV*SIN((_I+1)*_PHI)-_RP/_LP*_RUV*(SIN((_I+1)*_PHI)-SIN(_I*_PHI))
_RUND_D=3
_RUND_S[0]=_KANT_E[0] _RUND_S[1]=_KANT_E[1]
_RUND_E[0]=_RUV*COS((_I+1)*_PHI)+_RP/_LP*_RUV*(COS((_I+2)*_PHI)-COS((_I+1)*_PHI))
_RUND_E[1]=_RUV*SIN((_I+1)*_PHI)+_RP/_LP*_RUV*(SIN((_I+2)*_PHI)-SIN((_I+1)*_PHI))
_RUND_M[0]=(_RUM-_R/SIN(_ALFA/2))*COS((_I+1)*_PHI)
_RUND_M[1]=(_RUM-_R/SIN(_ALFA/2))*SIN((_I+1)*_PHI)
_S1_A[0]=_RUND_S[0] _S1_A[1]=_RUND_S[1] _S1_E[0]=_RUND_E[0] _S1_E[1]=_RUND_E[1]
_S2_A[0]=_ZIEL_S[0] _S2_A[1]=_ZIEL_S[1] _S2_E[0]=_ZIEL_E[0] _S2_E[1]=_ZIEL_E[1]
_S1_M[0]=_RUND_M[0] _S1_M[1]=_RUND_M[1] _S1_G=_RUND_D _S2_G=1
REPEAT _SCHNITT_A _SCHNITT_E
_SP1[0]=_S[0] _SP1[1]=_S[1] _SP1[2]=_SII
_S1_A[0]=_KANT_S[0] _S1_A[1]=_KANT_S[1] _S1_E[0]=_KANT_E[0] _S1_E[1]=_KANT_E[1] _S1_G=1
REPEAT _SCHNITT_A _SCHNITT_E
_SP2[0]=_S[0] _SP2[1]=_S[1] _SP2[2]=_SII
IF(_SP1[2])OR(_SP2[2])
_ZUSTELL=TRUE
_MUN=_I
IF(_RC<0)
IF(_SP1[2])
_RZ=0
_RUND_E[0]=_SP1[0] _RUND_E[1]=_SP1[1]
_ZIEL_S[0]=_SP1[0] _ZIEL_S[1]=_SP1[1]
_ZIEL_E[0]=_RIV/COS(_PHI/2)*COS(0*_PHI)+_R/_NORM*(COS(1*_PHI)-COS(0*_PHI))
_ZIEL_E[1]=_RIV/COS(_PHI/2)*SIN(0*_PHI)+_R/_NORM*(SIN(1*_PHI)-SIN(0*_PHI))
_KATOS=SQRT(POT(_KANT_E[0]-_KANT_S[0])+POT(_KANT_E[1]-_KANT_S[1]))
_ZITOS=SQRT(POT(_ZIEL_E[0]-_ZIEL_S[0])+POT(_ZIEL_E[1]-_ZIEL_S[1]))
_FASOS=SQRT(POT(_KANT_E[0]-_ZIEL_S[0])+POT(_KANT_E[1]-_ZIEL_S[1]))
_NORM1=SQRT(POT(_RUND_E[0]-_RUND_S[0])+POT(_RUND_E[1]-_RUND_S[1]))
_NORM2=SQRT(POT(_ZIEL_E[0]-_ZIEL_S[0])+POT(_ZIEL_E[1]-_ZIEL_S[1]))
_BETA =180-ACOS(((_RUND_E[0]-_RUND_S[0])/_NORM1)*((_ZIEL_E[0]-_ZIEL_S[0])/_NORM2)+((_RUND_E[1]-_RUND_S[1])/_NORM1)*((_ZIEL_E[1]-_ZIEL_S[1])/_NORM2))
IF(_RVF<=TAN(_BETA/2)*_KATOS/2)AND(_RVF<=TAN(_BETA/2)*_ZITOS/2)AND(_RVF<=TAN(_BETA/2)*_FASOS/2)
_RVFZ=_RVF
ELSE
IF(_KATOS<=_ZITOS)AND(_KATOS<=_FASOS)
_RVFZ=TAN(_BETA/2)*_KATOS/2
ENDIF
IF(_ZITOS<=_KATOS)AND(_ZITOS<=_FASOS)
_RVFZ=TAN(_BETA/2)*_ZITOS/2
ENDIF
IF(_FASOS<=_KATOS)AND(_FASOS<=_ZITOS)
_RVFZ=TAN(_BETA/2)*_FASOS/2
ENDIF
ENDIF
ELSE
_KANT_E[0]=_SP2[0] _KANT_E[1]=_SP2[1]
_ZIEL_S[0]=_SP2[0] _ZIEL_S[1]=_SP2[1]
_ZIEL_E[0]=_RIV/COS(_PHI/2)*COS(0*_PHI)+_R/_NORM*(COS(1*_PHI)-COS(0*_PHI))
_ZIEL_E[1]=_RIV/COS(_PHI/2)*SIN(0*_PHI)+_R/_NORM*(SIN(1*_PHI)-SIN(0*_PHI))
_KATOS=SQRT(POT(_KANT_E[0]-_KANT_S[0])+POT(_KANT_E[1]-_KANT_S[1]))
_ZITOS=SQRT(POT(_ZIEL_E[0]-_ZIEL_S[0])+POT(_ZIEL_E[1]-_ZIEL_S[1]))
_NORM1=SQRT(POT(_KANT_E[0]-_KANT_S[0])+POT(_KANT_E[1]-_KANT_S[1]))
_NORM2=SQRT(POT(_ZIEL_E[0]-_ZIEL_S[0])+POT(_ZIEL_E[1]-_ZIEL_S[1]))
_BETA =180-ACOS(((_KANT_E[0]-_KANT_S[0])/_NORM1)*((_ZIEL_E[0]-_ZIEL_S[0])/_NORM2)+((_KANT_E[1]-_KANT_S[1])/_NORM1)*((_ZIEL_E[1]-_ZIEL_S[1])/_NORM2))
IF(_RZ>_KATOS/2)OR(_RZ>_ZITOS/2)
IF(_KATOS<=_ZITOS)
_RZ=_KATOS/2
ELSE
_RZ=_ZITOS/2
ENDIF
ENDIF
_FASOS=_RZ*COS(_BETA/2)/2
_RVFZ =_FASOS*TAN((180/2+_BETA/2)/2)
ENDIF
ELSE
_KANT_E[0]=_RUV*COS((_I+1)*_PHI)+_PRAD*2/_NORM*(COS((_I+1)*_PHI)-COS(_I*_PHI))
_KANT_E[1]=_RUV*SIN((_I+1)*_PHI)+_PRAD*2/_NORM*(SIN((_I+1)*_PHI)-SIN(_I*_PHI))
_NORM1=SQRT(POT(_KANT_E[0]-_KANT_S[0])+POT(_KANT_E[1]-_KANT_S[1]))
_NORM2=SQRT(POT(_ZIEL_E[0]-_ZIEL_S[0])+POT(_ZIEL_E[1]-_ZIEL_S[1]))
_BETA =180-ACOS(((_KANT_E[0]-_KANT_S[0])/_NORM1)*((_ZIEL_E[0]-_ZIEL_S[0])/_NORM2)+((_KANT_E[1]-_KANT_S[1])/_NORM1)*((_ZIEL_E[1]-_ZIEL_S[1])/_NORM2))
_KANT_E[0]=_SP2[0] _KANT_E[1]=_SP2[1]
_ZIEL_S[0]=_SP2[0] _ZIEL_S[1]=_SP2[1]
_ZIEL_E[0]=_RIV/COS(_PHI/2)*COS(0*_PHI)+(_R/(2*TAN(_ALFA/2)*SIN(_PHI/2)))*(COS(1*_PHI)-COS(0*_PHI))
_ZIEL_E[1]=_RIV/COS(_PHI/2)*SIN(0*_PHI)+(_R/(2*TAN(_ALFA/2)*SIN(_PHI/2)))*(SIN(1*_PHI)-SIN(0*_PHI))
_KATOS=SQRT(POT(_KANT_S[0]-_SP2[0])+POT(_KANT_S[1]-_SP2[1]))
_ZITOS=SQRT(POT(_ZIEL_E[0]-_ZIEL_S[0])+POT(_ZIEL_E[1]-_ZIEL_S[1]))
IF(_KATOS/2>=_R/TAN(_BETA/2))AND(_ZITOS/2>=_R/TAN(_BETA/2))
IF(_RZ/TAN(_BETA/2)>_KATOS/2)OR(_RZ/TAN(_BETA/2)>_ZITOS/2)
IF(_KATOS<=_ZITOS)
_RZ=_KATOS*TAN(_BETA/2)/2
ELSE
_RZ=_ZITOS*TAN(_BETA/2)/2
ENDIF
ENDIF
ELSE
IF(_KATOS<=_ZITOS)
_RZ=_KATOS*TAN(_BETA/2)
ELSE
_RZ=_ZITOS*TAN(_BETA/2)
ENDIF
ENDIF
ENDIF
ENDIF
_I=_I+1
ENDWHILE
FOR _T=1 TO _TIEF
IF(_TIEF>1)
IF(_T==1)
ENDIF
IF(_T==_TIEF)
ENDIF
ENDIF
IF(_MODE==1)
_J0=1
ENDIF
IF(_MODE==2)
_J0=_EBEN
_RUNDUNG=FALSE
ENDIF
IF(_MODE==2)AND(_FALG)AND(_T==_TIEF)
_J0=1
_RUNDUNG=FALSE
_SCHLIGRND=TRUE
ENDIF
IF(_MODE==1)OR(_SCHLIGRND==TRUE)
_GET_START_A:
_RIV=_PRAD
_RUV=_RIV/COS(_PHI/2)
_LP =2*_RUV*SIN(_PHI/2)
_RIV=_RIV-_DEB
_KANT_S[0]=_RUV*COS(_MUN*_PHI)
_KANT_S[1]=_RUV*SIN(_MUN*_PHI)
_KANT_E[0]=_RUV*COS((_MUN+1)*_PHI)+_PRAD*2/_NORM*(COS((_MUN+1)*_PHI)-COS(_MUN*_PHI))
_KANT_E[1]=_RUV*SIN((_MUN+1)*_PHI)+_PRAD*2/_NORM*(SIN((_MUN+1)*_PHI)-SIN(_MUN*_PHI))
_ZIEL_S[0]=_RIV/COS(_PHI/2)*COS(0*_PHI)+_PRAD*2/_NORM*(1-COS(_PHI))
_ZIEL_S[1]=_RIV/COS(_PHI/2)*SIN(0*_PHI)-_PRAD*2/_NORM*SIN(_PHI)
_ZIEL_E[0]=_RIV/COS(_PHI/2)*COS(1*_PHI)
_ZIEL_E[1]=_RIV/COS(_PHI/2)*SIN(1*_PHI)
_S1_A[0]=_KANT_S[0] _S1_A[1]=_KANT_S[1] _S1_E[0]=_KANT_E[0] _S1_E[1]=_KANT_E[1] _S1_G=1
_S2_A[0]=_ZIEL_S[0] _S2_A[1]=_ZIEL_S[1] _S2_E[0]=_ZIEL_E[0] _S2_E[1]=_ZIEL_E[1] _S2_G=1
REPEAT _SCHNITT_A _SCHNITT_E
_SP1[0]=_S[0] _SP1[1]=_S[1] _SP1[2]=_SII
_KANT_E[0]=_SP1[0] _KANT_E[1]=_SP1[1]
_ZIEL_S[0]=_SP1[0] _ZIEL_S[1]=_SP1[1]
IF(_RC<0)
_RP =_R +(_RUV-_RUM-_EBEN*_DEB)/COS(_ALFA/2)
_RPZ=_RZ+(_RIV/COS(_PHI/2)-_RUM-(_EBEN-1)*_DEB)/COS(_ALFA/2)
IF(_RZ==0)
_KANT_E[0]=_RUV*COS((_MUN+1)*_PHI)-_RP/_LP*_RUV*(COS((_MUN+1)*_PHI)-COS(_MUN*_PHI))
_KANT_E[1]=_RUV*SIN((_MUN+1)*_PHI)-_RP/_LP*_RUV*(SIN((_MUN+1)*_PHI)-SIN(_MUN*_PHI))
_FASE_S[0]=_KANT_E[0] _FASE_S[1]=_KANT_E[1]
_FASE_E[0]=_RUV*COS((_NUM)*_PHI)+_RP/_LP*_RUV*(COS((_NUM+1)*_PHI)-COS((_NUM)*_PHI))
_FASE_E[1]=_RUV*SIN((_NUM)*_PHI)+_RP/_LP*_RUV*(SIN((_NUM+1)*_PHI)-SIN((_NUM)*_PHI))
_S1_A[0]=_FASE_S[0] _S1_A[1]=_FASE_S[1] _S1_E[0]=_FASE_E[0] _S1_E[1]=_FASE_E[1] _S1_G=1
_S2_A[0]=_ZIEL_S[0] _S2_A[1]=_ZIEL_S[1] _S2_E[0]=_ZIEL_E[0] _S2_E[1]=_ZIEL_E[1] _S2_G=1
REPEAT _SCHNITT_A _SCHNITT_E
_SP1[0]=_S[0] _SP1[1]=_S[1] _SP1[2]=_SII
_FASE_E[0]=_SP1[0] _FASE_E[1]=_SP1[1]
ELSE
_KANT_E[0]=_SP1[0]-_RPZ/_NORM*(COS((_MUN+1)*_PHI)-COS(_MUN*_PHI))
_KANT_E[1]=_SP1[1]-_RPZ/_NORM*(SIN((_MUN+1)*_PHI)-SIN(_MUN*_PHI))
_FASE_S[0]=_KANT_E[0] _FASE_S[1]=_KANT_E[1]
_FASE_E[0]=_SP1[0]+_RPZ/_NORM*(COS((_NUM+1)*_PHI)-COS((_NUM)*_PHI))
_FASE_E[1]=_SP1[1]+_RPZ/_NORM*(SIN((_NUM+1)*_PHI)-SIN((_NUM)*_PHI))
ENDIF
_RADIUS=_PRAD
_S1_A[0]=_FASE_S[0] _S1_A[1]=_FASE_S[1] _S1_E[0]=_FASE_E[0] _S1_E[1]=_FASE_E[1] _S1_G=1
_S2_A[0]=0 _S2_A[1]=-_RADIUS _S2_E[0]=0 _S2_E[1]=_RADIUS _S1_M[0]=0 _S1_M[1]=0 _S2_G=3
REPEAT _SCHNITT_A _SCHNITT_E
_SP1[0]=_S[0] _SP1[1]=_S[1] _SP1[2]=_SII
IF(_SP1[2])
_FASE_S[0]=_SP1[0] _FASE_S[1]=_SP1[1]
_DRAN=TRUE
ELSE
_RADIUS=_PRAD
_S1_A[0]=_ZIEL_S[0] _S1_A[1]=_ZIEL_S[1] _S1_E[0]=_ZIEL_E[0] _S1_E[1]=_ZIEL_E[1] _S1_G=1
_S2_A[0]=0 _S2_A[1]=-_RADIUS _S2_E[0]=0 _S2_E[1]=_RADIUS _S1_M[0]=0 _S1_M[1]=0 _S2_G=3
REPEAT _SCHNITT_A _SCHNITT_E
_SP1[0]=_S[0] _SP1[1]=_S[1] _SP1[2]=_SII
_FASE_E[0]=_SP1[0] _FASE_E[1]=_SP1[1]
_DRAN=FALSE
ENDIF
ELSE
IF(_OPTIMIZE==TRUE)
_RPZ=_RZ+(_EBEN-1)*_DEB
ELSE
_RPZ=_R+(_EBEN-0.5)*_DEB
ENDIF
_S1_A[0]=_KANT_S[0] _S1_A[1]=_KANT_S[1] _S1_E[0]=_KANT_E[0] _S1_E[1]=_KANT_E[1]
_S2_A[0]=_ZIEL_S[0] _S2_A[1]=_ZIEL_S[1] _S2_E[0]=_ZIEL_E[0] _S2_E[1]=_ZIEL_E[1]
_RADIUS =_RPZ
REPEAT _CALC_RND_A _CALC_RND_E
_RUND_S[0]=_KR_A[0] _RUND_S[1]=_KR_A[1] _RUND_E[0]=_KR_E[0] _RUND_E[1]=_KR_E[1] _RUND_M[0]=_KR_M[0] _RUND_M[1]=_KR_M[1]
IF(_OPTIMIZE==FALSE)
_SP1[0]=_RUND_S[0] _SP1[1]=_RUND_S[1]
_START_E[0]=_SP1[0] _START_E[1]=_SP1[1]
_START_M[0]=_START_E[0]+_USCHI1*COS(ATAN2(_SP1[1],_SP1[0]))
_START_M[1]=_START_E[1]+_USCHI1*SIN(ATAN2(_SP1[1],_SP1[0]))
_USCHI=_USCHI1+2*ABS((_USCHI1+SQRT(POT(_RUND_M[0]-_RUND_S[0])+POT(_RUND_M[1]-_RUND_S[1])))-SQRT(POT(_START_M[0]-_RUND_M[0])+POT(_START_M[1]-_RUND_M[1])))
ELSE
_RADIUS=_PRAD
_S1_A[0]=_RUND_S[0] _S1_A[1]=_RUND_S[1] _S1_E[0]=_RUND_E[0] _S1_E[1]=_RUND_E[1] _S1_M[0]=_RUND_M[0] _S1_M[1]=_RUND_M[1] _S1_G=3
_S2_A[0]=0 _S2_A[1]=-_RADIUS _S2_E[0]=0 _S2_E[1]=_RADIUS _S1_M[0]=0 _S1_M[1]=0 _S2_G=3
REPEAT _SCHNITT_A _SCHNITT_E
_SP1[0]=_S[0] _SP1[1]=_S[1] _SP1[2]=_SII
IF(_SP1[2])
_RUND_S[0]=_SP1[0] _RUND_S[1]=_SP1[1]
_DRAN=TRUE
ELSE
_RADIUS=_PRAD
_S1_A[0]=_ZIEL_S[0] _S1_A[1]=_ZIEL_S[1] _S1_E[0]=_ZIEL_E[0] _S1_E[1]=_ZIEL_E[1] _S1_G=1
_S2_A[0]=0 _S2_A[1]=-_RADIUS _S2_E[0]=0 _S2_E[1]=_RADIUS _S1_M[0]=0 _S1_M[1]=0 _S2_G=3
REPEAT _SCHNITT_A _SCHNITT_E
_SP1[0]=_S[0] _SP1[1]=_S[1] _SP1[2]=_SII
_RUND_E[0]=_SP1[0] _RUND_E[1]=_SP1[1]
_DRAN=FALSE
ENDIF
ENDIF
ENDIF
_START_D=2
_START_E[0]=_SP1[0] _START_E[1]=_SP1[1]
_START_M[0]=_START_E[0]+_USCHI*COS(ATAN2(_SP1[1],_SP1[0]))
_START_M[1]=_START_E[1]+_USCHI*SIN(ATAN2(_SP1[1],_SP1[0]))
_START_S[0]=_START_M[0]+(_START_M[1]-_START_E[1])
_START_S[1]=_START_M[1]-(_START_M[0]-_START_E[0])
_GET_START_E:
IF(_SCHLIGRND==FALSE)
_XS=_START_S[0]
_YS=_START_S[1]
ELSE
_PR=($P_TOOLR*_FAK1+$P_OFFN*_FAK2)/SQRT(ABS(POT(_START_M[0]-_START_S[0])+POT(_START_M[1]-_START_S[1])))
_XS=_START_S[0]+_PR*(_START_M[0]-_START_S[0])
_YS=_START_S[1]+_PR*(_START_M[1]-_START_S[1])
ENDIF
IF(_ZZSD[8]==1)
_ZS=_RFP-(_T*_DTI-_SDIS)*_PMZ
GOTOF _M_ST_POS
ENDIF
SBLON
N48 G0 G40 AX[_XX]=_XS AX[_YY]=_YS
IF(_SCHLIGRND==TRUE)
N60 G0 G42 AX[_XX]=_START_S[0] AX[_YY]=_START_S[1]
ENDIF
N65 G0 AX[_ZZ]=_RFP-_T*_DTI*_PMZ
SBLOF
EXECSTRING(_S_FFP1)
N70 G2 AX[_XX]=_START_E[0] AX[_YY]=_START_E[1] IP[_XX]=AC(_START_M[0]) IP[_YY]=AC(_START_M[1])
IF(_OPTIMIZE==FALSE)OR(_DRAN==TRUE)
IF(_RC<0)
N75 G1 AX[_XX]=_FASE_E[0] AX[_YY]=_FASE_E[1]
ELSE
N80 G3 AX[_XX]=_RUND_E[0] AX[_YY]=_RUND_E[1] IP[_XX]=AC(_RUND_M[0]) IP[_YY]=AC(_RUND_M[1])
ENDIF
ENDIF
ENDIF
IF(_MODE==2)AND(_SCHLIGRND==FALSE)
IF(_RC<0)
_RP=_R-(_USCH-_USCHI)*SIN(180-_PHI)
ELSE
_RP=_R/TAN(_ALFA/2)-(_USCH-_USCHI)*SIN(180-_PHI)
ENDIF
_GET_SCHLICHT_A:
_START_D=2
_START_E[0]=_RUM*COS(0*_PHI)-_RP/_NORM*(1-COS(_PHI))
_START_E[1]=_RUM*SIN(0*_PHI)+_RP/_NORM*SIN(_PHI)
_START_M[0]=_START_E[0]+_USCH*COS(_PHI/2)
_START_M[1]=_START_E[1]+_USCH*SIN(_PHI/2)
_START_S[0]=_START_M[0]+(_START_M[1]-_START_E[1])
_START_S[1]=_START_M[1]-(_START_M[0]-_START_E[0])
_GET_SCHLICHT_E:
IF(_RC<0)
_FASE_E[0]=_START_E[0] _FASE_E[1]=_START_E[1]
ELSE
_RUND_E[0]=_START_E[0] _RUND_E[1]=_START_E[1]
ENDIF
IF(_ZZSD[8]==1)
_PR=($P_TOOLR*_FAK1+$P_OFFN*_FAK2)/SQRT(ABS(POT(_START_M[0]-_START_S[0])+POT(_START_M[1]-_START_S[1])))
_XS=_START_S[0]+_PR*(_START_M[0]-_START_S[0])
_YS=_START_S[1]+_PR*(_START_M[1]-_START_S[1])
_ZS=_RFP-(_T*_DTI-_SDIS)*_PMZ
IF(S_DISC_CUTTER==TRUE)AND(_T==1)
REPEAT _GET_SCHLICHT_A2 _GET_SCHLICHT_E2
ENDIF
GOTOF _M_ST_POS
ENDIF
SBLON
IF(S_DISC_CUTTER)AND(_T==1)
_GET_SCHLICHT_A2:
_PR=($P_TOOLR*_FAK1+$P_OFFN*_FAK2)/SQRT(ABS(POT(_START_M[0]-_START_S[0])+POT(_START_M[1]-_START_S[1])))
_XS=_START_S[0]+_PR*(_START_M[0]-_START_S[0])
_YS=_START_S[1]+_PR*(_START_M[1]-_START_S[1])
_NORM3=SQRT(POT(_XS)+POT(_YS))
IF(_NORM3<=0)
_NORM3=1
ENDIF
_XS=_XS*(_PRAD+_SDIS+$P_TOOLR*_FAK1+$P_OFFN*_FAK2)/_NORM3
_YS=_YS*(_PRAD+_SDIS+$P_TOOLR*_FAK1+$P_OFFN*_FAK2)/_NORM3
_GET_SCHLICHT_E2:
N84 G0 G40 AX[_XX]=_XS AX[_YY]=_YS
ELSE
N85 G0 G42 AX[_XX]=_START_S[0] AX[_YY]=_START_S[1]
ENDIF
S_DIST=1
IF(S_DISC_CUTTER)
S_DIST=0
ENDIF
IF(_DTI>_SDIS)OR(_T==1)
N90 G0 AX[_ZZ]=_RFP-(_T*_DTI-_SDIS*S_DIST)*_PMZ
ENDIF
SBLOF
IF(S_DISC_CUTTER)AND(_T==1)
N91 G0 G42 AX[_XX]=_START_S[0] AX[_YY]=_START_S[1]
ENDIF
EXECSTRING(_S_FFP1)
N100 G2 AX[_XX]=_START_E[0] AX[_YY]=_START_E[1] AX[_ZZ]=_RFP-_T*_DTI*_PMZ IP[_XX]=AC(_START_M[0]) IP[_YY]=AC(_START_M[1])
ENDIF
FOR _J=_J0 TO _EBEN
_RIV=_PRAD-_J*_DEB
_RUV=_RIV/COS(_PHI/2)
_LP =2*_RUV*SIN(_PHI/2)
_RIV=_RIV-_DEB
IF(_RC<0)
_RP =_R+(_RUV-_RUM-(_EBEN-_J)*_DEB)/COS(_ALFA/2)
_RPZ =_RZ+(_RIV/COS(_PHI/2)-_RUM-(_EBEN-_J-1)*_DEB)/COS(_ALFA/2)
_RVF =_FAL+_WR+(_EBEN-_J)*_DEB
_RPFZ=_RVFZ+(_EBEN-_J-1)*_DEB
ELSE
_RP =(_R+(_EBEN-_J)*_DEB)/TAN(_ALFA/2)
_RPZ=_RZ+(_EBEN-_J-1)*_DEB
ENDIF
_ZIEL_S[0]=_RIV/COS(_PHI/2)*COS(0*_PHI)+_PRAD*2/_NORM*(1-COS(_PHI))
_ZIEL_S[1]=_RIV/COS(_PHI/2)*SIN(0*_PHI)-_PRAD*2/_NORM*SIN(_PHI)
_ZIEL_E[0]=_RIV/COS(_PHI/2)*(COS(0*_PHI)-_RP/_LP*(1-COS(_PHI)))
_ZIEL_E[1]=_RIV/COS(_PHI/2)*(SIN(0*_PHI)+_RP/_LP*SIN(_PHI))
_MUN_ACT=_MUN
FOR _I=0 TO _MUN_ACT
IF(_I<_MUN_ACT)OR(_J==_EBEN)
IF(_RC<0)
_KANT_S[0]=_FASE_E[0] _KANT_S[1]=_FASE_E[1]
_KANT_E[0]=_RUV*COS((_I+1)*_PHI)-_RP/_LP*_RUV*(COS((_I+1)*_PHI)-COS(_I*_PHI))
_KANT_E[1]=_RUV*SIN((_I+1)*_PHI)-_RP/_LP*_RUV*(SIN((_I+1)*_PHI)-SIN(_I*_PHI))
_FASE_S[0]=_KANT_E[0] _FASE_S[1]=_KANT_E[1]
_FASE_E[0]=_RUV*COS((_I+1)*_PHI)+_RP/_LP*_RUV*(COS((_I+2)*_PHI)-COS((_I+1)*_PHI))
_FASE_E[1]=_RUV*SIN((_I+1)*_PHI)+_RP/_LP*_RUV*(SIN((_I+2)*_PHI)-SIN((_I+1)*_PHI))
IF(_RUNDUNG==TRUE)AND(_RVF>0)
_S1_A[0]=_KANT_S[0] _S1_A[1]=_KANT_S[1] _S1_E[0]=_KANT_E[0] _S1_E[1]=_KANT_E[1]
_S2_A[0]=_FASE_S[0] _S2_A[1]=_FASE_S[1] _S2_E[0]=_FASE_E[0] _S2_E[1]=_FASE_E[1]
_RADIUS =_RVF
REPEAT _CALC_RND_A _CALC_RND_E
_FRND1_S[0]=_KR_A[0] _FRND1_S[1]=_KR_A[1] _FRND1_E[0]=_KR_E[0] _FRND1_E[1]=_KR_E[1] _FRND1_M[0]=_KR_M[0] _FRND1_M[1]=_KR_M[1]
_KANT_E[0]=_FRND1_S[0] _KANT_E[1]=_FRND1_S[1]
_FASE_S[0]=_FRND1_E[0] _FASE_S[1]=_FRND1_E[1]
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_KANT_S[0] _S1_A[1]=_KANT_S[1] _S1_E[0]=_KANT_E[0] _S1_E[1]=_KANT_E[1] _S1_G=1
REPEAT _MOVE_A _MOVE_E
_KANT_S[0]=_FASE_E[0] _KANT_S[1]=_FASE_E[1]
_KANT_E[0]=_RUV*COS((_I+2)*_PHI)-_RP/_LP*_RUV*(COS((_I+2)*_PHI)-COS((_I+1)*_PHI))
_KANT_E[1]=_RUV*SIN((_I+2)*_PHI)-_RP/_LP*_RUV*(SIN((_I+2)*_PHI)-SIN((_I+1)*_PHI))
_S1_A[0]=_FASE_S[0] _S1_A[1]=_FASE_S[1] _S1_E[0]=_FASE_E[0] _S1_E[1]=_FASE_E[1]
_S2_A[0]=_KANT_S[0] _S2_A[1]=_KANT_S[1] _S2_E[0]=_KANT_E[0] _S2_E[1]=_KANT_E[1]
_RADIUS =_RVF
REPEAT _CALC_RND_A _CALC_RND_E
_FRND2_S[0]=_KR_A[0] _FRND2_S[1]=_KR_A[1] _FRND2_E[0]=_KR_E[0] _FRND2_E[1]=_KR_E[1] _FRND2_M[0]=_KR_M[0] _FRND2_M[1]=_KR_M[1]
_FASE_E[0]=_FRND2_S[0] _FASE_E[1]=_FRND2_S[1]
_KANT_S[0]=_FRND2_E[0] _KANT_S[1]=_FRND2_E[1]
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_FRND1_S[0] _S1_A[1]=_FRND1_S[1] _S1_E[0]=_FRND1_E[0] _S1_E[1]=_FRND1_E[1]
_S1_M[0]=_FRND1_M[0] _S1_M[1]=_FRND1_M[1] _S1_G=3
REPEAT _MOVE_A _MOVE_E
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_FASE_S[0] _S1_A[1]=_FASE_S[1] _S1_E[0]=_FASE_E[0] _S1_E[1]=_FASE_E[1] _S1_G=1
REPEAT _MOVE_A _MOVE_E
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_FRND2_S[0] _S1_A[1]=_FRND2_S[1] _S1_E[0]=_FRND2_E[0] _S1_E[1]=_FRND2_E[1]
_S1_M[0]=_FRND2_M[0] _S1_M[1]=_FRND2_M[1] _S1_G=3
REPEAT _MOVE_A _MOVE_E
_FASE_E[0]=_FRND2_E[0] _FASE_E[1]=_FRND2_E[1]
ELSE
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_KANT_S[0] _S1_A[1]=_KANT_S[1] _S1_E[0]=_KANT_E[0] _S1_E[1]=_KANT_E[1] _S1_G=1
REPEAT _MOVE_A _MOVE_E
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_FASE_S[0] _S1_A[1]=_FASE_S[1] _S1_E[0]=_FASE_E[0] _S1_E[1]=_FASE_E[1] _S1_G=1
REPEAT _MOVE_A _MOVE_E
ENDIF
ELSE
IF(_OPTIMIZE==FALSE)
_KANT_E[0]=_RUV*COS((_I+1)*_PHI)
_KANT_E[1]=_RUV*SIN((_I+1)*_PHI)
_RUND_E[0]=_RUV*COS((_I+1)*_PHI)+_RP/_LP*_RUV*(COS((_I+2)*_PHI)-COS((_I+1)*_PHI))
_RUND_E[1]=_RUV*SIN((_I+1)*_PHI)+_RP/_LP*_RUV*(SIN((_I+2)*_PHI)-SIN((_I+1)*_PHI))
N110 G1 AX[_XX]=_KANT_E[0] AX[_YY]=_KANT_E[1] RND=_R+(_EBEN-_J)*_DEB
ELSE
_KANT_S[0]=_RUND_E[0] _KANT_S[1]=_RUND_E[1]
_KANT_E[0]=_RUV*COS((_I+1)*_PHI)-_RP/_LP*_RUV*(COS((_I+1)*_PHI)-COS(_I*_PHI))
_KANT_E[1]=_RUV*SIN((_I+1)*_PHI)-_RP/_LP*_RUV*(SIN((_I+1)*_PHI)-SIN(_I*_PHI))
_RUND_M[0]=(_RUM-_R/SIN(_ALFA/2))*COS((_I+1)*_PHI)
_RUND_M[1]=(_RUM-_R/SIN(_ALFA/2))*SIN((_I+1)*_PHI)
_RUND_S[0]=_KANT_E[0] _RUND_S[1]=_KANT_E[1]
_RUND_E[0]=_RUV*COS((_I+1)*_PHI)+_RP/_LP*_RUV*(COS((_I+2)*_PHI)-COS((_I+1)*_PHI))
_RUND_E[1]=_RUV*SIN((_I+1)*_PHI)+_RP/_LP*_RUV*(SIN((_I+2)*_PHI)-SIN((_I+1)*_PHI))
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_KANT_S[0] _S1_A[1]=_KANT_S[1] _S1_E[0]=_KANT_E[0] _S1_E[1]=_KANT_E[1] _S1_G=1
REPEAT _MOVE_A _MOVE_E
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_RUND_S[0] _S1_A[1]=_RUND_S[1] _S1_E[0]=_RUND_E[0] _S1_E[1]=_RUND_E[1]
_S1_M[0]=_RUND_M[0] _S1_M[1]=_RUND_M[1] _S1_G=3
REPEAT _MOVE_A _MOVE_E
ENDIF
ENDIF
IF(_J==_EBEN)
_MUN_ACT=_NUM-1
ENDIF
ELSE
IF(_RC<0)
_KANT_S[0]=_FASE_E[0] _KANT_S[1]=_FASE_E[1]
ELSE
_KANT_S[0]=_RUND_E[0] _KANT_S[1]=_RUND_E[1]
ENDIF
_KANT_E[0]=_RUV*COS((_I+1)*_PHI)+_PRAD*2/_NORM*(COS((_I+1)*_PHI)-COS(_I*_PHI))
_KANT_E[1]=_RUV*SIN((_I+1)*_PHI)+_PRAD*2/_NORM*(SIN((_I+1)*_PHI)-SIN(_I*_PHI))
_S1_A[0]=_KANT_S[0] _S1_A[1]=_KANT_S[1] _S1_E[0]=_KANT_E[0] _S1_E[1]=_KANT_E[1] _S1_G=1
_S2_A[0]=_ZIEL_S[0] _S2_A[1]=_ZIEL_S[1] _S2_E[0]=_ZIEL_E[0] _S2_E[1]=_ZIEL_E[1] _S2_G=1
REPEAT _SCHNITT_A _SCHNITT_E
_SP1[0]=_S[0] _SP1[1]=_S[1] _SP1[2]=_SII
_KANT_E[0]=_SP1[0] _KANT_E[1]=_SP1[1]
_ZIEL_S[0]=_SP1[0] _ZIEL_S[1]=_SP1[1]
IF(_RC<0)
IF(_RZ==0)
_KANT_E[0]=_RUV*COS((_I+1)*_PHI)-_RP/_LP*_RUV*(COS((_I+1)*_PHI)-COS(_I*_PHI))
_KANT_E[1]=_RUV*SIN((_I+1)*_PHI)-_RP/_LP*_RUV*(SIN((_I+1)*_PHI)-SIN(_I*_PHI))
_FASE_S[0]=_KANT_E[0] _FASE_S[1]=_KANT_E[1]
_FASE_E[0]=_RUV*COS((_NUM)*_PHI)+_RP/_LP*_RUV*(COS((_NUM+1)*_PHI)-COS((_NUM)*_PHI))
_FASE_E[1]=_RUV*SIN((_NUM)*_PHI)+_RP/_LP*_RUV*(SIN((_NUM+1)*_PHI)-SIN((_NUM)*_PHI))
_S1_A[0]=_FASE_S[0] _S1_A[1]=_FASE_S[1] _S1_E[0]=_FASE_E[0] _S1_E[1]=_FASE_E[1] _S1_G=1
_S2_A[0]=_ZIEL_S[0] _S2_A[1]=_ZIEL_S[1] _S2_E[0]=_ZIEL_E[0] _S2_E[1]=_ZIEL_E[1] _S2_G=1
REPEAT _SCHNITT_A _SCHNITT_E
_SP1[0]=_S[0] _SP1[1]=_S[1] _SP1[2]=_SII
_FASE_E[0]=_SP1[0] _FASE_E[1]=_SP1[1]
ELSE
_KANT_E[0]=_SP1[0]-_RPZ/_NORM*(COS((_I+1)*_PHI)-COS(_I*_PHI))
_KANT_E[1]=_SP1[1]-_RPZ/_NORM*(SIN((_I+1)*_PHI)-SIN(_I*_PHI))
_FASE_S[0]=_KANT_E[0] _FASE_S[1]=_KANT_E[1]
_FASE_E[0]=_SP1[0]+_RPZ/_NORM*(COS((_NUM+1)*_PHI)-COS((_NUM)*_PHI))
_FASE_E[1]=_SP1[1]+_RPZ/_NORM*(SIN((_NUM+1)*_PHI)-SIN((_NUM)*_PHI))
ENDIF
IF(_RUNDUNG== TRUE)AND(_RVF>0)
_S1_A[0]=_KANT_S[0] _S1_A[1]=_KANT_S[1] _S1_E[0]=_KANT_E[0] _S1_E[1]=_KANT_E[1]
_S2_A[0]=_FASE_S[0] _S2_A[1]=_FASE_S[1] _S2_E[0]=_FASE_E[0] _S2_E[1]=_FASE_E[1]
_RADIUS =_RPFZ
REPEAT _CALC_RND_A _CALC_RND_E
_FRND1_S[0]=_KR_A[0] _FRND1_S[1]=_KR_A[1] _FRND1_E[0]=_KR_E[0] _FRND1_E[1]=_KR_E[1] _FRND1_M[0]=_KR_M[0] _FRND1_M[1]=_KR_M[1]
_KANT_E[0]=_FRND1_S[0] _KANT_E[1]=_FRND1_S[1]
_FASE_S[0]=_FRND1_E[0] _FASE_S[1]=_FRND1_E[1]
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_KANT_S[0] _S1_A[1]=_KANT_S[1] _S1_E[0]=_KANT_E[0] _S1_E[1]=_KANT_E[1] _S1_G=1
REPEAT _MOVE_A _MOVE_E
_ZIEL_S[0]=_FASE_E[0] _ZIEL_S[1]=_FASE_E[1]
_S1_A[0]=_FASE_S[0] _S1_A[1]=_FASE_S[1] _S1_E[0]=_FASE_E[0] _S1_E[1]=_FASE_E[1]
_S2_A[0]=_ZIEL_S[0] _S2_A[1]=_ZIEL_S[1] _S2_E[0]=_ZIEL_E[0] _S2_E[1]=_ZIEL_E[1]
_RADIUS =_RPFZ
REPEAT _CALC_RND_A _CALC_RND_E
_FRND2_S[0]=_KR_A[0] _FRND2_S[1]=_KR_A[1] _FRND2_E[0]=_KR_E[0] _FRND2_E[1]=_KR_E[1] _FRND2_M[0]=_KR_M[0] _FRND2_M[1]=_KR_M[1]
_FASE_E[0]=_FRND2_S[0] _FASE_E[1]=_FRND2_S[1]
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_FRND1_S[0] _S1_A[1]=_FRND1_S[1] _S1_E[0]=_FRND1_E[0] _S1_E[1]=_FRND1_E[1]
_S1_M[0]=_FRND1_M[0] _S1_M[1]=_FRND1_M[1] _S1_G=3
REPEAT _MOVE_A _MOVE_E
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_FASE_S[0] _S1_A[1]=_FASE_S[1] _S1_E[0]=_FASE_E[0] _S1_E[1]=_FASE_E[1] _S1_G=1
REPEAT _MOVE_A _MOVE_E
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_FRND2_S[0] _S1_A[1]=_FRND2_S[1] _S1_E[0]=_FRND2_E[0] _S1_E[1]=_FRND2_E[1]
_S1_M[0]=_FRND2_M[0] _S1_M[1]=_FRND2_M[1] _S1_G=3
REPEAT _MOVE_A _MOVE_E
_FASE_E[0]=_FRND2_E[0] _FASE_E[1]=_FRND2_E[1]
ELSE
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_KANT_S[0] _S1_A[1]=_KANT_S[1] _S1_E[0]=_KANT_E[0] _S1_E[1]=_KANT_E[1] _S1_G=1
REPEAT _MOVE_A _MOVE_E
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_FASE_S[0] _S1_A[1]=_FASE_S[1] _S1_E[0]=_FASE_E[0] _S1_E[1]=_FASE_E[1] _S1_G=1
REPEAT _MOVE_A _MOVE_E
ENDIF
ELSE
IF(_OPTIMIZE==FALSE)
N120 G1 AX[_XX]=_KANT_E[0] AX[_YY]=_KANT_E[1] RND=_R+(_EBEN-_J-0.5)*_DEB
ELSE
_S1_A[0]=_KANT_S[0] _S1_A[1]=_KANT_S[1] _S1_E[0]=_KANT_E[0] _S1_E[1]=_KANT_E[1]
_S2_A[0]=_ZIEL_S[0] _S2_A[1]=_ZIEL_S[1] _S2_E[0]=_ZIEL_E[0] _S2_E[1]=_ZIEL_E[1]
_RADIUS =_RPZ
REPEAT _CALC_RND_A _CALC_RND_E
_RUND_S[0]=_KR_A[0] _RUND_S[1]=_KR_A[1] _RUND_E[0]=_KR_E[0] _RUND_E[1]=_KR_E[1] _RUND_M[0]=_KR_M[0] _RUND_M[1]=_KR_M[1]
_KANT_E[0]=_RUND_S[0] _KANT_E[1]=_RUND_S[1]
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_KANT_S[0] _S1_A[1]=_KANT_S[1] _S1_E[0]=_KANT_E[0] _S1_E[1]=_KANT_E[1] _S1_G=1
REPEAT _MOVE_A _MOVE_E
_RADIUS=_PRAD+_SDIS
_S1_A[0]=_RUND_S[0] _S1_A[1]=_RUND_S[1] _S1_E[0]=_RUND_E[0] _S1_E[1]=_RUND_E[1]
_S1_M[0]=_RUND_M[0] _S1_M[1]=_RUND_M[1] _S1_G=3
REPEAT _MOVE_A _MOVE_E
ENDIF
ENDIF
ENDIF
ENDFOR
ENDFOR
S_DIST=_SDIS
IF(S_DISC_CUTTER)AND((_T==1)OR((_T-1)*_DTI<2*_SDIS))
S_DIST=ABS((_T-1)*_DTI/2)
ENDIF
IF(_RC<0)
IF(_OPTIMIZE==FALSE)OR(SQRT(POT(_FASE_E[0])+POT(_FASE_E[1]))<_PRAD+_SDIS)
_NORM3=SQRT(POT((_FASE_E[0]-_FASE_S[0]))+POT((_FASE_E[1]-_FASE_S[1])))
_KANT_S[0]=_FASE_E[0] _KANT_S[1]=_FASE_E[1]
_KANT_E[0]=_KANT_S[0]+_USCHI/_NORM3*(_FASE_E[0]-_FASE_S[0])
_KANT_E[1]=_KANT_S[1]+_USCHI/_NORM3*(_FASE_E[1]-_FASE_S[1])
N130 G1 AX[_XX]=_KANT_E[0] AX[_YY]=_KANT_E[1] AX[_ZZ]=_RFP-(_T*_DTI-S_DIST)*_PMZ
ELSE
_KANT_S[0]=_WPKT[0] _KANT_S[1]=_WPKT[1]
ENDIF
IF(_MODE==1)AND(_T<>_TIEF)
_KANT_S[0]=_KANT_E[0] _KANT_S[1]=_KANT_E[1]
_KANT_E[0]=_START_S[0] _KANT_E[1]=_START_S[1]
EXECSTRING(_S_FFP1)
N140 G1 AX[_XX]=_KANT_E[0] AX[_YY]=_KANT_E[1] AX[_ZZ]=_RFP-(_T*_DTI-S_DIST)*_PMZ
ENDIF
ELSE
IF(_OPTIMIZE==FALSE)
_RUND_M[0]=(_RUM-_R/SIN(_ALFA/2))*COS(0*_PHI)
_RUND_M[1]=(_RUM-_R/SIN(_ALFA/2))*SIN(0*_PHI)
_RUND_S[0]=_KANT_E[0] _RUND_S[1]=_KANT_E[1]
_RUND_E[0]=_RUV*COS(0*_PHI)+_RP/_LP*_RUV*(COS(1*_PHI)-COS(0*_PHI))
_RUND_E[1]=_RUV*SIN(0*_PHI)+_RP/_LP*_RUV*(SIN(1*_PHI)-SIN(0*_PHI))
_DEPART_D=2
_DEPART_S[0]=_RUND_E[0] _DEPART_S[1]=_RUND_E[1]
_DEPART_M[0]=_DEPART_S[0]+_USCHI*COS(_PHI/2)
_DEPART_M[1]=_DEPART_S[1]+_USCHI*SIN(_PHI/2)
_DEPART_E[0]=_DEPART_M[0]+_USCHI*(COS(_PHI)-1)/SQRT(2-2*COS(_PHI))
_DEPART_E[1]=_DEPART_M[1]+_USCHI*SIN(_PHI)/SQRT(2-2*COS(_PHI))
_KANT_S[0]=_DEPART_E[0] _KANT_S[1]=_DEPART_E[1]
N150 G1 AX[_XX]=_DEPART_S[0] AX[_YY]=_DEPART_S[1]
N155 G2 AX[_XX]=_DEPART_E[0] AX[_YY]=_DEPART_E[1] AX[_ZZ]=_RFP-(_T*_DTI-S_DIST)*_PMZ IP[_XX]=AC(_DEPART_M[0]) IP[_YY]=AC(_DEPART_M[1])
ELSE
IF(SQRT(POT(_RUND_E[0])+POT(_RUND_E[1]))<_PRAD+_SDIS)
_DEPART_D=2
_DEPART_S[0]=_RUND_E[0] _DEPART_S[1]=_RUND_E[1]
_DEPART_M[0]=_DEPART_S[0]+_USCHI*COS(_PHI/2)
_DEPART_M[1]=_DEPART_S[1]+_USCHI*SIN(_PHI/2)
_DEPART_E[0]=_DEPART_M[0]+_USCHI*(COS(_PHI)-1)/SQRT(2-2*COS(_PHI))
_DEPART_E[1]=_DEPART_M[1]+_USCHI*SIN(_PHI)/SQRT(2-2*COS(_PHI))
_KANT_S[0]=_DEPART_E[0] _KANT_S[1]=_DEPART_E[1]
N200 G2 AX[_XX]=_DEPART_E[0] AX[_YY]=_DEPART_E[1] AX[_ZZ]=_RFP-(_T*_DTI-S_DIST)*_PMZ IP[_XX]=AC(_DEPART_M[0]) IP[_YY]=AC(_DEPART_M[1])
ELSE
_KANT_S[0]=_WPKT[0] _KANT_S[1]=_WPKT[1]
ENDIF
ENDIF
IF((_MODE==1)AND(_T<>_TIEF))OR((_MODE==2)AND(_FALG==TRUE)AND(_T==_TIEF-1))OR((S_DISC_CUTTER==TRUE)AND(_T==_TIEF))
_NORM1=SQRT(POT(_DEPART_M[0]-_DEPART_S[0])+POT(_DEPART_M[1]-_DEPART_S[1]))
IF(_MODE==2)AND(((_FALG==TRUE)AND(_T==_TIEF-1))OR((S_DISC_CUTTER==TRUE)AND(_T==_TIEF)))
G0 G40 AX[_XX]=_KANT_S[0]+$P_TOOLR*_FAK1*(_DEPART_M[1]-_DEPART_S[1])/_NORM1 AX[_YY]=_KANT_S[1]-$P_TOOLR*_FAK1*(_DEPART_M[0]-_DEPART_S[0])/_NORM1
IF(S_DISC_CUTTER==TRUE)AND(_T==_TIEF)
REPEAT _GET_SCHLICHT_A _GET_SCHLICHT_E
REPEAT _GET_SCHLICHT_A2 _GET_SCHLICHT_E2
_START_S[0]=_XS
_START_S[1]=_YS
ELSE
REPEAT _GET_START_A _GET_START_E
_PR=($P_TOOLR*_FAK1+$P_OFFN*_FAK2)/SQRT(ABS(POT(_START_M[0]-_START_S[0])+POT(_START_M[1]-_START_S[1])))
_START_S[0]=_START_S[0]+_PR*(_START_M[0]-_START_S[0])
_START_S[1]=_START_S[1]+_PR*(_START_M[1]-_START_S[1])
ENDIF
_KANT_S[0]=$P_EP[_XX] _KANT_S[1]=$P_EP[_YY]
ENDIF
_KANT_E[0]=_START_S[0] _KANT_E[1]=_START_S[1]
_NORM2=SQRT(POT(_KANT_E[0]-_KANT_S[0])+POT(_KANT_E[1]-_KANT_S[1]))
_GAMA=ACOS(((_DEPART_M[0]-_DEPART_S[0])/_NORM1)*((_KANT_E[0]-_KANT_S[0])/_NORM2)+((_DEPART_M[1]-_DEPART_S[1])/_NORM1)*((_KANT_E[1]-_KANT_S[1])/_NORM2))
IF(_GAMA<=90)
SBLON
N210 G0 AX[_XX]=_KANT_E[0] AX[_YY]=_KANT_E[1] AX[_ZZ]=_RFP-(_T*_DTI-S_DIST)*_PMZ
SBLOF
ELSE
_DEPART_D=2
_DEPART_S[0]=_KANT_S[0] _DEPART_S[1]=_KANT_S[1]
_DEPART_E[0]=_KANT_E[0] _DEPART_E[1]=_KANT_E[1]
_DEPART_M[0]=_DEPART_S[0]+0.5*(_DEPART_E[0]-_DEPART_S[0])
_DEPART_M[1]=_DEPART_S[1]+0.5*(_DEPART_E[1]-_DEPART_S[1])
EXECSTRING(_S_FFC)
N215 G2 AX[_XX]=_DEPART_E[0] AX[_YY]=_DEPART_E[1] AX[_ZZ]=_RFP-(_T*_DTI-S_DIST)*_PMZ IP[_XX]=AC(_DEPART_M[0]) IP[_YY]=AC(_DEPART_M[1])
EXECSTRING(_S_FFP1)
ENDIF
ENDIF
ENDIF
ENDFOR
SBLON
IF(S_IS_ST==FALSE)
N250 G0 AX[_ZZ]=_RTP
ENDIF
SBLOF
IF(_MODE==2)AND(S_DISC_CUTTER==FALSE)
IF(_RC<0)
_FASE_S[0]=_KANT_E[0] _FASE_S[1]=_KANT_E[1]
_FASE_E[0]=_FASE_S[0]+(_KANT_E[1]-_KANT_S[1])
_FASE_E[1]=_FASE_S[1]-(_KANT_E[0]-_KANT_S[0])
_NORM3=SQRT(POT((_FASE_E[0]-_FASE_S[0]))+POT((_FASE_E[1]-_FASE_S[1])))
_FASE_E[0]=_FASE_S[0]+(_USCHI-_SDIS)/_NORM3*(_FASE_E[0]-_FASE_S[0])
_FASE_E[1]=_FASE_S[1]+(_USCHI-_SDIS)/_NORM3*(_FASE_E[1]-_FASE_S[1])
SBLON
N300 G0 G40 AX[_XX]=_FASE_E[0] AX[_YY]=_FASE_E[1]
SBLOF
ELSE
_NORM3=SQRT(POT((_DEPART_E[0]-_DEPART_M[0]))+POT((_DEPART_E[1]-_DEPART_M[1])))
_KANT_E[0]=_DEPART_E[0]+(_USCHI-_SDIS)/_NORM3*(_DEPART_M[0]-_DEPART_E[0])
_KANT_E[1]=_DEPART_E[1]+(_USCHI-_SDIS)/_NORM3*(_DEPART_M[1]-_DEPART_E[1])
SBLON
N310 G0 G40 AX[_XX]=_KANT_E[0] AX[_YY]=_KANT_E[1]
SBLOF
ENDIF
ENDIF
ENDIF
IF((_ARTIS[0]==11) OR (_ARTIS[11]==3))
M=QU(_ARTIS[8])
ENDIF
SBLON
IF(S_IS_ST==FALSE)
N600 G0 G90 AX[_ZZ]=_RTP
ENDIF
SBLOF
$P_CYCFRAME=$P_CYCFRAME:CRPL(0,-_STAFA*_STA)
IF(_MIRR)
$P_CYCFRAME=$P_CYCFRAME:CMIRROR(_YY)
IF(_NUM<=2)
$P_CYCFRAME=$P_CYCFRAME:CRPL(0,-180)
ENDIF
ENDIF
IF(_NUM<=2)
$P_CYCFRAME=$P_CYCFRAME:CRPL(0,90)
ELSE
$P_CYCFRAME=$P_CYCFRAME:CRPL(0,-180/_NUM)
ENDIF
IF(_VARI _DEC1==5)
IF(_ZZSD[8]==0)
CYCLE203(0,_FS,_ZFS)
ENDIF
ENDIF
IF(($P_MC)AND(_SC_PC==1))
SBLON
N610 AX[_XX]=0 AX[_YY]=0
SBLOF
ENDIF
IF(_TIEF>1)
ENDIF
$P_CYCFRAME=_RE_CYCFR
SBLON
RET
_MOVE_A:
IF(_OPTIMIZE==TRUE)
_S2_A[0]=-_RADIUS _S2_A[1]=0 _S2_E[0]=-_RADIUS _S2_E[1]=0 _S1_M[0]=0 _S1_M[1]=0 _S2_G=3
REPEAT _SCHNITT_A _SCHNITT_E
_SP1[0]=_S[0] _SP1[1]=_S[1] _SP1[2]=_SII
_KR_A[0]=_S1_E[0] _KR_A[1]=_S1_E[1] _KR_E[0]=_S1_A[0] _KR_E[1]=_S1_A[1]
_S1_A[0]=_KR_A[0] _S1_A[1]=_KR_A[1] _S1_E[0]=_KR_E[0] _S1_E[1]=_KR_E[1]
IF(_S1_G==2)
_S1_G=3
ENDIF
IF(_S1_G==3)
_S1_G=2
ENDIF
REPEAT _SCHNITT_A _SCHNITT_E
_SP2[0]=_S[0] _SP2[1]=_S[1] _SP2[2]=_SII
_KR_A[0]=_S1_E[0] _KR_A[1]=_S1_E[1] _KR_E[0]=_S1_A[0] _KR_E[1]=_S1_A[1]
_S1_A[0]=_KR_A[0] _S1_A[1]=_KR_A[1] _S1_E[0]=_KR_E[0] _S1_E[1]=_KR_E[1]
_DIST_E=SQRT(POT(_S1_E[0])+POT(_S1_E[1]))
IF(_S1_G==2)
_S1_G=3
ENDIF
IF(_S1_G==3)
_S1_G=2
ENDIF
ENDIF
IF(_OPTIMIZE==FALSE)OR(_DRIN==TRUE)
IF(_OPTIMIZE==FALSE)OR(_SP1[2]==0)
_VPKT[0]=_S1_E[0] _VPKT[1]=_S1_E[1]
REPEAT _CUT_A _CUT_E
ELSE
_VPKT[0]=_SP1[0] _VPKT[1]=_SP1[1]
REPEAT _CUT_A _CUT_E
IF(_DIST_E<_RADIUS)
IF(_SP1[0]<>_SP2[0])OR(_SP1[1]<>_SP2[1])
EXECSTRING(_S_FFC)
N400 G3 AX[_XX]=_SP2[0] AX[_YY]=_SP2[1] IP[_XX]=AC(0) IP[_YY]=AC(0)
EXECSTRING(_S_FFP1)
ENDIF
_VPKT[0]=_S1_E[0] _VPKT[1]=_S1_E[1]
REPEAT _CUT_A _CUT_E
ELSE
_DRIN=FALSE
ENDIF
ENDIF
ELSE
IF(_SP1[2])
EXECSTRING(_S_FFC)
N410 G3 AX[_XX]=_SP1[0] AX[_YY]=_SP1[1] IP[_XX]=AC(0) IP[_YY]=AC(0)
EXECSTRING(_S_FFP1)
IF(_DIST_E<_RADIUS)
_VPKT[0]=_S1_E[0] _VPKT[1]=_S1_E[1]
REPEAT _CUT_A _CUT_E
_DRIN=TRUE
ELSE
_VPKT[0]=_SP2[0] _VPKT[1]=_SP2[1]
REPEAT _CUT_A _CUT_E
ENDIF
ELSE
ENDIF
ENDIF
_MOVE_E:
_CUT_A:
EXECSTRING(_S_FFP1)
IF(_S1_G==1)
N510 G1 AX[_XX]=_VPKT[0] AX[_YY]=_VPKT[1]
ENDIF
IF(_S1_G==2)
N520 G2 AX[_XX]=_VPKT[0] AX[_YY]=_VPKT[1] IP[_XX]=AC(_S1_M[0]) IP[_YY]=AC(_S1_M[1])
ENDIF
IF(_S1_G==3)
N530 G3 AX[_XX]=_VPKT[0] AX[_YY]=_VPKT[1] IP[_XX]=AC(_S1_M[0]) IP[_YY]=AC(_S1_M[1])
ENDIF
_WPKT[0]=_VPKT[0] _WPKT[1]=_VPKT[1]
_CUT_E:
_CALC_RND_A:
_NORM1=SQRT(POT(_S1_E[0]-_S1_A[0])+POT(_S1_E[1]-_S1_A[1]))
_NORM2=SQRT(POT(_S2_E[0]-_S2_A[0])+POT(_S2_E[1]-_S2_A[1]))
_GAMA =180-ACOS(((_S1_E[0]-_S1_A[0])/_NORM1)*((_S2_E[0]-_S2_A[0])/_NORM2)+((_S1_E[1]-_S1_A[1])/_NORM1)*((_S2_E[1]-_S2_A[1])/_NORM2))
_KR_A[0]=_S1_E[0]-(_RADIUS/TAN(_GAMA/2))/SQRT(POT(_S1_E[0]-_S1_A[0])+POT(_S1_E[1]-_S1_A[1]))*(_S1_E[0]-_S1_A[0])
_KR_A[1]=_S1_E[1]-(_RADIUS/TAN(_GAMA/2))/SQRT(POT(_S1_E[0]-_S1_A[0])+POT(_S1_E[1]-_S1_A[1]))*(_S1_E[1]-_S1_A[1])
_KR_E[0]=_S2_A[0]+(_RADIUS/TAN(_GAMA/2))/SQRT(POT(_S2_E[0]-_S2_A[0])+POT(_S2_E[1]-_S2_A[1]))*(_S2_E[0]-_S2_A[0])
_KR_E[1]=_S2_A[1]+(_RADIUS/TAN(_GAMA/2))/SQRT(POT(_S2_E[0]-_S2_A[0])+POT(_S2_E[1]-_S2_A[1]))*(_S2_E[1]-_S2_A[1])
_KR_M[0]=_S1_E[0]+(_RADIUS/SIN(_GAMA/2))/(2*_RADIUS/TAN(_ALFA/2)*COS(_GAMA/2))*(_KR_A[0]-_S1_E[0]+_KR_E[0]-_S2_A[0])
_KR_M[1]=_S1_E[1]+(_RADIUS/SIN(_GAMA/2))/(2*_RADIUS/TAN(_ALFA/2)*COS(_GAMA/2))*(_KR_A[1]-_S1_E[1]+_KR_E[1]-_S2_A[1])
_CALC_RND_E:
_SCHNITT_A:
_KT[0,3]=_S1_A[0] _KT[0,4]=_S1_A[1] _KT[0,5]=_S1_E[0] _KT[0,6]=_S1_E[1]
_KT[1,3]=_S2_A[0] _KT[1,4]=_S2_A[1] _KT[1,5]=_S2_E[0] _KT[1,6]=_S2_E[1]
_KT[0,9]=_S1_M[0] _KT[0,10]=_S1_M[1] _KT[0,2]=_S1_G
_KT[1,9]=_S2_M[0] _KT[1,10]=_S2_M[1] _KT[1,2]=_S2_G
_SII=INTERSEC(_KT[0],_KT[1],_S,1)
_SCHNITT_E:
_M_ST_POS:
$AC_MEAS_VALID=0
$AC_MEAS_TYPE=24
$AC_MEAS_P1_COORD=0
$AC_MEAS_P2_COORD=1
$AA_MEAS_POINT1[_XX]=_XS
$AA_MEAS_POINT1[_YY]=_YS
$AA_MEAS_POINT1[_ZZ]=_ZS
_ERR=MEASURE()
_SC_POS[3]=SQRT(ABS(POT($AA_MEAS_POINT2[_XX])+POT($AA_MEAS_POINT2[_YY])))
$P_CYCFRAME=INVFRAME(_RE_CYCFR):$P_CYCFRAME:CTRANS(_XX,_XS,_YY,_YS,_ZZ,_ZS)
_SC_POS[0]=$P_CYCFRAME[_XX,TR]
_SC_POS[1]=$P_CYCFRAME[_YY,TR]
_SC_POS[2]=$P_CYCFRAME[_ZZ,TR]
$P_CYCFRAME=_RE_CYCFR
RET
_FEHL1:STOPRE
N707901 SETAL(61002)
RET
_FEHL2:STOPRE
N707902 SETAL(61003)
RET
_FEHL3:STOPRE
N707903 SETAL(61010)
RET
_FEHL4:STOPRE
N707904 SETAL(61012)
RET
_FEHL5:STOPRE
N707905 SETAL(61102)
RET
_FEHL6:STOPRE
N707906 SETAL(61112)
RET
_FEHL7:STOPRE
N707907 SETAL(61222)
RET
_FEHL8:STOPRE
N707908 SETAL(61246)
RET
_FEHL9:STOPRE
N707909 SETAL(61247)
RET
_FEHL10:STOPRE
N707910 SETAL(61248)
RET
_FEHL11:STOPRE
N707911 SETAL(61249)
RET
_FEHL12:STOPRE
N707912 SETAL(61250)
RET
_FEHL13:STOPRE
N707913 SETAL(61251)
RET
_FEHL14:STOPRE
N707914 SETAL(61252)
RET
_FEHL15: STOPRE
N707915 SETAL(62106)
RET
_FEHL16:STOPRE
N707916 SETAL(61024,"(SD 55230)")
RET
_FEHL17: STOPRE
N707917 SETAL(61019,"(_GMODE: dec3)")
RET
_FEHL18: STOPRE
N707918 SETAL(61019," R1/FS1 ")
RET
_FEHL19: STOPRE
N707919 SETAL(61158)
RET
_FEHL20: STOPRE
N707920 SETAL(61019,"(_RC)")
RET
_FEHL21:STOPRE
N707921 SETAL(61019,"(_MIDA)")
RET
_FEHL22: STOPRE
N707922 SETAL(61155)
RET
_FEHL23: STOPRE
N707923 SETAL(61019,"(_AMODE: dec1)")
RET
_FEHL24: STOPRE
N707924 SETAL(61101)
RET
_FEHL25: STOPRE
N707925 SETAL(61019,"(_AMODE: dec3)")
RET
_FEHL26: STOPRE
N707926 SETAL(61159)
RET
_FEHL27: STOPRE
N707927 SETAL(61156)
RET
_FEHL28: STOPRE
N707928 SETAL(61019," Z0/Z1 ")
RET
_FEHL29: STOPRE
N707929 SETAL(61216)
RET
_FEHL30: STOPRE
N707930 SETAL(61604)
RET
_FEHL31: STOPRE
N707931 SETAL(61711)
RET
_FEHL39: STOPRE
N707939 SETAL(61026,"TRACYL (TRAFO_TYPE=513)")
RET
_FEHL40: STOPRE
N707940 SETAL(61026,"TRACYL (TRAFO_TYPE=514 MODE=1)")
RET
