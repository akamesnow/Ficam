PROC CYCLE373T SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 02.06.18.00 Jun 08, 2009
;ISO-T pattern repeating (G73)
DEF AXIS _XX,_ZZ
DEF INT _ABC=2,_COUN,_G40,_ERR,_PLAN,_G73,_G91,_TEIL,_NCVCYCFR=480200,_CYCFROK,_II,_GG01,_GG13,_GG14,_GG15,_GG10,_HDSEP
DEF REAL _ATRX,_ATRZ,_FAK1,_FCF,_FMUL,_SPX,_SPZ,_TEILX,_TEILZ,_ZPX,_ZPZ,_KT[93,6],_KT1[93,6]
DEF FRAME _OLDFR
DEF INT _TEMP
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE373T_MPF"
DEF STRING[200] _TEMP_LINE=""
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE373T_MPF")
IF NOT (($C_P_PROG>0)AND($C_Q_PROG>0)AND($C_U_PROG>0)AND($C_W_PROG>0))
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,"G290")
WRITE(_TEMP,_TEMP_FILE,";Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<"  Time: "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T="<<$TC_TP2[$P_TOOLNO]<<" D"<<$P_TOOL<<" T"<<$P_TOOLNO<<"   ; active TOOL")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$TC_DP1[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-TYPE") ; Werkzeugtyp
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$TC_DP2[$P_TOOLNO,$P_TOOL]<<"     ; EDGE-POSITION") ; Schneidenlage
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$TC_DP6[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-RADIUS") ; Werkzeugradius
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
WRITE(_TEMP,_TEMP_FILE,";D1")
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19") ; aktive Ebene
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...") ; Inch/Metrisch
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...") ; DIAMON/DIAMOF/DIAM90
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/...") ; Vorschubart
WRITE(_TEMP,_TEMP_FILE,"G[14]="<<$P_GG[14]<<"    ; G90/G91/...") ; Positionierung abs./ink.
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F) ; Vorschub
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$AC_MSNUM]) ; Drehzahl und Drehrichtung
WRITE(_TEMP,_TEMP_FILE,";")
WRITE(_TEMP,_TEMP_FILE,"G291")
ENDIF
_TEMP_LINE=""
IF $C_G_PROG<>0
IF $MN_MM_EXTERN_GCODE_SYSTEM == 0
_TEMP_LINE=_TEMP_LINE<<"G"<<$C_G<<" "
ENDIF
IF $MN_MM_EXTERN_GCODE_SYSTEM == 1
_TEMP_LINE=_TEMP_LINE<<"G73 "
ENDIF
IF $MN_MM_EXTERN_GCODE_SYSTEM == 2
_TEMP_LINE=_TEMP_LINE<<"G75 "
ENDIF
ENDIF
IF $C_P_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"P"<<$C_P<<" "
ENDIF
IF $C_Q_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Q"<<$C_Q<<" "
ENDIF
IF $C_U_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"U"<<$C_U<<" "
ENDIF
IF $C_W_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"W"<<$C_W<<" "
ENDIF
IF $C_R_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"R"<<$C_R<<" "
ENDIF
IF $C_F_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"F"<<$C_F<<" "
ENDIF
IF $C_S_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"S"<<$C_S<<" "
ENDIF
IF $C_T_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"T"<<$C_T<<" "
ENDIF
WRITE(_TEMP,_TEMP_FILE,_TEMP_LINE)
ENDIF
IF($MN_MM_EXTERN_LANGUAGE<>1) GOTOF _FEHL1
IF $MCS_ISO_ENABLE_INTERRUPTS==1
IF $MN_EXTERN_INTERRUPT_BITS_M96 B_AND 'B1'
$AC_PARAM[1]=0
$A_OUT[1]=0
STOPRE
IF($MN_EXTERN_INTERRUPT_BITS_M96) B_AND 'B1000'
DISABLE(1)
ID=1 WHEN $A_IN[1]==1 DO $AC_PARAM[1]=1
ENDIF
ENDIF
ENDIF
CASE($MN_MM_EXTERN_GCODE_SYSTEM) OF 0 GOTOF _BCOD 1 GOTOF _ACOD 2 GOTOF _CCOD DEFAULT GOTOF _FEHL6
_ACOD: _ABC=1
GOTOF _ECOD
_BCOD: _ABC=2
GOTOF _ECOD
_CCOD: _ABC=3
_ECOD:
IF($C_X_PROG>0)AND($C_U_PROG>0)GOTOF _FEHL5
IF($C_Z_PROG>0)AND($C_W_PROG>0)GOTOF _FEHL5
IF($C_Y_PROG>0)OR ($C_V_PROG>0)GOTOF _FEHL8
IF($C_C_PROG>0)OR ($C_H_PROG>0)GOTOF _FEHL8
_G40=$P_GG[07]
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
IF($C_F_PROG>0)
_FCF=$C_F
ELSE
_FCF=$P_F
ENDIF
IF($P_GG[14]==2)
_G91=1
ELSE
_G91=0
ENDIF
IF(($P_GG[29]==1) OR ($P_GG[29]==4))
_PLAN=1
ELSE
_PLAN=2
ENDIF
IF($P_GG[13]==2)OR($P_GG[13]==4)
_FMUL=1000
ELSE
_FMUL=10000
ENDIF
IF($C_P_PROG>0)AND($C_Q_PROG>0)AND($C_U_PROG>0)AND($C_W_PROG>0)
_G73=0
ELSE
_G73=1
ENDIF
IF(_G73==1)
IF($C_P_PROG>0)OR ($C_Q_PROG>0)GOTOF _FEHL9
IF($C_X_PROG>0)OR ($C_Z_PROG>0)GOTOF _FEHL9
IF($C_F_PROG>0)OR ($C_S_PROG>0)OR ($C_T_PROG>0)GOTOF _FEHL9
IF($C_U_PROG>0)
_ZSFI[32]=ABS($C_U)*_FMUL
ENDIF
IF($C_W_PROG>0)
_ZSFI[33]=ABS($C_W)*_FMUL
ENDIF
IF($C_R_PROG>0)
IF($C_R<0) GOTOF _FEHL9
IF($MN_EXTERN_FLOATINGPOINT_PROG==1)
_ZSFI[34]=$C_R
ELSE
_ZSFI[34]=$C_R*_FMUL
ENDIF
ENDIF
ENDIF
IF(_G73==1)GOTOF _RET
_ZZ=$P_AXN1 _XX=$P_AXN2
_SPX=$P_EP[_XX]*_FAK1 _SPZ=$P_EP[_ZZ]*_FAK1
IF (_G40<>1)
G40 G91 AX[_XX]=0 AX[_ZZ]=0
ENDIF
G18
IF(_FCF<=0)GOTOF _FEHL2
F=_FCF
IF($C_R_PROG>0)OR ($C_X_PROG>0)OR ($C_Z_PROG>0)GOTOF _FEHL9
IF($C_P==$C_Q)GOTOF _FEHL9
SBLOF
IF(($AN_NCK_VERSION>=_NCVCYCFR)AND(($MC_MM_SYSTEM_FRAME_MASK B_AND 'B100000')<>'B100000')) GOTOF _FEHL20
IF ($AN_NCK_VERSION>=_NCVCYCFR)
_CYCFROK=1
ELSE
_CYCFROK=0
ENDIF
SBLON
G90
IF(_ZSFI[34]==0)
_TEIL=1
ELSE
_TEIL=_ZSFI[34]
ENDIF
CONTDCON(_KT,0)
G291
CALL $P_PATH[$P_STACK-1]<<$P_PROG[$P_STACK-1] BLOCK "N"<<$C_P TO "N"<<$C_Q
G290
EXECUTE(_ERR)
IF _ERR==1 GOTOF _FEHL4
FOR _II= 1 TO _KT[0,5]
_KT1[_II,0]=(_KT[_II,0] MOD 10)+1 _KT1[_II,1]=(_KT[_II,0] MOD 100 DIV 10)+1
_KT1[_II,2]=(_KT[_II,0] MOD 1000 DIV 100)+1 _KT1[_II,3]=(_KT[_II,0] MOD 10000 DIV 1000)+1
_KT1[_II,4]=(_KT[_II,0] MOD 100000 DIV 10000)+1 _KT1[_II,5]=_KT[_II,0] DIV 100000 MOD 10
ENDFOR
CASE(_G40) OF 3 GOTOF _KG42 2 GOTOF _KG41 1 GOTOF _KG40 DEFAULT GOTOF _KG40
_KG42: G42 G91 AX[_XX]=0 AX[_ZZ]=0
GOTOF _KG4X
_KG41: G41 G91 AX[_XX]=0 AX[_ZZ]=0
GOTOF _KG4X
_KG40: G40 G91 AX[_XX]=0 AX[_ZZ]=0
_KG4X:
IF(_G91==0)
G90
ENDIF
_COUN = 1
WHILE (_COUN <= _TEIL)
IF (_TEIL==1)
_TEILX = 0
_TEILZ = 0
ELSE
IF $C_U >= 0
_TEILX = ((_ZSFI[32]/_FMUL)/(_TEIL-1))*(_TEIL-_COUN)
ELSE
_TEILX = ((-1*_ZSFI[32]/_FMUL)/(_TEIL-1))*(_TEIL-_COUN)
ENDIF
IF $C_W >= 0
_TEILZ = ((_ZSFI[33]/_FMUL)/(_TEIL-1))*(_TEIL-_COUN)
ELSE
_TEILZ = ((-1*_ZSFI[33]/_FMUL)/(_TEIL-1))*(_TEIL-_COUN)
ENDIF
ENDIF
_ATRX = _TEILX + ($C_U/_PLAN)
_ATRZ = _TEILZ + $C_W
_ZPX=_SPX + (_TEILX*_PLAN) + $C_U
_ZPZ=_SPZ + _TEILZ + $C_W
SBLON
G0 AX[_XX]=_ZPX AX[_ZZ]=_ZPZ
SBLOF
SBLOF
IF (_CYCFROK==1)
_OLDFR=$P_CYCFRAME
$P_CYCFRAME=_OLDFR:CTRANS(_XX,_ATRX,_ZZ,_ATRZ)
ELSE
ATRANS X=_ATRX Z=_ATRZ
ENDIF
G64
SBLON
FOR _II= 1 TO _KT[0,5]
_GG01=_KT1[_II,0] _GG13=_KT1[_II,1] _GG14=_KT1[_II,2] _GG15=_KT1[_II,3] _GG10=_KT1[_II,4]
IF _KT1[_II,5]==1
IF _GG01>2
G[1]=_GG01 G[13]=_GG13 G[14]=_GG14 G[15]=_GG15 G[10]=_GG10
G09 AX[_XX]=_KT[_II,2]*_PLAN AX[_ZZ]=_KT[_II,1] I=AC(_KT[_II,4]*_PLAN) K=AC(_KT[_II,3]) F=_KT[_II,5]
ELSE
G[1]=_GG01 G[13]=_GG13 G[14]=_GG14 G[15]=_GG15 G[10]=_GG10
G09 AX[_XX]=_KT[_II,2]*_PLAN AX[_ZZ]=_KT[_II,1] F=_KT[_II,5]
ENDIF
ELSE
IF _GG01>2
G[1]=_GG01 G[13]=_GG13 G[14]=_GG14 G[15]=_GG15 G[10]=_GG10
AX[_XX]=_KT[_II,2]*_PLAN AX[_ZZ]=_KT[_II,1] I=AC(_KT[_II,4]*_PLAN) K=AC(_KT[_II,3]) F=_KT[_II,5]
ELSE
G[1]=_GG01 G[13]=_GG13 G[14]=_GG14 G[15]=_GG15 G[10]=_GG10
AX[_XX]=_KT[_II,2]*_PLAN AX[_ZZ]=_KT[_II,1] F=_KT[_II,5]
ENDIF
ENDIF
ENDFOR
SBLOF
IF (_CYCFROK==1)
$P_CYCFRAME=_OLDFR
ELSE
ATRANS X=(_ATRX*(-1)) Z=(_ATRZ*(-1))
ENDIF
_COUN = _COUN + 1
IF (_TEIL==1)
_TEILX = 0
_TEILZ = 0
ELSE
_TEILX = ((_ZSFI[32]/_FMUL)/(_TEIL-1))*(_TEIL-_COUN)
_TEILZ = ((_ZSFI[33]/_FMUL)/(_TEIL-1))*(_TEIL-_COUN)
IF $C_U >= 0
_TEILX = ((_ZSFI[32]/_FMUL)/(_TEIL-1))*(_TEIL-_COUN)
ELSE
_TEILX = ((-1*_ZSFI[32]/_FMUL)/(_TEIL-1))*(_TEIL-_COUN)
ENDIF
IF $C_W >= 0
_TEILZ = ((_ZSFI[33]/_FMUL)/(_TEIL-1))*(_TEIL-_COUN)
ELSE
_TEILZ = ((-1*_ZSFI[33]/_FMUL)/(_TEIL-1))*(_TEIL-_COUN)
ENDIF
ENDIF
_ZPX=_SPX + (_TEILX*_PLAN) + $C_U
_ZPZ=_SPZ + _TEILZ + $C_W
SBLON
G90
IF (_COUN>_TEIL)
G0 G40 AX[_XX]=_SPX AX[_ZZ]=_SPZ
ELSE
G0 G40 AX[_XX]=_ZPX AX[_ZZ]=_ZPZ
ENDIF
SBLOF
ENDWHILE
SBLON
G0 AX[_XX]=_SPX AX[_ZZ]=_SPZ
SBLOF
CASE(_G40) OF 3 GOTOF _GG42 2 GOTOF _GG41 1 GOTOF _GG40 DEFAULT GOTOF _GG40
_GG42: G42 G91 AX[_XX]=0 AX[_ZZ]=0
GOTOF _GG4X
_GG41: G41 G91 AX[_XX]=0 AX[_ZZ]=0
GOTOF _GG4X
_GG40: G40 G91 AX[_XX]=0 AX[_ZZ]=0
_GG4X:
IF(_G91==1)
G91
ENDIF
IF(_ABC==1)
G90
ENDIF
IF $MCS_ISO_ENABLE_INTERRUPTS==1
IF $MN_EXTERN_INTERRUPT_BITS_M96 B_AND 'B1'
ENABLE(1)
IF $AC_PARAM[1]==1
$A_OUT[1]=0
$A_OUT[1]=1
ENDIF
ENDIF
ENDIF
GOTOF _RET1
_FEHL1: STOPRE
N337301 SETAL(61800)
RET
_FEHL2: STOPRE
N337302 SETAL(61003)
RET
_FEHL4: STOPRE
N337304 SETAL(61606)
RET
_FEHL5: STOPRE
N337305 SETAL(61805)
RET
_FEHL6: STOPRE
N337306 SETAL(61801)
RET
_FEHL8: STOPRE
N337308 SETAL(61811)
RET
_FEHL9: STOPRE
N337309 SETAL(61812)
RET
_FEHL20:STOPRE
N337320 SETAL(61016)
RET
_RET1:
RET("N"<<$C_Q,1)
_RET:
RET
