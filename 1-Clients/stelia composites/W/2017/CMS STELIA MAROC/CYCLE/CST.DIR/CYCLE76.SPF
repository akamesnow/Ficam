PROC CYCLE76(REAL _RTP,REAL _RFP,REAL _SDIS,REAL __DP,REAL _DPR,REAL _LENG,REAL _WID,REAL _CRAD,REAL __PA,REAL __PO,REAL __STA,REAL __MID,REAL __FAL,REAL __FALD,REAL _FFP1,REAL _FFD,INT __CDIR,INT __VARI,REAL __AP1,REAL __AP2,REAL _FS,REAL __ZFS,INT _GMODE,INT _DMODE,INT _AMODE) SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.43.00 ;DATE: 2013-01-21
;Cycle support HMIsl
;Rectangular spigot milling
; Fehlerhandling mit ACTBLOCNO
DEF AXIS _XX,_YY,_ZZ
DEF INT _AS1,_AS2,_BA1,_DIR,_FRK,_H1,_HH2,_CDIR,_VARI,_TYP,_VORZ,_ZZSD[15]
DEF REAL _FAK1,_FAK2,_LP1,_LP2,_TX,_TY,_MIRR,_DP,_PA,_PO,_MID,_FAL,_FALD,_AP1,_AP2,_ZFS,_OFFN,_OFFN1,_STA
DEF STRING[70] _KNAME
DEF FRAME _RE_CYCFR
DEF INT _TEMP,_DMODE1,_AMODE1,_AMODE3
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE76_MPF"
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE76_MPF")
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,";! only for internal diagnostics ! Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T-Number $P_TOOLNO="<<$P_TOOLNO)
WRITE(_TEMP,_TEMP_FILE,";D-Number $P_TOOL="<<$P_TOOL)
IF (($P_TOOL)AND($P_TOOLNO))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$P_AD[1]<<"    ; Tool type")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$P_AD[2]<<"    ; Cutting edge position")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$P_AD[6]<<"    ; Tool geo radius")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP15[1,1]="<<$P_AD[15]<<"    ; Tool wear radius")
IF (($P_AD[1]>=200) AND ($P_AD[1]<300))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP24[1,1]="<<$P_AD[24]<<"    ; Tool tip angle")
ENDIF
IF (($P_AD[1]>=100) AND ($P_AD[1]<200))
IF ($P_AD[1]<>145)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP11[1,1]="<<$P_AD[11]<<"    ; Tool angle")
ENDIF
WRITE(_TEMP,_TEMP_FILE,";$TC_DP35[1,1]="<<$P_AD[35]<<"    ; Number of teeth")
ENDIF
IF ($P_AD[1]==140)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP7[1,1]="<<$P_AD[7]<<"   ; Outside radius ")
ENDIF
IF ($P_AD[1]==240)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP9[1,1]="<<$P_AD[9]<<"   ; Thread pitch")
ENDIF
ENDIF
IF ($P_TOOLNO>0)
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
ELSE
WRITE(_TEMP,_TEMP_FILE,";T0")
WRITE(_TEMP,_TEMP_FILE,";M6")
ENDIF
IF ($P_TOOL==0)
WRITE(_TEMP,_TEMP_FILE,";D0")
ELSE
WRITE(_TEMP,_TEMP_FILE,";D1")
ENDIF
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19")
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...")
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...")
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/... $P_F_TYPE="<<$P_F_TYPE)
IF($P_F_TYPE==11)OR($P_F_TYPE==33)
WRITE(_TEMP,_TEMP_FILE,"FZ="<<$P_FZ)
ELSE
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F)
ENDIF
IF $P_MSNUM==0
WRITE(_TEMP,_TEMP_FILE,";$P_MSNUM=0 no spindle existant")
ELSE
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$P_MSNUM])
ENDIF
WRITE(_TEMP,_TEMP_FILE,"_ZSD[1]="<< _ZSD[1]<<" _ZSD[2]="<<_ZSD[2]<<" _ZSD[8]="<<_ZSD[8])
WRITE(_TEMP,_TEMP_FILE,"CYCLE76("<<_RTP<<","<<_RFP<<","<<_SDIS<<","<<__DP<<","<<_DPR<<","<<_LENG<<","<<_WID<<","<<_CRAD<<","<<__PA<<","<<__PO<<","<<__STA<<","<<__MID<<","<<__FAL<<","<<__FALD<<","<<_FFP1<<","<<_FFD<<","<<__CDIR<<","<<__VARI<<","<<__AP1<<","<<__AP2<<","<<_FS<<","<<__ZFS<<","<<_GMODE<<","<<_DMODE<<","<<_AMODE<<")")
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
IF ($P_TRAFO B_AND 'H201')=='H201'
GOTOF _FEHL39
ENDIF
IF ($P_TRAFO B_AND 'H202')=='H202'
IF ($P_TRAFO_PAR[1]==1) GOTOF _FEHL40
ENDIF
DIAMCYCOF
IF ($P_GG[30]>1)
COMPOF
ENDIF
_DP=__DP _PA=__PA _PO=__PO _MID=__MID _FAL=__FAL _FALD=__FALD _CDIR=__CDIR _VARI=__VARI _ZFS=__ZFS _AP1=__AP1 _AP2=__AP2
_STA=__STA
IF($P_MC)
_STA=_STA+_SC_WO
ENDIF
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
_FAK2=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK2=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)OR($P_GG[13]==4)
_FAK2=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
IF(_GMODE _DEC3 == 0)
IF(_ZSD[8]==-1)
_ZZSD[8]=0
ELSE
_ZZSD[8]=_ZSD[8]
ENDIF
ELSE
_ZZSD[8]=_GMODE _DEC3 -1
ENDIF
IF(_ZZSD[8]<0)OR(_ZZSD[8]>1) GOTOF _FEHL21
IF(_GMODE _DEC4 == 0)
IF(_ZSD[2]<>-1)
IF _ZSD[2]
_ZZSD[2]=0
ELSE
_ZZSD[2]=1
ENDIF
ENDIF
ELSE
_ZZSD[2]=_GMODE _DEC4
ENDIF
IF(_ZZSD[2]<0)OR(_ZZSD[2]>5) GOTOF _FEHL32
IF(_ZSD[1]==-1)
_ZZSD[1]=($SCS_FUNCTION_MASK_MILL_SET B_AND 'B100') DIV 4
ELSE
_ZZSD[1]=_ZSD[1]
IF(_ZZSD[1]<0)OR(_ZZSD[1]>1) GOTOF _FEHL20
ENDIF
_DMODE1=_DMODE _DEC1
IF(_DMODE1<0)OR(_DMODE1>3)
GOTOF _FEHL22
ELSE
IF($P_MC)
IF(_DMODE1==0)OR($P_GG[6]==_DMODE1)
_XX=$P_AXN1 _YY=$P_AXN2
_PA=$P_EP[_XX]*_FAK1 _PO=$P_EP[_YY]*_FAK1
ELSE
GOTOF _FEHL23
ENDIF
ELSE
IF((_DMODE1>0)AND($P_GG[6]<>_DMODE1))
G[6]=_DMODE1
ENDIF
ENDIF
ENDIF
_XX=$P_AXN1 _YY=$P_AXN2 _ZZ=$P_AXN3
IF (($MC_MM_SYSTEM_FRAME_MASK B_AND 'B100000') AND ($AN_NCK_VERSION>=480300))
_RE_CYCFR=$P_CYCFRAME
ELSE
GOTOF _FEHL35
ENDIF
_BA1=_VARI _DEC1
IF(_BA1<1)OR(_BA1>5)OR(_BA1==3)OR(_BA1==4) GOTOF _FEHL1
IF(_BA1==1)AND(_MID<0) GOTOF _FEHL6
_VARI=_BA1+300
IF (_BA1==5)
_OFFN1=$P_OFFN*_FAK2
_AMODE3=(_AMODE _DEC3)
IF(_AMODE3<0)OR(_AMODE3>1) GOTOF _FEHL26
IF(_AMODE3==1)
IF(_RTP==_RFP) GOTOF _FEHL11
_HH2=(_RTP-_RFP)/ABS(_RTP-_RFP)
_DP=_RFP-ABS(_ZFS)*_HH2
ELSE
_DP=_ZFS
IF (_RFP<>_DP)
_HH2=(_RFP-_DP)/ABS(_RFP-_DP)
ENDIF
_ZFS=ABS(_RFP-_ZFS)
_AMODE3=1
ENDIF
IF(_ZZSD[1]==0)
_MID=_ZFS+_SDIS
ELSE
_MID=_ZFS
ENDIF
_FALD=0 _FAL=_FS
_FFD=_FFP1
IF(_ZZSD[8]==0)
CYCLE203(1,_FS,_ZFS)
ENDIF
_OFFN=$P_OFFN*_FAK2 _VARI=_VARI-3
_AP1=_LENG+$P_TOOLR*_FAK1
ENDIF
IF _BA1<>5
_AMODE1=(_AMODE _DEC1)
IF(_AMODE1<0)OR(_AMODE1>2) GOTOF _FEHL24
IF((_AMODE1==2) AND ($P_SUBPAR[4]==0)) GOTOF _FEHL29
IF((_AMODE1==1) AND ($P_SUBPAR[5]==0)) GOTOF _FEHL30
IF(((_DPR) AND (_AMODE1==0)) OR (_AMODE1==1))
IF(_RTP==_RFP) GOTOF _FEHL11
_HH2=(_RTP-_RFP)/ABS(_RTP-_RFP)
_DP=_RFP-ABS(_DPR)*_HH2
IF (_RFP==_DP) GOTOF _FEHL30
ELSE
IF (_RFP-_DP)<>0
_HH2=(_RFP-_DP)/ABS(_RFP-_DP)
ELSE
GOTOF _FEHL29
ENDIF
ENDIF
ENDIF
IF ((_RTP<>_RFP) AND (_RFP<>_DP))
IF ((_RFP-_DP)/ABS(_RFP-_DP))<>((_RTP-_RFP)/ABS(_RTP-_RFP)) GOTOF _FEHL11
ENDIF
GOTOF _MARKE1
_AMODE1=(_AMODE _DEC1)
IF(_AMODE1<0)OR(_AMODE1>2) GOTOF _FEHL24
IF _BA1<>5
IF((_AMODE1==2) AND ($P_SUBPAR[4]==0)) GOTOF _FEHL29
IF((_AMODE1==1) AND ($P_SUBPAR[5]==0)) GOTOF _FEHL30
ENDIF
IF(((_DPR>0) AND (_AMODE1==0)) OR (_AMODE1==1))
_DP=_RFP-_DPR
ENDIF
IF (_RFP-_DP)<>0
_HH2=(_RFP-_DP)/ABS(_RFP-_DP)
ELSE
GOTOF _FEHL29
ENDIF
_MARKE1:
IF (_CDIR<0)OR(_CDIR>3) GOTOF _FEHL16
_MIRR=$P_ACTFRAME[_XX,MI]+$P_ACTFRAME[_YY,MI]
IF(_MIRR==1)
IF(_CDIR==0)OR(_CDIR==2)
_CDIR=_CDIR+1
ELSE
_CDIR=_CDIR-1
ENDIF
ENDIF
IF _HH2<0
IF(_CDIR==0)OR(_CDIR==2)
_CDIR=_CDIR+1
ELSE
_CDIR=_CDIR-1
ENDIF
ENDIF
IF($P_ACTFRAME[_ZZ,MI])
IF(_CDIR==0)OR(_CDIR==2)
_CDIR=_CDIR+1
ELSE
_CDIR=_CDIR-1
ENDIF
ENDIF
_DIR=2
IF _CDIR==2 GOTOF _MY3 IF _CDIR<>3 GOTOF _MY2
_DIR=3
GOTOF _MY3
_MY2:
IF($P_SMODE[0]==1) OR ($P_SMODE[0]==3)
_H1=$P_SDIR[$P_MSNUM]
IF(_H1<3)OR(_H1>4)
GOTOF _FEHL10
ENDIF
ELSE
GOTOF _FEHL10
ENDIF
IF(_H1<3)OR(_H1>4)
_DIR=3
SETAL(62101)
GOTOF _MY3
ENDIF
IF (((_CDIR==0)AND(_H1==4))OR((_CDIR==1)AND(_H1==3)))
_DIR=3
ELSE
_DIR=2
ENDIF
_MY3:
_FRK=_DIR+39
IF($P_TOOLR<0) GOTOF _FEHL5
_AP1=ABS(_AP1) _AP2=ABS(_AP2)
IF (_BA1<>5)
IF(_AP1<(ABS(_LENG)+2*_FAL))OR(_AP2<(ABS(_WID)+2*_FAL)) GOTOF _FEHL4
ENDIF
_TX=0 _TY=0
CASE _ZZSD[2] OF 0 GOTOF _M12 2 GOTOF _M12 3 GOTOF _M3 4 GOTOF _M4 5 GOTOF _M5 DEFAULT GOTOF _M0
_M12: _TX=_LENG/2 _TY=_WID/2
GOTOF _MREF
_M3: _TX=-_LENG/2 _TY=_WID/2
GOTOF _MREF
_M4: _TX=_LENG/2 _TY=-_WID/2
GOTOF _MREF
_M5: _TX=-_LENG/2 _TY=-_WID/2
GOTOF _MREF
_M0: _TX=0 _TY=0
_MREF:
_LENG=ABS(_LENG) _WID=ABS(_WID) _CRAD=ABS(_CRAD)
_AS1=3 _AS2=3
_LP1=((_AP1-_LENG)/2-_FAL+_SDIS)/2
_LP2=_LP1
_KNAME="_E_SP_REC_ANF:_E_SP_REC_END"
IF _BA1==1
_CONT2[0]=_LENG/2+_FAL _CONT2[1]=0
_CONT2[2]=_LENG/2+_FAL _CONT2[3]=_WID/2+_FAL
_CONT2[4]=_CRAD+_FAL
_FAL=0
ELSE
_CONT2[0]=_LENG/2 _CONT2[1]=0
_CONT2[2]=_LENG/2 _CONT2[3]=_WID/2
_CONT2[4]=_CRAD
ENDIF
_CONT2[5]=_LENG/2-_CRAD _CONT2[6]=_WID/2-_CRAD
_CONT2[7]=_DIR
N11 $P_CYCFRAME=$P_CYCFRAME:CTRANS(_XX,_PA*1/_FAK1,_YY,_PO*1/_FAK1)
N13 $P_CYCFRAME=$P_CYCFRAME:CROT(_ZZ,_STA)
N14 $P_CYCFRAME=$P_CYCFRAME:CTRANS(_XX,_TX*1/_FAK1,_YY,_TY*1/_FAK1)
IF _GMODE _DEC3==2
_ZSD[8]=1
ENDIF
N30 CYCLE72(_KNAME,_RTP,_RFP,_SDIS,_DP,_MID,_FAL,_FALD,_FFP1,_FFD,_VARI,_FRK,_AS1,_LP1,_FFD,_AS2,_LP2)
IF _GMODE _DEC3==2
_ZSD[8]=-1
ENDIF
IF(_ZZSD[8]==1)
$P_CYCFRAME=INVFRAME(_RE_CYCFR):$P_CYCFRAME:CTRANS(_XX,_SC_POS[0],_YY,_SC_POS[1],_ZZ,_SC_POS[2])
_SC_POS[0]=$P_CYCFRAME[_XX,TR]
_SC_POS[1]=$P_CYCFRAME[_YY,TR]
_SC_POS[2]=$P_CYCFRAME[_ZZ,TR]
ENDIF
$P_CYCFRAME=_RE_CYCFR
IF(_BA1==5)
IF(_ZZSD[8]==0)
OFFN=_OFFN1
ENDIF
ENDIF
IF(($P_MC)AND(_SC_PC==1))
N920 G0 G40 G90 AX[_XX]=_PA AX[_YY]=_PO
ENDIF
RET
_FEHL1: STOPRE
N707601 SETAL(61002)
RET
_FEHL4: STOPRE
N707604 SETAL(61215)
RET
_FEHL5: STOPRE
N707605 SETAL(61112)
RET
_FEHL6: STOPRE
N707606 SETAL(61610)
RET
_FEHL7: STOPRE
N707607 SETAL(62106)
RET
_FEHL10:STOPRE
N707610 SETAL(61102)
RET
_FEHL11:STOPRE
N707611 SETAL(61101)
RET
_FEHL16:STOPRE
N707616 SETAL(61109)
RET
_FEHL20: STOPRE
N707620 SETAL(61156)
RET
_FEHL21: STOPRE
N707621 SETAL(61019,"(_GMODE: dec3/_ZSD[8])")
RET
_FEHL22: STOPRE
N707622 SETAL(61158)
RET
_FEHL23: STOPRE
N707623 SETAL(61159)
RET
_FEHL24: STOPRE
N707624 SETAL(61019,"(_AMODE: dec1)")
RET
_FEHL26: STOPRE
N707626 SETAL(61019,"(_AMODE: dec3)")
RET
_FEHL29: STOPRE
N707629 SETAL(61019,"(_AMODE: dec1/DP)")
RET
_FEHL30: STOPRE
N707630 SETAL(61019,"(_AMODE: dec1/DPR)")
RET
_FEHL32: STOPRE
N707632 SETAL(61019,"(_GMODE: dec4/_ZSD[2])")
RET
_FEHL34: STOPRE
N707634 SETAL(61273)
RET
_FEHL35: STOPRE
N707635 SETAL(61016)
RET
_FEHL39: STOPRE
N707639 SETAL(61026,"TRACYL (TRAFO_TYPE=513)")
RET
_FEHL40: STOPRE
N707640 SETAL(61026,"TRACYL (TRAFO_TYPE=514 MODE=1)")
RET
_E_SP_REC_ANF:
IF(_CONT2[7]==2)
N100 G1 G90 AX[$P_AXN1]=_CONT2[0] AX[$P_AXN2]=_CONT2[1]
IF(_CONT2[6]>0)
N105 AX[$P_AXN2]=-_CONT2[6]
ENDIF
IF(_CONT2[4]>0)
N110 G2 AX[$P_AXN1]=_CONT2[5] AX[$P_AXN2]=-_CONT2[3] CR=_CONT2[4]
ENDIF
IF(_CONT2[5]>0)
N115 G1 AX[$P_AXN1]=-_CONT2[5]
ENDIF
IF(_CONT2[4]>0)
N120 G2 AX[$P_AXN1]=-_CONT2[2] AX[$P_AXN2]=-_CONT2[6] CR=_CONT2[4]
ENDIF
IF(_CONT2[6]>0)
N130 G1 AX[$P_AXN2]=_CONT2[6]
ENDIF
IF(_CONT2[4]>0)
N135 G2 AX[$P_AXN1]=-_CONT2[5] AX[$P_AXN2]=_CONT2[3] CR=_CONT2[4]
ENDIF
IF(_CONT2[5]>0)
N140 G1 AX[$P_AXN1]=_CONT2[5]
ENDIF
IF(_CONT2[4]>0)
N145 G2 AX[$P_AXN1]=_CONT2[2] AX[$P_AXN2]=_CONT2[6] CR=_CONT2[4]
ENDIF
N150 G1 AX[$P_AXN2]=_CONT2[1]
ELSE
N200 G1 G90 AX[$P_AXN1]=_CONT2[0] AX[$P_AXN2]=_CONT2[1]
IF(_CONT2[6]>0)
N205 AX[$P_AXN2]=_CONT2[6]
ENDIF
IF(_CONT2[4]>0)
N210 G3 AX[$P_AXN1]=_CONT2[5] AX[$P_AXN2]=_CONT2[3] CR=_CONT2[4]
ENDIF
IF(_CONT2[5]>0)
N215 G1 AX[$P_AXN1]=-_CONT2[5]
ENDIF
IF(_CONT2[4]>0)
N220 G3 AX[$P_AXN1]=-_CONT2[2] AX[$P_AXN2]=_CONT2[6] CR=_CONT2[4]
ENDIF
IF(_CONT2[6]>0)
N230 G1 AX[$P_AXN2]=-_CONT2[6]
ENDIF
IF(_CONT2[4]>0)
N235 G3 AX[$P_AXN1]=-_CONT2[5] AX[$P_AXN2]=-_CONT2[3] CR=_CONT2[4]
ENDIF
IF(_CONT2[5]>0)
N240 G1 AX[$P_AXN1]=_CONT2[5]
ENDIF
IF(_CONT2[4]>0)
N245 G3 AX[$P_AXN1]=_CONT2[2] AX[$P_AXN2]=-_CONT2[6] CR=_CONT2[4]
ENDIF
N250 G1 AX[$P_AXN2]=_CONT2[1]
ENDIF
_E_SP_REC_END:
RET
