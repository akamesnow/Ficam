PROC CYCLE996(INT S_MVAR,INT S_TC,INT S_PRNUM,REAL S_SETV,REAL S_STA1,REAL S_SETV0,REAL S_SETV1,REAL S_SETV2,REAL S_SETV3,REAL S_SETV4,REAL S_SETV5,REAL S_TNVL,REAL S_FA,REAL S_TSA,INT S_NMSP,INT S_MCBIT,INT _DMODE,INT _AMODE) SAVE SBLOF ACTBLOCNO DISPLOF
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.61.00 ;DATE: 2014-08-18
;Measure Kinematic
DEF BOOL _NEW_PAR=0, _T_ACT
DEF REAL _RG[16],_DB,_L1,_RAD,_TR_LIM,_VAR[10,9],_INARRAY[10],_OUTARRAY[10],_CAL[12],_FAK1,_FAK2,_FAK3
DEF INT _M_VAR,_MT,_TC,_PROT,_RAX[3],_NAX,_I,_II,_LOG,_TNR,_DNR,_G17_18_19,_CMEA,_CERG,_CCM,_TRTYP[2],_NV_ACT,_CBIT14,_L1_CALC,_TC_37,_ALARM,_H_DMODE,_CHBIT_S[32],_SD42940,_CHBIT29
DEF AXIS _XX,_YY,_ZZ,_RAX1,_RAX2,_XXA,_YYA,_ZZA
DEF STRING[40] _SN[4], _SERR
IF ($P_SUBPAR[1])
S_MVAR=ABS(S_MVAR) _AMODE = ABS(_AMODE) _NEW_PAR=1
_CHBIT_S[25]=_CHBIT[25] _CHBIT_S[26]=_CHBIT[26] _CHBIT_S[28]=_CHBIT[28] _CHBIT_S[29]=_CHBIT[29]
_SERR=<<"(S_MVAR: dec1)"
IF ((S_MVAR _DEC1) > 3) GOTOF _M_ERR
_SERR=<<"(S_MVAR: dec3)"
IF ((S_MVAR _DEC3) > 2) GOTOF _M_ERR
_SERR=<<"(S_MVAR: dec4)"
IF ((S_MVAR _DEC4) > 1) GOTOF _M_ERR
_SERR=<<"(S_MVAR: dec5)"
IF ((S_MVAR _DEC5) > 3) GOTOF _M_ERR
_SERR=<<"(S_MVAR: dec6)"
IF ((S_MVAR _DEC6) > 3) GOTOF _M_ERR
_SERR=<<"(S_MVAR: dec7)"
IF ((S_MVAR _DEC7) > 3) GOTOF _M_ERR
_SERR=<<"(S_MVAR: dec8)"
IF ((S_MVAR _DEC8) > 1) GOTOF _M_ERR
S_MVAR = S_MVAR - ((S_MVAR _DEC2)*10) + 90
_CHBIT[26]=0 _CHBIT[28]=0
IF ((S_MVAR _DEC1) <> 0)
S_TNVL=0
IF ((S_MVAR _DEC3) > 0)
_CHBIT[26]=1
ENDIF
IF ((S_MVAR _DEC3) == 2)
_CHBIT[28]=1
ENDIF
S_MVAR = S_MVAR - ((S_MVAR _DEC3)*100)
ELSE
S_MVAR = S_MVAR - (S_MVAR _DEC1) + 4
S_MVAR = S_MVAR - ((S_MVAR _DEC3)*100)
_CHBIT[25]=0
_SERR=<<"(_AMODE: dec2)"
IF ((_AMODE _DEC2) > 1) GOTOF _M_ERR
_SERR=<<"(_AMODE: dec3)"
IF ((_AMODE _DEC3) > 1) GOTOF _M_ERR
_SERR=<<"(_AMODE: dec4)"
IF ((_AMODE _DEC4) > 1) GOTOF _M_ERR
IF ((_AMODE _DEC3) == 1)
IF ((S_MVAR _DEC4) == 0)
S_MVAR = S_MVAR + 1000
ELSE
S_MVAR = S_MVAR + 100
IF ((_AMODE _DEC4) == 1)
S_MVAR = S_MVAR + 1000
ENDIF
ENDIF
ELSE
IF ((S_MVAR _DEC4) == 1)
S_MVAR = S_MVAR - 1000 + 100
IF ((_AMODE _DEC2) == 1)
_CHBIT[25]=1
ENDIF
ENDIF
ENDIF
IF ((S_MVAR _DEC8) == 1)
FOR _II=1 TO 20
_SERR=<<"$MC_TRAFO_TYPE_"<<_II
EXECSTRING("IF(ISVAR(_SERR)) GOTOF _MYVAR1")
GOTOF _TSFOR
_MYVAR1: EXECSTRING("IF(("<<_SERR<<">0) AND ("<<_SERR<<"<256) AND ("<<_SERR<<"<>72))GOTOF _MYVAR2")
_TSFOR:
ENDFOR
GOTOF TSEND
_MYVAR2: S_MVAR=S_MVAR + 10000000
TSEND:
ENDIF
ENDIF
_SERR=<<"(_AMODE: dec1)"
IF ((_AMODE _DEC1) > 1) GOTOF _M_ERR
IF ((_AMODE _DEC1) == 1) AND ((S_SETV4 <> 0) OR (S_SETV5 <> 0))
_SETV[7]=S_SETV4 _SETV[8]=S_SETV5
ELSE
_SETV[7]=0 _SETV[8]=0
ENDIF
IF S_NMSP<>0
_NMSP=ABS(S_NMSP)
ELSE
_NMSP=1
ENDIF
_MVAR=S_MVAR _TNUM=ABS(S_TC) _PRNUM=ABS(S_PRNUM) _TNVL=ABS(S_TNVL) _FA=ABS(S_FA) _TSA=ABS(S_TSA)
_SETVAL=S_SETV _STA1=S_STA1 _SETV[3]=S_SETV0 _SETV[4]=S_SETV1 _SETV[5]=S_SETV2 _SETV[6]=S_SETV3
_SERR=<<"(_DMODE: dec1)"
_H_DMODE=ABS(_DMODE _DEC1)
IF(_H_DMODE>3) GOTOF _M_ERR
IF(_H_DMODE>0)AND($P_GG[6]<>_H_DMODE)
G[6]=_H_DMODE
ENDIF
ENDIF
GOTOF _M_END
_M_ERR: _ALARM=61019 _OVI[9]=_ALARM
STOPRE
N699601 SETAL(_ALARM,_SERR)
RET
_M_END: _ALARM=0
_SN[1]=<<" $TC_CARR" _SN[2]=<<" $MC_TRAFO5_"
_VAR[5,6]=20
_M_VAR=ABS(_MVAR) _MT=_PRNUM _DB=ABS(_SETVAL) _TC=_TNUM
_OVI[2]=996 _OVI[3]=_M_VAR _OVI[8]=_TC _OVI[9]=0
_RG[7]=ABS(_SETV[7]) _RG[8]=ABS(_SETV[8])
_PROT=_M_VAR _DEC8
_G17_18_19=$P_GG[6]
_XX=$P_AXN1 _YY=$P_AXN2 _ZZ=$P_AXN3
IF(_G17_18_19==1)
_XXA=$P_AXN1 _YYA=$P_AXN2 _ZZA=$P_AXN3
ELSE
IF(_G17_18_19==2)
_XXA=$P_AXN2 _YYA=$P_AXN3 _ZZA=$P_AXN1
ELSE
_XXA=$P_AXN3 _YYA=$P_AXN1 _ZZA=$P_AXN2
ENDIF
ENDIF
IF($P_GG[13]<3)
_FAK1=1 _FAK2=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1 _FAK2=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==3)
_FAK2=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==4)
_FAK2=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ENDIF
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK3=$MN_SCALING_VALUE_INCH
ELSE
_FAK3=1
ENDIF
_SERR=<<"A"
IF NOT ISVAR("_OVR[71]") GOTOF _ERR0
_SERR=<<"A (_MVAR dec2<>9):"<<_M_VAR
IF ((_M_VAR _DEC2)<>9) GOTOF _ERR1
_SERR=<<"A (_MVAR dec1):"<<_M_VAR
IF (((_M_VAR _DEC1)<0) OR ((_M_VAR _DEC1)>4)) GOTOF _ERR1
IF (_NEW_PAR)
_SERR=<<"S_TC"
ELSE
_SERR=<<"_TNUM"
ENDIF
IF NOT _TC GOTOF _ERR2
IF NOT ISVAR("$TC_CARR1") GOTOF _ERR2
_RG[14]=$TC_CARR24[_TC] MOD 360 _RG[15]=$TC_CARR25[_TC] MOD 360
_RAX[0]=_M_VAR _DEC5
_SERR=<<"D (_MVAR dec5):"<<_M_VAR
IF ((_RAX[0]<0) OR (_RAX[0]>3)) GOTOF _ERR1
_SERR=<<"A"
IF ((_M_VAR _DEC1)<>4)
IF (_NEW_PAR)
_SERR=<<"S_SETV"
ELSE
_SERR=<<"_SETVAL"
ENDIF
IF NOT _DB GOTOF _ERR3
IF ((_RAX[0]<1) OR (_RAX[0]>2)) GOTOF _ERR4
ELSE
_NAX=_M_VAR _DEC6
_SERR=<<"B (_MVAR dec6):"<<_M_VAR
IF ((_NAX<0) OR (_NAX>3)) GOTOF _ERR1
ENDIF
IF (_RAX[0]==1)
_SERR=<<"B"
IF ($TC_CARR35[_TC]=="") GOTOF _ERR4
_SERR=<<"C (V1xyz=0)"
IF (((ABS($TC_CARR7[_TC])) + (ABS($TC_CARR8[_TC])) + (ABS($TC_CARR9[_TC])))==0) GOTOF _ERR4
ENDIF
IF (_RAX[0]==2)
_SERR=<<"D"
IF ($TC_CARR36[_TC]=="") GOTOF _ERR4
_SERR=<<"E (V2xyz=0)"
IF (((ABS($TC_CARR10[_TC])) + (ABS($TC_CARR11[_TC])) + (ABS($TC_CARR12[_TC])))==0) GOTOF _ERR4
ENDIF
_NV_ACT=$P_GG[8]
IF (($P_TRAFO>0) AND ($P_TRAFO<256))
_TRTYP[0]=$P_TRAFO_PARSET
ENDIF
_TRTYP[1]=$P_TC
IF (($SCS_MEA_FUNCTION_MASK B_AND 'B100000000') AND ((_M_VAR _DEC1)<>4))
_SERR=<<"TRAORI or TCARR"
IF ((_TRTYP[0]==0) AND (_TRTYP[1]==0) AND ((_M_VAR _DEC1)<>4)) GOTOF _ERR11
_T_ACT=1
ENDIF
IF _T_ACT==0
TRAFOOF
G[8]=_NV_ACT
IF (ISFILE("/_N_CST_DIR/_N_CYCLE800_SPF")) OR (ISFILE("/_N_CMA_DIR/_N_CYCLE800_SPF")) OR (ISFILE("/_N_CUS_DIR/_N_CYCLE800_SPF"))
CYCLE800()
ELSE
TCARR=0
ENDIF
ENDIF
IF ((_M_VAR _DEC1)<>4)
_TNR=$P_TOOLNO _DNR=$P_TOOL
_SERR=<<"A"
IF ((_TNR==0) OR (_DNR==0)) GOTOF _ERR6
_L1=$P_TOOLL[1]*_FAK1
_SD42940=($SC_TOOL_LENGTH_CONST _DEC1) + (($SC_TOOL_LENGTH_CONST _DEC2)*10)
IF ((($P_AD[2]==5) OR ($P_AD[2]==7)) AND (_SD42940==18) AND (($SC_TOOL_LENGTH_TYPE _DEC1)==2))
_L1=$P_TOOLL[2]*_FAK1
ENDIF
_OVR[50]=_L1
ELSE
_L1=_OVR[50]
ENDIF
_SERR=<<"B"
IF (_OVR[50]==0) GOTOF _ERR6
_TC_37=ABS($TC_CARR37[_TC])
IF NOT (_TC_37 _DEC2)
_RAX1=AXNAME($TC_CARR35[_TC]) _RAX[1]=1
_RG[9]=$AA_IM[_RAX1]
_SERR=<<"D"
IF (($P_ACTFRAME[_RAX1,TR]) OR ($P_ACTFRAME[_RAX1,FI])) GOTOF _ERR5
ELSE
_RG[9]=_SETV[3] _RG[10]=0
ENDIF
IF NOT (_TC_37 _DEC3)
IF ($TC_CARR36[_TC]<>"")
_RAX2=AXNAME($TC_CARR36[_TC]) _RAX[2]=1
_RG[10]=$AA_IM[_RAX2]
_SERR=<<"E"
IF (($P_ACTFRAME[_RAX2,TR]) OR ($P_ACTFRAME[_RAX2,FI])) GOTOF _ERR5
ENDIF
ELSE
IF ($TC_CARR36[_TC]<>"")
_RG[10]=_SETV[4]
ENDIF
ENDIF
IF ($P_SEARCH OR $P_ISTEST) GOTOF _END
IF _PROT
_SERR=<<"(MD $MN_LEN_PROTOCOL_FILE<100)"
IF ($MN_LEN_PROTOCOL_FILE < 20) GOTOF _ERR10
FOR _I=1 TO 100
_SN[0]=<<"_N_"<<SUBSTR($TC_CARR34[_TC],0,16)<<"_M"<<_I<<"_SPF"
IF NOT (ISFILE(_SN[0])) GOTOF _POK1
ENDFOR
_POK1: _SERR=<<"A (Protfile>99):"<<_I
IF (_I>=100) GOTOF _ERR7
IF (_I>1)
_SN[0]=<<"_N_"<<SUBSTR($TC_CARR34[_TC],0,16)<<"_M"<<_I-1<<"_SPF"
ENDIF
IF ((_M_VAR _DEC1)==1)
_SN[0]=<<"_N_"<<SUBSTR($TC_CARR34[_TC],0,16)<<"_M"<<_I<<"_SPF"
ENDIF
ENDIF
IF ((_M_VAR _DEC1)==1)
IF _RAX[0]==1
_OVR[66]=$P_ACTFRAME[_XXA,RT] _OVR[67]=$P_ACTFRAME[_YYA,RT] _OVR[68]=$P_ACTFRAME[_ZZA,RT]
_II=41
_OVR[40]=_OVR[40]-(_OVR[40] _DEC1)
_OVR[60]=0 _OVR[61]=0 _OVR[62]=0
ELSE
_II=51
_OVR[40]=_OVR[40]-((_OVR[40] _DEC2)*10)
_OVR[63]=0 _OVR[64]=0 _OVR[65]=0
ENDIF
FOR _I=_II TO _II+8
_OVR[_I]=0
ENDFOR
ENDIF
_RG[11]=_OVR[71]
_CMEA=_OVR[40]
IF ISVAR("$MNS_MEA_PROBE_LENGTH_RELATE")
IF _CBIT[14]== -1
_CBIT14=$MNS_MEA_PROBE_LENGTH_RELATE
ELSE
_CBIT14=_CBIT[14]
ENDIF
ELSE
IF ISVAR("$MNS_MEA_FUNCTION_MASK")
IF _CBIT[14]== -1
_CBIT14=0
IF ($MNS_MEA_FUNCTION_MASK B_AND 'B10')
_CBIT14=1
ENDIF
ELSE
_CBIT14=_CBIT[14]
ENDIF
ENDIF
ENDIF
IF ((_M_VAR _DEC1)==4) GOTOF _MA4
IF (_T_ACT==1) GOTOF _M_T1
_RG[9]=_RG[9]-_RG[14] _RG[10]=_RG[10]-_RG[15]
IF (($TC_CARR23[_TC]=="T") OR ((_RAX[0]==1) AND ($TC_CARR23[_TC]=="M") AND (_RG[9]<>0)))
TOROTOF
$P_PFRAME=CTRANS()
_RG[0]=ABS($TC_CARR7[_TC]) _RG[1]=ABS($TC_CARR8[_TC]) _RG[2]=ABS($TC_CARR9[_TC])
IF ((_RG[0]+_RG[1])==0) OR ((_RG[1]+_RG[2])==0) OR ((_RG[0]+_RG[2])==0)
IF _RG[2]
AROT AX[_ZZA]=_RG[9]
ENDIF
IF _RG[1]
AROT AX[_YYA]=_RG[9]
ENDIF
IF _RG[0]
AROT AX[_XXA]=_RG[9]
ENDIF
ENDIF
$TC_CARR13[_TC]=_RG[9]+_RG[14] $TC_CARR14[_TC]=_RG[10]+_RG[15]
TCOABS TCARR=_TC
CASE _G17_18_19 OF 2 GOTOF _HG18 3 GOTOF _HG19 DEFAULT GOTOF _HG17
_HG18: TOROTY
GOTOF _HGGE
_HG19: TOROTX
GOTOF _HGGE
_HG17: TOROT
_HGGE: TCARR=0
IF ISVAR("$P_TOOLFRAME")
$P_PFRAME=$P_TOOLFRAME:$P_PFRAME
TOROTOF
ENDIF
ENDIF
_M_T1:
IF ((_M_VAR _DEC1)==1)
FOR _I=0 TO 8
_VAR[0,_I]=0
ENDFOR
_VAR[0,3]=1 _VAR[0,7]=1 _TR_LIM=0
REPEAT _VCA1 _VCE
IF (_RAX[0]==1)
IF (($TC_CARR23[_TC]<>"P") AND ($TC_CARR36[_TC]==""))
_SERR=<<"A"
IF ((ROUND(_RG[9]*100)/100)<>0) GOTOF _ERR8
ENDIF
ENDIF
IF (_RAX[0]==2)
IF (($TC_CARR23[_TC]<>"P") AND ($TC_CARR36[_TC]<>""))
_SERR=<<"B"
IF ((ROUND(_RG[10]*100)/100)<>0) GOTOF _ERR8
ENDIF
ENDIF
IF (_RAX[0]==1)
IF (_RAX[1]==1)
_OVR[60]=$P_EPM[_RAX1]
ELSE
_OVR[60]=_RG[9]
ENDIF
ENDIF
IF (_RAX[0]==2)
IF (_RAX[2]==1)
_OVR[63]=$P_EPM[_RAX2]
ELSE
_OVR[63]=_RG[10]
ENDIF
ENDIF
ENDIF
IF (((_M_VAR _DEC1)==2) OR ((_M_VAR _DEC1)==3))
IF ((_RAX[0]==1) AND (_RAX[1]==1))
_SERR=<<"D"
IF ((ROUND(_OVR[60]*100)/100)==(ROUND($P_EPM[_RAX1]*100)/100)) GOTOF _ERR8
ENDIF
IF ((_RAX[0]==2) AND (_RAX[2]==1))
_SERR=<<"C"
IF ((ROUND(_OVR[63]*100)/100)==(ROUND($P_EPM[_RAX2]*100)/100)) GOTOF _ERR8
ENDIF
ENDIF
DIAMOF
_SETV[0]=$AA_IW[_XX]*_FAK1 _SETV[1]=$AA_IW[_YY]*_FAK1
_SETV[2]=$AA_IW[_ZZ]*_FAK1-_DB/2
IF (_NEW_PAR==1)
_SETV[2]=_SETV[2]-_FA
_FA=_FA*_FAK3
ELSE
IF (_CBIT14==0)
_RAD=$P_TOOLR*_FAK1
_SETV[2]=_SETV[2]-_RAD
ENDIF
_NMSP=1
ENDIF
_CBIT[10]=1
IF (($TC_CARR23[_TC]=="T") AND ($P_ACTFRAME[_ZZA,RT]))
_CHBIT[27]=1
ENDIF
IF _CHBIT[26]==1
IF _CHBIT[28]==1
_MVAR=102119
ELSE
_MVAR=101119
ENDIF
IF ISVAR("$SCS_MEA_FEED_PLANE_VALUE")
_RF=$SCS_MEA_FEED_PLANE_VALUE
IF ISVAR("$SCS_MEA_FEED_CIRCLE")
_RF=$SCS_MEA_FEED_CIRCLE
ENDIF
ELSE
_RF=_SPEED[1]
ENDIF
_STA1=_STA1 MOD 360 _INCA=90
ELSE
_MVAR=100119
ENDIF
_OVI[2]=9961
CUST_MEACYC(1)
_KNUM=0 _SETVAL=_DB _PRNUM=_MT
IF _NMSP<=0
_NMSP=1
ENDIF
CYCLE997
_OVI[2]=9961
CUST_MEACYC(2)
_OVI[2]=996 _OVI[3]=_M_VAR _OVI[8]=_TC _OVI[9]=0
_CBIT[10]=0 _CHBIT[27]=0
IF ((_M_VAR _DEC1==1) AND (_RAX[0]==1))
_OVR[71]=_OVR[4]
ENDIF
IF (_PROT AND ((_M_VAR _DEC1)==1))
WRITE(_LOG,_SN[0],";"<<_SN[0]<<" "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
ENDIF
$AC_MEAS_VALID=0
$AC_MEAS_LATCH[0]=1
$AA_MEAS_POINT1[_XX]=_OVR[5]
$AA_MEAS_POINT1[_YY]=_OVR[6]
$AA_MEAS_POINT1[_ZZ]=_OVR[7]
$AC_MEAS_P1_COORD=0
$AC_MEAS_P2_COORD=2
IF _T_ACT==1
$AC_MEAS_TOOL_MASK='H20'
ENDIF
$AC_MEAS_TYPE=24
_LOG=MEASURE()
_SERR=<<"A (MEASURE ?):"<<_LOG
IF _LOG GOTOF _ERR99
_OVR[5]=$AA_MEAS_POINT2[_XX] _OVR[6]=$AA_MEAS_POINT2[_YY]
_OVR[7]=$AA_MEAS_POINT2[_ZZ]
IF _T_ACT==1
_OVR[7]=_OVR[7]-_L1
ENDIF
IF ((_M_VAR _DEC1)<=3)
IF (_RAX[0]==1)
IF ((_CMEA _DEC1) < 3)
IF NOT (((_CMEA _DEC1)==2) AND ((_M_VAR _DEC1)==2))
_CMEA=_CMEA+1
ENDIF
ENDIF
_CERG=((_CMEA _DEC1)-1)*3 + 41
_OVR[_CERG+0]=_OVR[5] _OVR[_CERG+1]=_OVR[6] _OVR[_CERG+2]=_OVR[7]
_CERG=((_CMEA _DEC1)+ 59)
IF (_RAX[1]==1)
_OVR[_CERG]=$P_EPM[_RAX1]
ELSE
_OVR[_CERG]=_RG[9]
ENDIF
IF ISVAR("_OVR[79]")
_OVR[71+(_M_VAR _DEC1)]=_OVR[4]
ENDIF
ENDIF
IF (_RAX[0]==2)
IF ((_CMEA _DEC2) < 3)
_CMEA=_CMEA+10
ENDIF
_CERG=((_CMEA _DEC2)-1)*3 + 51
_OVR[_CERG+0]=_OVR[5] _OVR[_CERG+1]=_OVR[6] _OVR[_CERG+2]=_OVR[7]
_CERG=((_CMEA _DEC2)+ 62)
IF (_RAX[2]==1)
_OVR[_CERG]=$P_EPM[_RAX2]
ELSE
_OVR[_CERG]=_RG[10]
ENDIF
IF ISVAR("_OVR[79]")
_OVR[74+(_M_VAR _DEC1)]=_OVR[4]
ENDIF
ENDIF
ENDIF
_MA4:
IF _PROT
IF _PROT==9
REPEAT _WRA _WRE
ENDIF
IF ((_M_VAR _DEC1)==4)
WRITE(_LOG,_SN[0],";CYCLE996 Measure Kinematic "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_LOG,_SN[0],";_OVR[40]="<<_CMEA<<" ;_MVAR="<<_M_VAR<<" _PRNUM="<<_PRNUM<<" TCARR="<<_TC<<" _OVR[50]="<<_L1<<" ;L1 TCP="<<NOT _CBIT14<<" G"<<_G17_18_19+16<<" DB="<<_RG[11])
FOR _II=41 TO 67
WRITE(_LOG,_SN[0],";_OVR["<<_II<<"]="<<_OVR[_II]<<" _OVR["<<_II+1<<"]="<<_OVR[_II+1]<<" _OVR["<<_II+2<<"]="<<_OVR[_II+2])
_II=_II+2
IF _II==49
_II=_II+1
ENDIF
ENDFOR
ELSE
WRITE(_LOG,_SN[0],";_OVR[40]="<<_CMEA<<" _MVAR="<<_M_VAR<<" PMxyz="<<_OVR[5]<<"|"<<_OVR[6]<<"|"<<_OVR[7])
ENDIF
ENDIF
IF ((_M_VAR _DEC1)==4)
IF ($TC_CARR36[_TC]=="")
_CMEA=_CMEA-((_CMEA _DEC2)*10)+30
FOR _I=51 TO 59
_OVR[_I]=0
ENDFOR
_OVR[63]=0 _OVR[64]=0 _OVR[65]=0
_VAR[1,3]=0 _VAR[1,4]=0 _VAR[1,5]=0
ENDIF
_SERR=<<"C (_OVR[40]?):"<<_CMEA
IF (((_CMEA _DEC1) < 3) OR ((_CMEA _DEC2) < 3)) GOTOF _ERR1
ENDIF
IF (((_M_VAR _DEC1)<>4) AND ((((_CMEA _DEC1)==3) AND (_RAX[0]==1)) OR (((_CMEA _DEC2)==3) AND (_RAX[0]==2))))
REPEAT _VCA _VCE
FOR _I=0 TO 31
_OVR[_I]=0
ENDFOR
ENDIF
IF ((_M_VAR _DEC1)==4)
CUST_MEACYC(1)
FOR _I=0 TO 31
_OVR[_I]=0
ENDFOR
_RAX[0]=1
REPEAT _VCA _VCE
REPEAT _VMA _VME
REPEAT _VEA _VEE
IF ($TC_CARR36[_TC]<>"")
_RAX[0]=2
REPEAT _VCA _VCE
REPEAT _VMA _VME
ENDIF
REPEAT _VEA _VEE
_CHBIT29=0
IF ($SCS_MEA_FUNCTION_MASK B_AND 'B10000000') OR (_CHBIT[29]==1)
_CHBIT29=1
ENDIF
_NAX=(_M_VAR _DEC6)
IF ((_NAX >= 0) AND (_NAX < 4))
IF ($TC_CARR23[_TC]<>"P")
IF ($TC_CARR36[_TC]<>"")
_VAR[6,0]=_OVR[32]-_OVR[51] _VAR[6,1]=_OVR[33]-_OVR[52] _VAR[6,2]=_OVR[34]-_OVR[53]
ELSE
_VAR[6,0]=_OVR[32]-_OVR[41] _VAR[6,1]=_OVR[33]-_OVR[42] _VAR[6,2]=_OVR[34]-_OVR[43]
ENDIF
ELSE
_VAR[6,0]=_OVR[32] _VAR[6,1]=_OVR[33] _VAR[6,2]=_OVR[34]
ENDIF
IF (($TC_CARR23[_TC]=="T") AND ($TC_CARR36[_TC]<>""))
_VAR[6,0]=_OVR[32]-_OVR[51] _VAR[6,1]=_OVR[33]-_OVR[52] _VAR[6,2]=_OVR[34]-_OVR[43]
ENDIF
_VAR[8,5]=_VAR[6,0] _VAR[8,6]=_VAR[6,1] _VAR[8,7]=_VAR[6,2]
IF _NAX
_VAR[8,8]=_SETV[5]
_VAR[6,3]=_VAR[1,0] _VAR[6,4]=_VAR[1,1] _VAR[6,5]=_VAR[1,2]
IF _CHBIT29==1
_VAR[6,3]=$TC_CARR7[_TC] _VAR[6,4]=$TC_CARR8[_TC] _VAR[6,5]=$TC_CARR9[_TC]
ENDIF
REPEAT _VNA _VNE
ENDIF
REPEAT _VEA _VEE
IF $TC_CARR23[_TC]=="T"
_OVR[1]=_VAR[8,5] _OVR[2]=_VAR[8,6] _OVR[3]=_VAR[8,7]
ENDIF
IF $TC_CARR23[_TC]=="P"
_OVR[4]=_VAR[8,5] _OVR[5]=_VAR[8,6] _OVR[6]=_VAR[8,7]
ENDIF
IF $TC_CARR23[_TC]=="M"
_OVR[4]=-_VAR[8,5] _OVR[5]=-_VAR[8,6] _OVR[6]=-_VAR[8,7]
ENDIF
ENDIF
IF ($TC_CARR36[_TC]<>"")
_NAX=(_M_VAR _DEC7)
IF ((_NAX >= 0) AND (_NAX < 4))
IF ($TC_CARR23[_TC]=="T")
_VAR[6,0]=_OVR[35]-_OVR[51] _VAR[6,1]=_OVR[36]-_OVR[52] _VAR[6,2]=_OVR[37]-_OVR[53]
ELSE
_VAR[6,0]=_OVR[35] _VAR[6,1]=_OVR[36] _VAR[6,2]=_OVR[37]
ENDIF
_VAR[8,5]=_VAR[6,0] _VAR[8,6]=_VAR[6,1] _VAR[8,7]=_VAR[6,2]
IF _NAX
_VAR[8,8]=_SETV[6]
_VAR[6,3]=_VAR[1,3] _VAR[6,4]=_VAR[1,4] _VAR[6,5]=_VAR[1,5]
IF _CHBIT29==1
_VAR[6,3]=$TC_CARR10[_TC] _VAR[6,4]=$TC_CARR11[_TC] _VAR[6,5]=$TC_CARR12[_TC]
ENDIF
REPEAT _VNA _VNE
ENDIF
REPEAT _VEA _VEE
IF $TC_CARR23[_TC]=="T"
_OVR[15]=-_VAR[8,5] _OVR[16]=-_VAR[8,6] _OVR[17]=-_VAR[8,7]
ENDIF
IF $TC_CARR23[_TC]=="P"
_OVR[18]=-_VAR[8,5] _OVR[19]=-_VAR[8,6] _OVR[20]=-_VAR[8,7]
ENDIF
IF $TC_CARR23[_TC]=="M"
_OVR[15]=_VAR[8,5] _OVR[16]=_VAR[8,6] _OVR[17]=_VAR[8,7]
ENDIF
ELSE
_SERR=<<"B (_MVAR dec7):"<<_M_VAR
GOTOF _ERR1
ENDIF
ENDIF
IF $TC_CARR23[_TC]=="T"
IF ($TC_CARR36[_TC]<>"")
_OVR[4]=-(_OVR[15]+_OVR[1]) _OVR[5]=-(_OVR[16]+_OVR[2]) _OVR[6]=-(_OVR[17]+_OVR[3])
ELSE
_OVR[15]=-_OVR[1] _OVR[16]=-_OVR[2] _OVR[17]=-_OVR[3]
_OVR[4]=0 _OVR[5]=0 _OVR[6]=0
ENDIF
ENDIF
IF $TC_CARR23[_TC]=="P"
IF ($TC_CARR36[_TC]<>"")
_OVR[15]=-(_OVR[18]+_OVR[4]) _OVR[16]=-(_OVR[19]+_OVR[5]) _OVR[17]=-(_OVR[20]+_OVR[6])
ELSE
_OVR[18]=-_OVR[4] _OVR[19]=-_OVR[5] _OVR[20]=-_OVR[6]
ENDIF
ENDIF
IF $TC_CARR23[_TC]=="M"
_OVR[1]=-_OVR[4] _OVR[2]=-_OVR[5] _OVR[3]=-_OVR[6]
IF ($TC_CARR36[_TC]<>"")
_OVR[18]=-_OVR[15] _OVR[19]=-_OVR[16] _OVR[20]=-_OVR[17]
ENDIF
ENDIF
IF ((_M_VAR _DEC5)==3)
IF $TC_CARR23[_TC]=="T"
_OVR[1]=0 _OVR[2]=0 _OVR[3]=0
ENDIF
IF $TC_CARR23[_TC]=="P"
_OVR[18]=0 _OVR[19]=0 _OVR[20]=0
ENDIF
IF $TC_CARR23[_TC]=="M"
_OVR[1]=0 _OVR[2]=0 _OVR[3]=0
_OVR[18]=0 _OVR[19]=0 _OVR[20]=0
ENDIF
ENDIF
ENDIF
_OVR[40]=_CMEA
IF _CHBIT29==1
IF ((_M_VAR _DEC6)>0)
_OVR[7]=$TC_CARR7[_TC] _OVR[8]=$TC_CARR8[_TC] _OVR[9]=$TC_CARR9[_TC]
ENDIF
IF ((_M_VAR _DEC7)>0)
_OVR[10]=$TC_CARR10[_TC] _OVR[11]=$TC_CARR11[_TC] _OVR[12]=$TC_CARR12[_TC]
ENDIF
ENDIF
IF (((_M_VAR _DEC1)==4) AND ((_M_VAR _DEC4)==2))
_OVR[38]=_RG[7] _OVR[39]=_RG[8]
MMC("MCYCLES,LM,mz96_erg.com,erg_kin","A")
M0
CYCLE102(0)
ENDIF
IF (_PROT AND ((_M_VAR _DEC1)==4))
IF ((_M_VAR _DEC3)==1)
IF (_PROT==2)
REPEAT _PROE _PRO_T
ENDIF
REPEAT _PROA _PROE
ENDIF
IF (_PROT==2)
REPEAT _PRA_T _PRE_T
ENDIF
IF ($TC_CARR23[_TC]=="T")
REPEAT _PRA_1 _PRE_3
ENDIF
IF ($TC_CARR23[_TC]=="P")
REPEAT _PRE_1 _PRE_4
ENDIF
IF ($TC_CARR23[_TC]=="M")
REPEAT _PRA_1 _PRE_4
ENDIF
WRITE(_LOG,_SN[0],";----------end")
ENDIF
IF (((_M_VAR _DEC1)==4) AND ((_M_VAR _DEC4)==1))
_OVR[38]=_RG[7] _OVR[39]=_RG[8]
MMC("MCYCLES,LM,mz96_erg.com,erg_kin","A")
M0
CYCLE102(0)
ENDIF
IF ((_M_VAR _DEC1)==4)
_SERR=<<""
IF _RG[7]
IF (ABS(((ABS($TC_CARR1[_TC])) - (ABS(_OVR[1])))) > _RG[7]) GOTOF _ERR17
IF (ABS(((ABS($TC_CARR2[_TC])) - (ABS(_OVR[2])))) > _RG[7]) GOTOF _ERR17
IF (ABS(((ABS($TC_CARR3[_TC])) - (ABS(_OVR[3])))) > _RG[7]) GOTOF _ERR17
IF (ABS(((ABS($TC_CARR4[_TC])) - (ABS(_OVR[4])))) > _RG[7]) GOTOF _ERR17
IF (ABS(((ABS($TC_CARR5[_TC])) - (ABS(_OVR[5])))) > _RG[7]) GOTOF _ERR17
IF (ABS(((ABS($TC_CARR6[_TC])) - (ABS(_OVR[6])))) > _RG[7]) GOTOF _ERR17
IF (ABS(((ABS($TC_CARR15[_TC])) - (ABS(_OVR[15])))) > _RG[7]) GOTOF _ERR17
IF (ABS(((ABS($TC_CARR16[_TC])) - (ABS(_OVR[16])))) > _RG[7]) GOTOF _ERR17
IF (ABS(((ABS($TC_CARR17[_TC])) - (ABS(_OVR[17])))) > _RG[7]) GOTOF _ERR17
IF (ABS(((ABS($TC_CARR18[_TC])) - (ABS(_OVR[18])))) > _RG[7]) GOTOF _ERR17
IF (ABS(((ABS($TC_CARR19[_TC])) - (ABS(_OVR[19])))) > _RG[7]) GOTOF _ERR17
IF (ABS(((ABS($TC_CARR20[_TC])) - (ABS(_OVR[20])))) > _RG[7]) GOTOF _ERR17
ENDIF
IF _RG[8]
IF (ABS(((ABS($TC_CARR7[_TC])) - (ABS(_OVR[7])))) > _RG[8]) GOTOF _ERR18
IF (ABS(((ABS($TC_CARR8[_TC])) - (ABS(_OVR[8])))) > _RG[8]) GOTOF _ERR18
IF (ABS(((ABS($TC_CARR9[_TC])) - (ABS(_OVR[9])))) > _RG[8]) GOTOF _ERR18
IF (ABS(((ABS($TC_CARR10[_TC])) - (ABS(_OVR[10])))) > _RG[8]) GOTOF _ERR18
IF (ABS(((ABS($TC_CARR11[_TC])) - (ABS(_OVR[11])))) > _RG[8]) GOTOF _ERR18
IF (ABS(((ABS($TC_CARR12[_TC])) - (ABS(_OVR[12])))) > _RG[8]) GOTOF _ERR18
ENDIF
ENDIF
IF (((_M_VAR _DEC1)==4) AND ((_M_VAR _DEC3)==1))
_SERR=<<_TC
STOPRE
IF (_CHBIT[25]<>1)
SETAL(62315,_SERR)
M0
STOPRE
ENDIF
$TC_CARR1[_TC]=_OVR[1] $TC_CARR2[_TC]=_OVR[2] $TC_CARR3[_TC]=_OVR[3]
$TC_CARR4[_TC]=_OVR[4] $TC_CARR5[_TC]=_OVR[5] $TC_CARR6[_TC]=_OVR[6]
$TC_CARR15[_TC]=_OVR[15] $TC_CARR16[_TC]=_OVR[16] $TC_CARR17[_TC]=_OVR[17]
$TC_CARR18[_TC]=_OVR[18] $TC_CARR19[_TC]=_OVR[19] $TC_CARR20[_TC]=_OVR[20]
; $TC_CARR7[_TC]=_OVR[7] $TC_CARR8[_TC]=_OVR[8] $TC_CARR9[_TC]=_OVR[9]
; $TC_CARR10[_TC]=_OVR[10] $TC_CARR11[_TC]=_OVR[11] $TC_CARR12[_TC]=_OVR[12]
IF NOT ISVAR("$MC_TRAFO5_BASE_TOOL_1") GOTOF _M_TR1
IF ($TC_CARR23[_TC]=="T")
$MC_TRAFO5_PART_OFFSET_1[0]=_OVR[1]
$MC_TRAFO5_PART_OFFSET_1[1]=_OVR[2]
$MC_TRAFO5_PART_OFFSET_1[2]=_OVR[3]
$MC_TRAFO5_JOINT_OFFSET_1[0]=_OVR[4]
$MC_TRAFO5_JOINT_OFFSET_1[1]=_OVR[5]
$MC_TRAFO5_JOINT_OFFSET_1[2]=_OVR[6]
$MC_TRAFO5_BASE_TOOL_1[0]=_OVR[15]
$MC_TRAFO5_BASE_TOOL_1[1]=_OVR[16]
$MC_TRAFO5_BASE_TOOL_1[2]=_OVR[17]
$MC_TRAFO5_JOINT_OFFSET_PART_1[0]=_OVR[18]
$MC_TRAFO5_JOINT_OFFSET_PART_1[1]=_OVR[19]
$MC_TRAFO5_JOINT_OFFSET_PART_1[2]=_OVR[20]
ENDIF
IF ($TC_CARR23[_TC]=="P")
$MC_TRAFO5_JOINT_OFFSET_PART_1[0]=_OVR[1]
$MC_TRAFO5_JOINT_OFFSET_PART_1[1]=_OVR[2]
$MC_TRAFO5_JOINT_OFFSET_PART_1[2]=_OVR[3]
$MC_TRAFO5_BASE_TOOL_1[0]=_OVR[4]
$MC_TRAFO5_BASE_TOOL_1[1]=_OVR[5]
$MC_TRAFO5_BASE_TOOL_1[2]=_OVR[6]
$MC_TRAFO5_JOINT_OFFSET_1[0]=_OVR[15]
$MC_TRAFO5_JOINT_OFFSET_1[1]=_OVR[16]
$MC_TRAFO5_JOINT_OFFSET_1[2]=_OVR[17]
$MC_TRAFO5_PART_OFFSET_1[0]=_OVR[18]
$MC_TRAFO5_PART_OFFSET_1[1]=_OVR[19]
$MC_TRAFO5_PART_OFFSET_1[2]=_OVR[20]
ENDIF
IF ($TC_CARR23[_TC]=="M")
$MC_TRAFO5_JOINT_OFFSET_1[0]=_OVR[1]
$MC_TRAFO5_JOINT_OFFSET_1[1]=_OVR[2]
$MC_TRAFO5_JOINT_OFFSET_1[2]=_OVR[3]
$MC_TRAFO5_BASE_TOOL_1[0]=_OVR[4]
$MC_TRAFO5_BASE_TOOL_1[1]=_OVR[5]
$MC_TRAFO5_BASE_TOOL_1[2]=_OVR[6]
$MC_TRAFO5_JOINT_OFFSET_PART_1[0]=_OVR[15]
$MC_TRAFO5_JOINT_OFFSET_PART_1[1]=_OVR[16]
$MC_TRAFO5_JOINT_OFFSET_PART_1[2]=_OVR[17]
$MC_TRAFO5_PART_OFFSET_1[0]=_OVR[18]
$MC_TRAFO5_PART_OFFSET_1[1]=_OVR[19]
$MC_TRAFO5_PART_OFFSET_1[2]=_OVR[20]
ENDIF
;$MC_TRAFO5_AXIS1_1[0]=_OVR[7]
;$MC_TRAFO5_AXIS1_1[1]=_OVR[8]
;$MC_TRAFO5_AXIS1_1[2]=_OVR[9]
;$MC_TRAFO5_AXIS2_1[0]=_OVR[10]
;$MC_TRAFO5_AXIS2_1[1]=_OVR[11]
;$MC_TRAFO5_AXIS2_1[2]=_OVR[12]
STOPRE
NEWCONF
_M_TR1:
ENDIF
IF ((_M_VAR _DEC1)==4)
CUST_MEACYC(2)
ENDIF
_END:
IF _NEW_PAR
_CHBIT[25]=_CHBIT_S[25] _CHBIT[26]=_CHBIT_S[26] _CHBIT[28]=_CHBIT_S[28] _CHBIT[29]=_CHBIT_S[29]
ENDIF
IF (_T_ACT==0)
TRANS
IF _TRTYP[0]
TRAORI(_TRTYP[0])
ENDIF
IF _TRTYP[1]
TCARR=_TRTYP[1]
ENDIF
G[8]=_NV_ACT
ENDIF
M17
_VMA:
FOR _I=5 TO 7
IF (ABS(_VAR[6,_I+1]) < 0.000001)
_VAR[6,_I+1]=0
ENDIF
IF (ABS(_VAR[8,_I]) < 0.000001)
_VAR[8,_I]=0
ENDIF
ENDFOR
IF _RAX[0]==1
_RG[4]=_OVR[60]-_RG[14] _RG[5]=_OVR[61]-_RG[14] _RG[6]=_OVR[62]-_RG[14]
ENDIF
IF _RAX[0]==2
_RG[4]=_OVR[63]-_RG[15] _RG[5]=_OVR[64]-_RG[15] _RG[6]=_OVR[65]-_RG[15]
ENDIF
_RG[3]=(((_RG[6]-_RG[4]) MOD 360)+360)MOD 360
_RG[2]=(((_RG[5]-_RG[4]) MOD 360)+360)MOD 360
IF _RG[3]<_RG[2]
IF (($TC_CARR23[_TC]=="M") AND (_RAX[0]==1))
_VAR[6,6]=-_VAR[6,6] _VAR[6,7]=-_VAR[6,7] _VAR[6,8]=-_VAR[6,8]
ENDIF
IF ($TC_CARR23[_TC]=="T")
_VAR[6,6]=-_VAR[6,6] _VAR[6,7]=-_VAR[6,7] _VAR[6,8]=-_VAR[6,8]
ENDIF
IF (($TC_CARR23[_TC]=="P") OR (($TC_CARR23[_TC]=="M") AND (_RAX[0]==2)))
_VAR[6,6]=-_VAR[6,6] _VAR[6,7]=-_VAR[6,7] _VAR[6,8]=-_VAR[6,8]
ENDIF
ENDIF
_L1_CALC=1
IF (_RAX[0]==1)
_RG[0]=ABS($TC_CARR7[_TC]) _RG[1]=ABS($TC_CARR8[_TC]) _RG[2]=ABS($TC_CARR9[_TC])
IF ((_G17_18_19==1) AND ((_RG[0]+_RG[1])==0)) OR ((_G17_18_19==2) AND ((_RG[0]+_RG[2])==0)) OR ((_G17_18_19==3) AND ((_RG[1]+_RG[2])==0))
_L1_CALC=0
ENDIF
ENDIF
IF ((($TC_CARR23[_TC]=="T") AND (_L1_CALC==1)) OR (($TC_CARR23[_TC]=="M") AND (_RAX[0]==1)))
_VAR[8,7]=_VAR[8,7]+_L1
ENDIF
IF (_RAX[0]==1)
_VAR[1,0]=_VAR[6,6] _VAR[1,1]=_VAR[6,7] _VAR[1,2]=_VAR[6,8]
_OVR[32]=_VAR[8,5] _OVR[33]=_VAR[8,6] _OVR[34]=_VAR[8,7]
ENDIF
IF (_RAX[0]==2)
_VAR[1,3]=_VAR[6,6] _VAR[1,4]=_VAR[6,7] _VAR[1,5]=_VAR[6,8]
_OVR[35]=_VAR[8,5] _OVR[36]=_VAR[8,6] _OVR[37]=_VAR[8,7]
ENDIF
_VME:
_VEA:
IF (_RAX[0]==1)
IF(_G17_18_19==1)
_OVR[7]=_VAR[1,0] _OVR[8]=_VAR[1,1] _OVR[9]=_VAR[1,2]
ELSE
_VAR[9,5]=_VAR[8,5] _VAR[9,6]=_VAR[8,6] _VAR[9,7]=_VAR[8,7]
IF(_G17_18_19==2)
_OVR[7]=_VAR[1,1] _OVR[8]=_VAR[1,2] _OVR[9]=_VAR[1,0]
_VAR[8,5]=_VAR[9,6] _VAR[8,6]=_VAR[9,7] _VAR[8,7]=_VAR[9,5]
ELSE
_OVR[7]=_VAR[1,2] _OVR[8]=_VAR[1,0] _OVR[9]=_VAR[1,1]
_VAR[8,5]=_VAR[9,7] _VAR[8,6]=_VAR[9,5] _VAR[8,7]=_VAR[9,6]
ENDIF
ENDIF
ENDIF
IF (_RAX[0]==2)
IF(_G17_18_19==1)
_OVR[10]=_VAR[1,3] _OVR[11]=_VAR[1,4] _OVR[12]=_VAR[1,5]
ELSE
_VAR[9,5]=_VAR[8,5] _VAR[9,6]=_VAR[8,6] _VAR[9,7]=_VAR[8,7]
IF(_G17_18_19==2)
_OVR[10]=_VAR[1,4] _OVR[11]=_VAR[1,5] _OVR[12]=_VAR[1,3]
_VAR[8,5]=_VAR[9,6] _VAR[8,6]=_VAR[9,7] _VAR[8,7]=_VAR[9,5]
ELSE
_OVR[10]=_VAR[1,5] _OVR[11]=_VAR[1,3] _OVR[12]=_VAR[1,4]
_VAR[8,5]=_VAR[9,7] _VAR[8,6]=_VAR[9,5] _VAR[8,7]=_VAR[9,6]
ENDIF
ENDIF
ENDIF
_VEE:
_WRA:
IF ((_M_VAR _DEC1)==1)
WRITE(_LOG,_SN[0],";_TC:"<<_TC<<" _RAX[0]:"<<_RAX[0]<<" MT:"<<_MT<<" _DB:"<<_DB<<" _FA:"<<_FA<<" _TSA:"<<_TSA<<" _NAX:"<<_NAX)
WRITE(_LOG,_SN[0],";T"<<_TNR<<" L1:"<<_L1<<" R: "<<_RAD)
ENDIF
WRITE(_LOG,_SN[0],";----------")
_WRE:
_PRA_1:
WRITE(_LOG,_SN[0],";new TCARR="<<_TC<<" "<<$TC_CARR34[_TC])
WRITE(_LOG,_SN[0],""<<_SN[1]<<"1["<<_TC<<"]="<<_OVR[1]<<_SN[1]<<"2["<<_TC<<"]="<<_OVR[2]<<_SN[1]<<"3["<<_TC<<"]="<<_OVR[3]<<" ;I1xyz")
_PRE_1:
WRITE(_LOG,_SN[0],""<<_SN[1]<<"4["<<_TC<<"]="<<_OVR[4]<<_SN[1]<<"5["<<_TC<<"]="<<_OVR[5]<<_SN[1]<<"6["<<_TC<<"]="<<_OVR[6]<<" ;I2xyz")
_PRE_2:
WRITE(_LOG,_SN[0],";"<<_SN[1]<<"7["<<_TC<<"]="<<_OVR[7]<<_SN[1]<<"8["<<_TC<<"]="<<_OVR[8]<<_SN[1]<<"9["<<_TC<<"]="<<_OVR[9]<<" ;V1xyz")
_PRE_V1:
WRITE(_LOG,_SN[0],";"<<_SN[1]<<"10["<<_TC<<"]="<<_OVR[10]<<_SN[1]<<"11["<<_TC<<"]="<<_OVR[11]<<_SN[1]<<"12["<<_TC<<"]="<<_OVR[12]<<" ;V2xyz")
_PRE_V2:
WRITE(_LOG,_SN[0],""<<_SN[1]<<"15["<<_TC<<"]="<<_OVR[15]<<_SN[1]<<"16["<<_TC<<"]="<<_OVR[16]<<_SN[1]<<"17["<<_TC<<"]="<<_OVR[17]<<" ;I3xyz")
_PRE_3:
WRITE(_LOG,_SN[0],""<<_SN[1]<<"18["<<_TC<<"]="<<_OVR[18]<<_SN[1]<<"19["<<_TC<<"]="<<_OVR[19]<<_SN[1]<<"20["<<_TC<<"]="<<_OVR[20]<<" ;I4xyz")
_PRE_4:
_PRA_T:
WRITE(_LOG,_SN[0],";new TRAORI(1)")
IF ($TC_CARR23[_TC]=="T")
WRITE(_LOG,_SN[0],""<<_SN[2]<<"PART_OFFSET_1"<<"[0]="<<_OVR[1]<<" ;T I1xyz")
WRITE(_LOG,_SN[0],""<<_SN[2]<<"PART_OFFSET_1"<<"[1]="<<_OVR[2])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"PART_OFFSET_1"<<"[2]="<<_OVR[3])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"JOINT_OFFSET_1"<<"[0]="<<_OVR[4]<<" ;I2xyz")
WRITE(_LOG,_SN[0],""<<_SN[2]<<"JOINT_OFFSET_1"<<"[1]="<<_OVR[5])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"JOINT_OFFSET_1"<<"[2]="<<_OVR[6])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"BASE_TOOL_1"<<"[0]="<<_OVR[15]<<" ;I3xyz")
WRITE(_LOG,_SN[0],""<<_SN[2]<<"BASE_TOOL_1"<<"[1]="<<_OVR[16])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"BASE_TOOL_1"<<"[2]="<<_OVR[17])
ENDIF
IF ($TC_CARR23[_TC]=="P")
WRITE(_LOG,_SN[0],""<<_SN[2]<<"BASE_TOOL_1"<<"[0]="<<_OVR[4]<<" ;P I2xyz")
WRITE(_LOG,_SN[0],""<<_SN[2]<<"BASE_TOOL_1"<<"[1]="<<_OVR[5])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"BASE_TOOL_1"<<"[2]="<<_OVR[6])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"JOINT_OFFSET_1"<<"[0]="<<_OVR[15]<<" ;I3xyz")
WRITE(_LOG,_SN[0],""<<_SN[2]<<"JOINT_OFFSET_1"<<"[1]="<<_OVR[16])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"JOINT_OFFSET_1"<<"[2]="<<_OVR[17])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"PART_OFFSET_1"<<"[0]="<<_OVR[18]<<" ;I4xyz")
WRITE(_LOG,_SN[0],""<<_SN[2]<<"PART_OFFSET_1"<<"[1]="<<_OVR[19])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"PART_OFFSET_1"<<"[2]="<<_OVR[20])
ENDIF
IF ($TC_CARR23[_TC]=="M")
WRITE(_LOG,_SN[0],""<<_SN[2]<<"JOINT_OFFSET_1"<<"[0]="<<_OVR[1]<<" ;M I1xyz")
WRITE(_LOG,_SN[0],""<<_SN[2]<<"JOINT_OFFSET_1"<<"[1]="<<_OVR[2])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"JOINT_OFFSET_1"<<"[2]="<<_OVR[3])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"BASE_TOOL_1"<<"[0]="<<_OVR[4]<<" ;I2xyz")
WRITE(_LOG,_SN[0],""<<_SN[2]<<"BASE_TOOL_1"<<"[1]="<<_OVR[5])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"BASE_TOOL_1"<<"[2]="<<_OVR[6])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"JOINT_OFFSET_PART_1"<<"[0]="<<_OVR[15]<<" ;I3xyz")
WRITE(_LOG,_SN[0],""<<_SN[2]<<"JOINT_OFFSET_PART_1"<<"[1]="<<_OVR[16])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"JOINT_OFFSET_PART_1"<<"[2]="<<_OVR[17])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"PART_OFFSET_1"<<"[0]="<<_OVR[18]<<" ;I4xyz")
WRITE(_LOG,_SN[0],""<<_SN[2]<<"PART_OFFSET_1"<<"[1]="<<_OVR[19])
WRITE(_LOG,_SN[0],""<<_SN[2]<<"PART_OFFSET_1"<<"[2]="<<_OVR[20])
ENDIF
WRITE(_LOG,_SN[0],";"<<_SN[2]<<"AXIS1_1"<<"[0]="<<_OVR[7]<<" ;V1xyz")
WRITE(_LOG,_SN[0],";"<<_SN[2]<<"AXIS1_1"<<"[1]="<<_OVR[8])
WRITE(_LOG,_SN[0],";"<<_SN[2]<<"AXIS1_1"<<"[2]="<<_OVR[9])
WRITE(_LOG,_SN[0],";"<<_SN[2]<<"AXIS2_1"<<"[0]="<<_OVR[10]<<" ;V2xyz")
WRITE(_LOG,_SN[0],";"<<_SN[2]<<"AXIS2_1"<<"[1]="<<_OVR[11])
WRITE(_LOG,_SN[0],";"<<_SN[2]<<"AXIS2_1"<<"[2]="<<_OVR[12])
_PRE_T:
_PROA:
WRITE(_LOG,_SN[0],";old TCARR="<<_TC<<" "<<$TC_CARR34[_TC])
WRITE(_LOG,_SN[0],"$TC_CARR1["<<_TC<<"]="<<$TC_CARR1[_TC]<<" $TC_CARR2["<<_TC<<"]="<<$TC_CARR2[_TC]<<" $TC_CARR3["<<_TC<<"]="<<$TC_CARR3[_TC])
WRITE(_LOG,_SN[0],"$TC_CARR4["<<_TC<<"]="<<$TC_CARR4[_TC]<<" $TC_CARR5["<<_TC<<"]="<<$TC_CARR5[_TC]<<" $TC_CARR6["<<_TC<<"]="<<$TC_CARR6[_TC])
WRITE(_LOG,_SN[0],";$TC_CARR7["<<_TC<<"]="<<$TC_CARR7[_TC]<<" $TC_CARR8["<<_TC<<"]="<<$TC_CARR8[_TC]<<" $TC_CARR9["<<_TC<<"]="<<$TC_CARR9[_TC])
WRITE(_LOG,_SN[0],";$TC_CARR10["<<_TC<<"]="<<$TC_CARR10[_TC]<<" $TC_CARR11["<<_TC<<"]="<<$TC_CARR11[_TC]<<" $TC_CARR12["<<_TC<<"]="<<$TC_CARR12[_TC])
WRITE(_LOG,_SN[0],"$TC_CARR15["<<_TC<<"]="<<$TC_CARR15[_TC]<<" $TC_CARR16["<<_TC<<"]="<<$TC_CARR16[_TC]<<" $TC_CARR17["<<_TC<<"]="<<$TC_CARR17[_TC])
WRITE(_LOG,_SN[0],"$TC_CARR18["<<_TC<<"]="<<$TC_CARR18[_TC]<<" $TC_CARR19["<<_TC<<"]="<<$TC_CARR19[_TC]<<" $TC_CARR20["<<_TC<<"]="<<$TC_CARR20[_TC])
WRITE(_LOG,_SN[0],";----------")
_PROE:
WRITE(_LOG,_SN[0],";old TRAORI(1)")
WRITE(_LOG,_SN[0],"$MC_TRAFO5_BASE_TOOL_1[0]="<<$MC_TRAFO5_BASE_TOOL_1[0])
WRITE(_LOG,_SN[0],"$MC_TRAFO5_BASE_TOOL_1[1]="<<$MC_TRAFO5_BASE_TOOL_1[1])
WRITE(_LOG,_SN[0],"$MC_TRAFO5_BASE_TOOL_1[2]="<<$MC_TRAFO5_BASE_TOOL_1[2])
WRITE(_LOG,_SN[0],"$MC_TRAFO5_JOINT_OFFSET_1[0]="<<$MC_TRAFO5_JOINT_OFFSET_1[0])
WRITE(_LOG,_SN[0],"$MC_TRAFO5_JOINT_OFFSET_1[1]="<<$MC_TRAFO5_JOINT_OFFSET_1[1])
WRITE(_LOG,_SN[0],"$MC_TRAFO5_JOINT_OFFSET_1[2]="<<$MC_TRAFO5_JOINT_OFFSET_1[2])
WRITE(_LOG,_SN[0],"$MC_TRAFO5_PART_OFFSET_1[0]="<<$MC_TRAFO5_PART_OFFSET_1[0])
WRITE(_LOG,_SN[0],"$MC_TRAFO5_PART_OFFSET_1[1]="<<$MC_TRAFO5_PART_OFFSET_1[1])
WRITE(_LOG,_SN[0],"$MC_TRAFO5_PART_OFFSET_1[2]="<<$MC_TRAFO5_PART_OFFSET_1[2])
WRITE(_LOG,_SN[0],"$MC_TRAFO5_JOINT_OFFSET_PART_1[0]="<<$MC_TRAFO5_JOINT_OFFSET_PART_1[0])
WRITE(_LOG,_SN[0],"$MC_TRAFO5_JOINT_OFFSET_PART_1[1]="<<$MC_TRAFO5_JOINT_OFFSET_PART_1[1])
WRITE(_LOG,_SN[0],"$MC_TRAFO5_JOINT_OFFSET_PART_1[2]="<<$MC_TRAFO5_JOINT_OFFSET_PART_1[2])
WRITE(_LOG,_SN[0],";$MC_TRAFO5_AXIS1_1[0]="<<$MC_TRAFO5_AXIS1_1[0])
WRITE(_LOG,_SN[0],";$MC_TRAFO5_AXIS1_1[1]="<<$MC_TRAFO5_AXIS1_1[1])
WRITE(_LOG,_SN[0],";$MC_TRAFO5_AXIS1_1[2]="<<$MC_TRAFO5_AXIS1_1[2])
WRITE(_LOG,_SN[0],";$MC_TRAFO5_AXIS2_1[0]="<<$MC_TRAFO5_AXIS2_1[0])
WRITE(_LOG,_SN[0],";$MC_TRAFO5_AXIS2_1[1]="<<$MC_TRAFO5_AXIS2_1[1])
WRITE(_LOG,_SN[0],";$MC_TRAFO5_AXIS2_1[2]="<<$MC_TRAFO5_AXIS2_1[2])
_PRO_T:
_VCA:
IF (_RAX[0]==1)
_VAR[0,0]=_OVR[41] _VAR[0,1]=_OVR[42] _VAR[0,2]=_OVR[43]
_VAR[0,3]=_OVR[44] _VAR[0,4]=_OVR[45] _VAR[0,5]=_OVR[46]
_VAR[0,6]=_OVR[47] _VAR[0,7]=_OVR[48] _VAR[0,8]=_OVR[49]
ENDIF
IF (_RAX[0]==2)
_VAR[0,0]=_OVR[51] _VAR[0,1]=_OVR[52] _VAR[0,2]=_OVR[53]
_VAR[0,3]=_OVR[54] _VAR[0,4]=_OVR[55] _VAR[0,5]=_OVR[56]
_VAR[0,6]=_OVR[57] _VAR[0,7]=_OVR[58] _VAR[0,8]=_OVR[59]
ENDIF
_TR_LIM=ABS(_TNVL)/2.001
IF (_TR_LIM>60) OR ((_MVAR _DEC1)<>4)
_TR_LIM=0
ENDIF
_VCA1: $AC_MEAS_VALID=0
$AA_MEAS_POINT1[_XXA]=_VAR[0,0] $AA_MEAS_POINT1[_YYA]=_VAR[0,1] $AA_MEAS_POINT1[_ZZA]=_VAR[0,2]
$AA_MEAS_POINT2[_XXA]=_VAR[0,3] $AA_MEAS_POINT2[_YYA]=_VAR[0,4] $AA_MEAS_POINT2[_ZZA]=_VAR[0,5]
$AA_MEAS_POINT3[_XXA]=_VAR[0,6] $AA_MEAS_POINT3[_YYA]=_VAR[0,7] $AA_MEAS_POINT3[_ZZA]=_VAR[0,8]
$AC_MEAS_P1_COORD=0 $AC_MEAS_P2_COORD=0 $AC_MEAS_P3_COORD=0
$AC_MEAS_INPUT[0]=_TR_LIM
IF ISVAR("$MN_CC_ACTIVE_IN_CHAN_C996")
_CCM=$MN_CC_ACTIVE_IN_CHAN_C996[0]
IF _CCM
_INARRAY[0]=_VAR[0,0] _INARRAY[1]=_VAR[0,1] _INARRAY[2]=_VAR[0,2]
_INARRAY[3]=_VAR[0,3] _INARRAY[4]=_VAR[0,4] _INARRAY[5]=_VAR[0,5]
_INARRAY[6]=_VAR[0,6] _INARRAY[7]=_VAR[0,7] _INARRAY[8]=_VAR[0,8]
_INARRAY[9]=_TR_LIM
CC_MEASURE(_INARRAY,_OUTARRAY,_LOG)
_SERR=<<"CC Option ? "
IF _LOG==1 GOTOF _ERR9
ELSE
_SERR=<<"$MN_CC_ACTIVE_IN_CHAN_C996[0] ?"
GOTOF _ERR9
ENDIF
ELSE
IF ($AN_NCK_VERSION>=720000)
$AC_MEAS_TYPE=29
_LOG=MEASURE()
_SERR=<<"Licence ?"
IF _LOG==1 GOTOF _ERR9
ELSE
_SERR=<<"CC Option or Licence ?"
GOTOF _ERR9
ENDIF
ENDIF
IF _LOG
_SERR=<<"A "
IF _LOG==13 GOTOF _ERR9
IF _LOG==9 GOTOF _ERR9
_SERR=<<"B "
IF _LOG==3 GOTOF _ERR9
_SERR=<<"C "
IF _LOG==4 GOTOF _ERR9
_SERR=<<"D "
IF _LOG==5 GOTOF _ERR9
IF (_RAX[0]==1)
_SERR=<<"G Axis:"<<$TC_CARR35[_TC]<<" ->TVLmin="<<2*$AC_MEAS_RESULTS[9]
ENDIF
IF (_RAX[0]==2)
_SERR=<<"G Axis:"<<$TC_CARR36[_TC]<<" -> TVLmin="<<2*$AC_MEAS_RESULTS[9]
ENDIF
IF _LOG==11 GOTOF _ERR9
_SERR=<<"? "<<_LOG
GOTOF _ERR9
ENDIF
IF _CCM
_VAR[6,6]=_OUTARRAY[0] _VAR[6,7]=_OUTARRAY[1] _VAR[6,8]=_OUTARRAY[2]
_VAR[8,5]=_OUTARRAY[3]*_FAK2 _VAR[8,6]=_OUTARRAY[4]*_FAK2 _VAR[8,7]=_OUTARRAY[5]*_FAK2
ELSE
_VAR[6,6]=$AC_MEAS_RESULTS[0] _VAR[6,7]=$AC_MEAS_RESULTS[1] _VAR[6,8]=$AC_MEAS_RESULTS[2]
_VAR[8,5]=$AC_MEAS_RESULTS[3]*_FAK2 _VAR[8,6]=$AC_MEAS_RESULTS[4]*_FAK2 _VAR[8,7]=$AC_MEAS_RESULTS[5]*_FAK2
ENDIF
_VCE:
_VNA:
IF _NEW_PAR
IF _DMODE==3
IF _NAX==3
_NAX=1
ELSE
IF _NAX==2
_NAX=3
ELSE
IF _NAX==1
_NAX=2
ENDIF
ENDIF
ENDIF
ENDIF
IF _DMODE==2
IF _NAX==1
_NAX=3
ELSE
IF _NAX==2
_NAX=1
ELSE
IF _NAX==3
_NAX=2
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
_SERR=<<"E"
IF(_G17_18_19==1)
CASE (_NAX) OF 0 GOTOF CALCNO 1 GOTOF CALCPX 2 GOTOF CALCPY 3 GOTOF CALCPZ DEFAULT GOTOF _ERR9
ELSE
IF(_G17_18_19==2)
CASE (_NAX) OF 0 GOTOF CALCNO 1 GOTOF CALCPY 2 GOTOF CALCPZ 3 GOTOF CALCPX DEFAULT GOTOF _ERR9
ELSE
CASE (_NAX) OF 0 GOTOF CALCNO 1 GOTOF CALCPZ 2 GOTOF CALCPX 3 GOTOF CALCPY DEFAULT GOTOF _ERR9
ENDIF
ENDIF
CALCNO:
_VAR[8,5]=_VAR[6,0] _VAR[8,6]=_VAR[6,1] _VAR[8,7]=_VAR[6,2]
GOTOF _VNE
CALCPX:
_VAR[8,5]=_VAR[8,8]
IF (_VAR[6,3]==0)
IF _PROT==9
WRITE(_LOG,_SN[0],";position of rotary axis does not allow the predefined point of intersection in X-orientation, original calculated point of intersection has been kept")
ENDIF
GOTOB CALCNO
ENDIF
_VAR[8,6]=_VAR[6,1]+((_VAR[8,5]-_VAR[6,0])/_VAR[6,3])*_VAR[6,4]
_VAR[8,7]=_VAR[6,2]+((_VAR[8,5]-_VAR[6,0])/_VAR[6,3])*_VAR[6,5]
GOTOF _VNE
CALCPY:
_VAR[8,6]=_VAR[8,8]
IF (_VAR[6,4]==0)
IF _PROT==9
WRITE(_LOG,_SN[0],";position of rotary axis does not allow the predefined point of intersection in Y-orientation, original calculated point of intersection has been kept")
ENDIF
GOTOB CALCNO
ENDIF
_VAR[8,5]=_VAR[6,0]+((_VAR[8,6]-_VAR[6,1])/_VAR[6,4])*_VAR[6,3]
_VAR[8,7]=_VAR[6,2]+((_VAR[8,6]-_VAR[6,1])/_VAR[6,4])*_VAR[6,5]
GOTOF _VNE
CALCPZ:
_VAR[8,7]=_VAR[8,8]
IF (_VAR[6,5]==0)
IF _PROT==9
WRITE(_LOG,_SN[0],";position of rotary axis does not allow the predefined point of intersection in Z-orientation, original calculated point of intersection has been kept")
ENDIF
GOTOB CALCNO
ENDIF
_VAR[8,5]=_VAR[6,0]+((_VAR[8,7]-_VAR[6,2])/_VAR[6,5])*_VAR[6,3]
_VAR[8,6]=_VAR[6,1]+((_VAR[8,7]-_VAR[6,2])/_VAR[6,5])*_VAR[6,4]
_VNE:
_ERR0: STOPRE
_OVI[9]=61421
N699600 SETAL(61421,_SERR)
RET
_ERR1: STOPRE
_OVI[9]=61422
N699601 SETAL(61422,_SERR)
RET
_ERR2: STOPRE
_OVI[9]=61423
N699602 SETAL(61423,_SERR)
RET
_ERR3: STOPRE
_OVI[9]=61424
SETAL(61424,_SERR)
RET
_ERR4: STOPRE
_OVI[9]=61425
N699604 SETAL(61425,_SERR)
RET
_ERR5: STOPRE
_OVI[9]=61426
N699605 SETAL(61426,_SERR)
RET
_ERR6: STOPRE
_OVI[9]=61427
N699606 SETAL(61427,_SERR)
RET
_ERR7: STOPRE
_OVI[9]=61428
N699607 SETAL(61428,_SERR)
RET
_ERR8: STOPRE
_OVI[9]=61429
N699608 SETAL(61429,_SERR)
RET
_ERR9: STOPRE
_OVI[9]=61430
N699609 SETAL(61430,_SERR)
RET
_ERR10: _ALARM=61019 _OVI[9]=_ALARM
STOPRE
N699610 SETAL(_ALARM,_SERR)
RET
_ERR11: _ALARM=61167 _OVI[9]=_ALARM
STOPRE
N699611 SETAL(_ALARM,_SERR)
RET
_ERR99: STOPRE
_OVI[9]=61099
N699699 SETAL(61099,_SERR)
_ERR17: STOPRE
_OVI[9]=62317
N699617 SETAL(62317,_SERR)
RET
_ERR18: STOPRE
_OVI[9]=62318
N699618 SETAL(62318,_SERR)
RET
_ERR19: STOPRE
_OVI[9]=61019
N699619 SETAL(61019,_SERR)
RET
