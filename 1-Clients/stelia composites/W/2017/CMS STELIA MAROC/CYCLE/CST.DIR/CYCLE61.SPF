PROC CYCLE61(REAL __RTP,REAL _RFP,REAL __SDIS,REAL __DP,REAL _PA,REAL _PO,REAL __LENG,REAL __WID,REAL __MID,REAL __MIDA,REAL __FALD,REAL _FFP1,INT _VARI,INT _LIM,INT _DMODE,INT _AMODE) SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.07.00 ;DATE: 2011-11-03
;Cycle support HMIsl
;Extended face milling
DEF AXIS _XX,_YY,_ZZ
DEF INT _BA1,_BA10,_HX,_HY,_HZ,_IX,_IZ,_PMX,_PMY,_PMYY,_MODI,_M_ROT,_M_MIRROR_X,_M_MIRROR_Y,_ROT_Z,_WTYP
DEF INT _LIM1,_LIM2,_LIM3,_LIM4,_LIM_NUM,_TYP,_H_INT,_PMX_KA,_PMY_KA,_DMODE1,_AMODE1,_AMODE2,_AMODE4,_AMODE5,_ZZSD[2]
DEF INT _II,_ARTIS[16]
DEF REAL _DP,_FALD,_LENG,_WID,_MID,_MIDA,_RTP,_SDIS
DEF REAL _APX,_APY,_AY1,_AY2,_AX,_DPA,_DPR,_DPZ,_EX,_EY,_FAK1,_FDP,_FDP1,_HEX,_HEY,_HEZ,_H_RE,_LX,_LY1,_MAX,_STA,_W_FREI
DEF REAL _LY2,_LY,_PMZ,_SDZ,_SKX,_SKY,_SKZ,_WZR,_WZX,_WZY,_XS,_YS,_VER_X,_VER_Y,_MIDA_Y,_WZRIN,_WZXIN,_WZYIN,_WZZIN,_WANG
DEF STRING[30] _S_FFP1
DEF INT _TEMP
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE61_MPF",_SERR
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE61_MPF")
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,";! only for internal diagnostics ! Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T-Number $P_TOOLNO="<<$P_TOOLNO)
WRITE(_TEMP,_TEMP_FILE,";D-Number $P_TOOL="<<$P_TOOL)
IF (($P_TOOL)AND($P_TOOLNO))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$P_AD[1]<<"    ; Tool type")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$P_AD[2]<<"    ; Cutting edge position")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$P_AD[6]<<"    ; Tool geo radius")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP15[1,1]="<<$P_AD[15]<<"    ; Tool wear radius")
IF (($P_AD[1]>=200) AND ($P_AD[1]<300))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP24[1,1]="<<$P_AD[24]<<"    ; Tool tip angle")
ENDIF
IF (($P_AD[1]>=100) AND ($P_AD[1]<200))
IF ($P_AD[1]<>145)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP11[1,1]="<<$P_AD[11]<<"    ; Tool angle")
ENDIF
WRITE(_TEMP,_TEMP_FILE,";$TC_DP35[1,1]="<<$P_AD[35]<<"    ; Number of teeth")
ENDIF
IF ($P_AD[1]==140)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP7[1,1]="<<$P_AD[7]<<"   ; Outside radius ")
ENDIF
IF ($P_AD[1]==240)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP9[1,1]="<<$P_AD[9]<<"   ; Thread pitch")
ENDIF
ENDIF
IF ($P_TOOLNO>0)
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
ELSE
WRITE(_TEMP,_TEMP_FILE,";T0")
WRITE(_TEMP,_TEMP_FILE,";M6")
ENDIF
IF ($P_TOOL==0)
WRITE(_TEMP,_TEMP_FILE,";D0")
ELSE
WRITE(_TEMP,_TEMP_FILE,";D1")
ENDIF
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19")
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...")
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...")
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/... $P_F_TYPE="<<$P_F_TYPE)
IF($P_F_TYPE==11)OR($P_F_TYPE==33)
WRITE(_TEMP,_TEMP_FILE,"FZ="<<$P_FZ)
ELSE
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F)
ENDIF
IF $P_MSNUM==0
WRITE(_TEMP,_TEMP_FILE,";$P_MSNUM=0 no spindle existant")
ELSE
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$P_MSNUM])
ENDIF
WRITE(_TEMP,_TEMP_FILE,"_ZSD[1]="<<_ZSD[1])
WRITE(_TEMP,_TEMP_FILE,"CYCLE61("<<__RTP<<","<<_RFP<<","<<__SDIS<<","<<__DP<<","<<_PA<<","<<_PO<<","<<__LENG<<","<<__WID<<","<<__MID<<","<<__MIDA<<","<<__FALD<<","<<_FFP1<<","<<_VARI<<","<<_LIM<<","<<_DMODE<<","<<_AMODE<<")")
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
DIAMCYCOF
_DP=__DP _FALD=__FALD _LENG=__LENG _MID=__MID _MIDA=__MIDA _RTP=__RTP _SDIS=__SDIS _WID=__WID
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
_MODI=0 _M_ROT=0 _M_MIRROR_X=0 _M_MIRROR_Y=0 _ROT_Z=0 _VER_X=0 _VER_Y=0
_SDIS=ABS(_SDIS) _FALD=ABS(_FALD) _VARI=ABS(_VARI)
_STA=0
_FDP=_SDIS
_FDP1=_SDIS
_DMODE1=_DMODE _DEC1
IF(_DMODE1<0)OR(_DMODE1>3) GOTOF _FEHL6
IF(_DMODE1>0)AND($P_GG[6]<>_DMODE1)
G[6]=_DMODE1
ENDIF
_XX=$P_AXN1 _YY=$P_AXN2 _ZZ=$P_AXN3
_SKZ=$P_ACTFRAME[_ZZ,SC]
_SDIS=_SDIS/_SKZ _MID=_MID/_SKZ _FALD=_FALD/_SKZ
_LIM1=_LIM MOD 10 _LIM2=TRUNC(_LIM/10) MOD 10
_LIM3=TRUNC(_LIM/100) MOD 10 _LIM4=TRUNC(_LIM/1000) MOD 10
IF(_LIM1<0)OR(_LIM1>1)OR(_LIM2<0)OR(_LIM2>1)OR(_LIM3<0)OR(_LIM3>1)OR(_LIM4<0)OR(_LIM4>1) GOTOF _FEHL2
_LIM_NUM=_LIM1+_LIM2+_LIM3+_LIM4
IF(_LIM_NUM==4) GOTOF _FEHL12
IF(_ZSD[1]==-1)
_ZZSD[1]=($SCS_FUNCTION_MASK_MILL_SET B_AND 'B100') DIV 4
ELSE
_ZZSD[1]=_ZSD[1]
IF(_ZZSD[1]<0)OR(_ZZSD[1]>1) GOTOF _FEHL22
ENDIF
IF(_ZZSD[1]==0)
_SDZ=_SDIS
ELSE
_SDZ=0
ENDIF
IF(_AMODE<0)
_SERR=<<"(_AMODE)"
GOTOF _FEHL23
ENDIF
_AMODE1=_AMODE _DEC1
IF(_AMODE1>1)
_SERR=<<"(_AMODE: dec1)"
GOTOF _FEHL21
ENDIF
IF(_AMODE1==1)
IF(_RTP==_RFP) GOTOF _FEHL3
IF(_RTP>_RFP)
_DP=_RFP-ABS(_DP)
ELSE
_DP=_RFP+ABS(_DP)
ENDIF
ENDIF
_AMODE4=_AMODE _DEC4 _AMODE5=_AMODE _DEC5
IF(_AMODE4>1)
_SERR=<<"(_AMODE: dec4)"
GOTOF _FEHL21
ENDIF
IF(_AMODE4==1)
_LENG=_LENG-_PA
ENDIF
IF(_AMODE5==1)
_WID=_WID-_PO
ENDIF
IF $P_SDIR[$P_MSNUM]==5
SETAL(61102)
RET
ENDIF
IF($P_TOOLNO==0) GOTOF _FEHL0
IF($P_TOOL==0) GOTOF _FEHL1
IF($P_TOOLR<=0) GOTOF _FEHL4
_BA1=_VARI MOD 10 _BA10=TRUNC(_VARI/10)
IF(_BA1<1) OR (_BA1>2) GOTOF _FEHL2
IF(_BA10<1) OR (_BA10>4) GOTOF _FEHL2
IF(_LENG==0) OR (_WID==0) GOTOF _FEHL5
IF(_FFP1<=0) GOTOF _FEHL8
IF($P_F_TYPE==1)OR($P_F_TYPE==3)
_S_FFP1="G95 F"<<_FFP1
ELSE
IF($P_F_TYPE==11)OR($P_F_TYPE==33)
_WTYP=$P_AD[1]
IF(_WTYP<100)OR(_WTYP>199) GOTOF _FEHL26
_S_FFP1="G95 FZ="<<_FFP1
ELSE
_S_FFP1="G94 F"<<_FFP1
ENDIF
ENDIF
EXECSTRING(_S_FFP1)
IF(_SC_TOOL_VALI[0]<>0)
_ARTIS[0]=_SC_TOOL_VALI[0] _ARTIS[1]=_SC_TOOL_VALI[1] _ARTIS[2]=_SC_TOOL_VALI[2] _ARTIS[3]=_SC_TOOL_VALI[3] _ARTIS[4]=_SC_TOOL_VALI[4] _ARTIS[5]=_SC_TOOL_VALI[5] _ARTIS[6]=_SC_TOOL_VALI[6]
_ARTIS[7]=_SC_TOOL_ON_OFF[0] _ARTIS[8]=_SC_TOOL_ON_OFF[1]
IF(_ARTIS[0] MOD 10 <>1)
GOTOF _FEHL25
ENDIF
_II=_ARTIS[0] DIV 10
IF((_II MOD 10 > 3) OR (_II MOD 10 < 1))
GOTOF _FEHL25
ELSE
_ARTIS[11]=_II MOD 10
IF(_ARTIS[3]<>0)
_ARTIS[13]=_ARTIS[1]
ENDIF
IF(_ARTIS[6]<>0)
_ARTIS[14]=_ARTIS[4]
ENDIF
ENDIF
_II=_II DIV 10
IF((_II MOD 10 > 2) OR (_II MOD 10 < 0))
GOTOF _FEHL25
ELSE
_ARTIS[12]=_II MOD 10
ENDIF
IF(((_VARI MOD 10 )- 1)<>_ARTIS[12]) AND (_ARTIS[11]<>1)
_ARTIS[0]=0 _ARTIS[11]=0
ENDIF
ENDIF
IF(_BA10==1)OR(_BA10==3)
IF((_LIM1+_LIM2)==1)AND((_LIM3+_LIM4)==0) GOTOF _FEHL15
IF((_LIM1+_LIM2)==2) GOTOF _FEHL13
ENDIF
IF(_BA10==2)OR(_BA10==4)
IF((_LIM3+_LIM4)==1)AND((_LIM1+_LIM2)==0) GOTOF _FEHL15
IF((_LIM3+_LIM4)==2) GOTOF _FEHL13
ENDIF
_DPR=ABS(_RFP-_DP)
_PMZ=_RTP-_RFP
IF(_RFP==_DP) GOTOF _RET
IF(_RTP<>_RFP)
IF(_PMZ/ABS(_PMZ) <> (_RFP-_DP)/_DPR) GOTOF _FEHL3
ENDIF
_PMZ=(_RFP-_DP)/_DPR
IF(_RFP==_RTP)
_RTP=_RFP+_SDIS*_PMZ
ENDIF
IF(_LIM_NUM==0)
_MODI=0
ENDIF
IF(_LIM_NUM==1)
_MODI=1
ENDIF
IF(_LIM_NUM==2)
IF((_LIM1+_LIM2)<>1)
_MODI=2
ELSE
_MODI=3
ENDIF
ENDIF
IF(_LIM_NUM==3)
_MODI=4
ENDIF
IF(_LENG>0)
_PMX=1
ELSE
_PMX=-1
ENDIF
IF(_WID>0)
_PMY=1
ELSE
_PMY=-1
ENDIF
_LX=ABS(_LENG) _LY=ABS(_WID)
_APX=_PA _APY=_PO
IF(_LIM2==0)AND(_LIM4==1)
_ROT_Z=90
_LX=ABS(_WID) _LY=ABS(_LENG)
_H_INT=_PMX _PMX=_PMY _PMY=-_H_INT
_M_ROT=1
ENDIF
IF(_LIM1==1)AND(_LIM4==0)
_ROT_Z=-180
_PMX=-_PMX _PMY=-_PMY
ENDIF
IF(_LIM1==0)AND(_LIM3==1)AND(_M_ROT==0)
_ROT_Z=-90
_LX=ABS(_WID) _LY=ABS(_LENG)
_H_INT=_PMX _PMX=-_PMY _PMY=_H_INT
_M_ROT=1
ENDIF
IF(_PMX==-1)
IF(_MODI==0)OR(_MODI==2)OR(_MODI==4)
_VER_X=0 _M_MIRROR_X=1
ENDIF
IF(_MODI==1)OR(_MODI==3)
_VER_X=-_LX _M_MIRROR_X=0
ENDIF
ENDIF
IF(_PMY==-1)
IF(_MODI==0)OR(_MODI==1)OR(_MODI==2)
_VER_Y=0 _M_MIRROR_Y=1
ENDIF
IF(_MODI==3)OR(_MODI==4)
_VER_Y=-_LY _M_MIRROR_Y=0
ENDIF
ENDIF
N10 $P_CYCFRAME=$P_CYCFRAME:CTRANS(_XX,_APX*1/_FAK1,_YY,_APY*1/_FAK1)
N20 $P_CYCFRAME=$P_CYCFRAME:CRPL(0,_STA+_ROT_Z)
N30 $P_CYCFRAME=$P_CYCFRAME:CTRANS(_XX,_VER_X*1/_FAK1,_YY,_VER_Y*1/_FAK1)
IF(_M_MIRROR_X==1)
N40 $P_CYCFRAME=$P_CYCFRAME:CMIRROR(_XX)
ENDIF
IF(_M_MIRROR_Y==1)
N50 $P_CYCFRAME=$P_CYCFRAME:CMIRROR(_YY)
ENDIF
IF((_BA10==1)OR(_BA10==3))XOR(_M_ROT==1)
_XX=$P_AXN2 _YY=$P_AXN1
_H_RE=_LX _LX=_LY _LY=_H_RE
ENDIF
_SKX=$P_ACTFRAME[_XX,SC] _SKY=$P_ACTFRAME[_YY,SC]
IF(_SKX<>_SKY)AND(_STA<>0)
REPEAT _TRANS_LOESCHEN_A _TRANS_LOESCHEN_E
GOTOF _FEHL9
ENDIF
IF(_FALD>=_DPR)
_FALD=_DPR
ENDIF
_DPA=_DPR-_FALD
IF((_MID<=0) AND (_BA1==1))
_SERR=<<"(DZ)"
GOTOF _FEHL23
ENDIF
IF(((_SDZ+_DPA)>_MID) AND (_BA1==1))
_HZ=(_SDZ+_DPA)/_MID+0.4999
ELSE
_HZ=1
ENDIF
_HEZ=(_SDZ+_DPA)/_HZ
IF(_HZ==1)
_HEZ=_DPA
ENDIF
IF(_BA1==2)
_HEZ=_FALD _HZ=1
ENDIF
_TYP=$P_AD[1]
_WZRIN=$P_TOOLR*_FAK1
IF(_TYP==140)
_WZR=$P_AD[7]*_FAK1
_WANG=$P_AD[11]
IF(_WZR>_WZRIN)AND(_WANG>90)
REPEAT _TRANS_LOESCHEN_A _TRANS_LOESCHEN_E
GOTOF _FEHL19
ENDIF
IF ((_WANG<0) OR (_WANG>90))
REPEAT _TRANS_LOESCHEN_A _TRANS_LOESCHEN_E
GOTOF _FEHL27
ENDIF
IF(_WZR==0)
IF(_MODI==0)
IF(_WANG==0)
_WZR=_WZRIN
GOTOF _END_WZR
ENDIF
IF(_WANG<90)
_WZR=_WZRIN+_HEZ/TAN(_WANG)
ELSE
_WZR=_WZRIN
ENDIF
ELSE
IF(_WANG<90)
REPEAT _TRANS_LOESCHEN_A _TRANS_LOESCHEN_E
GOTOF _FEHL17
ELSE
_WZR=_WZRIN
ENDIF
ENDIF
ELSE
IF(_WZR<>_WZRIN)AND(_WANG==90)
REPEAT _TRANS_LOESCHEN_A _TRANS_LOESCHEN_E
GOTOF _FEHL20
ENDIF
IF((_WANG<90)AND(_WANG>0)AND(_WZR==_WZRIN))OR(_WZR<_WZRIN)
REPEAT _TRANS_LOESCHEN_A _TRANS_LOESCHEN_E
GOTOF _FEHL16
ENDIF
IF((_WANG>0)AND(_WANG<90))
_WZZIN=(_WZR-_WZRIN)*TAN(_WANG)
IF(_WZZIN<_HEZ)
_SERR=<<"(DZ, und WZ-Eingabedaten)"
GOTOF _FEHL24
ENDIF
ENDIF
ENDIF
_FDP1=_WZR-_WZRIN
ELSE
_WZR=_WZRIN
ENDIF
_END_WZR:
IF(_LIM_NUM>0)
_FDP1=0
ENDIF
_AMODE2=_AMODE _DEC2
IF(_AMODE2<0)OR(_AMODE2>1) GOTOF _FEHL11
IF(_MIDA<=0)
_SERR=<<"(DXY)"
GOTOF _FEHL23
ENDIF
IF(_AMODE2==1)
IF(_MIDA>100)
_SERR=<<"(DXY [%])"
GOTOF _FEHL21
ELSE
_MIDA=_MIDA/100*(2*_WZRIN)
ENDIF
ENDIF
_FDP=_FDP/_SKY _MIDA_Y=_MIDA/_SKY _FDP1=_FDP1/_SKX _MIDA=_MIDA/_SKX
_WZXIN=_WZRIN/_SKX _WZX=_WZR/_SKX
_WZYIN=_WZRIN/_SKY _WZY=_WZR/_SKY
IF(_MODI>0)
IF(_MODI==1)OR(_MODI==2)
_LX=_LX-_MODI*(_WZX-_WZXIN)
ENDIF
IF(_MODI==3)OR(_MODI==4)
_LX=_LX-(_MODI-2)*(_WZX-_WZXIN) _LY=_LY-(_WZY-_WZYIN)
ENDIF
IF(_MODI==2)OR(_MODI==4)
IF(2*_WZXIN>_LX)
REPEAT _TRANS_LOESCHEN_A _TRANS_LOESCHEN_E
GOTOF _FEHL18
ENDIF
ENDIF
ENDIF
IF(_MIDA>2*_WZXIN)
REPEAT _TRANS_LOESCHEN_A _TRANS_LOESCHEN_E
GOTOF _FEHL7
ENDIF
_YS=-(_FDP+_WZY)
_AY1=-(_FDP+_WZY)
IF(_BA10==1)OR(_BA10==2)
_AY2=-(_FDP+_WZY)
ENDIF
IF(_BA1==2)
_EX=-(_FDP+_WZX) _EY=-(_FDP+_WZY)
ELSE
_EX=0 _EY=0
ENDIF
IF(_MODI==0)
IF(_FDP1==0)
_FDP1=_SDIS
ENDIF
IF(_LX<=_MIDA)OR((_LX+_FDP1)<=_MIDA)
_HX=0 _HEX=0
ELSE
_HX=(_LX-_MIDA+_FDP1)/_MIDA+0.4999
_HEX=(_LX-_MIDA+_FDP1)/_HX
ENDIF
IF(_HX==0)
_XS=_LX/2
ELSE
_XS=(_MIDA-_WZX)
ENDIF
ENDIF
IF(_MODI==1)
IF(_LX>_MIDA)
_HX=_LX/_MIDA+0.4999
ELSE
_HX=1
ENDIF
_HEX=_LX/_HX
_XS=(_HEX-_WZXIN)
_HX=_HX-1
ENDIF
IF(_MODI==2)
IF((_LX-2*_WZXIN)>_MIDA)
_HX=(_LX-2*_WZXIN)/_MIDA+0.4999
ELSE
_HX=1
ENDIF
_HEX=(_LX-2*_WZXIN)/_HX
IF(_HEX==0)
_HX=0
ENDIF
_XS=_WZX
ENDIF
IF(_MODI<=2)
IF(_BA1==2)
_LY1=_LY+2*(_FDP+_WZY)
_LY2=_LY+2*(_FDP+_WZY)
ELSE
IF(_BA10==1) OR (_BA10==2)
_LY1=_LY+_FDP+_WZY
ELSE
IF(_MIDA>_WZXIN)
_LY1=_LY+_FDP+_WZY
_LY2=_LY
ELSE
_LY1=_LY+_FDP+_WZY+_WZYIN-_MIDA*_SKX/_SKY
_LY2=_LY+2*(_WZYIN-_MIDA*_SKX/_SKY)
ENDIF
ENDIF
IF(_HX==0)
_LY1=_LY+_FDP+_WZY _LY2=_LY+_FDP+_WZY
ENDIF
ENDIF
ENDIF
IF(_MODI==3)
IF(_LY*_SKY>=_LX*_SKX)
IF(_LX>_MIDA)
_HX=_LX/_MIDA+0.4999
ELSE
_HX=1
ENDIF
_HEX=_LX/_HX
_HEY=_HEX*_SKX/_SKY
_XS=(_HEX-_WZXIN)
_LY1=_LY-_WZYIN-(_HX-1)*_HEY
IF(_LY1<0)
IF(_LX>_WZXIN)
_XS=0
IF((_LX-_WZXIN)>_MIDA)
_HX=(_LX-_WZXIN)/_MIDA+0.4999
ELSE
_HX=1
ENDIF
_HEX=(_LX-_WZXIN)/_HX
_HEY=_HEX*_SKX/_SKY
_LY1=_LY-_WZYIN-_HEY*_HX
_HX=_HX+1
ELSE
_XS=_LX-_WZXIN
_LY1=_LY-_WZYIN
_HX=1
ENDIF
ENDIF
ELSE
IF(_LY>_MIDA)
_HY=_LY/_MIDA+0.4999
ELSE
_HY=1
ENDIF
_HEY=_LY/_HY
_HX=_HY _HEX=_HEY*_SKY/_SKX
_XS=(_LX-_WZXIN-(_HX-1)*_HEX)
_LY1=_HEY-_WZYIN
IF(_XS<0)
IF(_LY>_WZYIN)
IF((_LY-_WZYIN)>_MIDA)
_HY=(_LY-_WZYIN)/_MIDA+0.4999
ELSE
_HY=1
ENDIF
_HEY=(_LY-_WZYIN)/_HY
_HEX=_HEY*_SKY/_SKX
_XS=_LX-_WZXIN-_HY*_HEX
_HX=_HY+1
_LY1=0
ELSE
_XS=_LX-_WZXIN
_LY1=_LY-_WZYIN
_HX=1
ENDIF
ENDIF
ENDIF
ENDIF
IF(_MODI==4)
IF((_LX-2*_WZXIN)>_MIDA)
_HX=((_LX-2*_WZXIN)/_MIDA+1)/2+0.4999
ELSE
_HX=1
ENDIF
IF(_LY>_MIDA_Y)
_HY=_LY/_MIDA_Y+0.4999
ELSE
_HY=1
ENDIF
IF(_HX<=_HY)
_HEX=(_LX/2-_WZXIN)/(_HX-0.5)
_HEY=_HEX*_SKX/_SKY
_XS=-_HEX/2
ELSE
_HEY=_LY/_HY
_HX=_HY
_HEX=_HEY*_SKY/_SKX
_XS=-(_LX/2-_WZXIN-(_HX-1)*_HEX)
ENDIF
_LY1=_LY-_WZYIN-_HEY*(_HX-1)
ENDIF
IF(_MODI==3)OR(_MODI==4)
IF(_HX>1)
_MAX=(1+1/SQRT(2))/2
IF((_MIDA/(2*_WZXIN))>_MAX)
REPEAT _TRANS_LOESCHEN_A _TRANS_LOESCHEN_E
GOTOF _FEHL14
ENDIF
ENDIF
ENDIF
IF(_MODI==4)
N60 $P_CYCFRAME=$P_CYCFRAME:CTRANS(_XX,(_LX/2+(_WZX-_WZXIN))*1/_FAK1)
ENDIF
N100 SBLON
IF($P_EP[_ZZ]*_FAK1<_RTP)
N110 G0 G40 G90 AX[_ZZ]=_RTP
ENDIF
N120 G0 G40 G90 AX[_XX]=_XS AX[_YY]=_YS
N130 AX[_ZZ]=_RFP+_SDIS*_PMZ
N140 SBLOF
IF(_MODI>=3)AND(_BA1==2)
IF ($P_GG[10] < 2)
G[10]=2
ENDIF
ENDIF
FOR _IZ=1 TO _HZ
IF(_ARTIS[11]==3)
_ARTIS[10]=_ARTIS[10]+1
IF(_ARTIS[6]<>0)
IF(_ARTIS[10]==_ARTIS[14])
_ARTIS[4]=_ARTIS[14] _ARTIS[5]=_ARTIS[14]
IF(_ARTIS[14]+_ARTIS[6]<=_SC_TOOL_VALI[5])
_ARTIS[14]=_ARTIS[14]+_ARTIS[6]
ENDIF
ENDIF
ELSE
IF((_SC_TOOL_VALI[4]<=_ARTIS[10]) AND (_ARTIS[10]<=_SC_TOOL_VALI[5]))
_ARTIS[4]=_ARTIS[10] _ARTIS[5]=_ARTIS[10]
ENDIF
ENDIF
ENDIF
IF (_BA1==1)AND(_HZ>1)
IF(_IZ==1)
ENDIF
IF(_IZ==_HZ)
ENDIF
ENDIF
_AX=_XS
_DPZ=_DP+(_DPR+_SDZ-_IZ*_HEZ)*_PMZ
IF(_HZ==1)
_DPZ=_DP+_FALD*_PMZ
ENDIF
IF(_BA1==2)
_DPZ=_DP
ENDIF
N150 SBLON
N160 G0 G90 AX[_XX]=_AX AX[_YY]=_AY1
IF(_BA10==1)OR(_BA10==2)
CASE _MODI OF 0 GOTOF _MB10 1 GOTOF _MB10 2 GOTOF _MB10 3 GOTOF _MB11 4 GOTOF _MB12
_MB10:
FOR _IX=1 TO _HX+1
N200 G90 AX[_ZZ]=_DPZ
N210 SBLOF
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
N220 G1 G91 AX[_YY]=_LY1
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
IF(_IX<=_HX)
IF((_VARI==12)OR(_VARI==22))AND(_FALD==0)
N230 G0 G90 AX[_ZZ]=_RFP+_SDIS*_PMZ
ELSE
N240 G0 G91 AX[_ZZ]=(_HEZ+_SDIS)*_PMZ
ENDIF
_AX=_XS+_HEX*_IX
N250 G0 G90 AX[_XX]=_AX AX[_YY]=_AY2
ENDIF
ENDFOR
GOTOF _MABH
_MB11:
_LY2=_LY1
FOR _IX=1 TO _HX
N300 G90 AX[_ZZ]=_DPZ
N310 SBLOF
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
N320 G1 G90 AX[_YY]=_LY2
IF((_BA1==1)AND(_AX>0))OR(_BA1==2)
N330 G1 G90 AX[_XX]=_EX
ENDIF
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
IF(_IX<_HX)
IF((_VARI==12)OR(_VARI==22))AND(_FALD==0)
N340 G0 G90 AX[_ZZ]=_RFP+_SDIS*_PMZ
ELSE
N350 G0 G91 AX[_ZZ]=(_HEZ+_SDIS)*_PMZ
ENDIF
_LY2=_LY2+_HEY
_AX =_AX+_HEX
N360 G90 AX[_XX]=_AX AX[_YY]=_AY2
ENDIF
ENDFOR
GOTOF _MABH
_MB12:
_LY2=_LY1
FOR _IX=1 TO _HX
N400 G90 AX[_ZZ]=_DPZ
N410 SBLOF
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
N420 G1 G90 AX[_YY]=_LY2
N430 AX[_XX]=-_AX
IF((_BA1==1)AND(_LY2>0))OR(_BA1==2)
N440 G90 AX[_YY]=_EY
ENDIF
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
IF(_IX<_HX)
G00
IF(_BA1==1)
N460 G91 AX[_ZZ]=(_HEZ+_SDIS)*_PMZ
ENDIF
_LY2=_LY2+_HEY
IF(_XS<0)
_AX =_AX-_HEX
ELSE
_AX =_AX+_HEX
ENDIF
N470 G90 AX[_XX]=_AX AX[_YY]=_AY2
ENDIF
ENDFOR
GOTOF _MABH
ELSE
CASE _MODI OF 0 GOTOF _MB20 1 GOTOF _MB20 2 GOTOF _MB20 3 GOTOF _MB21 4 GOTOF _MB22
_MB20:
N500 G90 AX[_ZZ]=_DPZ
_PMYY=1
_H_RE=_LY1
N510 SBLOF
FOR _IX=1 TO _HX+1
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
N520 G1 G91 AX[_YY]=_LY1*_PMYY
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
IF(_IX<=_HX)
_AX=_XS+_HEX*_IX
IF(_BA1==2)
G00
ENDIF
N530 G90 AX[_XX]=_AX
_LY1=_LY2
_PMYY=-_PMYY
ENDIF
ENDFOR
_LY1=_H_RE
GOTOF _MABH
_MB21:
N600 G90 AX[_ZZ]=_DPZ
N610 SBLOF
_LY2=_LY1
FOR _IX=1 TO _HX
IF((_IX MOD 2)==1)
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
N620 G1 G90 AX[_YY]=_LY2
IF((_BA1==1)AND(_AX>0))OR(_BA1==2)
N630 G1 G90 AX[_XX]=_EX
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
IF(_IX<_HX)
IF(_BA1==2)
G00
ENDIF
ENDIF
ENDIF
IF(_IX<_HX)
_LY2=_LY2+_HEY
N640 G90 AX[_YY]=_LY2
ENDIF
ENDIF
IF((_IX MOD 2)==0)
_AX=_AX+_HEX
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
N650 G1 G90 AX[_XX]=_AX
IF((_BA1==1)AND(_LY2>0))OR(_BA1==2)
N660 G90 AX[_YY]=_EY
IF(_IX<_HX)
IF(_BA1==2)
G00
ENDIF
ENDIF
ENDIF
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
IF(_IX<_HX)
_AX=_AX+_HEX
N670 G90 AX[_XX]=_AX
_LY2=_LY2+_HEY
ENDIF
ENDIF
ENDFOR
GOTOF _MABH
_MB22:
_PMYY=1
N700 G90 AX[_ZZ]=_DPZ
N710 SBLOF
_LY2=_LY1
FOR _IX=1 TO _HX
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
N720 G1 G90 AX[_YY]=_LY2
N730 AX[_XX]=-_AX*_PMYY
IF((_BA1==1)AND(_LY2>0))OR(_BA1==2)
N740 G90 AX[_YY]=_EY
ENDIF
IF(_ARTIS[11]==3)
IF(_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
IF(_IX<_HX)
_LY2=_LY2+_HEY
IF(_XS<0)
_AX =_AX-_HEX
ELSE
_AX =_AX+_HEX
ENDIF
IF(_BA1==2)
G00
ENDIF
N750 G90 AX[_XX]=-_AX*_PMYY
_PMYY=-_PMYY
ENDIF
ENDFOR
_MABH:
REPEAT _SDIS_FREIFAHREN_A _SDIS_FREIFAHREN_E
IF(_IZ<_HZ)
N800 G0 G91 AX[_ZZ]=_SDIS*_PMZ
N810 SBLON
N820 G90 AX[_XX]=_XS AX[_YY]=_AY1
N830 SBLOF
ENDIF
ENDIF
ENDFOR
_MRTP:
N900 SBLON
N910 G0 G90 AX[_ZZ]=_RTP
N920 SBLOF
IF(_ARTIS[0]<>0)
M=QU(_ARTIS[8])
ENDIF
IF(_LIM_NUM==3)
N930 $P_CYCFRAME=$P_CYCFRAME:CTRANS(_XX,-(_LX/2+(_WZX-_WZXIN))*1/_FAK1)
ENDIF
REPEAT _TRANS_LOESCHEN_A _TRANS_LOESCHEN_E
_RET:
SBLON
RET
_TRANS_LOESCHEN_A:
IF((_BA10==1)OR(_BA10==3))XOR(_M_ROT==1)
_XX=$P_AXN1 _YY=$P_AXN2
ENDIF
IF(_M_MIRROR_X==1)
N940 $P_CYCFRAME=$P_CYCFRAME:CMIRROR(_XX)
ENDIF
IF(_M_MIRROR_Y==1)
N950 $P_CYCFRAME=$P_CYCFRAME:CMIRROR(_YY)
ENDIF
N960 $P_CYCFRAME=$P_CYCFRAME:CTRANS(_XX,-_VER_X*1/_FAK1,_YY,-_VER_Y*1/_FAK1)
N970 $P_CYCFRAME=$P_CYCFRAME:CRPL(0,-(_STA+_ROT_Z))
N980 $P_CYCFRAME=$P_CYCFRAME:CTRANS(_XX,-_APX*1/_FAK1,_YY,-_APY*1/_FAK1)
_TRANS_LOESCHEN_E:
_SDIS_FREIFAHREN_A:
_PMX_KA=0 _PMY_KA=0 _W_FREI=_SDIS
IF(_MODI>0)
IF(_MODI==3)
IF(_BA10==1)OR(_BA10==2)
_PMY_KA=-1
ELSE
IF((_HX MOD 2)==1)
_PMY_KA=-1
ELSE
_PMX_KA=-1
ENDIF
ENDIF
ELSE
_PMX_KA=-1
IF(_MODI==4)
IF(_BA10==3)OR(_BA10==4)
_PMX_KA=-_PMYY
ELSE
IF(_XS>0)
_PMX_KA=1
ENDIF
ENDIF
ENDIF
IF((_LX-2*_WZXIN)<=_SDIS)AND((_MODI MOD 2)==0)
_W_FREI=(_LX-2*_WZXIN)/2
ENDIF
ENDIF
N910 G1 G91 AX[_XX]=_PMX_KA*_W_FREI AX[_YY]=_PMY_KA*_W_FREI
ENDIF
_SDIS_FREIFAHREN_E:
_FEHL0: STOPRE
N706100 SETAL(61009)
RET
_FEHL1: STOPRE
N706101 SETAL(61000)
RET
_FEHL2: STOPRE
N706102 SETAL(61002)
RET
_FEHL3: STOPRE
N706103 SETAL(61101)
RET
_FEHL4: STOPRE
N706104 SETAL(61117)
RET
_FEHL5: STOPRE
N706105 SETAL(61118)
RET
_FEHL6: STOPRE
N706106 SETAL(61158)
RET
_FEHL7: STOPRE
N706107 SETAL(61111)
RET
_FEHL8: STOPRE
N706108 SETAL(61003)
RET
_FEHL9: STOPRE
N706109 SETAL(61012)
RET
_FEHL10: STOPRE
N706110 SETAL(61124)
RET
_FEHL11: STOPRE
N706111 SETAL(61155)
RET
_FEHL12: STOPRE
N706112 SETAL(61265)
RET
_FEHL13: STOPRE
N706113 SETAL(61266)
RET
_FEHL14: STOPRE
N706114 SETAL(61267)
RET
_FEHL15: STOPRE
N706115 SETAL(61268)
RET
_FEHL16: STOPRE
N706116 SETAL(61269)
RET
_FEHL17: STOPRE
N706117 SETAL(61276)
RET
_FEHL18: STOPRE
N706118 SETAL(61277)
RET
_FEHL19: STOPRE
N706119 SETAL(61278)
RET
_FEHL20: STOPRE
N706120 SETAL(61279)
RET
_FEHL21: STOPRE
N706121 SETAL(61021,_SERR)
RET
_FEHL22: STOPRE
N706122 SETAL(61156)
RET
_FEHL23: STOPRE
N706123 SETAL(61022,_SERR)
RET
_FEHL24: STOPRE
N706124 SETAL(61024,_SERR)
RET
_FEHL25: STOPRE
N706125 SETAL(62106)
RET
_FEHL26: STOPRE
N706126 SETAL(61216)
RET
_FEHL27: STOPRE
N706126 SETAL(61274)
RET
