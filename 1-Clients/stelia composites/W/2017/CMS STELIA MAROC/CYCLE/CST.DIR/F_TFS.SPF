PROC F_TFS(STRING[32] _T,STRING[32] _TF,INT _DD,REAL _F,INT _FAA,REAL _S,INT _SA,INT _SMODE,INT _MODE,INT _DP) SBLOF DISPLOF
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.60.00 ;DATE: 2014-05-16
;ShopTurn: Tool change/Feedrate/Spindle
DEF INT _TI=0,_TIN=0,_TFI,_TFA,_M3_5,S_M3_5,_M7_8,_M7_8_ALT=0,_I,_MB1=0,_MB2=0,_MB3=0,_MB4=0,_MB9=0,_WTYP=0,_TRAFO=0,_MSP,_DPA
DEF INT _TCI,_TC37,_AX1_MODE,_AX2_MODE,_WZGW=0,_HND_ALT=0,_HND_NEU=0,_HS_CDIR,_HS_SDIR,_HS_SDIRC,_GS_CDIR,_GS_SDIR,_GS_SDIRC,S_TI,S_THNR
DEF REAL _FAK4,_WR,_A1,_A2
DEF BOOL _T_NEU=FALSE,_TF_NEU=FALSE,_D_NEU=FALSE,_M_NEU=FALSE,_MK_NEU=FALSE,_S_NEU=FALSE,_F_NEU=FALSE,_MS_NEU=FALSE,_WZW=FALSE,_F_OK=FALSE
DEF STRING[80] _CMD
DEF STRING[32] _AX1_NAME,_AX2_NAME
DEF INT _LOG,_LOG_ON
DEF STRING[35] _LOG_FILE
_LOG_FILE="/_N_MPF_DIR/_N_LOG_F_TFS_"<<$P_CHANNO<<"_MPF"
_LOG_ON=ISFILE(_LOG_FILE)
IF(_LOG_ON)
; DELETE(_LOG,_LOG_FILE)
WRITE(_LOG,_LOG_FILE,"-------------------")
WRITE(_LOG,_LOG_FILE,"Logfile F_TFS: "<<$A_DAY<<"."<<$A_MONTH<<"."<<$A_YEAR<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_LOG,_LOG_FILE,"F_TFS(_T="<<_T<<",_TF="<<_TF<<",_DD="<<_DD<<",_F="<<_F<<",_FAA="<<_FAA<<",_S="<<_S<<",_SA="<<_SA<<",_SMODE="<<_SMODE<<",_MODE="<<_MODE<<",_DP="<<_DP<<")")
ENDIF
S_M3_5=_SA _DEC2
_SA=_SA _DEC1
IF(_T<>"")
REPEAT S_GET_T_NR_A S_GET_T_NR_E
_TI=S_TI
IF(_TI>0)
_DPA=$TC_TP1[_TI]
ELSE
_DPA=-1
ENDIF
_TI=GETT(_T,_DP)
IF(ISNUMBER(_T))
IF(NUMBER(_T)==0)
_TI=0
ENDIF
ENDIF
IF(_MODE==2)
REPEAT S_GET_T_NR_A S_GET_T_NR_E
IF(S_TI<>_TI)
_T_NEU=TRUE
_WZW=TRUE
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"_T_NEU=TRUE")
WRITE(_LOG,_LOG_FILE,"_WZW=TRUE")
ENDIF
ELSE
_D_NEU=TRUE
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"_D_NEU=TRUE")
ENDIF
ENDIF
ELSE
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"$P_TOOLNO="<<$P_TOOLNO<<" _TI="<<_TI)
ENDIF
IF($P_TOOLNO>0)
IF(_T==$TC_TP2[$P_TOOLNO])
_TI=$P_TOOLNO
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Duplo -> _TI="<<_TI)
ENDIF
ENDIF
ENDIF
IF($P_TOOLNO<>_TI)
_T_NEU=TRUE
_WZW=TRUE
ELSE
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"$P_TOOL="<<$P_TOOL<<" _DD="<<_DD)
ENDIF
IF($P_TOOL<>_DD)
_D_NEU=TRUE
IF($P_TOOL)AND($P_TOOL<>_DD)AND(_DD)AND(_TI)
_WTYP=$TC_DP1[_TI,$P_TOOL]
IF(_WTYP>=100)AND(_WTYP<300)
IF($TC_DP2[_TI,$P_TOOL]<>$TC_DP2[_TI,_DD])
_T_NEU=TRUE
_WZW=TRUE
ENDIF
ENDIF
ENDIF
ELSE
IF($MC_CUTTING_EDGE_DEFAULT==-2)OR($MC_CUTTING_EDGE_DEFAULT==0)
_D_NEU=TRUE
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"_D_NEU=TRUE wegen $MC_CUTTING_EDGE_DEFAULT="<<$MC_CUTTING_EDGE_DEFAULT)
ENDIF
ENDIF
ENDIF
ENDIF
IF($P_TOOLNO>0)AND($MCS_FUNCTION_MASK_TECH B_AND 'H80')
STOPRE
IF($TC_TP8[$P_TOOLNO] B_AND 'B100')
_WZW=TRUE
_T_NEU=TRUE
ENDIF
ENDIF
ENDIF
ELSE
_TI=$P_TOOLNO
IF(_DD==0)
_DD=$P_TOOL
ENDIF
IF($P_TOOL<>_DD)AND((_MODE==1)OR(_MODE==3))
_D_NEU=TRUE
ENDIF
ENDIF
IF($MC_TOOL_CHANGE_MODE==1)AND(_TF<>"")AND(($SCS_FUNCTION_MASK_TECH_SET B_AND 'B001'==1)OR(_MODE==2))
_TFI=GETT(_TF,0)
IF(ISNUMBER(_TF))
IF(NUMBER(_TF)==0)
_TFI=0
ENDIF
ENDIF
IF(_TFI>=0)
IF(_T_NEU)
IF(_TFI<>_TI)
_TF_NEU=TRUE
ENDIF
ELSE
IF(_TFI<>$P_TOOLNO)
_TF_NEU=TRUE
ENDIF
ENDIF
ENDIF
ENDIF
IF(_F_INIT==2)OR(((_MODE==2)OR(_MODE==3))AND(_T<>""))
_T_NEU=TRUE
ENDIF
IF(_MODE==2)AND(_F_RELEAS==1)
REPEAT S_GET_T_NR_A S_GET_T_NR_E
IF(S_TI==_TI)
N932120 SETAL(62202)
M0
STOPRE
_T_NEU=0
_M_NEU=TRUE
_MK_NEU=TRUE
ELSE
GOTOF _FEHL5
ENDIF
ENDIF
IF(_F_INIT)
_M_NEU=TRUE
_MK_NEU=TRUE
_MS_NEU=TRUE
_F_INIT=0
ENDIF
IF(_SA>0)
_S_NEU=TRUE
ENDIF
IF(_FAA>0)
_F_NEU=TRUE
ENDIF
IF(_T_NEU)OR(_MODE==7)OR((_MODE==1)AND(_S_NEU))
_M_NEU=TRUE
_MK_NEU=TRUE
ENDIF
IF(_TI<=0)
_M_NEU=FALSE
_MK_NEU=FALSE
ENDIF
IF(NOT _S_NEU)
_M_NEU=FALSE
ENDIF
IF(_MODE==1)AND((_T_NEU)AND(NOT _M_NEU))
_F_INIT=1
ENDIF
IF(_T_NEU)
_MS_NEU=TRUE
ENDIF
IF((_MODE==1)AND(_SMODE==0))OR(_MODE==3)
_MS_NEU=FALSE
ENDIF
IF(_SMODE==1)AND(_F_MASPI==2)AND(_MODE<>1)
_SMODE=3
ENDIF
IF(_SMODE==0)
IF(_F_S_NR[0]==$P_MSNUM)
_SMODE=1
ELSE
IF(_F_S_NR[1]==$P_MSNUM)
_SMODE=2
ELSE
IF(_F_S_NR[2]==$P_MSNUM)
_SMODE=3
ELSE
GOTOF _FEHL6
ENDIF
ENDIF
ENDIF
ELSE
IF(_F_S_NR[_SMODE-1]<>$P_MSNUM)
_MS_NEU=TRUE
ENDIF
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"_SMODE="<<_SMODE)
ENDIF
IF(_TI>0)AND((_MODE==0)OR(_MODE==1))
_M3_5=TRUNC($TC_DP25[_TI,GETDNO(_TI,1)]/256)MOD 4
IF(($P_SDIR[_F_S_NR[_SMODE-1]]-2)MOD 3<>_M3_5)AND(_S_NEU)
_M_NEU=TRUE
_MK_NEU=TRUE
ENDIF
ENDIF
IF(_D_NEU)AND($P_TOOL<>_DD)AND(NOT _T_NEU)AND($P_TOOLNO)
_F_D_NO=_DD
CUST_TECHCYC(113)
D=_DD
ENDIF
IF(_LOG_ON)
_CMD=""
IF(_T_NEU)
_CMD=_CMD<<" _T_NEU"
ENDIF
IF(_D_NEU)
_CMD=_CMD<<" (_D_NEU)"
ENDIF
IF(_TF_NEU)
_CMD=_CMD<<" _TF_NEU"
ENDIF
IF(_M_NEU)
_CMD=_CMD<<" _M_NEU"
ENDIF
IF(_MK_NEU)
_CMD=_CMD<<" _MK_NEU"
ENDIF
IF(_S_NEU)
_CMD=_CMD<<" _S_NEU"
ENDIF
IF(_F_NEU)
_CMD=_CMD<<" _F_NEU"
ENDIF
IF(_MS_NEU)
_CMD=_CMD<<" _MS_NEU"
ENDIF
WRITE(_LOG,_LOG_FILE,"Was ist zu tun:"<<_CMD)
ENDIF
IF(NOT(_T_NEU OR _TF_NEU OR _M_NEU OR _MK_NEU OR _S_NEU OR _F_NEU OR _MS_NEU))
GOTOF _RET
ENDIF
_FAK4=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==3)
_FAK4=$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==4)
_FAK4=1/$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
IF(_TI>0)AND(_DD>0)
_MM1A:
_WTYP=$TC_DP1[_TI,_DD]
_WR=$TC_DP6[_TI,_DD]+$TC_DP15[_TI,_DD]
_MM2A:
ENDIF
IF(_M_NEU)
_MM1:
IF(S_M3_5)
_M3_5=S_M3_5-2
ELSE
IF(_TI>0)
_M3_5=TRUNC($TC_DP25[_TI,GETDNO(_TI,1)]/256)MOD 4
ENDIF
ENDIF
IF(_M3_5==1)
_MB1=3
ELSE
IF(_M3_5==2)
_MB1=4
ELSE
_MB1=5
IF(_S_NEU)AND(_S>0) GOTOF _FEHL7
ENDIF
ENDIF
_HS_CDIR=($MCS_AXIS_USAGE_ATTRIB[_F_AX_NR[0]-1] B_AND'B1000')/'B1000'
_HS_SDIR=($MCS_AXIS_USAGE_ATTRIB[_F_AX_NR[0]-1] B_AND'B10000')/'B10000'
_HS_SDIRC=($MCS_AXIS_USAGE_ATTRIB[_F_AX_NR[0]-1] B_AND'B100000')/'B100000'
IF(_F_AX_EXISTS[2])
_GS_CDIR=($MCS_AXIS_USAGE_ATTRIB[_F_AX_NR[2]-1] B_AND'B1000')/'B1000'
_GS_SDIR=($MCS_AXIS_USAGE_ATTRIB[_F_AX_NR[2]-1] B_AND'B10000')/'B10000'
_GS_SDIRC=($MCS_AXIS_USAGE_ATTRIB[_F_AX_NR[2]-1] B_AND'B100000')/'B100000'
ELSE
_GS_CDIR=0 _GS_SDIR=0 _GS_SDIRC=0
ENDIF
IF(_MB1==3)OR(_MB1==4)
IF(SUBSTR($P_PROG[$P_STACK-1],3,7)=="F_DRILL")
IF(_WTYP==560)
IF($TC_DP2[_TI,_DD]==3)OR($TC_DP2[_TI,_DD]==4)
_MB1=7-_MB1
ENDIF
ENDIF
ENDIF
IF(_WTYP>=100)AND(_WTYP<300)AND((_SMODE==1)OR(_SMODE==3))
IF(_SMODE==1)
IF(_HS_CDIR==_HS_SDIRC)
_MB1=7-_MB1
ENDIF
ELSE
IF(_GS_CDIR==_GS_SDIRC)
_MB1=7-_MB1
ENDIF
ENDIF
ELSE
IF(_SMODE==3)AND(_HS_SDIR==_GS_SDIR)
_MB1=7-_MB1
ENDIF
ENDIF
ENDIF
IF(_F_AX_EXISTS[6])AND($MCS_FUNCTION_MASK_TECH B_AND 'H01')AND((_WTYP>=500)AND(_WTYP<599))
IF($P_CUT_INV)AND((_MB1==3)OR(_MB1==4))
_MB1=7-_MB1
ENDIF
ENDIF
_MM2:
ENDIF
IF(_MK_NEU)
_MMK1:
_M7_8=TRUNC($TC_DP25[_TI,GETDNO(_TI,1)]/1024)MOD 4
IF((_M7_8 B_AND 3)==3)AND($MCS_M_CODE_COOLANT_1_AND_2_ON>-1)
_MB9=$MCS_M_CODE_ALL_COOLANTS_OFF
_MB4=$MCS_M_CODE_COOLANT_1_AND_2_ON
ELSE
IF(_M7_8 B_AND 1)
_MB2=$MCS_M_CODE_COOLANT_1_ON
ENDIF
IF(_M7_8 B_AND 2)
_MB3=$MCS_M_CODE_COOLANT_2_ON
ENDIF
IF(_M7_8==1)OR(_M7_8==2)
_MB9=$MCS_M_CODE_ALL_COOLANTS_OFF
ENDIF
ENDIF
IF(_M7_8==0)
_MB9=$MCS_M_CODE_ALL_COOLANTS_OFF
ENDIF
_MMK2:
ENDIF
IF(_S_NEU)
IF(_WTYP>=100)AND(_WTYP<300)
IF(_SA==2)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Schnittgeschwindigkeit V="<<_S)
ENDIF
IF(_WR>0)
IF($MN_SCALING_SYSTEM_IS_METRIC)
_S=1000*_S/($PI*2*_WR*_FAK4)
ELSE
_S=12*_S/($PI*2*_WR*_FAK4)
ENDIF
IF(_S>999999)
_S=999999
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"-> S="<<_S)
ENDIF
IF(_SMODE==1)
IF(_S>$AC_SMAXVELO[_F_S_NR[0]])
_S=$AC_SMAXVELO[_F_S_NR[0]]
ENDIF
ENDIF
IF(_SMODE==3)
IF(_S>$AC_SMAXVELO[_F_S_NR[2]])
_S=$AC_SMAXVELO[_F_S_NR[2]]
ENDIF
ENDIF
ELSE
GOTOF _FEHL2
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"-> Drehzahl S="<<_S)
ENDIF
ENDIF
ENDIF
ENDIF
IF(_T_NEU)
IF(_MODE<>2)
F_SP_TRA(300)
F_SP_TRA(4)
ENDIF
IF(_SMODE==2)OR(_MB1==5)OR(_TI<=0)OR((_S==0)AND(_SA>0))
IF($P_SMODE[_F_S_NR[_F_MASPI]]==1)
M[_F_S_NR[_F_MASPI]]=5
ENDIF
ENDIF
_F_SP_CL_TURN=0
IF(_MODE==3)OR(_MODE==8)
_E_L6=0
ELSE
_E_L6=1
ENDIF
IF(_T<>"")
IF($P_TOOLNO>0)AND($P_TOOL>0)
_M7_8_ALT=TRUNC($TC_DP25[$P_TOOLNO,GETDNO($P_TOOLNO,1)]/1024)MOD 4
ENDIF
IF(_MODE<>2)
MCALL
ENDIF
IF(_TI==-1)
GOTOF _FEHL8
ENDIF
_TCI=$P_TC
IF($MCS_FUNCTION_MASK_TECH B_AND 'H01')AND(_TCI)
_AX1_MODE=TRUNC($TC_CARR37[_TCI]/10) MOD 10
_AX2_MODE=TRUNC($TC_CARR37[_TCI]/100) MOD 10
_AX1_NAME=$TC_CARR35[_TCI]
_AX2_NAME=$TC_CARR36[_TCI]
IF(_MODE<>2)AND(_AX1_MODE==0)AND($TC_CARR35[_TCI]<>"")
_A1=$P_EP[AXNAME(_AX1_NAME)]
ELSE
_A1=_TC_A1
ENDIF
IF(_MODE<>2)AND(_AX2_MODE==0)AND($TC_CARR36[_TCI]<>"")
_A2=$P_EP[AXNAME(_AX2_NAME)]
ELSE
_A2=_TC_A2
ENDIF
_TC37=TRUNC($TC_CARR37[_TCI]/100000000) MOD 10
IF(_TC37 B_AND 'B001')
_WZGW=1
ELSE
_WZGW=2
ENDIF
ENDIF
IF($P_TOOLNO>0)
IF($A_MYMN[$P_TOOLNO]==0)
_HND_ALT=1
ELSE
_HND_ALT=0
ENDIF
ENDIF
IF(_TI>0)
IF($A_MYMN[_TI]==0)
_HND_NEU=1
ELSE
_HND_NEU=0
ENDIF
ENDIF
IF($MCS_FUNCTION_MASK_TECH B_AND 'H01')AND(_TI>0)AND(_TCI>0)AND(_WZGW<>2)AND(NOT _HND_NEU) GOTOF _FEHL4
IF(_MODE<>3)AND(_MODE<>8)AND(_MODE<>9)AND((_MODE<>2)OR(_E_JS_PRG>0))
IF(_WZW)OR((_WTYP<>731)AND(_WTYP<>732))
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Werkzeugwechselposition anfahren")
ENDIF
N10 F_SP_RP(2,,,1)
ELSE
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Werkzeugwechselposition nicht anfahren (_WTYP="<<_WTYP<<")")
ENDIF
ENDIF
ENDIF
IF(_MODE<>3)AND(_MODE<>4)AND(_MODE<>9)
IF(_SMODE==2)
ELSE
_MSP=$P_MSNUM
IF(_SMODE==3)
SETMS(_F_S_NR[2])
CUST_TECHCYC(22)
ELSE
SETMS(_F_S_NR[0])
CUST_TECHCYC(2)
ENDIF
IF(NOT((_MB1==5)OR(_S<=0)OR(_SA<>1)OR(_TI<=0)OR(_HND_ALT)OR(_HND_NEU)))
G972 M=_MB1 S=_S
ENDIF
SETMS(_MSP)
ENDIF
ENDIF
IF(_F_AX_EXISTS[1])
CUST_TECHCYC(42)
ENDIF
IF(_HND_ALT)AND(_HND_NEU)
IF($MCS_FUNCTION_MASK_TECH B_AND 'H01')AND(_TCI)
N100 CUST_800(3,_TCI)
ENDIF
ELSE
IF(_HND_ALT)
IF($MCS_FUNCTION_MASK_TECH B_AND 'H01')AND(_TCI)
N110 CUST_800(3,_TCI)
ENDIF
ENDIF
IF(_HND_NEU)
REPEAT S_GET_T_NR_A S_GET_T_NR_E
IF(S_TI)
IF($MCS_FUNCTION_MASK_TECH B_AND 'H01')AND(_TCI)
N120 CUST_800(2,_TCI)
ENDIF
_F_T_STR="0"
_F_DP_NO=-1
_F_T_MP=-1
CUST_TECHCYC(117)
T0
CUST_TECHCYC(110)
IF($MC_TOOL_CHANGE_MODE==1)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"M6")
ENDIF
M6
ENDIF
ENDIF
IF($MCS_FUNCTION_MASK_TECH B_AND 'H01')AND(_TCI)
N130 CUST_800(3,_TCI)
ENDIF
ENDIF
ENDIF
IF(NOT _HND_ALT)AND(NOT _HND_NEU)
REPEAT S_GET_T_NR_A S_GET_T_NR_E
IF(S_TI<>_TI)
IF($MCS_FUNCTION_MASK_TECH B_AND 'H01')AND(_TCI)
N140 CUST_800(2,_TCI)
ENDIF
ENDIF
ENDIF
WRTPR("IGNORE(16,0)",1)
IF(_T=="0")
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"T0 ;Werkzeug entladen")
ENDIF
_F_T_STR="0"
_F_DP_NO=-1
_F_T_MP=-1
CUST_TECHCYC(117)
T0
ELSE
IF(_DP)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"TCA("<<_T<<","<<_DP<<")")
ENDIF
_F_T_STR=_T
_F_DP_NO=_DP
_F_T_MP=-1
CUST_TECHCYC(117)
TCA(_T,_DP)
ELSE
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"T="<<_T)
ENDIF
_F_T_STR=_T
_F_DP_NO=-1
_F_T_MP=-1
CUST_TECHCYC(117)
T=_T
ENDIF
ENDIF
CUST_TECHCYC(110)
IF($MC_TOOL_CHANGE_MODE==1)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"M6")
ENDIF
M6
ENDIF
IF((STRINGIS("$TC_MPP6")_DEC3)==2)
GETEXET(_TIN)
IF(_TIN<>_TI)AND(_TIN>0)
_TI=_TIN
REPEAT _MM1A _MM2A
REPEAT _MM1 _MM2
REPEAT _MMK1 _MMK2
ENDIF
ENDIF
_F_RP_DIR[0]=0
IF($MCS_REV_2_BORDER_TOOL_LENGTH)AND($P_TOOLNO)
D=_DD
F_T_REV2
ENDIF
WRTPR("IGNORE(32,0)",1)
IF($MCS_FUNCTION_MASK_TECH B_AND 'H01')AND(_TCI)AND(_MODE<>2)AND(_MODE<>5)AND(_MODE<>6)AND(_A1<>_SC_A_NO_VAL)AND(_A2<>_SC_A_NO_VAL)
IF(NOT $P_ISTEST)
REPEAT S_GET_T_NR_A S_GET_T_NR_E
_TI=S_TI
IF(_TI>0)
IF(_DPA<>$TC_TP1[_TI])
_WZW=TRUE
ENDIF
ENDIF
ENDIF
IF(_MODE<>2)AND(_AX1_MODE==0)AND(_AX1_NAME<>"")
IF($P_EP[AXNAME(_AX1_NAME)]<>_A1)
_WZW=TRUE
ENDIF
ENDIF
IF(_MODE<>2)AND(_AX2_MODE==0)AND(_AX2_NAME<>"")
IF($P_EP[AXNAME(_AX2_NAME)]<>_A2)
_WZW=TRUE
ENDIF
ENDIF
IF(_WZW)
IF(_MODE<>3)
N12 CUST_800(12,_TCI,_A1,_A2)
ELSE
N13 CUST_800(13,_TCI,_A1,_A2)
ENDIF
ENDIF
ENDIF
IF(_MODE<>0)
IF(_MODE<>2)
F_SP_TRA(200)
ENDIF
ENDIF
ELSE
_DD=$P_TOOL
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"$P_TOOL="<<$P_TOOL<<" _DD="<<_DD<<" $P_TOOLNO="<<$P_TOOLNO<<" $MC_CUTTING_EDGE_DEFAULT="<<$MC_CUTTING_EDGE_DEFAULT)
ENDIF
IF(($P_TOOL<>_DD)AND($P_TOOLNO))OR($MC_CUTTING_EDGE_DEFAULT==-2)OR($MC_CUTTING_EDGE_DEFAULT==0)
D=_DD
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"D="<<_DD)
ENDIF
ENDIF
_E_L6=0
ENDIF
IF(_MS_NEU)
_CMD="SETMS("<<_F_S_NR[_SMODE-1]<<")"
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Kommandostring: "<<_CMD)
ENDIF
EXECSTRING(_CMD)
IF(_SMODE==2)AND((_WTYP<500)OR(_WTYP>599))
CUST_TECHCYC(41)
ENDIF
ENDIF
IF(_M_NEU)
IF(_MB1==3)OR(_MB1==4)
IF(_WTYP>=100)AND(_WTYP<300)AND((_SMODE==1)OR(_SMODE==3))
IF($P_SDIR[_F_S_NR[1]]==5)
CUST_TECHCYC(42)
ENDIF
ENDIF
ENDIF
ENDIF
IF(_F_NEU)
_F_OK=TRUE
IF($P_F_TYPE==11)OR($P_F_TYPE==33)
IF(_FAA<>2)
_F_OK=FALSE
ENDIF
ELSE
IF($P_F_TYPE==1)OR($P_F_TYPE==3)
IF(_FAA<>3)
_F_OK=FALSE
ENDIF
ELSE
IF(_FAA<>1)
_F_OK=FALSE
ENDIF
ENDIF
ENDIF
ENDIF
IF(_F_NEU)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"_F_NEU: G[15]="<<$P_GG[15]<<" _FAA="<<_FAA<<" _SA="<<_SA<<" _WTYP="<<_WTYP)
ENDIF
IF(_FAA==1)
IF(_WTYP>=100)AND(_WTYP<300)
IF($P_GG[15]<>2)
G94
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  G94")
ENDIF
ENDIF
ELSE
IF(_FAA==1)AND(_SA==0)
IF($P_GG[15]<>2)
G942
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  G942")
ENDIF
ENDIF
ENDIF
IF(_FAA==1)AND(_SA==1)
IF($P_GG[15]<>2)
G94 S=_S
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  G94 S="<<_S)
ENDIF
ENDIF
ENDIF
IF(_FAA==1)AND(_SA==2)
IF($P_GG[15]<>7)
G961 S=_S
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  G961 S="<<_S)
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
IF(_FAA==2)OR(_FAA==3)
IF(_FAA==2)
IF(_WTYP<100)OR(_WTYP>199) GOTOF _FEHL1
ENDIF
IF(_WTYP>=100)AND(_WTYP<300)
IF($P_GG[15]<>3)
G95
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  G95")
ENDIF
ENDIF
ELSE
IF(_FAA==3)AND(_SA==0)
IF($P_GG[15]<>3)
G952
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  G952")
ENDIF
ENDIF
ENDIF
IF(_FAA==3)AND(_SA==1)
IF($P_GG[15]<>3)
G95 S=_S
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  G95 S="<<_S)
ENDIF
ENDIF
ENDIF
IF(_FAA==3)AND(_SA==2)
IF($P_GG[15]<>4)
G96 S=_S
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  G96 S="<<_S)
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
IF(_M_NEU)AND(_S_NEU)AND(NOT _F_NEU)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  M,S ohne F")
ENDIF
IF(_SA==1)
IF($P_GG[15]==4)
G95
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  G95")
ENDIF
ENDIF
IF($P_GG[15]==7)
G94
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  G94")
ENDIF
ENDIF
ENDIF
IF(_SA==2)
IF($P_MSNUM==_F_S_NR[1])
G95
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  G95")
ENDIF
ELSE
IF($P_GG[15]==2)
G961 S=_S
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  G961 S="<<_S)
ENDIF
ELSE
G96 S=_S
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  G96 S="<<_S)
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
IF(_F_OK)
IF($P_F_TYPE==11)OR($P_F_TYPE==33)
_F_OK=(_F==$P_FZ)AND(_FAA==2)
ELSE
_F_OK=(_F==$P_F)AND(_FAA<>2)
ENDIF
ENDIF
IF(_F_NEU==FALSE)OR(_FAA<1)OR(_FAA>3)OR(_F_OK)
_F=-1
ENDIF
IF(_S_NEU==FALSE)OR(_SA<1)OR(_SA>2)OR((_S==$P_S[_F_S_NR[_SMODE-1]])AND(NOT $AC_SERUPRO))
_S=-1
ENDIF
IF(_MB9>0)
IF($MCS_ENABLE_QUICK_M_CODES B_AND 'B0001')
_CMD="M=QU("<<_MB9<<")"
ELSE
_CMD="M="<<_MB9
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Kommandostring: "<<_CMD)
ENDIF
EXECSTRING(_CMD)
ENDIF
_CMD=""
IF(_S>=0)
_CMD=_CMD<<"S="<<_S<<" "
ENDIF
IF(_F>=0)
IF(_FAA==2)
_CMD=_CMD<<"FZ="<<_F<<" "
ELSE
IF(_FAA==3)
_CMD=_CMD<<"F="<<_F<<" "
ELSE
_CMD=_CMD<<"F="<<_F<<" "
ENDIF
ENDIF
ENDIF
IF(_M_NEU)
_CMD=_CMD<<"M="<<_MB1<<" "
ENDIF
IF(_MB2>0)
IF($MCS_ENABLE_QUICK_M_CODES B_AND 'B0010')
_CMD=_CMD<<"M=QU("<<_MB2<<") "
ELSE
_CMD=_CMD<<"M="<<_MB2<<" "
ENDIF
ENDIF
IF(_MB3>0)
IF($MCS_ENABLE_QUICK_M_CODES B_AND 'B0100')
_CMD=_CMD<<"M=QU("<<_MB3<<") "
ELSE
_CMD=_CMD<<"M="<<_MB3<<" "
ENDIF
ENDIF
IF(_MB4>0)
IF($MCS_ENABLE_QUICK_M_CODES B_AND 'B1000')
_CMD=_CMD<<"M=QU("<<_MB4<<") "
ELSE
_CMD=_CMD<<"M="<<_MB4<<" "
ENDIF
ENDIF
IF(_CMD<>"")
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Kommandostring: "<<_CMD)
ENDIF
EXECSTRING(_CMD)
ENDIF
IF(_TF_NEU)
IF((STRINGIS("$TC_MPP6")_DEC3)==2)
GETSELT(_TFA)
IF(_TFI<>_TFA)
IF(_TFI==0)
T0
ELSE
T=_TF
ENDIF
ENDIF
ENDIF
ENDIF
SBLON
_RET:
_F_RPT[0]=_F_RPTM[_F_MASPI/2,0]
_F_RPT[1]=_F_RPTM[_F_MASPI/2,1]
_F_RPT[2]=_F_RPTM[_F_MASPI/2,2]
_F_RPT[3]=_F_RPTM[_F_MASPI/2,3]
_F_RPT[4]=_F_RPTM[_F_MASPI/2,4]
IF(_T_NEU)
CUST_TECHCYC(111)
ELSE
CUST_TECHCYC(114)
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Ende Werkzeugwechselzyklus F_TFS (G[15]="<<$P_GG[15]<<")")
ENDIF
IF($AC_SERUPRO)AND(NOT $P_SIM)
IF(_E_SEARCH[3]==$P_LINENO[0])
F_SP_RP(8,,,1)
IF(NOT((_F_AX_EXISTS[6])AND($MCS_FUNCTION_MASK_TECH B_AND 'H01')))OR(_MODE==1)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"SSL-Label: UP-Ebene="<<$P_STACK<<" Zeile="<<$P_LINENO[0])
ENDIF
F_SP_LAB
ENDIF
ENDIF
ENDIF
RET
S_GET_T_NR_A:
S_TI=0
IF((STRINGIS("$TC_MPP6")_DEC3)==2)
IF($MC_TOOL_MANAGEMENT_TOOLHOLDER>=1)
S_THNR=$P_MTHNUM
ELSE
S_THNR=$P_MSNUM
ENDIF
FOR _I=1 TO $TC_MAP7[9998]
IF($TC_MPP1[9998,_I]==2)
IF(S_THNR==$TC_MPP5[9998,_I])
S_TI=$TC_MPP6[9998,_I]
IF(S_TI>0)
IF($P_TMNOIS[S_TI]==0)
S_TI=$TC_MTPP6[S_TI,$TC_MTP_POS[S_TI]]
ENDIF
ENDIF
ENDIF
ENDIF
ENDFOR
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Spindelwerkzeug: S_TI="<<S_TI)
ENDIF
S_GET_T_NR_E:
_FEHL1: STOPRE
N932101 SETAL(61216)
RET
_FEHL2: STOPRE
N932102 SETAL(61217)
RET
_FEHL3: STOPRE
N932103 SETAL(61218)
RET
_FEHL4: STOPRE
N932104 SETAL(61232)
RET
_FEHL5: STOPRE
N932105 SETAL(61283)
RET
_FEHL6: STOPRE
N932106 SETAL(61287)
RET
_FEHL7: STOPRE
N932107 SETAL(61293,_T)
RET
_FEHL8: STOPRE
N932108 SETAL(61343,_T)
RET
