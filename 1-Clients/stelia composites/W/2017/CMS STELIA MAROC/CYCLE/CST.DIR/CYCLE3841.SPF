PROC CYCLE3841(REAL RTP,REAL RFP,REAL SDIS,REAL DP,REAL DPR,REAL DTB,INT SDAC,REAL MPIT,REAL PIT,REAL POSS,REAL SST,REAL SST1,INT _AXN,INT _VARI,REAL _DAM,REAL _VRT) SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.63.00 ;DATE: 2014-09-26
;ISO-M rigid tapping
DEF AXIS _Z
DEF INT HH7
DEF REAL PP,HH1,HH2,HH3,HH4,HH5,_HH9,VHA,HZ,HMF,FAK,_FAK1
DEF INT _TEMP
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE3841_MPF"
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE3841_MPF")
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,";Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<"  Time: "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T="<<$TC_TP2[$P_TOOLNO]<<" D"<<$P_TOOL<<" T"<<$P_TOOLNO<<"   ; active TOOL")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$TC_DP1[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-TYPE") ; Werkzeugtyp
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$TC_DP2[$P_TOOLNO,$P_TOOL]<<"     ; EDGE-POSITION") ; Schneidenlage
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$TC_DP6[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-RADIUS") ; Werkzeugradius
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
WRITE(_TEMP,_TEMP_FILE,";D1")
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19") ; aktive Ebene
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...") ; Inch/Metrisch
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...") ; DIAMON/DIAMOF/DIAM90
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/...") ; Vorschubart
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F) ; Vorschub
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$AC_MSNUM]) ; Drehzahl und Drehrichtung
WRITE(_TEMP,_TEMP_FILE,"CYCLE3841("<<RTP<<","<<RFP<<","<<SDIS<<","<<DP<<","<<DPR<<","<<DTB<<","<<SDAC<<","<<MPIT<<","<<PIT<<","<<POSS<<","<<SST<<","<<SST1<<","<<_AXN<<","<<_VARI<<","<<_DAM<<","<<_VRT<<")")
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
IF HH7>0 GOTOF _MA3
CASE _AXN OF 1 GOTOF _AX1 2 GOTOF _AX2 DEFAULT GOTOF _AX3
_AX1:_Z=$P_AXN1
GOTOF _AX
_AX2:_Z=$P_AXN2
GOTOF _AX
_AX3:_Z=$P_AXN3
_AX:
DPR=ABS(DPR) SDIS=ABS(SDIS) PP=PIT HH3=$P_S[0] HH4=$P_F
_DAM=ABS(_DAM) _VRT=ABS(_VRT)
IF DPR==0 GOTOF _MD1 IF RTP==RFP GOTOF _FEHL1
HH2=RFP-((RTP-RFP)/ABS(RTP-RFP)*DPR)
IF DP==0 GOTOF _MB1 IF DP==HH2 GOTOF _MD1
_MB1:DP=HH2
_MD1:HH7=1 HH2=RTP-RFP
IF(_DAM==0)
_DAM=ABS(DP)
ENDIF
IF RFP==DP GOTOF _MX3 IF HH2==0 GOTOF _MA2 IF HH2/ABS(HH2)<>(RFP-DP)/ABS(RFP-DP) GOTOF _FEHL1
HH1=SDIS*(RFP-DP)/ABS(RFP-DP)
_MA2:IF (PIT==0)AND(MPIT==0) GOTOF _FEHL2 IF MPIT==0 GOTOF _MC2 IF (ABS(MPIT)<3)OR(ABS(MPIT)>48) GOTOF _FEHL2
N2 STEIGUNG(PP,ABS(MPIT))
PP=PP*MPIT/ABS(MPIT)
IF (PP<>PIT)AND(PIT<>0) GOTOF _FEHL2
_MC2:IF (SDAC<6)AND(SDAC>2) GOTOF _MD2
SDAC=5
_MD2:IF SST1>0 GOTOF _MA3A
SST1=SST
_MA3A:
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
_MA3:
HH2=RFP+HH1
IF(HH2<>$P_EP[_Z]*_FAK1)
SBLON
N20 G0 G9 G90 AX[_Z]=HH2
SBLOF
ENDIF
IF $P_SMODE[$P_MSNUM]<>2
N29 S=SST
ENDIF
N30 SPOS=DC(POSS)
N31 BRISK
IF(_VARI==0)
IF(NOT $P_ISTEST)
N32 G90 G331 AX[_Z]=DP IP[_Z]=PP S=SST
N33 G4 F=DTB
N34 G332 AX[_Z]=RFP+HH1 IP[_Z]=PP S=SST1
ELSE
N42 G90 G0 AX[_Z]=DP S=SST
N43 G4 F=DTB
N44 G0 AX[_Z]=RFP+HH1 S=SST1
ENDIF
ELSE
HZ=1
HH1=1 ;Bohrrichtung
FAK=1
_HH9=_DAM
HH2=RFP-_DAM
IF(HH2<DP) GOTOF _FEHL3
HMF=$P_ACTFRAME[_Z,SC]
IF($P_GG[13]==1)OR($P_GG[13]==3)
FAK=$MN_SCALING_VALUE_INCH
ENDIF
IF(_VRT<=0)
_VRT=HZ/FAK
ENDIF
_MA5A: G90 G331 AX[_Z]=HH2 IP[_Z]=PP S=SST
IF(HH2==DP)GOTOF _MA8
_MMD:
IF(ABS(HH2-DP)-_HH9>=_DAM)
IF(ABS(HH2-DP)>2*_DAM)
HH5=HH2-_HH9*HH1
ELSE
IF(ABS(HH2-DP)>_DAM)
HH5=HH2-ABS(HH2-DP)/2*HH1
ELSE
HH5=DP
ENDIF
ENDIF
ELSE
IF(ABS(HH2-DP)>_HH9)
IF(ABS(HH2-DP)>2*_DAM)
HH5=DP+_DAM*HH1
ELSE
HH5=HH2-ABS(HH2-DP)/2*HH1
ENDIF
ELSE
HH5=DP
ENDIF
ENDIF
_MA6:
IF(_VARI==2)
N280 G90 G332 AX[_Z]=RFP+SDIS*HH1 IP[_Z]=PP S=SST1
VHA=_VRT
VHA=VHA/FAK/HMF
N330 G90 G331 AX[_Z]=HH2+VHA*HH1 IP[_Z]=PP S=SST1
ELSE
N365 G91 G332 AX[_Z]=HH1*(_VRT/HMF) IP[_Z]=PP S=SST1
ENDIF
HH2=HH5
GOTOB _MA5A
_MA8:G4 F=DTB
N380 G90 G332 AX[_Z]=RFP+SDIS*HH1 IP[_Z]=PP S=SST1
ENDIF
N35 SOFT
SBLON
IF ($SCS_ISO_M_TAPPING_SET_MC==1)
N36 G0 G64 AX[_Z]=RTP S=HH3
ELSE
N36 G0 G64 AX[_Z]=RTP S=HH3 M=SDAC
ENDIF
SBLOF
N37 MM2:
IF HH4==0 GOTOF _MX3
N38 F=HH4
N39 _MX3:
RET
_FEHL1: STOPRE
N384101 SETAL(61101)
RET
_FEHL2: STOPRE
N384102 SETAL(61001)
RET
_FEHL3: STOPRE
N384103 SETAL(61809)
RET
