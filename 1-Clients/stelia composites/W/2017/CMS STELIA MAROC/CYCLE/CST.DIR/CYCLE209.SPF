PROC CYCLE209(INT _MU,INT _VARI1,INT _NPV1,REAL _ZV1,INT _BL1,REAL _XA1,REAL _XI1,REAL _ZA1,REAL _ZI1,REAL _ZB1,INT _N1,REAL _L1,REAL _B1,REAL _H1,REAL _S1,INT _VARI2,INT _NPV2,REAL _ZV2,INT _BL2,REAL _XA2,REAL _XI2,REAL _ZA2,REAL _ZI2,REAL _ZB2,INT _N2,REAL _L2,REAL _B2,REAL _H2,REAL _S2,INT _VARI0,REAL _ZW,INT _MODE1,REAL S_ZC1,REAL S_ZS1,REAL S_ZE1,REAL S_XR1,REAL S_ZR1,INT _MODE2,REAL S_ZC2,REAL S_ZS2,REAL S_ZE2,REAL S_XR2,REAL S_ZR2,STRING[10] S_CHANI) SBLOF DISPLOF
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.45.00 ;DATE: 2013-02-27
;Cycle support HMIsl
;Multi channel data
DEF AXIS _ZZ
DEF INT _NPV,_VARI,_BL,_N,_SP1,_SP2,_SP,_PM
DEF REAL _FAK1,_FAK2,_XA,_XI,_ZA,_ZI,_ZB,_L,_B,_H
DEF INT _TEMP
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE209_MPF",_SERR
DEF INT _LOG,_LOG_ON
DEF STRING[35] _LOG_FILE
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE209_MPF")
;DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,"; Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<"  Time: "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,"CYCLE209("<<_MU<<","<<_VARI1<<","<<_NPV1<<","<<_ZV1<<","<<_BL1<<","<<_XA1<<","<<_XI1<<","<<_ZA1<<","<<_ZI1<<","<<_ZB1<<","<<_N1<<","<<_L1<<","<<_B1<<","<<_H1<<","<<_S1<<","<<_VARI2<<","<<_NPV2<<","<<_ZV2<<","<<_BL2<<","<<_XA2<<","<<_XI2<<","<<_ZA2<<","<<_ZI2<<","<<_ZB2<<","<<_N2<<","<<_L2<<","<<_B2<<","<<_H2<<","<<_S2<<")")
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
_LOG_FILE="/_N_MPF_DIR/_N_LOG_CYCLE209_"<<$P_CHANNO<<"_MPF"
_LOG_ON=ISFILE(_LOG_FILE)
IF(_LOG_ON)
DELETE(_LOG,_LOG_FILE)
WRITE(_LOG,_LOG_FILE,"; Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<"  Time: "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
ENDIF
IF($P_GG[6]==1)
_ZZ=$P_AXN3
ELSE
IF($P_GG[6]==2)
_ZZ=$P_AXN1
ELSE
_ZZ=$P_AXN2
ENDIF
ENDIF
IF(_MU)
IF(_MU==70)
G70
ELSE
G71
ENDIF
ENDIF
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
_FAK2=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK2=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)OR($P_GG[13]==4)
_FAK2=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
CYCLE210(0)
IF(_VARI1 _DEC1==1)
_SP1=0
ELSE
IF(_VARI1 _DEC1==2)
_SP1=1
ELSE
GOTOF _FEHL4
ENDIF
ENDIF
IF(_SP1==1)AND(NOT _F_AX_EXISTS[2]) GOTOF _FEHL6
IF(_NPV1<0)
IF(_SP1==0)
GOTOF _FEHL7
ELSE
GOTOF _FEHL8
ENDIF
ENDIF
_F_NPV[_SP1]=_NPV1
IF(NOT($MCS_FUNCTION_MASK_TECH B_AND 'H40'))
IF(_VARI1 _DEC2)
_F_NPV_SET[0]=1
$P_UIFR[_NPV1,_ZZ,TR]=_ZV1/_FAK1
ENDIF
IF(_VARI1 _DEC2)OR($P_SIM)
IF(_SP1==1)AND((_E_ST_PRG)OR((_VARI1 _DEC8)==0))
$P_UIFR[_NPV1,_ZZ,MI]=1
ELSE
$P_UIFR[_NPV1,_ZZ,MI]=0
ENDIF
ENDIF
ENDIF
CYCLE212(_SP1,_MODE1,S_ZC1,S_ZS1,S_ZE1,S_XR1,S_ZR1)
_SP=_SP1
IF(_BL1>=0)
_VARI=_VARI1
_BL=_BL1
_XA=_XA1
_XI=_XI1
_ZA=_ZA1
_ZI=_ZI1
_ZB=_ZB1
_N=_N1
_L=_L1
_B=_B1
_H=_H1
REPEAT _M_BL_A _M_BL_E
ENDIF
_NPV=_NPV1+1
G[8]=_NPV
IF(_SP1==0)
IF($P_UIFR[_NPV1,_ZZ,MI]) GOTOF _FEHL2
ELSE
IF((_E_ST_PRG)OR((_VARI1 _DEC8)==0))
IF(NOT $P_UIFR[_NPV1,_ZZ,MI]) GOTOF _FEHL3
ELSE
IF($P_UIFR[_NPV1,_ZZ,MI]) GOTOF _FEHL11
ENDIF
ENDIF
IF(_S1<=0)
IF(_SP1==0)
GOTOF _FEHL9
ELSE
GOTOF _FEHL10
ENDIF
ENDIF
G26 S[_F_S_NR[_SP1*2]]=_S1
LIMS[_F_S_NR[_SP1*2]]=_S1
_SP2=-1
IF(_VARI2 _DEC1==1)
_SP2=0
ELSE
IF(_VARI2 _DEC1==2)AND(_F_AX_EXISTS[2])
_SP2=1
ENDIF
ENDIF
IF(_VARI2 _DEC1==3)
_SP2=1
ELSE
IF (_SP1==_SP2) GOTOF _FEHL5
ENDIF
IF(_SP2>=0)
IF(_VARI2 _DEC1==3)
_F_NPV[_SP2]=-1
ELSE
_F_NPV[_SP2]=_NPV2
IF(NOT($MCS_FUNCTION_MASK_TECH B_AND 'H40'))
IF(_VARI2 _DEC2)
_F_NPV_SET[1]=1
$P_UIFR[_NPV2,_ZZ,TR]=_ZV2/_FAK1
ENDIF
IF(_VARI2 _DEC2)OR($P_SIM)
IF(_SP2==1)AND((_E_ST_PRG)OR((_VARI2 _DEC8)==0))
$P_UIFR[_NPV2,_ZZ,MI]=1
ELSE
$P_UIFR[_NPV2,_ZZ,MI]=0
ENDIF
ENDIF
ENDIF
IF(_SP2==0)
IF($P_UIFR[_NPV2,_ZZ,MI]) GOTOF _FEHL2
ELSE
IF((_E_ST_PRG)OR((_VARI2 _DEC8)==0))
IF(NOT $P_UIFR[_NPV2,_ZZ,MI]) GOTOF _FEHL3
ELSE
IF($P_UIFR[_NPV2,_ZZ,MI]) GOTOF _FEHL11
ENDIF
ENDIF
ENDIF
CYCLE212(_SP2,_MODE2,S_ZC2,S_ZS2,S_ZE2,S_XR2,S_ZR2)
_SP=_SP2
IF(_BL2>=0)
IF(_VARI2 _DEC1==3)
_VARI=_VARI1
_BL=_BL1
_XA=_XA1
_XI=_XI1
_ZA=_ZA1
_ZI=_ZI1
_ZB=_ZB1
_N=_N1
_L=_L1
_B=_B1
_H=_H1
ELSE
_VARI=_VARI2
_BL=_BL2
_XA=_XA2
_XI=_XI2
_ZA=_ZA2
_ZI=_ZI2
_ZB=_ZB2
_N=_N2
_L=_L2
_B=_B2
_H=_H2
ENDIF
REPEAT _M_BL_A _M_BL_E
ENDIF
IF(_S2<=0)
IF(_SP2==0)
GOTOF _FEHL9
ELSE
GOTOF _FEHL10
ENDIF
ENDIF
G26 S[_F_S_NR[_SP2*2]]=_S2
LIMS[_F_S_NR[_SP2*2]]=_S2
ENDIF
_F_ZW=_SC_NO_VAL
IF((_VARI0 _DEC1)==1)
_F_ZW=_ZW/_FAK2
ENDIF
RET
_M_BL_A:
IF(_BL==3)
IF(_N<3)
GOTOF _FEHL1
ENDIF
IF((_VARI _DEC3)==0)AND((_N B_AND 1)==0)
_L=_L*TAN(180/_N)
ENDIF
_XA=_L/SIN(180/_N)
ENDIF
IF(_BL==4)
_XA=SQRT(_B*_B+_H*_H)
ENDIF
_XA=_XA/2
IF((_VARI _DEC4)==0)
_XI=_XA-ABS(_XI)
ELSE
_XI=_XI/2
ENDIF
IF(_SP==1)AND((_VARI _DEC8)==1)
_E_RT[_SP,12]=1
ELSE
_E_RT[_SP,12]=0
ENDIF
_PM=2*_E_RT[_SP,12]-1
IF((_VARI _DEC5)==0)
_ZI=_ZA+_PM*ABS(_ZI)
ENDIF
IF((_VARI _DEC6)==0)
_ZB=_ZA+_PM*ABS(_ZB)
ENDIF
_E_RT[_SP,0]=_BL
_E_RT[_SP,1]=_XA/_FAK2
_E_RT[_SP,2]=0
_E_RT[_SP,3]=_ZA/_FAK2
_E_RT[_SP,4]=_XI/_FAK2
_E_RT[_SP,5]=0
_E_RT[_SP,6]=_ZI/_FAK2
_E_RT[_SP,7]=_ZB/_FAK2
_E_RT[_SP,8]=_N
_E_RT[_SP,9]=_L/_FAK2
_E_RT[_SP,10]=_B/_FAK2
_E_RT[_SP,11]=_H/_FAK2
IF(_LOG_ON)
IF(_SP==0)
WRITE(_LOG,_LOG_FILE,"Rohteil Hauptspindel: (Werte absolut und im Radius)")
ELSE
WRITE(_LOG,_LOG_FILE,"Rohteil Gegenspindel: (Werte absolut und im Radius)")
ENDIF
WRITE(_LOG,_LOG_FILE,"  _E_RT[SP,0] ="<<_E_RT[_SP,0]<<" ; Typ")
WRITE(_LOG,_LOG_FILE,"  _E_RT[SP,1] ="<<_E_RT[_SP,1]<<" ; XA")
WRITE(_LOG,_LOG_FILE,"  _E_RT[SP,3] ="<<_E_RT[_SP,3]<<" ; ZA")
WRITE(_LOG,_LOG_FILE,"  _E_RT[SP,4] ="<<_E_RT[_SP,4]<<" ; XI")
WRITE(_LOG,_LOG_FILE,"  _E_RT[SP,6] ="<<_E_RT[_SP,6]<<" ; ZI")
WRITE(_LOG,_LOG_FILE,"  _E_RT[SP,7] ="<<_E_RT[_SP,7]<<" ; ZB")
WRITE(_LOG,_LOG_FILE,"  _E_RT[SP,8] ="<<_E_RT[_SP,8]<<" ; N")
WRITE(_LOG,_LOG_FILE,"  _E_RT[SP,9] ="<<_E_RT[_SP,9]<<" ; L")
WRITE(_LOG,_LOG_FILE,"  _E_RT[SP,10]="<<_E_RT[_SP,10]<<" ; B")
WRITE(_LOG,_LOG_FILE,"  _E_RT[SP,11]="<<_E_RT[_SP,11]<<" ; H")
WRITE(_LOG,_LOG_FILE,"  _E_RT[SP,12]="<<_E_RT[_SP,12]<<" ; 1=ohne Spiegelung GSP")
ENDIF
_M_BL_E:
_FEHL1: STOPRE
N720901 SETAL(61296)
RET
_FEHL2: STOPRE
N720902 SETAL(61614,<<AXSTRING(_ZZ))
RET
_FEHL3:STOPRE
N720903 SETAL(61280,<<AXSTRING(_ZZ))
RET
_FEHL4: STOPRE
N720904 SETAL(61049)
RET
_FEHL5: STOPRE
N720905 SETAL(61050)
RET
_FEHL6: STOPRE
N720906 SETAL(61289)
RET
_FEHL7:STOPRE
N720907 SETAL(61298)
RET
_FEHL8:STOPRE
N720908 SETAL(61299)
RET
_FEHL9:STOPRE
N720909 SETAL(61052)
RET
_FEHL10:STOPRE
N720910 SETAL(61053)
RET
_FEHL11:STOPRE
N720911 SETAL(61615,<<AXSTRING(_ZZ))
RET
