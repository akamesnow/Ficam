PROC CYCLE384T SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 02.06.03.00 Nov 13, 2008
;ISO-T tapping (G84/G88)
DEF AXIS _XX,_ZZ
DEF INT _FCX_P,_FCZ_P,_FCU_P,_FCW_P,_FCC_P,_FCH_P,_G98,_FIRST,_I,_FCK,_FCK0,_ABC,_RFE=1,_FCC,_DIA
DEF REAL _PIT,_SST,_SST1,_FCX,_FCZ,_FCU,_FCW,_FCR,_INIZ,_FAK1,_BP1,_FCCPOS
DEF INT _TEMP
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE384T_MPF"
DEF STRING[200] _TEMP_LINE=""
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE384T_MPF")
IF($C_G_PROG==1)
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,"G290")
WRITE(_TEMP,_TEMP_FILE,";Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<"  Time: "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T="<<$TC_TP2[$P_TOOLNO]<<" D"<<$P_TOOL<<" T"<<$P_TOOLNO<<"   ; active TOOL")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$TC_DP1[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-TYPE") ; Werkzeugtyp
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$TC_DP2[$P_TOOLNO,$P_TOOL]<<"     ; EDGE-POSITION") ; Schneidenlage
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$TC_DP6[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-RADIUS") ; Werkzeugradius
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
WRITE(_TEMP,_TEMP_FILE,";D1")
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19") ; aktive Ebene
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...") ; Inch/Metrisch
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...") ; DIAMON/DIAMOF/DIAM90
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/...") ; Vorschubart
WRITE(_TEMP,_TEMP_FILE,"G[14]="<<$P_GG[14]<<"    ; G90/G91/...") ; Positionierung abs./ink.
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F) ; Vorschub
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$AC_MSNUM]) ; Drehzahl und Drehrichtung
WRITE(_TEMP,_TEMP_FILE,";")
WRITE(_TEMP,_TEMP_FILE,"G291")
IF $MN_MM_EXTERN_GCODE_SYSTEM==1
WRITE(_TEMP,_TEMP_FILE,"G98")
ELSE
IF($P_EXTGG[11]==1)
WRITE(_TEMP,_TEMP_FILE,"G98")
ELSE
WRITE(_TEMP,_TEMP_FILE,"G99")
ENDIF
ENDIF
ENDIF
_TEMP_LINE=""
IF $C_G_PROG<>0
IF($P_EXTGG[10]==3)
_TEMP_LINE=_TEMP_LINE<<"G84 "
ELSE
_TEMP_LINE=_TEMP_LINE<<"G88 "
ENDIF
ENDIF
IF $C_X_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"X"<<$C_X<<" "
ENDIF
IF $C_U_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"U"<<$C_U<<" "
ENDIF
IF $C_Y_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Y"<<$C_Y<<" "
ENDIF
IF $C_V_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"V"<<$C_V<<" "
ENDIF
IF $C_Z_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Z"<<$C_Z<<" "
ENDIF
IF $C_W_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"W"<<$C_W<<" "
ENDIF
IF $C_C_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"C"<<$C_C<<" "
ENDIF
IF $C_P_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"P"<<$C_P<<" "
ENDIF
IF $C_Q_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Q"<<$C_Q<<" "
ENDIF
IF $C_R_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"R"<<$C_R<<" "
ENDIF
IF $C_F_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"F"<<$C_F<<" "
ENDIF
IF $C_S_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"S"<<$C_S<<" "
ENDIF
IF $C_T_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"T"<<$C_T<<" "
ENDIF
IF $C_K_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"K"<<$C_K[0]<<" "
ENDIF
IF $C_M_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"M"<<$C_M<<" "
ENDIF
WRITE(_TEMP,_TEMP_FILE,_TEMP_LINE)
ENDIF
IF($MN_MM_EXTERN_LANGUAGE<>1) GOTOF _FEHL1
IF $MCS_ISO_ENABLE_INTERRUPTS==1
IF $MN_EXTERN_INTERRUPT_BITS_M96 B_AND 'B1'
$AC_PARAM[1]=0
$A_OUT[1]=0
STOPRE
IF($MN_EXTERN_INTERRUPT_BITS_M96) B_AND 'B1000'
DISABLE(1)
ID=1 WHEN $A_IN[1]==1 DO $AC_PARAM[1]=1
ENDIF
ENDIF
ENDIF
IF($C_X_PROG>0)AND($C_U_PROG>0)GOTOF _FEHL5
IF($C_Z_PROG>0)AND($C_W_PROG>0)GOTOF _FEHL5
IF($C_C_PROG>0)AND($C_H_PROG>0)GOTOF _FEHL5
IF($C_Y_PROG>0)OR ($C_V_PROG>0)GOTOF _FEHL9
CASE($MN_MM_EXTERN_GCODE_SYSTEM) OF 0 GOTOF _BCOD 1 GOTOF _ACOD 2 GOTOF _CCOD DEFAULT GOTOF _FEHL6
_ACOD: _ABC=1
GOTOF _ECOD
_BCOD: _ABC=2
GOTOF _ECOD
_CCOD: _ABC=3
_ECOD:
IF($P_EXTGG[10]==3)
_ZFPI[20]=84
ELSE
_ZFPI[20]=88
ENDIF
_XX=$P_AXN2 _ZZ=$P_AXN1
IF($MN_SCALING_SYSTEM_IS_METRIC==1)
IF($MCS_ISO_SCALING_SYSTEM<>1)
CYCLE301
ENDIF
ELSE
IF($MCS_ISO_SCALING_SYSTEM<>2)
CYCLE301
ENDIF
ENDIF
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
IF($C_G_PROG==1)
_FIRST=1
IF(_ZFPI[20]==84)
_INIZ=$P_EP[_ZZ]*_FAK1
ELSE
_INIZ=$P_EP[_XX]*_FAK1
ENDIF
_ZFPR[20]=_INIZ
ELSE
_FIRST=0
_INIZ=_ZFPR[20]
ENDIF
IF($C_P_PROG>0)
IF($MN_EXTERN_INCREMENT_SYSTEM==0)
_ZFPR[25]=$C_P/1000
ELSE
_ZFPR[25]=$C_P/10000
ENDIF
ELSE
IF(_FIRST==1)
_ZFPR[25]=0
ENDIF
ENDIF
IF(_FIRST==1)
_ZFPI[21]=$P_SDIR[$AC_MSNUM]
ENDIF
IF($C_S_PROG>0)
_SST=$C_S
ELSE
IF(_FIRST==1)
_SST=$P_S[$AC_MSNUM]
ELSE
_SST=_ZFPR[26]
ENDIF
ENDIF
_ZFPR[26]=_SST
IF($SCS_ISO_T_RETRACTION_FACTOR<1)OR($SCS_ISO_T_RETRACTION_FACTOR>200)
_SST1=_ZFPR[26]
ELSE
_SST1=_ZFPR[26]*$SCS_ISO_T_RETRACTION_FACTOR/100
ENDIF
IF($C_F_PROG>0)
_ZFPR[24]=$C_F
ELSE
_ZFPR[24]=$P_F
ENDIF
IF(_ZFPR[24]<=0)GOTOF _FEHL2
_PIT=_ZFPR[24]
IF($P_EXTGG[5]==1)
_PIT=_ZFPR[24]/_ZFPR[26]
ENDIF
IF(($P_GG[29]==2)AND(_ZFPI[20]==88))
_DIA=2
ELSE
_DIA=1
ENDIF
IF($C_R_PROG>0)
IF(_ABC==1)
IF(_RFE==1)
_FCR=_INIZ+($C_R*_DIA)
ELSE
_FCR=$C_R
ENDIF
ELSE
IF(_RFE==1)
_FCR=_INIZ+($C_R*_DIA)
ELSE
IF(_RFE==2)
_FCR=$C_R
ELSE
IF($C_R_PROG==1)
_FCR=$C_R
ELSE
_FCR=_INIZ+($C_R*_DIA)
ENDIF
ENDIF
ENDIF
ENDIF
ELSE
IF(_FIRST==1)
_FCR=_INIZ
ELSE
_FCR=_ZFPR[21]
ENDIF
ENDIF
_ZFPR[21]=_FCR
IF(_ABC==1)
_G98=1
ELSE
_G98=$P_EXTGG[11]
ENDIF
IF(_G98==1)
_ZFPR[23]=_INIZ
ELSE
_ZFPR[23]=_ZFPR[21]
ENDIF
_I=1 _FCK0=0
IF($C_K_PROG==0)
_FCK=1
ELSE
_FCK=$C_K[0]
IF(_FCK==0)
_FCK=1 _FCK0=1
ELSE
IF(_FCK<0)
_FCK=1
ENDIF
ENDIF
ENDIF
_FCX_P=$C_X_PROG _FCZ_P=$C_Z_PROG _FCU_P=$C_U_PROG _FCW_P=$C_W_PROG _FCC_P=$C_C_PROG _FCH_P=$C_H_PROG
FOR _I=1 TO _FCK
IF(_ABC==1)
IF(_FCC_P>0)
_FCC=1
_FCCPOS=$C_C
ELSE
_FCC=0
_FCCPOS=$C_H
ENDIF
ELSE
IF(_FCC_P>0)
IF(_FCC_P==1)
_FCC=1
_FCCPOS=$C_C
ELSE
_FCC=0
_FCCPOS=$C_C
ENDIF
ELSE
_FCC=0
_FCCPOS=$C_H
ENDIF
ENDIF
CASE _ZFPI[20] OF 88 GOTOF _MG19 84 GOTOF _MG17 DEFAULT GOTOF _KBO
_MG19:
IF(_ABC==1)
IF(_FCZ_P>0)
_FCZ=$C_Z
ELSE
IF(_FCW_P>0)
_FCZ=$P_EP[_ZZ]*_FAK1+$C_W
ELSE
_FCZ=$P_EP[_ZZ]*_FAK1
ENDIF
ENDIF
ELSE
IF(_FCZ_P>0)
IF(_FCZ_P==1)
_FCZ=$C_Z
ELSE
_FCZ=$P_EP[_ZZ]*_FAK1+$C_Z
ENDIF
ELSE
IF(_FCW_P>0)
_FCZ=$P_EP[_ZZ]*_FAK1+$C_W
ELSE
_FCZ=$P_EP[_ZZ]*_FAK1
ENDIF
ENDIF
ENDIF
_BP1=_FCZ
IF(_ABC==1)
IF(_FCX_P>0)
_FCX=$C_X
ELSE
IF(_FCU_P>0)
_FCX=_ZFPR[21]+$C_U
ELSE
IF(_FIRST==1)GOTOF _FEHL4
_FCX=_ZFPR[22]
ENDIF
ENDIF
ELSE
IF(_FCX_P>0)
IF(_FCX_P==1)
_FCX=$C_X
ELSE
_FCX=_ZFPR[21]+$C_X
ENDIF
ELSE
IF(_FCU_P>0)
_FCX=_ZFPR[21]+$C_U
ELSE
IF(_FIRST==1)GOTOF _FEHL4
_FCX=_ZFPR[22]
ENDIF
ENDIF
ENDIF
_ZFPR[22]=_FCX
IF(_FCX_P+_FCU_P+_FCZ_P+_FCW_P+_FCC_P+_FCH_P+$C_R_PROG==0)GOTOF _KBO
IF ($C_C_PROG>0) OR ($C_H_PROG>0)
IF(_FCC==1)
SBLON
N10 G00 G90 AX[_ZZ]=AC(_BP1) F=_ZFPR[24] C=AC(_FCCPOS)
SBLOF
ELSE
SBLON
N10 G00 G90 AX[_ZZ]=AC(_BP1) F=_ZFPR[24] C=IC(_FCCPOS)
SBLOF
ENDIF
ELSE
SBLON
N10 G00 G90 AX[_ZZ]=AC(_BP1) F=_ZFPR[24]
SBLOF
ENDIF
GOTOF _MBPE
_MG17:
IF(_ABC==1)
IF(_FCX_P>0)
_FCX=$C_X
ELSE
IF(_FCU_P>0)
_FCX=$P_EP[_XX]*_FAK1+$C_U
ELSE
_FCX=$P_EP[_XX]*_FAK1
ENDIF
ENDIF
ELSE
IF(_FCX_P>0)
IF(_FCX_P==1)
_FCX=$C_X
ELSE
_FCX=$P_EP[_XX]*_FAK1+$C_X
ENDIF
ELSE
IF(_FCU_P>0)
_FCX=$P_EP[_XX]*_FAK1+$C_U
ELSE
_FCX=$P_EP[_XX]*_FAK1
ENDIF
ENDIF
ENDIF
_BP1=_FCX
IF(_ABC==1)
IF(_FCZ_P>0)
_FCZ=$C_Z
ELSE
IF(_FCW_P>0)
_FCZ=_ZFPR[21]+$C_W
ELSE
IF(_FIRST==1)GOTOF _FEHL4
_FCZ=_ZFPR[22]
ENDIF
ENDIF
ELSE
IF(_FCZ_P>0)
IF(_FCZ_P==1)
_FCZ=$C_Z
ELSE
_FCZ=_ZFPR[21]+$C_Z
ENDIF
ELSE
IF(_FCW_P>0)
_FCZ=_ZFPR[21]+$C_W
ELSE
IF(_FIRST==1)GOTOF _FEHL4
_FCZ=_ZFPR[22]
ENDIF
ENDIF
ENDIF
_ZFPR[22]=_FCZ
IF(_FCX_P+_FCU_P+_FCZ_P+_FCW_P+_FCC_P+_FCH_P+$C_R_PROG==0)GOTOF _KBO
IF ($C_C_PROG>0) OR ($C_H_PROG>0)
IF(_FCC==1)
SBLON
N10 G00 G90 AX[_XX]=AC(_BP1) F=_ZFPR[24] C=AC(_FCCPOS)
SBLOF
ELSE
SBLON
N10 G00 G90 AX[_XX]=AC(_BP1) F=_ZFPR[24] C=IC(_FCCPOS)
SBLOF
ENDIF
ELSE
SBLON
N10 G00 G90 AX[_XX]=AC(_BP1) F=_ZFPR[24]
SBLOF
ENDIF
_MBPE:
IF(_FCK0==1)GOTOF _KBO
CASE _ZFPI[20] OF 84 GOTOF _C84 88 GOTOF _C88 DEFAULT GOTOF _KBO
_C84:
SBLON
N20 CYCLE84(_ZFPR[21],_ZFPR[21],_ZSFR[20],_ZFPR[22],0,_ZFPR[25],_ZFPI[21],0,_PIT,0,_ZFPR[26],_SST1,1)
SBLOF
GOTOF _KBO
_C88:
SBLON
N30 CYCLE84(_ZFPR[21],_ZFPR[21],_ZSFR[20],_ZFPR[22],0,_ZFPR[25],_ZFPI[21],0,_PIT,0,_ZFPR[26],_SST1,2)
SBLOF
_KBO:
_FIRST=0
N50 G4 F=_ZSFR[22]
IF(_G98==1)
IF(_ZFPI[20]==84)
SBLON
N60 G00 G90 AX[_ZZ]=AC(_ZFPR[23])
SBLOF
ENDIF
IF(_ZFPI[20]==88)
SBLON
N60 G00 G90 AX[_XX]=AC(_ZFPR[23])
SBLOF
ENDIF
ENDIF
ENDFOR
IF(_ABC==1)
G90
ENDIF
IF $MCS_ISO_ENABLE_INTERRUPTS==1
IF $MN_EXTERN_INTERRUPT_BITS_M96 B_AND 'B1'
ENABLE(1)
IF $AC_PARAM[1]==1
$A_OUT[1]=0
$A_OUT[1]=1
ENDIF
ENDIF
ENDIF
GOTOF _RET
_FEHL1: STOPRE
N338401 SETAL(61800)
RET
_FEHL2: STOPRE
N338402 SETAL(61003)
RET
_FEHL4: STOPRE
N338404 SETAL(61808)
RET
_FEHL5: STOPRE
N338405 SETAL(61805)
RET
_FEHL6: STOPRE
N338406 SETAL(61801)
RET
_FEHL7: STOPRE
N338407 SETAL(61810)
RET
_FEHL8: STOPRE
N338408 SETAL(61809)
RET
_FEHL9: STOPRE
N338409 SETAL(61811)
RET
_RET:
RET
