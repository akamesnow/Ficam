PROC CYCLE71(REAL _RTP,REAL _RFP,REAL _SDIS,REAL _DP,REAL _PA,REAL _PO,REAL _LENG,REAL _WID,REAL _STA,REAL _MID,REAL _MIDA,REAL _FDP,REAL _FALD,REAL _FFP1,INT _VARI,REAL _FDP1) SAVE SBLOF DISPLOF
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 02.06.37.00 ;DATE: 2009-10-22
;Cycle support HMIsl
;Face milling
DEF AXIS _XX,_YY,_ZZ
DEF INT _BA1,_BA10,_HY,_HZ,_IY,_IZ,_PMX,_PMXX,_PMY,_IS_CYCFR,_II,_ZZSD[2]
DEF REAL _APX,_APY,_AX1,_AX2,_AY,_DPA,_DPR,_DPZ,_FAK1,_HEY,_HEZ,_LX,_LX1,_LX2,_LY,_PMZ,_SDZ,_SKX,_SKY,_SKZ,_WZR,_WZX,_WZY,_XS,_YS
DEF INT _ARTIS[16]
DIAMCYCOF
_SDIS=ABS(_SDIS) _MID=ABS(_MID) _FALD=ABS(_FALD) _MIDA=ABS(_MIDA) _FDP=ABS(_FDP) _VARI=ABS(_VARI) _FDP1=ABS(_FDP1)
_ZZ=$P_AXN3
_VS1:
IF($P_TOOLNO==0) GOTOF _FEHL0
IF($P_TOOL==0) GOTOF _FEHL1
IF($P_TOOLR<=0) GOTOF _FEHL4
_BA1=_VARI MOD 10 _BA10=TRUNC(_VARI/10)
IF(_BA1<1) OR (_BA1>2) GOTOF _FEHL2
IF(_BA10<1) OR (_BA10>4) GOTOF _FEHL2
IF(_LENG==0) OR (_WID==0) GOTOF _FEHL5
IF(_FFP1<=0) GOTOF _FEHL8
IF (($MC_MM_SYSTEM_FRAME_MASK B_AND 'B100000') AND ($AN_NCK_VERSION>=480300))
_IS_CYCFR=1
ENDIF
IF _SC_TOOL_VALI[0]<>0
_ARTIS[0]=_SC_TOOL_VALI[0] _ARTIS[1]=_SC_TOOL_VALI[1] _ARTIS[2]=_SC_TOOL_VALI[2] _ARTIS[3]=_SC_TOOL_VALI[3] _ARTIS[4]=_SC_TOOL_VALI[4] _ARTIS[5]=_SC_TOOL_VALI[5] _ARTIS[6]=_SC_TOOL_VALI[6]
_ARTIS[7]=_SC_TOOL_ON_OFF[0] _ARTIS[8]=_SC_TOOL_ON_OFF[1]
IF (_ARTIS[0] MOD 10 <>1 )
GOTOF _FEHL11
ENDIF
_II=_ARTIS[0] DIV 10
IF ((_II MOD 10 > 3) OR (_II MOD 10 < 1))
GOTOF _FEHL11
ELSE
_ARTIS[11]=_II MOD 10
IF (_ARTIS[3]<>0)
_ARTIS[13]=_ARTIS[1]
ENDIF
IF (_ARTIS[6]<>0)
_ARTIS[14]=_ARTIS[4]
ENDIF
ENDIF
_II=_II DIV 10
IF ((_II MOD 10 > 2) OR (_II MOD 10 < 0))
GOTOF _FEHL11
ELSE
_ARTIS[12]=_II MOD 10
ENDIF
IF (((_VARI MOD 10 )- 1)<>_ARTIS[12]) AND (_ARTIS[11]<>1)
_ARTIS[0]=0 _ARTIS[11]=0
ENDIF
ENDIF
_SKZ=$P_ACTFRAME[_ZZ,SC]
_SDIS=_SDIS/_SKZ _MID=_MID/_SKZ _FALD=_FALD/_SKZ
_DPR=ABS(_RFP-_DP)
_PMZ=_RTP-_RFP
IF(_RFP==_DP) GOTOF _RET
IF(_RTP==_RFP) GOTOF _M1
IF(_PMZ/ABS(_PMZ) <> (_RFP-_DP)/_DPR) GOTOF _FEHL3
_M1: _PMZ=(_RFP-_DP)/_DPR
IF(_RFP==_RTP)
_RTP=_RFP+_SDIS*_PMZ
ENDIF
IF(_LENG>0)
_PMX=1
ELSE
_PMX=-1
ENDIF
IF(_WID>0)
_PMY=1
ELSE
_PMY=-1
ENDIF
IF(_BA10==1) OR (_BA10==3)
_XX=$P_AXN1 _YY=$P_AXN2
_APX=_PA _APY=_PO _LX=_LENG _LY=_WID
_PMXX=_PMX
ELSE
_XX=$P_AXN2 _YY=$P_AXN1
_APX=_PO _APY=_PA _LX=_WID _LY=_LENG
_PMXX=_PMY _PMY=_PMX _PMX=_PMXX
ENDIF
_SKX=$P_ACTFRAME[_XX,SC] _SKY=$P_ACTFRAME[_YY,SC]
IF(_SKX<>_SKY)AND(_STA<>0) GOTOF _FEHL9
_FDP=_FDP/_SKX _FDP1=_FDP1/_SKY _MIDA=_MIDA/_SKY
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
_WZR=$P_TOOLR*_FAK1
_WZX=_WZR/_SKX _WZY=_WZR/_SKY
IF(_ZSD[1]==-1)
_ZZSD[1]=($SCS_FUNCTION_MASK_MILL_SET B_AND 'B100') DIV 4
ELSE
_ZZSD[1]=_ZSD[1]
IF(_ZZSD[1]<0)OR(_ZZSD[1]>1) GOTOF _FEHL12
ENDIF
IF(_ZZSD[1]==0)
_SDZ=_SDIS
ELSE
_SDZ=0
ENDIF
IF(_FALD>=_DPR)
_FALD=_DPR _DPA=_DPR
ELSE
_DPA=_DPR-_FALD
ENDIF
IF(_MID) GOTOF _M3
_MID=_SDZ+_DPA
_M3: _HZ=(_SDZ+_DPA)/_MID+0.4999
IF _HZ==0
_HZ=1
ENDIF
_HEZ=(_SDZ+_DPA)/_HZ
IF(_HZ==1)
_HEZ=_DPA
ENDIF
IF(_BA1==2)
_HEZ=_FALD _HZ=1
ENDIF
IF(_MIDA>2*_WZY) AND (NOT(($P_TOOL==0))) GOTOF _FEHL7
IF(_MIDA==0)
_MIDA=0.8*2*_WZY
ENDIF
IF(ABS(_LY)+_FDP1>_MIDA)
_HY=(ABS(_LY)-_MIDA+_FDP1)/_MIDA+0.4999
_HEY=(ABS(_LY)-_MIDA+_FDP1)/_HY
ELSE
_HY=0 _HEY=0
ENDIF
_XS=-(_FDP+_WZX)*_PMX _YS=(_MIDA-_WZY)*_PMY
_AX1=-(_FDP+_WZX)*_PMX
IF (_IS_CYCFR==1)
N11 $P_CYCFRAME=$P_CYCFRAME:CTRANS(_XX,_APX*1/_FAK1,_YY,_APY*1/_FAK1)
N13 $P_CYCFRAME=$P_CYCFRAME:CROT(_ZZ,_STA)
ELSE
N15 ATRANS AX[_XX]=_APX AX[_YY]=_APY
N20 AROT RPL=_STA
ENDIF
N25 SBLON
IF($P_EP[_ZZ]*_FAK1<_RTP)
N30 G0 G40 G90 G60 AX[_ZZ]=_RTP
ENDIF
N40 G0 G40 G90 G60 AX[_XX]=_XS AX[_YY]=_YS
N50 AX[_ZZ]=_RFP+_SDIS*_PMZ
N55 SBLOF
FOR _IZ=1 TO _HZ
IF (_ARTIS[11]==3)
_ARTIS[10]=_ARTIS[10]+1
IF (_ARTIS[6]<>0)
IF (_ARTIS[10]==_ARTIS[14])
_ARTIS[4]=_ARTIS[14] _ARTIS[5]=_ARTIS[14]
IF (_ARTIS[14]+_ARTIS[6]<=_SC_TOOL_VALI[5])
_ARTIS[14]=_ARTIS[14]+_ARTIS[6]
ENDIF
ENDIF
ELSE
IF ((_SC_TOOL_VALI[4]<=_ARTIS[10]) AND (_ARTIS[10]<=_SC_TOOL_VALI[5]))
_ARTIS[4]=_ARTIS[10] _ARTIS[5]=_ARTIS[10]
ENDIF
ENDIF
ENDIF
IF (_BA1==1)AND(_HZ>1)
IF(_IZ==1)
ENDIF
IF(_IZ==_HZ)
ENDIF
ENDIF
_AY=_YS _PMXX=_PMX
IF(_BA1==2)
_AX2=-_FDP*_PMX-_WZX*_PMX
_LX1=ABS(_LX)+2*(_FDP+_WZX)
_LX2=ABS(_LX)+2*(_FDP+_WZX)
ELSE
IF(_BA10==1) OR (_BA10==2)
_AX2=-(_FDP+_WZX)*_PMX
_LX1=ABS(_LX)+_FDP+_WZX
ELSE
IF(_MIDA>_WZY)
_LX1=ABS(_LX)+_FDP+_WZX
_LX2=ABS(_LX)
ELSE
_LX1=ABS(_LX)+_FDP-_MIDA*_SKY/_SKX+2*_WZX
_LX2=ABS(_LX)+2*(_WZX-_MIDA*_SKY/_SKX)
ENDIF
IF(_HY==0)
_LX1=ABS(_LX)+_FDP+_WZX _LX2=ABS(_LX)+_FDP+_WZX
ENDIF
ENDIF
ENDIF
_DPZ=_DP+(_DPR+_SDZ-_IZ*_HEZ)*_PMZ
IF(_HZ==1)
_DPZ=_DP+_FALD*_PMZ
ENDIF
IF(_BA1==2)
_DPZ=_DP
ENDIF
N58 SBLON
N60 G0 G90 AX[_XX]=_AX1 AX[_YY]=_AY
IF(_BA10==3) OR (_BA10==4) GOTOF _MB2
_MB1:
FOR _IY=1 TO _HY+1
N70 G90 AX[_ZZ]=_DPZ
N75 SBLOF
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
N80 G1 G91 AX[_XX]=_LX1*_PMX F=_FFP1
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
IF(_IY<=_HY)
IF((_VARI==12)OR(_VARI==22))AND(_FALD==0)
N90 G0 G90 AX[_ZZ]=_RFP+_SDIS*_PMZ
ELSE
N100 G0 G91 AX[_ZZ]=(_HEZ+_SDIS)*_PMZ
ENDIF
_AY=_YS+_HEY*_IY*_PMY
N110 G0 G90 AX[_XX]=_AX2 AX[_YY]=_AY
ENDIF
ENDFOR
GOTOF _MABH
_MB2:
N120 G90 AX[_ZZ]=_DPZ
N125 SBLOF
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
FOR _IY=1 TO _HY+1
N130 G1 G91 AX[_XX]=_LX1*_PMXX F=_FFP1
IF(_IY<=_HY)
_AY=_YS+_HEY*_IY*_PMY
IF(_BA1==2)
G00
ENDIF
N140 G90 AX[_YY]=_AY
_LX1=_LX2
_PMXX=-_PMXX
ENDIF
ENDFOR
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
_MABH:
IF(_IZ<_HZ)
N150 G0 G91 AX[_ZZ]=_SDIS*_PMZ
N155 SBLON
N160 G90 AX[_XX]=_AX1 AX[_YY]=_YS
N165 SBLOF
ENDIF
ENDFOR
_MRTP:
N165 SBLON
N170 G0 G90 AX[_ZZ]=_RTP
N175 SBLOF
_RET:
IF (_ARTIS[0]<>0)
M=QU(_ARTIS[8])
ENDIF
SBLON
IF (_IS_CYCFR==1)
N180 $P_CYCFRAME=$P_CYCFRAME:CROT(_ZZ,-_STA)
N185 $P_CYCFRAME=$P_CYCFRAME:CTRANS(_XX,-_APX*1/_FAK1,_YY,-_APY*1/_FAK1)
ENDIF
RET
_FEHL0: STOPRE
N707100 SETAL(61009)
RET
_FEHL1: STOPRE
N707101 SETAL(61000)
RET
_FEHL2: STOPRE
N707102 SETAL(61002)
RET
_FEHL3: STOPRE
N707103 SETAL(61101)
RET
_FEHL4: STOPRE
N707104 SETAL(61117)
RET
_FEHL5: STOPRE
N707105 SETAL(61118)
RET
_FEHL7: STOPRE
N707107 SETAL(61111)
RET
_FEHL8: STOPRE
N707108 SETAL(61003)
RET
_FEHL9: STOPRE
N707109 SETAL(61012)
RET
_FEHL10: STOPRE
N707110 SETAL(61124)
RET
_FEHL11:
N707111 SETAL(62106)
RET
_FEHL12: STOPRE
N707112 SETAL(61156)
RET
