PROC CYCLE374T SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.04.13.00 Mar 24, 2011
;ISO-T deep hole drilling and recessing (G74/G75)
DEF AXIS _XX,_ZZ
DEF INT _ABC,_DIA,_FCX_P,_FCZ_P,_FCU_P,_FCW_P,_G40,_G74,_ZYK,_I,_FCK
DEF REAL _DPR,_FAK1,_FCF,_FCQ,_FMUL,_SPD,_SPL,_WID,_EPD,_EPL,_FCP,_BP1,_ABH
DEF INT _TEMP
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE374T_MPF"
DEF STRING[200] _TEMP_LINE=""
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE374T_MPF")
IF NOT (($C_P_PROG>0)OR($C_Q_PROG>0)OR($C_U_PROG>0)OR($C_W_PROG>0))
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,"G290")
WRITE(_TEMP,_TEMP_FILE,";Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<"  Time: "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T="<<$TC_TP2[$P_TOOLNO]<<" D"<<$P_TOOL<<" T"<<$P_TOOLNO<<"   ; active TOOL")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$TC_DP1[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-TYPE") ; Werkzeugtyp
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$TC_DP2[$P_TOOLNO,$P_TOOL]<<"     ; EDGE-POSITION") ; Schneidenlage
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$TC_DP6[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-RADIUS") ; Werkzeugradius
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
WRITE(_TEMP,_TEMP_FILE,";D1")
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19") ; aktive Ebene
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...") ; Inch/Metrisch
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...") ; DIAMON/DIAMOF/DIAM90
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/...") ; Vorschubart
WRITE(_TEMP,_TEMP_FILE,"G[14]="<<$P_GG[14]<<"    ; G90/G91/...") ; Positionierung abs./ink.
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F) ; Vorschub
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$AC_MSNUM]) ; Drehzahl und Drehrichtung
WRITE(_TEMP,_TEMP_FILE,";")
WRITE(_TEMP,_TEMP_FILE,"G291")
ENDIF
_TEMP_LINE=""
IF $C_G_PROG<>0
IF $MN_MM_EXTERN_GCODE_SYSTEM == 0
_TEMP_LINE=_TEMP_LINE<<"G"<<$C_G<<" "
ENDIF
IF $MN_MM_EXTERN_GCODE_SYSTEM == 1
IF $C_G==74
_TEMP_LINE=_TEMP_LINE<<"G74 "
ELSE
_TEMP_LINE=_TEMP_LINE<<"G75 "
ENDIF
ENDIF
IF $MN_MM_EXTERN_GCODE_SYSTEM == 2
IF $C_G==74
_TEMP_LINE=_TEMP_LINE<<"G76 "
ELSE
_TEMP_LINE=_TEMP_LINE<<"G77 "
ENDIF
ENDIF
ENDIF
IF $C_X_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"X"<<$C_X<<" "
ENDIF
IF $C_U_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"U"<<$C_U<<" "
ENDIF
IF $C_Z_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Z"<<$C_Z<<" "
ENDIF
IF $C_W_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"W"<<$C_W<<" "
ENDIF
IF $C_P_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"P"<<$C_P<<" "
ENDIF
IF $C_Q_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Q"<<$C_Q<<" "
ENDIF
IF $C_R_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"R"<<$C_R<<" "
ENDIF
IF $C_F_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"F"<<$C_F<<" "
ENDIF
WRITE(_TEMP,_TEMP_FILE,_TEMP_LINE)
ENDIF
IF($MN_MM_EXTERN_LANGUAGE<>1) GOTOF _FEHL1
IF $MCS_ISO_ENABLE_INTERRUPTS==1
IF $MN_EXTERN_INTERRUPT_BITS_M96 B_AND 'B1'
$AC_PARAM[1]=0
$A_OUT[1]=0
STOPRE
IF($MN_EXTERN_INTERRUPT_BITS_M96) B_AND 'B1000'
DISABLE(1)
ID=1 WHEN $A_IN[1]==1 DO $AC_PARAM[1]=1
ENDIF
ENDIF
ENDIF
CASE($MN_MM_EXTERN_GCODE_SYSTEM) OF 0 GOTOF _BCOD 1 GOTOF _ACOD 2 GOTOF _CCOD DEFAULT GOTOF _FEHL6
_ACOD: _ABC=1
GOTOF _ECOD
_BCOD: _ABC=2
GOTOF _ECOD
_CCOD: _ABC=3
_ECOD:
_G40=$P_GG[07]
IF(_G40<>1)GOTOF _FEHL10
IF($C_G==74)
_ZYK=74
ELSE
_ZYK=75
ENDIF
IF($C_X_PROG>0)OR($C_U_PROG>0)OR($C_Z_PROG>0)OR($C_W_PROG>0)
_G74=0
ELSE
_G74=1
ENDIF
IF($P_GG[13]==2)OR($P_GG[13]==4)
_FMUL=1000
ELSE
_FMUL=10000
ENDIF
IF(_G74==1)
IF($C_R_PROG>0)
_ZSFI[29]=$C_R*_FMUL
ELSE
GOTOF _FEHL9
ENDIF
GOTOF _RET
ENDIF
IF($P_GG[29]==1)
_DIA=1
ELSE
_DIA=2
ENDIF
G18
_ZZ=$P_AXN1 _XX=$P_AXN2
IF($C_X_PROG>0)AND($C_U_PROG>0)GOTOF _FEHL5
IF($C_Z_PROG>0)AND($C_W_PROG>0)GOTOF _FEHL5
IF($C_Y_PROG>0)OR ($C_V_PROG>0)GOTOF _FEHL8
IF($C_C_PROG>0)OR ($C_H_PROG>0)GOTOF _FEHL8
IF($C_G==74)
_ZYK=74
IF($C_Q_PROG>0)
IF($MN_EXTERN_FLOATINGPOINT_PROG==1)
_FCQ=ABS($C_Q)/_FMUL
ELSE
_FCQ=ABS($C_Q)
ENDIF
ELSE
_FCQ=0
ENDIF
IF($C_P_PROG>0)
_FCP=ABS($C_P)/_FMUL
ELSE
_FCP=0
ENDIF
ELSE
_ZYK=75
IF($C_P_PROG>0)
_FCQ=ABS($C_P)/_FMUL
ELSE
_FCP=0
ENDIF
IF($C_Q_PROG>0)
IF($MN_EXTERN_FLOATINGPOINT_PROG==1)
_FCP=ABS($C_Q)/_FMUL
ELSE
_FCP=ABS($C_Q)
ENDIF
ELSE
_FCP=0
ENDIF
ENDIF
IF(_FCQ==0)GOTOF _FEHL4
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
IF($C_F_PROG>0)
_FCF=$C_F
ELSE
_FCF=$P_F
ENDIF
IF(_FCF<=0)GOTOF _FEHL2
IF($P_GG[29]==1)
_DIA=1
ELSE
_DIA=2
ENDIF
_SPD=$P_EP[_XX]*_FAK1 _SPL=$P_EP[_ZZ]*_FAK1
_FCX_P=$C_X_PROG _FCZ_P=$C_Z_PROG _FCU_P=$C_U_PROG _FCW_P=$C_W_PROG
IF(_ZYK==74)
IF(_ABC==1)
IF(_FCZ_P>0)
_DPR=$C_Z-_SPL
ELSE
IF(_FCW_P>0)
_DPR=$C_W
ELSE
GOTOF _FEHL7
ENDIF
ENDIF
ELSE
IF(_FCZ_P>0)
IF(_FCZ_P==1)
_DPR=$C_Z-_SPL
ELSE
_DPR=$C_Z
ENDIF
ELSE
IF(_FCW_P>0)
_DPR=$C_W
ELSE
GOTOF _FEHL7
ENDIF
ENDIF
ENDIF
_EPL=_SPL+_DPR
IF(_ABC==1)
IF(_FCX_P>0)
_WID=$C_X-_SPD
ELSE
IF(_FCU_P>0)
_WID=$C_U
ELSE
_WID=0
ENDIF
ENDIF
ELSE
IF(_FCX_P>0)
IF(_FCX_P==1)
_WID=$C_X-_SPD
ELSE
_WID=$C_X
ENDIF
ELSE
IF(_FCU_P>0)
_WID=$C_U
ELSE
_WID=0
ENDIF
ENDIF
ENDIF
_EPD=_SPD+_WID
ELSE
IF(_ABC==1)
IF(_FCX_P>0)
_DPR=$C_X-_SPD
ELSE
IF(_FCU_P>0)
_DPR=$C_U
ELSE
GOTOF _FEHL7
ENDIF
ENDIF
ELSE
IF(_FCX_P>0)
IF(_FCX_P==1)
_DPR=$C_X-_SPD
ELSE
_DPR=$C_X
ENDIF
ELSE
IF(_FCU_P>0)
_DPR=$C_U
ELSE
GOTOF _FEHL7
ENDIF
ENDIF
ENDIF
_EPD=_SPD+_DPR
IF(_ABC==1)
IF(_FCZ_P>0)
_WID=$C_Z-_SPL
ELSE
IF(_FCW_P>0)
_WID=$C_W
ELSE
_WID=0
ENDIF
ENDIF
ELSE
IF(_FCZ_P>0)
IF(_FCZ_P==1)
_WID=$C_Z-_SPL
ELSE
_WID=$C_Z
ENDIF
ELSE
IF(_FCW_P>0)
_WID=$C_W
ELSE
_WID=0
ENDIF
ENDIF
ENDIF
_EPL=_SPL+_WID
ENDIF
IF($C_R_PROG>0)
IF(_WID==0)
_ABH=$C_R
ELSE
IF(_WID>0)
_ABH=ABS($C_R)*(-1)
ELSE
_ABH=ABS($C_R)
ENDIF
ENDIF
ELSE
_ABH=0
ENDIF
IF(_WID==0)
_FCK=0
ELSE
IF(_FCP==0)GOTOF _FEHL4
IF(_ZYK==74)
_FCK=(ABS(_WID/(_FCP*_DIA)))+0.499999
ELSE
_FCK=(ABS(_WID/_FCP))+0.499999
ENDIF
ENDIF
FOR _I=0 TO _FCK
IF(_ZYK==74)
IF(_WID>=0)
_BP1=_SPD+(_I*_FCP*_DIA)
IF(_BP1>_EPD)
_BP1=_EPD
ENDIF
ELSE
_BP1=_SPD-(_I*_FCP*_DIA)
IF(_BP1<_EPD)
_BP1=_EPD
ENDIF
ENDIF
SBLON
N10 G00 G90 AX[_XX]=AC(_BP1) F=_FCF
N20 CYCLE375T(_SPL,_SPL,0,_EPL,0,0,_FCQ,0,0,0,1,0,1,0,(_ZSFI[29]/_FMUL),0,0,(_ABH*_DIA))
SBLOF
ELSE
IF(_WID>=0)
_BP1=_SPL+(_I*_FCP)
IF(_BP1>_EPL)
_BP1=_EPL
ENDIF
ELSE
_BP1=_SPL-(_I*_FCP)
IF(_BP1<_EPL)
_BP1=_EPL
ENDIF
ENDIF
SBLON
N30 G00 G90 AX[_ZZ]=AC(_BP1) F=_FCF
N40 CYCLE375T(_SPD,_SPD,0,_EPD,0,0,(_FCQ*_DIA),0,0,0,1,0,2,0,(_ZSFI[29]*_DIA/_FMUL),0,0,_ABH)
SBLOF
ENDIF
ENDFOR
IF(_ZYK==74)
SBLON
N50 G00 G90 AX[_XX]=AC(_SPD)
SBLOF
ELSE
SBLON
N60 G00 G90 AX[_ZZ]=AC(_SPL)
SBLOF
ENDIF
IF(_ABC==1)
G90
ENDIF
IF $MCS_ISO_ENABLE_INTERRUPTS==1
IF $MN_EXTERN_INTERRUPT_BITS_M96 B_AND 'B1'
ENABLE(1)
IF $AC_PARAM[1]==1
$A_OUT[1]=0
$A_OUT[1]=1
ENDIF
ENDIF
ENDIF
GOTOF _RET
_FEHL1: STOPRE
N337401 SETAL(61800)
RET
_FEHL2: STOPRE
N337402 SETAL(61003)
RET
_FEHL4: STOPRE
N337404 SETAL(61610)
RET
_FEHL5: STOPRE
N337405 SETAL(61805)
RET
_FEHL6: STOPRE
N337406 SETAL(61801)
RET
_FEHL7: STOPRE
N337407 SETAL(61603)
RET
_FEHL8: STOPRE
N337408 SETAL(61811)
RET
_FEHL9: STOPRE
N337409 SETAL(61812)
RET
_FEHL10:
N337410 SETAL(61815)
STOPRE
RET
_RET:
RET
