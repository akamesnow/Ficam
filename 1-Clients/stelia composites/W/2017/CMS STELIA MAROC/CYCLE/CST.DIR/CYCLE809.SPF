PROC CYCLE809(STRING[32] S_TRA,REAL _BETA,REAL _GAMA,INT _MODE,REAL _FR_I,REAL S_POLA,INT _DMODE) SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.60.00 ;DATE: 2014-03-31
;Cycle support HMIsl
;Turning tool orientation
DEF INT _P15,S_TRA_NO,S_C_NR,S_B_NR,S_SP_NR,S_PM,S_SOL,S_I,_TYP,S_TRA_SP_NO,S_TRA_SP_A,S_IDENT
DEF REAL _FAK1,_FAK3,S_B,S_SP,S_C
DEF STRING[200] S_STR,S_TRA_SP
DEF STRING[30] S_STRAL
DEF STRING[15] S_AX_NAME[3]
DEF AXIS _XX,_YY,_ZZ,_B
DEF INT _LOG,_LOG_ON
DEF STRING[35] _LOG_FILE
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK3=1/$MN_SCALING_VALUE_INCH
ELSE
_FAK3=1
ENDIF
_LOG_FILE="/_N_MPF_DIR/_N_LOG_CYCLE809_"<<$P_CHANNO<<"_MPF"
_LOG_ON=ISFILE(_LOG_FILE)
IF(_LOG_ON)
; DELETE(_LOG,_LOG_FILE)
WRITE(_LOG,_LOG_FILE,"*****************************")
WRITE(_LOG,_LOG_FILE,"; Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<"  Time: "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_LOG,_LOG_FILE,"CYCLE809("<<S_TRA<<","<<_BETA<<","<<_GAMA<<","<<_MODE<<","<<_FR_I<<","<<S_POLA<<","<<_DMODE<<")")
WRITE(_LOG,_LOG_FILE,"Beta="<<_BETA<<" Gamma="<<_GAMA)
WRITE(_LOG,_LOG_FILE,"NCK-Version: "<<$AN_NCK_VERSION)
WRITE(_LOG,_LOG_FILE,"             "<<$MN_VERSION_INFO[0])
WRITE(_LOG,_LOG_FILE,"             "<<$MN_VERSION_INFO[1])
WRITE(_LOG,_LOG_FILE,"             "<<$MN_VERSION_INFO[2])
WRITE(_LOG,_LOG_FILE,"             "<<$MN_VERSION_INFO[3])
ENDIF
IF($P_GG[15]==4)OR($P_GG[15]==7)
_P15=$P_GG[15]
G972
G4 F0
ENDIF
$P_WPFRAME=CTRANS()
$P_WPFR=$P_WPFRAME
IF(S_TRA=="0")OR($P_SUBPAR[1]==0)
S_STR="TOOL_ORIENT(0)"
WRTPR(S_STR,1)
S_STR="G18_ORIENT(0)"
WRTPR(S_STR,1)
CUTMODK=""
TRAFOOF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"WRTPR(TOOL_ORIENT(0))")
WRITE(_LOG,_LOG_FILE,"WRTPR(G18_ORIENT(0))")
WRITE(_LOG,_LOG_FILE,"CUTMODK Abwahl")
WRITE(_LOG,_LOG_FILE,"TRAFOOF")
ENDIF
GOTOF _RET
ENDIF
IF($P_MC)
GOTOF _FEHL4
ENDIF
IF($MC_TOOL_PARAMETER_DEF_MASK B_AND 'H60000' <> 'H40000')
S_STRAL="MD 20360 (Bit 17=0, 18=1)"
GOTOF _FEHL10
ENDIF
IF($MNS_FUNCTION_MASK_SIM B_AND 'H20' <> 'H20')
S_STRAL="MD 51226 (Bit 5 = 1)"
GOTOF _FEHL10
ENDIF
CYCLE210(1)
IF(_F_AX_EXISTS[0]==0)AND(_F_AX_EXISTS[2]==0)
S_STRAL="MD 52206[] (=3)"
GOTOF _FEHL10
ENDIF
IF(_F_AX_EXISTS[1]==0)
S_STRAL="MD 52206[] (=1)"
GOTOF _FEHL10
ENDIF
S_TRA_NO=NAMETOINT("$NT_NAME",S_TRA,TRUE)
S_STRAL=S_TRA
IF(S_TRA_NO<0)
GOTOF _FEHL1
ENDIF
S_IDENT=$NT_IDENT[S_TRA_NO,0]
IF((S_IDENT _DEC9)<4)
GOTOF _FEHL14
ENDIF
S_STRAL=S_TRA
IF((S_IDENT _DEC5)<2)
GOTOF _FEHL13
ENDIF
S_STRAL=$NT_TRAFO_TYPE[S_TRA_NO]<<" (TRAORI_STAT)"
IF($NT_TRAFO_TYPE[S_TRA_NO]<>"TRAORI_STAT")
GOTOF _FEHL2
ENDIF
IF($P_TOOLNO==0)
GOTOF _FEHL7
ENDIF
IF($P_TOOL==0)
GOTOF _FEHL8
ENDIF
_TYP=$P_AD[1]
IF(_TYP<500)OR(_TYP>599)
GOTOF _FEHL9
ENDIF
IF(_MODE _DEC1)
S_STRAL=""<<(_MODE _DEC1)<<" (0...0)"
GOTOF _FEHL12
ENDIF
IF((_DMODE _DEC1)==2)
G18
ELSE
S_STRAL="G"<<$P_GG[6]+16<<" (G18)"
IF($P_GG[6]<>2)
GOTOF _FEHL3
ENDIF
ENDIF
_ZZ=$P_AXN1
_XX=$P_AXN2
_YY=$P_AXN3
_TC_FR=_MODE _DEC1
_TC_N_WZ=_MODE _DEC2
_TC_A_WZ=_MODE _DEC3 + 2
N90 TRAFOOF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"CUST_800(70,"<<S_TRA_NO<<")")
ENDIF
N100 CUST_800(70,S_TRA_NO)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"$SC_TOOL_LENGTH_CONST="<<$SC_TOOL_LENGTH_CONST)
WRITE(_LOG,_LOG_FILE,"$SC_TOOL_LENGTH_TYPE ="<<$SC_TOOL_LENGTH_TYPE)
WRITE(_LOG,_LOG_FILE,"TOOLORI_BCS =  " << $P_TOOLO[1] << "  " << $P_TOOLO[2] << "  " << $P_TOOLO[3])
WRITE(_LOG,_LOG_FILE,"TOOLROT_BCS =  " << $P_TOOLROT[1] << "  " << $P_TOOLROT[2] << "  " << $P_TOOLROT[3])
ENDIF
N110 TRAFOON(S_TRA)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"TRAFOON("<<S_TRA<<")")
WRITE(_LOG,_LOG_FILE,"Reihenfolge Rundachsen:"<<$PC_TRAFO_ROT_CHAIN_INDEX[0]<<" / "<<$PC_TRAFO_ROT_CHAIN_INDEX[1]<<" / "<<$PC_TRAFO_ROT_CHAIN_INDEX[2])
WRITE(_LOG,_LOG_FILE,"TOOLORI_BCS =  " << $P_TOOLO[1] << "  " << $P_TOOLO[2] << "  " << $P_TOOLO[3])
WRITE(_LOG,_LOG_FILE,"TOOLROT_BCS =  " << $P_TOOLROT[1] << "  " << $P_TOOLROT[2] << "  " << $P_TOOLROT[3])
ENDIF
IF($PC_TRAFO_ROT_CHAIN_INDEX[0]<0)OR($PC_TRAFO_ROT_CHAIN_INDEX[1]<0)OR($PC_TRAFO_ROT_CHAIN_INDEX[2]<0)
S_STRAL=S_TRA
GOTOF _FEHL6
ENDIF
FOR S_I=0 TO 2
IF($PC_TRAFO_ROT_CHAIN_INDEX[S_I]==0)
S_C_NR=S_I
ENDIF
IF($PC_TRAFO_ROT_CHAIN_INDEX[S_I]==1)
S_B_NR=S_I
ENDIF
IF($PC_TRAFO_ROT_CHAIN_INDEX[S_I]==2)
S_SP_NR=S_I
ENDIF
ENDFOR
S_AX_NAME[S_C_NR]=AXSTRING($PC_TRAFO_ROT_CHAN_AX_IN[0])
S_AX_NAME[S_B_NR]=AXSTRING($PC_TRAFO_ROT_CHAN_AX_IN[1])
S_AX_NAME[S_SP_NR]=AXSTRING($PC_TRAFO_ROT_CHAN_AX_IN[2])
_B=AXNAME(S_AX_NAME[S_B_NR])
S_TRA_SP=$NT_ROT_AX_NAME[S_TRA_NO,S_SP_NR]
S_TRA_SP_NO=NAMETOINT("$NK_NAME",S_TRA_SP,TRUE)
IF(S_TRA_SP_NO>=0)
S_TRA_SP_A=$NK_A_OFF[S_TRA_SP_NO]
S_STR="TOOL_ORIENT("<<(-S_TRA_SP_A)<<")"
WRTPR(S_STR,1)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"WRTPR("<<S_STR<<")")
ENDIF
ENDIF
S_STR="ORISOL ORIWKS "<<$MN_DIR_VECTOR_NAME_TAB[0]<<"="<<COS(_BETA)*SIN(_GAMA)<<" "<<$MN_DIR_VECTOR_NAME_TAB[1]<<"="<<COS(_GAMA)<<" "<<$MN_DIR_VECTOR_NAME_TAB[2]<<"="<<(-SIN(_BETA)*SIN(_GAMA))<<" "<<$MN_DIR_VECTOR_NAME_TAB[3]<<"="<<SIN(_BETA)<<" "<<$MN_DIR_VECTOR_NAME_TAB[4]<<"=0 "<<$MN_DIR_VECTOR_NAME_TAB[5]<<"="<<COS(_BETA)
N120 EXECSTRING(S_STR)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  $P_TRAFRAME_T,TR: X="<<$P_TRAFRAME_T[_XX,TR]<<" Y="<<$P_TRAFRAME_T[_YY,TR]<<" Z="<<$P_TRAFRAME_T[_ZZ,TR]<<" B="<<$P_TRAFRAME_T[_B,TR])
WRITE(_LOG,_LOG_FILE,"  $P_TRAFRAME_T,RT: X="<<$P_TRAFRAME_T[_XX,RT]<<" Y="<<$P_TRAFRAME_T[_YY,RT]<<" Z="<<$P_TRAFRAME_T[_ZZ,RT])
WRITE(_LOG,_LOG_FILE,"  $P_TRAFRAME_P,TR: X="<<$P_TRAFRAME_P[_XX,TR]<<" Y="<<$P_TRAFRAME_P[_YY,TR]<<" Z="<<$P_TRAFRAME_P[_ZZ,TR]<<" B="<<$P_TRAFRAME_P[_B,TR])
WRITE(_LOG,_LOG_FILE,"  $P_TRAFRAME_P,RT: X="<<$P_TRAFRAME_P[_XX,RT]<<" Y="<<$P_TRAFRAME_P[_YY,RT]<<" Z="<<$P_TRAFRAME_P[_ZZ,RT])
WRITE(_LOG,_LOG_FILE,S_STR)
WRITE(_LOG,_LOG_FILE,"$PC_TRAFO_ROT_CHAN_AX_IN[] 0:"<<AXSTRING($PC_TRAFO_ROT_CHAN_AX_IN[0])<<" 1:"<<AXSTRING($PC_TRAFO_ROT_CHAN_AX_IN[1])<<" 2:"<<AXSTRING($PC_TRAFO_ROT_CHAN_AX_IN[2]))
WRITE(_LOG,_LOG_FILE,"Achsreihenfolge: 0:"<<S_AX_NAME[0]<<" 1:"<<S_AX_NAME[1]<<" 2:"<<S_AX_NAME[2])
WRITE(_LOG,_LOG_FILE,"$P_ORI_SOL="<<$P_ORI_SOL)
WRITE(_LOG,_LOG_FILE,"$P_ORI_STAT="<<$P_ORI_STAT[0]<<" "<<$P_ORI_STAT[1]<<" "<<$P_ORI_STAT[2])
WRITE(_LOG,_LOG_FILE,"$P_ORI_POS="<<$P_ORI_POS[0,0]<<"/"<<$P_ORI_POS[1,0]<<"  "<<$P_ORI_POS[0,1]<<"/"<<$P_ORI_POS[1,1]<<"  "<<$P_ORI_POS[0,2]<<"/"<<$P_ORI_POS[1,2])
ENDIF
IF($P_ORI_SOL _DEC1<0)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Fehler: $P_ORI_SOL 1er="<<($P_ORI_SOL _DEC1))
ENDIF
S_STRAL="CYCLE809/1"
GOTOF _FEHL11
ENDIF
IF($P_ORI_SOL _DEC1==0)
GOTOF _FEHL5
ENDIF
IF($P_ORI_STAT[0]<0)OR($P_ORI_STAT[1]<0)OR($P_ORI_STAT[2]<0)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Fehler: $P_ORI_STAT: "<<$P_ORI_STAT[0]<<"/"<<$P_ORI_STAT[1]<<"/"<<$P_ORI_STAT[2])
ENDIF
S_STRAL="CYCLE809/2"
GOTOF _FEHL11
ENDIF
IF((S_IDENT _DEC4)==0)
S_PM=-1
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"keine Richtungsauswahl, fest -1 (IDENT="<<S_IDENT<<")")
ENDIF
ELSE
IF((S_IDENT _DEC4)==5)
S_PM=1
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"keine Richtungsauswahl, fest +1 (IDENT="<<S_IDENT<<")")
ENDIF
ELSE
S_PM=((_MODE _DEC4)-1)*2-1
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Richtungsauswahl "<<S_PM<<" (IDENT="<<S_IDENT<<", MODE="<<_MODE<<")")
ENDIF
ENDIF
ENDIF
S_SOL=-1
IF($P_ORI_SOL _DEC1==1)
IF($P_ORI_STAT[0] _DEC1)OR($P_ORI_STAT[1] _DEC1)OR($P_ORI_STAT[2] _DEC1)
GOTOF _FEHL5
ENDIF
S_SOL=0
ELSE
IF($P_ORI_SOL _DEC1==2)
IF($P_ORI_STAT[0] _DEC1)OR($P_ORI_STAT[1] _DEC1)OR($P_ORI_STAT[2] _DEC1)
S_SOL=1
IF($P_ORI_STAT[0] _DEC2)OR($P_ORI_STAT[1] _DEC2)OR($P_ORI_STAT[2] _DEC2)
GOTOF _FEHL5
ENDIF
ELSE
IF($P_ORI_STAT[0] _DEC2)OR($P_ORI_STAT[1] _DEC2)OR($P_ORI_STAT[2] _DEC2)
S_SOL=0
ELSE
IF(S_PM==-1)
IF($P_ORI_POS[0,S_B_NR]<$P_ORI_POS[1,S_B_NR])
S_SOL=0
ELSE
S_SOL=1
ENDIF
ELSE
IF($P_ORI_POS[0,S_B_NR]<$P_ORI_POS[1,S_B_NR])
S_SOL=1
ELSE
S_SOL=0
ENDIF
ENDIF
ENDIF
ENDIF
ELSE
S_B=$P_ORI_POS[0,S_B_NR]
S_SP=(((-S_POLA+$P_ORI_POS[0,S_sp_NR])MOD 360)+360)MOD 360
S_C=-S_POLA
S_SOL=-1
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"  _GAMA="<<_GAMA)
WRITE(_LOG,_LOG_FILE,"  S_POLA="<<S_POLA)
WRITE(_LOG,_LOG_FILE,"  S_B="<<S_B)
WRITE(_LOG,_LOG_FILE,"  S_C="<<S_C)
WRITE(_LOG,_LOG_FILE,"  S_SP="<<S_SP)
WRITE(_LOG,_LOG_FILE,"  $P_ORI_POS[0,S_SP_NR]="<<$P_ORI_POS[0,S_SP_NR])
WRITE(_LOG,_LOG_FILE,"  $P_ORI_POS[0,S_C_NR] ="<<$P_ORI_POS[0,S_C_NR])
ENDIF
ENDIF
ENDIF
IF(S_SOL>=0)
S_B=$P_ORI_POS[S_SOL,S_B_NR]
S_SP=(($P_ORI_POS[S_SOL,S_SP_NR] MOD 360)+360)MOD 360
S_C=$P_ORI_POS[S_SOL,S_C_NR]
ENDIF
IF(_LOG_ON)
IF(S_SOL>=0)
WRITE(_LOG,_LOG_FILE,"Lösung: "<<S_SOL+1)
WRITE(_LOG,_LOG_FILE,"S_SP="<<S_SP)
ELSE
WRITE(_LOG,_LOG_FILE,"Lösung beliebig: S_SP="<<S_SP)
ENDIF
WRITE(_LOG,_LOG_FILE,"S_B="<<S_B)
WRITE(_LOG,_LOG_FILE,"S_C="<<S_C)
ENDIF
ORIMKS
IF($MC_ORI_IPO_WITH_G_CODE)
ORIAXES
ENDIF
IF(_MODE _DEC1)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Freifahren: CUST_800("<<40+(_MODE _DEC1)<<","<<S_TRA_NO<<",,,,"<<_FR_I<<")")
ENDIF
N200 CUST_800(40+(_MODE _DEC1),S_TRA_NO,,,,_FR_I)
ENDIF
N300 TRAFOON(S_TRA)
S_SP=((S_SP MOD 360)+360)MOD 360
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Achsen ausrichten: CUST_800(71,"<<S_TRA_NO<<","<<S_B<<","<<S_SP<<")")
ENDIF
N310 CUST_800(71,S_TRA_NO,S_B,S_SP)
S_STR="G18_ORIENT("<<(-S_C)<<")"
WRTPR(S_STR,1)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"WRTPR("<<S_STR<<")")
ENDIF
$P_WPFRAME=$P_WPFRAME:CROT(_ZZ,-S_C)
$P_WPFR=$P_WPFRAME
N400 TRAFOON(S_TRA)
S_STR="PARTFRAME("<<$P_TRAFRAME_P[_XX,TR]*_FAK1/_FAK3<<","<<$P_TRAFRAME_P[_YY,TR]*_FAK1/_FAK3<<","<<$P_TRAFRAME_P[_ZZ,TR]*_FAK1/_FAK3<<","<<$P_TRAFRAME_P[_XX,RT]<<","<<$P_TRAFRAME_P[_YY,RT]<<","<<$P_TRAFRAME[_ZZ,RT]<<")"
WRTPR(S_STR,1)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"WRTPR("<<S_STR<<")")
ENDIF
$MC_TOOL_CARRIER_RESET_VALUE=0
IF($P_CUTMOD)
N500 CUTMOD=0
ENDIF
N510 CUTMODK=S_TRA
N520 D=$P_TOOL
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"CUTMODK="<<$P_CUTMODK<<" ANG="<<$P_CUTMOD_ANG<<" INV="<<$P_CUT_INV)
WRITE(_LOG,_LOG_FILE,"  D="<<$P_TOOL<<" SL="<<$P_AD[2]<<" Halterwinkel="<<$P_AD[10]<<" Freiwinkel="<<$P_AD[24]<<" Richtung="<<$P_AD[11])
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Ende: CUST_800(72,"<<S_TRA_NO<<")")
ENDIF
N600 CUST_800(72,S_TRA_NO)
IF(_P15)
G[15]=_P15
ENDIF
_RET:
RET
_FEHL1: STOPRE
N780901 SETAL(61167,S_STRAL)
RET
_FEHL2: STOPRE
N780902 SETAL(61164,S_STRAL)
RET
_FEHL3: STOPRE
N780903 SETAL(61168,S_STRAL)
RET
_FEHL4: STOPRE
N780904 SETAL(61019,">MCALL<")
RET
_FEHL5: STOPRE
N780905 SETAL(61184)
RET
_FEHL6: STOPRE
N780906 SETAL(61165,S_STRAL)
RET
_FEHL7: STOPRE
N780907 SETAL(61009)
RET
_FEHL8: STOPRE
N780908 SETAL(61000)
RET
_FEHL9: STOPRE
N780909 SETAL(61212)
RET
_FEHL10: STOPRE
N780910 SETAL(61166,S_STRAL)
RET
_FEHL11: STOPRE
N780911 SETAL(61099,S_STRAL)
RET
_FEHL12: STOPRE
N780912 SETAL(61183,S_STRAL)
RET
_FEHL13: STOPRE
N780913 SETAL(61152,S_STRAL)
RET
_FEHL14: STOPRE
N780914 SETAL(61147,S_STRAL)
RET
