PROC E_MANAGE PREPRO SBLOF DISPLOF
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.51.00 ;DATE: 2013-08-21
;ShopMill: Management
DEF AXIS _XX,_YY,_ZZ
DEF INT _I,_IT,_IP,_TEC,_POS,_BOT,_BOP,_S_TEC,_S_POS,_OB,_CUR_POS,_CUR_TEC
DEF REAL _FAK1,_FAK2,_RP,_SC,_SD,_SD1,_SD2
DEF STRING[128] _STR
_XX=$P_AXN1 _YY=$P_AXN2 _ZZ=$P_AXN3
IF($P_ACTFRAME[_XX,SC]<>$P_ACTFRAME[_YY,SC]) GOTOF _FEHL7
IF(_E_POSMU) GOTOF _FEHL8
_E_POSMU=1
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
_FAK2=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK2=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)OR($P_GG[13]==4)
_FAK2=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
IF(($P_TOOL>1)AND($P_TOOLNO))
_SD2=$P_TOOLL[1]
_SD1=$TC_DP3[$P_TOOLNO,1]+$TC_DP12[$P_TOOLNO,1]+$TC_DP21[$P_TOOLNO,1]
IF(_SD2<_SD1)
_SD=(_SD1-_SD2)*_FAK1
ELSE
_SD=0
ENDIF
ELSE
_SD=0
ENDIF
IF(SUBSTR($P_PROG[0],3,11)=="MA_JOG_STEP")OR(SUBSTR($P_PROG[1],3,11)=="MA_JOG_STEP")
_E_INIT=1
_SC=$SCS_MAJOG_SAFETY_CLEARANCE*_FAK1
_RP=$SCS_MAJOG_RELEASE_PLANE*_FAK1
ELSE
_SC=_E_SC*_FAK2
_RP=_E_RP*_FAK2
ENDIF
_TEC=0
_POS=0
FOR _I=0 TO _E_IR-1
IF(_E_TR[_I,0]>0)AND(_POS==0)
_TEC=_TEC+1
ENDIF
IF(_E_TR[_I,0]<0)
_POS=_POS+1
ENDIF
ENDFOR
IF((_TEC+_POS)<>_E_IR) GOTOF _FEHL1
IF(_TEC<=0) GOTOF _FEHL2
IF(_POS<=0) GOTOF _FEHL3
_STR="CMM_INTERN"<<","<<"BLOCKOFFSET"<<","<<_POS-1<<","<<_POS-1+_TEC
MMC(_STR,"N")
IF($P_SEARCH)OR($AC_SERUPRO)
_S_TEC=0
_S_POS=0
ELSE
IF(_E_SEARCH[0]>=_TEC)OR(_E_SEARCH[1]>=_POS) GOTOF _FEHL4
_S_TEC=_E_SEARCH[0]
_S_POS=_E_SEARCH[1]
_E_SEARCH[0]=0
_E_SEARCH[1]=0
ENDIF
;_E_ZREF=$P_EP[_ZZ]*_FAK1*1/_FAK2
IF(_RP+_SD>$P_EP[_ZZ]*_FAK1)
N13 E_SP_RP(20,_RP+_SD)
ENDIF
_E_ONETIME=0
FOR _IT=_S_TEC TO _TEC-1
_BOT=(_E_IR-_IT-1)*65536
CASE _E_TR[_IT,0] OF 1 GOTOF _M_T1 2 GOTOF _M_T2 3 GOTOF _M_T3 4 GOTOF _M_T4 5 GOTOF _M_T5 6 GOTOF _M_T6 7 GOTOF _M_T7 8 GOTOF _M_T8
CASE _E_TR[_IT,0] OF 11 GOTOF _M_T11 12 GOTOF _M_T12 13 GOTOF _M_T13 14 GOTOF _M_T14 15 GOTOF _M_T15 16 GOTOF _M_T16 17 GOTOF _M_T17
CASE _E_TR[_IT,0] OF 21 GOTOF _M_T21
CASE _E_TR[_IT,0] OF 101 GOTOF _M_T101 102 GOTOF _M_T102 103 GOTOF _M_T103 104 GOTOF _M_T104 105 GOTOF _M_T105 106 GOTOF _M_T106 107 GOTOF _M_T107 108 GOTOF _M_T108
GOTOF _FEHL5
_M_T1:E_DR_SIN(3,_BOT,_IT)
MCALL E_DR_SIN(0,_BOT,_IT)
GOTOF _MCT
_M_T2:E_DR(3,_BOT,_IT)
MCALL E_DR(0,_BOT,_IT)
GOTOF _MCT
_M_T3:E_DR_REA(3,_BOT,_IT)
MCALL E_DR_REA(0,_BOT,_IT)
GOTOF _MCT
_M_T4:E_DR_PEC(3,_BOT,_IT)
MCALL E_DR_PEC(0,_BOT,_IT)
GOTOF _MCT
_M_T5:E_DR_BOR(3,_BOT,_IT)
MCALL E_DR_BOR(0,_BOT,_IT)
GOTOF _MCT
_M_T6:E_DR_TAP(3,_BOT,_IT)
MCALL E_DR_TAP(0,_BOT,_IT)
GOTOF _MCT
_M_T7:E_MI_TR(3,_BOT,_IT)
MCALL E_MI_TR(0,_BOT,_IT)
GOTOF _MCT
_M_T8:E_DR_BGF(3,_BOT,_IT)
MCALL E_DR_BGF(0,_BOT,_IT)
GOTOF _MCT
_M_T11:E_PO_REC(3,_BOT,_IT)
MCALL E_PO_REC(0,_BOT,_IT)
GOTOF _MCT
_M_T12:E_PO_CIR(3,_BOT,_IT)
MCALL E_PO_CIR(0,_BOT,_IT)
GOTOF _MCT
_M_T13:E_PI_REC(3,_BOT,_IT)
MCALL E_PI_REC(0,_BOT,_IT)
GOTOF _MCT
_M_T14:E_PI_CIR(3,_BOT,_IT)
MCALL E_PI_CIR(0,_BOT,_IT)
GOTOF _MCT
_M_T15:E_SL_LON(3,_BOT,_IT)
MCALL E_SL_LON(0,_BOT,_IT)
GOTOF _MCT
_M_T16:E_SL_OPN(3,_BOT,_IT)
MCALL E_SL_OPN(0,_BOT,_IT)
GOTOF _MCT
_M_T17:E_MI_EDG(3,_BOT,_IT)
MCALL E_MI_EDG(0,_BOT,_IT)
GOTOF _MCT
_M_T21:
MCALL E_CALL(0,_BOT,_IT)
GOTOF _MCT
_M_T101:E_DR_O1(3,_BOT,_IT)
IF(_E_ONETIME)GOTOF _M_ONETIME
MCALL E_DR_O1(0,_BOT,_IT)
GOTOF _MCT
_M_T102:E_DR_O2(3,_BOT,_IT)
IF(_E_ONETIME)GOTOF _M_ONETIME
MCALL E_DR_O2(0,_BOT,_IT)
GOTOF _MCT
_M_T103:E_DR_O3(3,_BOT,_IT)
IF(_E_ONETIME)GOTOF _M_ONETIME
MCALL E_DR_O3(0,_BOT,_IT)
GOTOF _MCT
_M_T104:E_DR_O4(3,_BOT,_IT)
IF(_E_ONETIME)GOTOF _M_ONETIME
MCALL E_DR_O4(0,_BOT,_IT)
GOTOF _MCT
_M_T105:E_DR_O5(3,_BOT,_IT)
IF(_E_ONETIME)GOTOF _M_ONETIME
MCALL E_DR_O5(0,_BOT,_IT)
GOTOF _MCT
_M_T106:E_DR_O6(3,_BOT,_IT)
IF(_E_ONETIME)GOTOF _M_ONETIME
MCALL E_DR_O6(0,_BOT,_IT)
GOTOF _MCT
_M_T107:E_DR_O7(3,_BOT,_IT)
IF(_E_ONETIME)GOTOF _M_ONETIME
MCALL E_DR_O7(0,_BOT,_IT)
GOTOF _MCT
_M_T108:E_DR_O8(3,_BOT,_IT)
IF(_E_ONETIME)GOTOF _M_ONETIME
MCALL E_DR_O8(0,_BOT,_IT)
GOTOF _MCT
_MCT:
IF(($P_TOOL>1)AND($P_TOOLNO))
_SD2=$P_TOOLL[1]
_SD1=$TC_DP3[$P_TOOLNO,1]+$TC_DP12[$P_TOOLNO,1]+$TC_DP21[$P_TOOLNO,1]
IF(_SD2<_SD1)
_SD=(_SD1-_SD2)*_FAK1
ELSE
_SD=0
ENDIF
ELSE
_SD=0
ENDIF
FOR _IP=_TEC TO _E_IR-1
_BOP=_E_IR-_IP-1
_CUR_POS=_BOP
_CUR_TEC=_BOT DIV 65536
_STR="CMM_INTERN"<<","<<"BLOCKOFFSET"<<","<<_CUR_POS<<","<<_CUR_TEC
MMC(_STR,"N")
IF(_IP<_TEC+_S_POS)
_OB=4
ELSE
_OB=0
ENDIF
CASE _E_TR[_IP,0] OF -1 GOTOF _M_P1 -2 GOTOF _M_P2 -3 GOTOF _M_P3 -4 GOTOF _M_P4 -5 GOTOF _M_P5 -6 GOTOF _M_P6 -7 GOTOF _M_P7 -8 GOTOF _M_P8
GOTOF _FEHL6
_M_P1:E_PS_SEQ(_OB,_BOP,_IP)
GOTOF _MCP
_M_P2:E_PS_ROW(_OB,_BOP,_IP)
GOTOF _MCP
_M_P3:E_PS_MRX(_OB,_BOP,_IP)
GOTOF _MCP
_M_P4:E_PS_CIR(_OB,_BOP,_IP)
GOTOF _MCP
_M_P5:E_PS_HIN(_OB,_BOP,_IP)
GOTOF _MCP
_M_P6:E_PS_POL(_OB,_BOP,_IP)
GOTOF _MCP
_M_P7:E_PS_XYA(_OB,_BOP,_IP)
GOTOF _MCP
_M_P8:E_PS_FRA(_OB,_BOP,_IP)
GOTOF _MCP
_MCP:
ENDFOR
MCALL
N19 SBLON
N20 G0 G90 AX[_ZZ]=_RP+_SD
N21 SBLOF
_M_ONETIME:
_E_ONETIME=0
_S_POS=0
ENDFOR
_RET:
_E_IR=0
_E_BO=0
_E_POSMU=0
MMC("CMM_INTERN,BLOCKOFFSET,0,0","N")
IF($P_GG[15]<>2)
G94
ENDIF
RET
_FEHL1: STOPRE
N833001 SETAL(61201)
RET
_FEHL2: STOPRE
N833002 SETAL(61202)
RET
_FEHL3: STOPRE
N833003 SETAL(61203)
RET
_FEHL4: STOPRE
N833004 SETAL(61210)
RET
_FEHL5: STOPRE
N833005 SETAL(61204)
RET
_FEHL6: STOPRE
N833006 SETAL(61205)
RET
_FEHL7: STOPRE
N833007 SETAL(61012)
RET
_FEHL8: STOPRE
N833008 SETAL(61263)
RET
