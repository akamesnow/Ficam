PROC F_SIM(INT _TYPE,INT _STAT,REAL _P1,REAL _P2,REAL _P3,REAL _P4,REAL _P5,REAL _P6,REAL _P7,REAL _ZB,INT _RSTOCK,REAL _XR)
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 02.06.15.00 ;DATE: 2009-04-29
;ShopTurn: Simulation Cycle
DEF AXIS _ZZ,_Z2
DEF REAL _Z_TRANS,_Z2_TRANS=0,_FAK1,_FAK2
DEF STRING[128] _STR
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
_FAK2=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK2=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)OR($P_GG[13]==4)
_FAK2=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
IF($P_GG[6]==1)
_ZZ=$P_AXN3
ELSE
IF($P_GG[6]==2)
_ZZ=$P_AXN1
ELSE
_ZZ=$P_AXN2
ENDIF
ENDIF
_Z_TRANS=($P_SETFRAME[_ZZ,TR]+$P_IFRAME[_ZZ,TR])*_FAK1
IF($MN_MM_FRAME_FINE_TRANS)
_Z_TRANS=_Z_TRANS+($P_SETFRAME[_ZZ,FI]+$P_IFRAME[_ZZ,FI])*_FAK1
ENDIF
IF(E_MD9803)AND(_F_S_NR[2])
_Z2=AXNAME($MC_AXCONF_CHANAX_NAME_TAB[E_MD9803-1])
_Z2_TRANS=($P_SETFRAME[_Z2,TR]+$P_IFRAME[_Z2,TR])*_FAK1
IF($MN_MM_FRAME_FINE_TRANS)
_Z2_TRANS=_Z2_TRANS+($P_SETFRAME[_Z2,FI]+$P_IFRAME[_Z2,FI])*_FAK1
ENDIF
ENDIF
WRTPR("NPV_BLANK("<<_Z_TRANS/_FAK2<<","<<_Z2_TRANS/_FAK2<<")",1)
CASE _TYPE OF 0 GOTOF _M_T0 1 GOTOF _M_T1 2 GOTOF _M_T2 3 GOTOF _M_T3 10 GOTOF _M_T10 11 GOTOF _M_T11 12 GOTOF _M_T12 13 GOTOF _M_T13 14 GOTOF _M_T14 15 GOTOF _M_T15 DEFAULT GOTOF _M_T
_M_T0: WRTPR("END()",1)
GOTOF _M_T
_M_T1: WRTPR("CLEAN()",1)
GOTOF _M_T
_M_T2: WRTPR("STOP()",1)
GOTOF _M_T
_M_T3: WRTPR("START()",1)
GOTOF _M_T
_M_T10:_STR="BLOCK("<<_P2<<","<<_P3<<","<<_P4<<","<<_ZB<<","
IF(_STAT==0)
_STR=_STR<<_P5<<","
ELSE
_STR=_STR<<_P4-_P5<<","
ENDIF
_STR=_STR<<"0,"<<_RSTOCK<<","<<_XR<<")"
WRTPR(_STR,1)
GOTOF _M_T
_M_T11:_STR="CYL("<<_P2<<","<<_P3<<","<<_P4<<","<<_P1<<","
IF(_STAT==0)
_STR=_STR<<_P5<<","
ELSE
IF(_P1==1)
_STR=_STR<<_P5+_P2<<","
ELSE
IF(_P1==2)
_STR=_STR<<_P5+_P3<<","
ELSE
_STR=_STR<<_P4-_P5<<","
ENDIF
ENDIF
ENDIF
_STR=_STR<<_P6<<",0,0,"
_STR=_STR<<_ZB<<","<<_RSTOCK<<","<<_XR<<")"
WRTPR(_STR,1)
GOTOF _M_T
_M_T12:_STR="CYL("<<_P2<<","<<_P3<<","<<_P4<<","<<_P1<<","
IF(_STAT==0)
_STR=_STR<<_P5<<","
ELSE
IF(_P1==1)
_STR=_STR<<_P5+_P2<<","
ELSE
IF(_P1==2)
_STR=_STR<<_P5+_P3<<","
ELSE
_STR=_STR<<_P4-_P5<<","
ENDIF
ENDIF
ENDIF
_STR=_STR<<_P6<<","<<_P7<<",0,"
_STR=_STR<<_ZB<<","<<_RSTOCK<<","<<_XR<<")"
WRTPR(_STR,1)
GOTOF _M_T
_M_T13:_STR="CYL(0,0,0,"<<_P1<<",0,0,0,"<<_STAT<<")"
WRTPR(_STR,1)
GOTOF _M_T
_M_T14:_STR="BLOCK("<<_P2<<","<<_P3<<","<<_P4<<","<<_ZB<<","
IF(_STAT==0)
_STR=_STR<<_P5<<","
ELSE
_STR=_STR<<_P4-_P5<<","
ENDIF
_STR=_STR<<"1,"<<_RSTOCK<<","<<_XR<<")"
WRTPR(_STR,1)
GOTOF _M_T
_M_T15:_STR="PINOLE("<<_STAT<<","<<_P1<<")"
WRTPR(_STR,1)
GOTOF _M_T
_M_T:
RET
