PROC CYCLE387M SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.52.00 ;DATE: 2013-10-17
;ISO-M drilling (G76/G87)
DEF AXIS _XX,_YY,_ZZ
DEF INT _FCX_P,_FCY_P,_FCZ_P,_FCU_P,_FCV_P,_FCW_P,_FCA_P,_FCB_P,_FCC_P
DEF INT _G98,_G90,_FIRST,_I,_FCK,_FCK0,_PLAN,_PAR1,_TRC
DEF INT _AXNUM,_AXE,_NAAX,_MODAX[6],_II,_NOMODANZ,_MODANZ
DEF REAL _FAAP,_RPA,_POSS,_FCX,_FCY,_FCZ,_FCR,_INIZ,_FAK1,_BP1,_BP2
DEF REAL FCNN[6]
DEF BOOL _AXFOUND=0
DEF STRING[6] _NAMEAX="DEFGHI"
DEF STRING[300] _TRAVSTR
DEF INT _TEMP
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE387M_MPF"
DEF STRING[200] _TEMP_LINE=""
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE387M_MPF")
IF($C_G_PROG==1)
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,"G290")
WRITE(_TEMP,_TEMP_FILE,";Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<"  Time: "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T="<<$TC_TP2[$P_TOOLNO]<<" D"<<$P_TOOL<<" T"<<$P_TOOLNO<<"   ; active TOOL")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$TC_DP1[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-TYPE") ; Werkzeugtyp
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$TC_DP2[$P_TOOLNO,$P_TOOL]<<"     ; EDGE-POSITION") ; Schneidenlage
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$TC_DP6[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-RADIUS") ; Werkzeugradius
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
WRITE(_TEMP,_TEMP_FILE,";D1")
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19") ; aktive Ebene
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...") ; Inch/Metrisch
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...") ; DIAMON/DIAMOF/DIAM90
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/...") ; Vorschubart
WRITE(_TEMP,_TEMP_FILE,"G[14]="<<$P_GG[14]<<"    ; G90/G91/...") ; Positionierung abs./ink.
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F) ; Vorschub
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$AC_MSNUM]) ; Drehzahl und Drehrichtung
WRITE(_TEMP,_TEMP_FILE,";")
WRITE(_TEMP,_TEMP_FILE,"G291")
IF($P_EXTGG[10]==1)
WRITE(_TEMP,_TEMP_FILE,"G98")
ELSE
WRITE(_TEMP,_TEMP_FILE,"G99")
ENDIF
ENDIF
_TEMP_LINE=""
IF $C_G_PROG<>0
IF($P_EXTGG[9]==3)
_TEMP_LINE=_TEMP_LINE<<"G76 "
ELSE
_TEMP_LINE=_TEMP_LINE<<"G87 "
ENDIF
ENDIF
IF $C_A_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"A"<<$C_A<<" "
ENDIF
IF $C_B_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"B"<<$C_B<<" "
ENDIF
IF $C_C_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"C"<<$C_C<<" "
ENDIF
IF $C_X_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"X"<<$C_X<<" "
ENDIF
IF $C_U_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"U"<<$C_U<<" "
ENDIF
IF $C_Y_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Y"<<$C_Y<<" "
ENDIF
IF $C_V_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"V"<<$C_V<<" "
ENDIF
IF $C_Z_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Z"<<$C_Z<<" "
ENDIF
IF $C_W_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"W"<<$C_W<<" "
ENDIF
IF $C_P_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"P"<<$C_P<<" "
ENDIF
IF $C_Q_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Q"<<$C_Q<<" "
ENDIF
IF $C_R_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"R"<<$C_R<<" "
ENDIF
IF $C_F_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"F"<<$C_F<<" "
ENDIF
IF $C_S_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"S"<<$C_S<<" "
ENDIF
IF $C_T_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"T"<<$C_T<<" "
ENDIF
IF $C_K_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"K"<<$C_K[0]<<" "
ENDIF
IF $C_M_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"M"<<$C_M<<" "
ENDIF
WRITE(_TEMP,_TEMP_FILE,_TEMP_LINE)
ENDIF
IF($MN_MM_EXTERN_LANGUAGE<>1) GOTOF _FEHL1
IF $MCS_ISO_ENABLE_INTERRUPTS==1
IF $MN_EXTERN_INTERRUPT_BITS_M96 B_AND 'B1'
$AC_PARAM[1]=0
$A_OUT[1]=0
STOPRE
IF($MN_EXTERN_INTERRUPT_BITS_M96) B_AND 'B1000'
DISABLE(1)
ID=1 WHEN $A_IN[1]==1 DO $AC_PARAM[1]=1
ENDIF
ENDIF
ENDIF
_AXNUM=$ON_NUM_AXES_IN_SYSTEM+$ON_NUM_ADD_AXES_IN_SYSTEM
_TRC=$P_EXTGG[7]
IF($MN_SCALING_SYSTEM_IS_METRIC==1)
IF($MCS_ISO_SCALING_SYSTEM<>1)
CYCLE301
ENDIF
ELSE
IF($MCS_ISO_SCALING_SYSTEM<>2)
CYCLE301
ENDIF
ENDIF
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
IF($SCS_ISO_M_DRILLING_AXIS_IS_Z==1)
G17
ENDIF
_PLAN=$P_GG[6]
_XX=$P_AXN1 _YY=$P_AXN2 _ZZ=$P_AXN3
IF($P_EXTGG[9]==3)
_ZFPI[0]=76
ELSE
_ZFPI[0]=87
ENDIF
IF($C_G_PROG==1)
_FIRST=1
_INIZ=$P_EP[_ZZ]*_FAK1
_ZFPR[0]=_INIZ
ELSE
_FIRST=0
_INIZ=_ZFPR[0]
ENDIF
IF($C_P_PROG>0)
IF($C_M_PROG>0)
IF($C_M==98) GOTOF _IGNDWT
ENDIF
IF($MN_EXTERN_INCREMENT_SYSTEM==0)
_ZFPR[5]=$C_P/1000
ELSE
_ZFPR[5]=$C_P/10000
ENDIF
ELSE
IF(_FIRST==1)
_ZFPR[5]=0
ENDIF
ENDIF
_IGNDWT:
IF($C_F_PROG>0)
_ZFPR[4]=$C_F
ELSE
_ZFPR[4]=$P_F
ENDIF
IF(_ZFPR[4]==0)GOTOF _FEHL2
IF(_FIRST==1)
_ZFPI[1]=$P_SDIR[$AC_MSNUM]
ENDIF
_POSS=(_ZSFR[2]+360-$P_ACTFRAME[_ZZ,RT])MOD 360
IF($C_Q_PROG>0)
_RPA=ABS($C_Q)
CASE $SCS_ISO_M_RETRACTION_DIR OF 0 GOTOF _RD01 1 GOTOF _RD00 2 GOTOF _RD01 3 GOTOF _RD10 4 GOTOF _RD11 DEFAULT GOTOF _FEHL9
_RD00:
_ZFPR[8]=_RPA/$P_ACTFRAME[_XX,SC]
_ZFPR[11]=0
GOTOF _RDXX
_RD01:
_ZFPR[8]=-_RPA/$P_ACTFRAME[_XX,SC]
_ZFPR[11]=0
GOTOF _RDXX
_RD10:
_ZFPR[8]=0
_ZFPR[11]=_RPA/$P_ACTFRAME[_YY,SC]
GOTOF _RDXX
_RD11:
_ZFPR[8]=0
_ZFPR[11]=-_RPA/$P_ACTFRAME[_YY,SC]
_RDXX:
ELSE
IF(_FIRST==1)
_ZFPR[8]=0 _ZFPR[11]=0
ENDIF
ENDIF
IF($C_R_PROG>0)
IF($C_R_PROG==1)
_FCR=$C_R
ELSE
_FCR=_INIZ+$C_R
ENDIF
ELSE
IF(_FIRST==1)
_FCR=_INIZ
ELSE
_FCR=_ZFPR[1]
ENDIF
ENDIF
_ZFPR[1]=_FCR
_I=1 _FCK0=0
IF($C_K_PROG==0)
_FCK=1
ELSE
_FCK=$C_K[0]
IF(_FCK==0)
_FCK=1 _FCK0=1
ELSE
IF(_FCK<0)
_FCK=1
ENDIF
ENDIF
ENDIF
_FCX_P=$C_X_PROG _FCY_P=$C_Y_PROG _FCZ_P=$C_Z_PROG
_FCA_P=$C_A_PROG _FCB_P=$C_B_PROG _FCC_P=$C_C_PROG
_FCU_P=$C_U_PROG _FCV_P=$C_V_PROG _FCW_P=$C_W_PROG
FOR _I=1 TO _FCK
IF ($P_EXTGG[17]==2)
IF($MCS_ISO_M_ENABLE_POLAR_COORD==0) GOTOF _FEHL5
_FAAP=$P_AP
CASE _PLAN OF 3 GOTOF _MG19P 2 GOTOF _MG18P DEFAULT GOTOF _MG17P
_MG19P:
IF ($C_Z_PROG==3)
_FCZ=_FAAP+$C_Z
IF (_FCZ>=360)
_FCZ=_FCZ MOD 360
ENDIF
ELSE
IF ($C_Z_PROG==1)
_FCZ=$C_Z
ELSE
_FCZ=_FAAP
ENDIF
ENDIF
IF ($C_Y_PROG==3)
_FCY=$C_Y
G110 AX[_XX]=0 AX[_YY]=0
ENDIF
IF ($C_Y_PROG==1)
_FCY=$C_Y
G111 AX[_XX]=0 AX[_YY]=0
ENDIF
IF ($C_Y_PROG==0)
IF ($C_Z_PROG==0)
ELSE
_FCY=$C_Y
G111 AX[_XX]=0 AX[_YY]=0
ENDIF
ENDIF
IF(_FCX_P>0)
_ZFPR[10]=$C_X
IF(_FCX_P==1)
_FCX=$C_X _ZFPI[2]=1
ELSE
_FCX=_ZFPR[1]+$C_X _ZFPI[2]=3
ENDIF
ELSE
IF(_FIRST==1)GOTOF _FEHL4
IF (_ZFPI[2]==1)
_FCX=_ZFPR[2]
ELSE
_FCX=_ZFPR[1]+_ZFPR[10]
ENDIF
ENDIF
_BP1=_FCY _BP2=_FCZ _ZFPR[2]=_FCX
GOTOF _MBPEP
_MG18P:
IF ($C_X_PROG==3)
_FCX=_FAAP+$C_X
IF (_FCX>=360)
_FCX=_FCX MOD 360
ENDIF
ELSE
IF ($C_X_PROG==1)
_FCX=$C_X
ELSE
_FCX=_FAAP
ENDIF
ENDIF
IF ($C_Z_PROG==3)
_FCZ=$C_Z
G110 AX[_XX]=0 AX[_YY]=0
ENDIF
IF ($C_Z_PROG==1)
_FCZ=$C_Z
G111 AX[_XX]=0 AX[_YY]=0
ENDIF
IF ($C_Z_PROG==0)
IF ($C_X_PROG==0)
ELSE
_FCZ=$C_Z
G111 AX[_XX]=0 AX[_YY]=0
ENDIF
ENDIF
IF(_FCY_P>0)
_ZFPR[10]=$C_Y
IF(_FCY_P==1)
_FCY=$C_Y _ZFPI[2]=1
ELSE
_FCY=_ZFPR[1]+$C_Y _ZFPI[2]=3
ENDIF
ELSE
IF(_FIRST==1)GOTOF _FEHL4
IF (_ZFPI[2]==1)
_FCY=_ZFPR[2]
ELSE
_FCY=_ZFPR[1]+_ZFPR[10]
ENDIF
ENDIF
_BP1=_FCZ _BP2=_FCX _ZFPR[2]=_FCY
GOTOF _MBPEP
_MG17P:
IF ($C_Y_PROG==3)
_FCY=_FAAP+$C_Y
IF (_FCY>=360)
_FCY=_FCY MOD 360
ENDIF
ELSE
IF ($C_Y_PROG==1)
_FCY=$C_Y
ELSE
_FCY=_FAAP
ENDIF
ENDIF
IF ($C_X_PROG==3)
_FCX=$C_X
G110 AX[_XX]=0 AX[_YY]=0
ENDIF
IF ($C_X_PROG==1)
_FCX=$C_X
G111 AX[_XX]=0 AX[_YY]=0
ENDIF
IF ($C_X_PROG==0)
IF ($C_Y_PROG==0)
ELSE
_FCX=$C_X
G111 AX[_XX]=0 AX[_YY]=0
ENDIF
ENDIF
IF(_FCZ_P>0)
_ZFPR[10]=$C_Z
IF(_FCZ_P==1)
_FCZ=$C_Z _ZFPI[2]=1
ELSE
_FCZ=_ZFPR[1]+$C_Z _ZFPI[2]=3
ENDIF
ELSE
IF(_FIRST==1)GOTOF _FEHL4
IF (_ZFPI[2]==1)
_FCZ=_ZFPR[2]
ELSE
_FCZ=_ZFPR[1]+_ZFPR[10]
ENDIF
ENDIF
_BP1=_FCX _BP2=_FCY _ZFPR[2]=_FCZ
_MBPEP:
ELSE ;keine Polarkoordinaten
CASE _PLAN OF 3 GOTOF _MG19 2 GOTOF _MG18 DEFAULT GOTOF _MG17
_MG19:
IF(_FCY_P==0)
_FCY=$P_EP[_XX]*_FAK1
ELSE
IF(_FCY_P==1)
_FCY=$C_Y
ELSE
_FCY=$P_EP[_XX]*_FAK1+$C_Y
ENDIF
ENDIF
IF(_FCZ_P==0)
_FCZ=$P_EP[_YY]*_FAK1
ELSE
IF(_FCZ_P==1)
_FCZ=$C_Z
ELSE
_FCZ=$P_EP[_YY]*_FAK1+$C_Z
ENDIF
ENDIF
IF(_FCX_P>0)
_ZFPR[10]=$C_X
IF(_FCX_P==1)
_FCX=$C_X _ZFPI[2]=1
ELSE
_FCX=_ZFPR[1]+$C_X _ZFPI[2]=3
ENDIF
ELSE
IF(_FIRST==1)GOTOF _FEHL4
IF (_ZFPI[2]==1)
_FCX=_ZFPR[2]
ELSE
_FCX=_ZFPR[1]+_ZFPR[10]
ENDIF
ENDIF
_BP1=_FCY _BP2=_FCZ _ZFPR[2]=_FCX
GOTOF _MBPE
_MG18:
IF(_FCZ_P==0)
_FCZ=$P_EP[_XX]*_FAK1
ELSE
IF(_FCZ_P==1)
_FCZ=$C_Z
ELSE
_FCZ=$P_EP[_XX]*_FAK1+$C_Z
ENDIF
ENDIF
IF(_FCX_P==0)
_FCX=$P_EP[_YY]*_FAK1
ELSE
IF(_FCX_P==1)
_FCX=$C_X
ELSE
_FCX=$P_EP[_YY]*_FAK1+$C_X
ENDIF
ENDIF
IF(_FCY_P>0)
_ZFPR[10]=$C_Y
IF(_FCY_P==1)
_FCY=$C_Y _ZFPI[2]=1
ELSE
_FCY=_ZFPR[1]+$C_Y _ZFPI[2]=3
ENDIF
ELSE
IF(_FIRST==1)GOTOF _FEHL4
IF (_ZFPI[2]==1)
_FCY=_ZFPR[2]
ELSE
_FCY=_ZFPR[1]+_ZFPR[10]
ENDIF
ENDIF
_BP1=_FCZ _BP2=_FCX _ZFPR[2]=_FCY
GOTOF _MBPE
_MG17:
IF(_FCX_P==0)
_FCX=$P_EP[_XX]*_FAK1
ELSE
IF(_FCX_P==1)
_FCX=$C_X
ELSE
_FCX=$P_EP[_XX]*_FAK1+$C_X
ENDIF
ENDIF
IF(_FCY_P==0)
_FCY=$P_EP[_YY]*_FAK1
ELSE
IF(_FCY_P==1)
_FCY=$C_Y
ELSE
_FCY=$P_EP[_YY]*_FAK1+$C_Y
ENDIF
ENDIF
IF(_FCZ_P>0)
_ZFPR[10]=$C_Z
IF(_FCZ_P==1)
_FCZ=$C_Z _ZFPI[2]=1
ELSE
_FCZ=_ZFPR[1]+$C_Z _ZFPI[2]=3
ENDIF
ELSE
IF(_FIRST==1)GOTOF _FEHL4
IF (_ZFPI[2]==1)
_FCZ=_ZFPR[2]
ELSE
_FCZ=_ZFPR[1]+_ZFPR[10]
ENDIF
ENDIF
_BP1=_FCX _BP2=_FCY _ZFPR[2]=_FCZ
_MBPE:
ENDIF
_G98=$P_EXTGG[10]
IF (_ZFPI[0]==87) ;bei G87 kein Unterschied zwischen G98/G99
_ZFPR[3]=_INIZ
ELSE
IF(_G98==1)
_ZFPR[3]=_INIZ
ELSE
IF (_ZFPR[0]<_ZFPR[2])
_ZFPR[3]=_ZFPR[1]-ABS(_ZSFR[0])
ELSE
_ZFPR[3]=_ZFPR[1]+ABS(_ZSFR[0])
ENDIF
ENDIF
ENDIF
_NAAX=0
IF($C_A_PROG>0)
_NAMEAX[_NAAX]="A" _AXE=0 _AXFOUND=0
WHILE (_AXE<_AXNUM)
IF ($MC_AXCONF_CHANAX_NAME_TAB[_AXE]==_NAMEAX[_NAAX])
_AXFOUND=1
IF ($MC_AXCONF_MACHAX_USED[_AXE]>0)
IF (($MA_IS_ROT_AX[AXNAME(_NAMEAX[_NAAX])]==1)AND($MA_ROT_IS_MODULO[AXNAME(_NAMEAX[_NAAX])]==1))
_MODAX[_NAAX]=1
ELSE
_MODAX[_NAAX]=0
ENDIF
ELSE
GOTOF _FEHL7
ENDIF
ELSE
ENDIF
_AXE=_AXE+1
ENDWHILE
IF (_AXFOUND==0) GOTOF _FEHL7
IF(_FCA_P==0)
_FCNN[_NAAX]=$P_EP[A]*_FAK1
ELSE
IF(_FCA_P==1)
_FCNN[_NAAX]=$C_A
ELSE
_FCNN[_NAAX]=$P_EP[A]*_FAK1+$C_A
ENDIF
ENDIF
_NAAX=_NAAX+1
ENDIF
IF($C_B_PROG>0)
_NAMEAX[_NAAX]="B" _AXE=0 _AXFOUND=0
WHILE (_AXE<_AXNUM)
IF ($MC_AXCONF_CHANAX_NAME_TAB[_AXE]==_NAMEAX[_NAAX])
_AXFOUND=1
IF ($MC_AXCONF_MACHAX_USED[_AXE]>0)
IF (($MA_IS_ROT_AX[AXNAME(_NAMEAX[_NAAX])]==1)AND($MA_ROT_IS_MODULO[AXNAME(_NAMEAX[_NAAX])]==1))
_MODAX[_NAAX]=1
ELSE
_MODAX[_NAAX]=0
ENDIF
ELSE
GOTOF _FEHL7
ENDIF
ELSE
ENDIF
_AXE=_AXE+1
ENDWHILE
IF (_AXFOUND==0) GOTOF _FEHL7
IF(_FCB_P==0)
_FCNN[_NAAX]=$P_EP[B]*_FAK1
ELSE
IF(_FCB_P==1)
_FCNN[_NAAX]=$C_B
ELSE
_FCNN[_NAAX]=$P_EP[B]*_FAK1+$C_B
ENDIF
ENDIF
_NAAX=_NAAX+1
ENDIF
IF($C_C_PROG>0)
_NAMEAX[_NAAX]="C" _AXE=0 _AXFOUND=0
WHILE (_AXE<_AXNUM)
IF ($MC_AXCONF_CHANAX_NAME_TAB[_AXE]==_NAMEAX[_NAAX])
_AXFOUND=1
IF ($MC_AXCONF_MACHAX_USED[_AXE]>0)
IF (($MA_IS_ROT_AX[AXNAME(_NAMEAX[_NAAX])]==1)AND($MA_ROT_IS_MODULO[AXNAME(_NAMEAX[_NAAX])]==1))
_MODAX[_NAAX]=1
ELSE
_MODAX[_NAAX]=0
ENDIF
ELSE
GOTOF _FEHL7
ENDIF
ELSE
ENDIF
_AXE=_AXE+1
ENDWHILE
IF (_AXFOUND==0) GOTOF _FEHL7
IF(_FCC_P==0)
_FCNN[_NAAX]=$P_EP[C]*_FAK1
ELSE
IF(_FCC_P==1)
_FCNN[_NAAX]=$C_C
ELSE
_FCNN[_NAAX]=$P_EP[C]*_FAK1+$C_C
ENDIF
ENDIF
_NAAX=_NAAX+1
ENDIF
IF($C_U_PROG>0)
_NAMEAX[_NAAX]="U" _AXE=0 _AXFOUND=0
WHILE (_AXE<_AXNUM)
IF ($MC_AXCONF_CHANAX_NAME_TAB[_AXE]==_NAMEAX[_NAAX])
_AXFOUND=1
IF ($MC_AXCONF_MACHAX_USED[_AXE]>0)
IF (($MA_IS_ROT_AX[AXNAME(_NAMEAX[_NAAX])]==1)AND($MA_ROT_IS_MODULO[AXNAME(_NAMEAX[_NAAX])]==1))
_MODAX[_NAAX]=1
ELSE
_MODAX[_NAAX]=0
ENDIF
ELSE
GOTOF _FEHL7
ENDIF
ELSE
ENDIF
_AXE=_AXE+1
ENDWHILE
IF (_AXFOUND==0) GOTOF _FEHL7
IF(_FCU_P==0)
_FCNN[_NAAX]=$P_EP[U]*_FAK1
ELSE
IF(_FCU_P==1)
_FCNN[_NAAX]=$C_U
ELSE
_FCNN[_NAAX]=$P_EP[U]*_FAK1+$C_U
ENDIF
ENDIF
_NAAX=_NAAX+1
ENDIF
IF($C_V_PROG>0)
_NAMEAX[_NAAX]="V" _AXE=0 _AXFOUND=0
WHILE (_AXE<_AXNUM)
IF ($MC_AXCONF_CHANAX_NAME_TAB[_AXE]==_NAMEAX[_NAAX])
_AXFOUND=1
IF ($MC_AXCONF_MACHAX_USED[_AXE]>0)
IF (($MA_IS_ROT_AX[AXNAME(_NAMEAX[_NAAX])]==1)AND($MA_ROT_IS_MODULO[AXNAME(_NAMEAX[_NAAX])]==1))
_MODAX[_NAAX]=1
ELSE
_MODAX[_NAAX]=0
ENDIF
ELSE
GOTOF _FEHL7
ENDIF
ELSE
ENDIF
_AXE=_AXE+1
ENDWHILE
IF (_AXFOUND==0) GOTOF _FEHL7
IF(_FCV_P==0)
_FCNN[_NAAX]=$P_EP[V]*_FAK1
ELSE
IF(_FCV_P==1)
_FCNN[_NAAX]=$C_V
ELSE
_FCNN[_NAAX]=$P_EP[V]*_FAK1+$C_V
ENDIF
ENDIF
_NAAX=_NAAX+1
ENDIF
IF($C_W_PROG>0)
_NAMEAX[_NAAX]="W" _AXE=0 _AXFOUND=0
WHILE (_AXE<_AXNUM)
IF ($MC_AXCONF_CHANAX_NAME_TAB[_AXE]==_NAMEAX[_NAAX])
_AXFOUND=1
IF ($MC_AXCONF_MACHAX_USED[_AXE]>0)
IF (($MA_IS_ROT_AX[AXNAME(_NAMEAX[_NAAX])]==1)AND($MA_ROT_IS_MODULO[AXNAME(_NAMEAX[_NAAX])]==1))
_MODAX[_NAAX]=1
ELSE
_MODAX[_NAAX]=0
ENDIF
ELSE
GOTOF _FEHL7
ENDIF
ELSE
ENDIF
_AXE=_AXE+1
ENDWHILE
IF (_AXFOUND==0) GOTOF _FEHL7
IF(_FCW_P==0)
_FCNN[_NAAX]=$P_EP[W]*_FAK1
ELSE
IF(_FCW_P==1)
_FCNN[_NAAX]=$C_W
ELSE
_FCNN[_NAAX]=$P_EP[W]*_FAK1+$C_W
ENDIF
ENDIF
_NAAX=_NAAX+1
ENDIF
IF((_NAAX>6)OR(_NAAX<0)) GOTOF _FEHL7
_PAR1=_FCX_P+_FCY_P+_FCZ_P+_FCA_P+_FCB_P+_FCC_P+_FCU_P+_FCV_P+_FCW_P
IF(_PAR1==0)GOTOF _KBOHR
SBLOF
IF $MCS_ISO_SIMULTAN_AXES_START==0
SBLON
IF ($P_EXTGG[17]==2)
G00 G40 RP=_BP1 AP=_BP2 F=_ZFPR[4]
ELSE
G00 G40 AX[_XX]=AC(_BP1) AX[_YY]=AC(_BP2) F=_ZFPR[4]
ENDIF
_II=0
WHILE(_II<_NAAX)
IF(_MODAX[_II]==0)
AX[AXNAME(_NAMEAX[_II])]=AC(_FCNN[_II]) F=_ZFPR[4]
ELSE
AX[AXNAME(_NAMEAX[_II])]=DC(_FCNN[_II]) F=_ZFPR[4]
ENDIF
_II=_II+1
ENDWHILE
SBLOF
ELSE
_II=0 _MODANZ=0 _NOMODANZ=0 _TRAVSTR=""
IF ($P_EXTGG[17]==2)
_TRAVSTR="G00 G40 RP=_BP1 AP=_BP2 F=_ZFPR[4]"
ELSE
_TRAVSTR="G00 G40 AX[_XX]=AC(_BP1) AX[_YY]=AC(_BP2) F=_ZFPR[4]"
ENDIF
WHILE(_II<_NAAX)
IF(_MODAX[_II]==0)
_TRAVSTR = _TRAVSTR << " " << _NAMEAX[_II] << "=AC(" << _FCNN[_II] << ")"
ELSE
_TRAVSTR = _TRAVSTR << " " << _NAMEAX[_II] << "=DC(" << _FCNN[_II] << ")"
ENDIF
_II=_II+1
ENDWHILE
SBLON
EXECSTRING(_TRAVSTR)
SBLOF
ENDIF
IF(_FCK0==1)GOTOF _KBOHR
IF(_ZFPI[0])==76
IF(_ZFPR[1]<_ZFPR[2]) GOTOF _FEHL6
ELSE
IF(_ZFPR[2]<_ZFPR[1]) GOTOF _FEHL6
ENDIF
CASE _ZFPI[0] OF 76 GOTOF _C76 87 GOTOF _C87 DEFAULT GOTOF _KBOHR
_C76:
CYCLE86(_ZFPR[3],_ZFPR[1],_ZSFR[0],_ZFPR[2],0,_ZFPR[5],_ZFPI[1],_ZFPR[8],_ZFPR[11],0,_POSS)
GOTOF _KBOHR
_C87:
CYCLE861(_ZFPR[3],_ZFPR[1],0,_ZFPR[2],0,_ZFPR[5],_ZFPI[1],_ZFPR[8],_ZFPR[11],0,_POSS)
_KBOHR: M=_ZFPI[1]
_FIRST=0
ENDFOR
IF $MCS_ISO_ENABLE_INTERRUPTS==1
IF $MN_EXTERN_INTERRUPT_BITS_M96 B_AND 'B1'
ENABLE(1)
IF $AC_PARAM[1]==1
$A_OUT[1]=0
$A_OUT[1]=1
ENDIF
ENDIF
ENDIF
GOTOF _RET
_FEHL1: STOPRE
N308701 SETAL(61800)
RET
_FEHL2: STOPRE
N308702 SETAL(61003)
RET
_FEHL4: STOPRE
N308704 SETAL(61808)
RET
_FEHL5: STOPRE
N308705 SETAL(61814)
RET
_FEHL6: STOPRE
N308706 SETAL(61101)
RET
_FEHL7: STOPRE
N308707 SETAL(61803)
RET
_FEHL9: STOPRE
N308709 SETAL(61813)
RET
_RET:
IF (_TRC==2)
G41
ENDIF
IF (_TRC==3)
G42
ENDIF
RET
