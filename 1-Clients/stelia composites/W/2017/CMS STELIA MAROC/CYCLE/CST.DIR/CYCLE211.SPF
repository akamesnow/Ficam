PROC CYCLE211(INT _SP) SBLOF DISPLOF
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.56.00 ;DATE: 2013-12-20
;Cycle support HMIsl
;Workpiece
DEF AXIS _ZZ,_Z2,_XX
DEF INT _BL,_N,_MODE,_NPV,_NPV1
DEF REAL _FAK1,_FAK2,_XA,_XI,_YA,_YI,_ZA,_ZI,_ZB,_L,_B,_H,_L1,_L2,_L3
DEF INT _LOG,_LOG_ON,_LOG_ON_SIM
DEF STRING[35] _LOG_FILE
_LOG_FILE="/_N_MPF_DIR/_N_LOG_CYCLE211_"<<$P_CHANNO<<"_MPF"
_LOG_ON=ISFILE(_LOG_FILE)
_LOG_ON_SIM=ISFILE("/_N_MPF_DIR/_N_LOG_SIM_MPF")
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"-------------------")
WRITE(_LOG,_LOG_FILE,"Logfile CYCLE211: "<<$A_DAY<<"."<<$A_MONTH<<"."<<$A_YEAR<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
ENDIF
IF(_F_NPV[_SP]<0)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"keine NPV eingegeben")
ENDIF
GOTOF _RET
ENDIF
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
_FAK2=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK2=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)OR($P_GG[13]==4)
_FAK2=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
IF(_SP>=0)AND(_SP<=1)
IF($P_SIM)AND(_E_ST_PRG)
IF($P_GG[6]==1)
_XX=$P_AXN1
_ZZ=$P_AXN3
ELSE
IF($P_GG[6]==2)
_XX=$P_AXN2
_ZZ=$P_AXN1
ELSE
_XX=$P_AXN3
_ZZ=$P_AXN2
ENDIF
ENDIF
IF(_SP==0)AND(_F_NPV[0]>=0)AND(_E_RT[0,0]>0)AND(_F_NPV_SET[0]==0)
_L1=$MAS_SPINDLE_PARAMETER[0,_F_S_AX[5]]*_FAK1+$MAS_SPINDLE_PARAMETER[1,_F_S_AX[5]]*_FAK1-_E_RT[0,7]*_FAK2
IF($MAS_SPINDLE_CHUCK_TYPE[_F_S_AX[5]])
_L1=_L1+$MAS_SPINDLE_PARAMETER[2,_F_S_AX[5]]*_FAK1
ENDIF
_L1=_L1+$MAS_AXIS_MCS_POSITION[2,_F_S_AX[5]]*_FAK1-$P_SETFRAME[_ZZ,TR]*_FAK1-$P_ACTBFRAME[_ZZ,TR]*_FAK1
IF(_F_AX_EXISTS[7])
_L1=_L1+$MAS_AXIS_MCS_POSITION[2,_F_S_AX[7]]*_FAK1
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"HSP ZC1="<<$MAS_SPINDLE_PARAMETER[0,_F_S_AX[5]]*_FAK1)
WRITE(_LOG,_LOG_FILE,"HSP ZS1="<<$MAS_SPINDLE_PARAMETER[1,_F_S_AX[5]]*_FAK1)
IF($MAS_SPINDLE_CHUCK_TYPE[_F_S_AX[5]])
WRITE(_LOG,_LOG_FILE,"HSP ZE1="<<$MAS_SPINDLE_PARAMETER[2,_F_S_AX[5]]*_FAK1)
ENDIF
WRITE(_LOG,_LOG_FILE,"ZB="<<_E_RT[0,7]*_FAK2)
WRITE(_LOG,_LOG_FILE,"L1="<<_L1)
ENDIF
$P_UIFR[_F_NPV[0],_ZZ,TR]=_L1/_FAK1
$P_UIFR[_F_NPV[0],_F_S_AX[0],TR]=0
$P_UIFR[_F_NPV[0],_XX,TR]=$MAS_AXIS_MCS_POSITION[0,_F_S_AX[5]]-$P_SETFRAME[_XX,TR]*_FAK1-$P_ACTBFRAME[_XX,TR]*_FAK1
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"X="<<$P_UIFR[_F_NPV[0],_XX,TR])
ENDIF
IF(_LOG_ON_SIM)
MSG("Log Sim: HSP NPV"<<_F_NPV[0]<<": Z="<<_L1<<" X="<<$P_UIFR[_F_NPV[0],_XX,TR])
M0
ENDIF
ENDIF
IF(_SP==1)AND(_F_NPV[1]>=0)AND(_E_RT[1,0]>0)AND(_F_AX_EXISTS[3])AND(_F_S_NR[2])AND(_F_NPV_SET[1]==0)
_Z2=_F_S_AX[3]
;_L2=$P_EPM[_Z2]*_FAK1
IF(_F_ZW<>_SC_NO_VAL)
_L2=_F_ZW*_FAK2
ELSE
_L2=$SCS_SUB_SPINDLE_REL_POS*_FAK1
ENDIF
_L2=_L2+$MAS_AXIS_MCS_POSITION[2,_F_S_AX[6]]*_FAK1-$P_SETFRAME[_ZZ,TR]*_FAK1-$P_ACTBFRAME[_ZZ,TR]*_FAK1
IF(_F_AX_EXISTS[8])
_L2=_L2+$MAS_AXIS_MCS_POSITION[2,_F_S_AX[8]]*_FAK1
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"L2="<<_L2)
ENDIF
_L3=$MAS_SPINDLE_PARAMETER[0,_F_S_AX[6]]*_FAK1+$MAS_SPINDLE_PARAMETER[1,_F_S_AX[6]]*_FAK1-_E_RT[1,7]*_FAK2
IF($MAS_SPINDLE_CHUCK_TYPE[_F_S_AX[6]])
_L3=_L3+$MAS_SPINDLE_PARAMETER[2,_F_S_AX[6]]*_FAK1
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"GSP ZC2="<<$MAS_SPINDLE_PARAMETER[0,_F_S_AX[6]]*_FAK1)
WRITE(_LOG,_LOG_FILE,"GSP ZS2="<<$MAS_SPINDLE_PARAMETER[1,_F_S_AX[6]]*_FAK1)
IF($MAS_SPINDLE_CHUCK_TYPE[_F_S_AX[6]])
WRITE(_LOG,_LOG_FILE,"GSP ZE2="<<$MAS_SPINDLE_PARAMETER[2,_F_S_AX[6]]*_FAK1)
ENDIF
WRITE(_LOG,_LOG_FILE,"ZB="<<_E_RT[1,7]*_FAK2)
WRITE(_LOG,_LOG_FILE,"L3="<<_L3)
ENDIF
$P_UIFR[_F_NPV[1],_ZZ,TR]=(_L2-_L3)/_FAK1
IF(_E_ST_PRG)
$P_UIFR[_F_NPV[1],_ZZ,MI]=1
ENDIF
$P_UIFR[_F_NPV[1],_F_S_AX[2],TR]=0
$P_UIFR[_F_NPV[1],_XX,TR]=$MAS_AXIS_MCS_POSITION[0,_F_S_AX[6]]-$P_SETFRAME[_XX,TR]*_FAK1-$P_ACTBFRAME[_XX,TR]*_FAK1
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"X="<<$P_UIFR[_F_NPV[1],_XX,TR])
ENDIF
IF(_LOG_ON_SIM)
MSG("Log Sim: GSP NPV"<<_F_NPV[1]<<": Z="<<_L2<<"-"<<_L3<<"="<<_L2-_L3<<" X="<<$P_UIFR[_F_NPV[1],_XX,TR])
M0
ENDIF
ENDIF
ENDIF
_BL=_E_RT[_SP,0]
IF(_BL<0)OR(_BL>5)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Rohteil falsch: "<<_BL)
ENDIF
_BL=0
ENDIF
_NPV=$P_GG[8]
_NPV1=_F_NPV[_SP]+1
IF(_NPV1>0)AND($MCS_TECHNOLOGY==1)
G[8]=_NPV1
ENDIF
_XA=_E_RT[_SP,1]*_FAK2
_YA=_E_RT[_SP,2]*_FAK2
_ZA=_E_RT[_SP,3]*_FAK2
_XI=_E_RT[_SP,4]*_FAK2
_YI=_E_RT[_SP,5]*_FAK2
_ZI=_E_RT[_SP,6]*_FAK2
_ZB=_E_RT[_SP,7]*_FAK2
_N =_E_RT[_SP,8]
_L =_E_RT[_SP,9]*_FAK2
_B =_E_RT[_SP,10]*_FAK2
_H =_E_RT[_SP,11]*_FAK2
_MODE=0
IF(_SP)
_MODE=_MODE+'H1000'
ENDIF
IF(_E_RT[_SP,12]==1)
_MODE=_MODE+'H2000'
ENDIF
CASE _BL OF 0 GOTOF _M_NONE 1 GOTOF _M_CYLINDER 2 GOTOF _M_PIPE 3 GOTOF _M_N_CORNER 4 GOTOF _M_RECTANGLE 5 GOTOF _M_BOX
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Fehler: _BL="<<_BL)
ENDIF
GOTOF _FEHL1
_M_NONE:
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"WORKPIECE(,"<<_E_WP_SOCKET<<",,NONE,"<<_MODE<<")")
ENDIF
WORKPIECE(,_E_WP_SOCKET,,"NONE",_MODE)
GOTOF _M_BL_E
_M_CYLINDER:
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"WORKPIECE(,"<<_E_WP_SOCKET<<",,CYLINDER,"<<_MODE<<","<<_ZA<<","<<_ZI-_ZA<<","<<_ZB-_ZA<<","<<_XA*2<<")")
ENDIF
WORKPIECE(,_E_WP_SOCKET,,"CYLINDER",_MODE,_ZA,_ZI-_ZA,_ZB-_ZA,_XA*2)
GOTOF _M_BL_E
_M_PIPE:
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"WORKPIECE(,"<<_E_WP_SOCKET<<",,PIPE,"<<_MODE<<","<<_ZA<<","<<_ZI-_ZA<<","<<_ZB-_ZA<<","<<_XA*2<<","<<ABS(_XI-_XA)<<")")
ENDIF
WORKPIECE(,_E_WP_SOCKET,,"PIPE",_MODE,_ZA,_ZI-_ZA,_ZB-_ZA,_XA*2,ABS(_XI-_XA))
GOTOF _M_BL_E
_M_N_CORNER:
_MODE=_MODE+'H200'
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"WORKPIECE(,"<<_E_WP_SOCKET<<",,N_CORNER,"<<_MODE<<","<<_ZA<<","<<_ZI-_ZA<<","<<_ZB-_ZA<<","<<_N<<","<<_L<<")")
ENDIF
WORKPIECE(,_E_WP_SOCKET,,"N_CORNER",_MODE,_ZA,_ZI-_ZA,_ZB-_ZA,_N,_L)
GOTOF _M_BL_E
_M_RECTANGLE:
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"WORKPIECE(,"<<_E_WP_SOCKET<<",,RECTANGLE,"<<_MODE<<","<<_ZA<<","<<_ZI-_ZA<<","<<_ZB-_ZA<<","<<_H<<","<<_B<<")")
ENDIF
WORKPIECE(,_E_WP_SOCKET,,"RECTANGLE",_MODE,_ZA,_ZI-_ZA,_ZB-_ZA,_H,_B)
GOTOF _M_BL_E
_M_BOX:
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"WORKPIECE(,"<<_E_WP_SOCKET<<",,BOX,"<<_MODE<<","<<_ZA<<","<<_ZI-_ZA<<","<<_ZB-_ZA<<","<<_XA<<","<<_YA<<","<<_XI-_XA<<","<<_YI-_YA<<")")
ENDIF
WORKPIECE(,_E_WP_SOCKET,,"BOX",_MODE,_ZA,_ZI-_ZA,_ZB-_ZA,_XA,_YA,_XI-_XA,_YI-_YA)
GOTOF _M_BL_E
_M_BL_E:
IF(_NPV<>$P_GG[8])
G[8]=_NPV
ENDIF
ENDIF
_RET:
RET
_FEHL1: STOPRE
N721101 SETAL(61296)
RET
