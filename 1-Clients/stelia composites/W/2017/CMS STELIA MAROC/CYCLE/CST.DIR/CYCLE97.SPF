PROC CYCLE97(REAL PIT,REAL MPIT,REAL SPL,REAL FPL,REAL DM1,REAL DM2,REAL APP,REAL ROP,REAL TDEP,REAL FAL,REAL IANG,REAL NSP,INT NRC,INT NID,INT VARI,INT NUMTH,REAL _VRT) SAVE DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.64.00 ;DATE: 2014-10-02
;Cycle support HMIsl
;Thread cutting cycle
DEF AXIS _ZA,_SA,_ZZ,_XX,_MAX
DEF INT IA,LP=1,RF=1,WI=90,II,JJ,KK,ZF=1,_NRCI,_INCHFAK,_PLAN=1,_ZAF=1,_SAF=1,_ALF,_AXZAHL=4,_AKTLFON,_SPIZAHL=4,_ARTIS[16],_TEMP,_GG10
DEF INT _ERR,_SP,_LP,_PM,_FRL,_CDIR,_H_MSNUM,_MA_NR_SP=0,_KA_NR_SP=-1
DEF REAL SAB=1,PP,SPV,DEL,TW1,TW2,RZP,SPS,SPZ,EPZ,EPX,HH1,HH2,HH3,HH4,_ZKOR,_ZANF,_HC1,_KSDIFF[2],_ANGPLUS=0
DEF REAL _SPD,_SPL,_PIT,_NSP,_UMQ,_D,_F,_C97_2,_C97_3,_GDIR,_C_M3
DEF REAL _FAK1,_FAK2,_FAK3,_FAK4
DEF BOOL _MDG
DEF STRING[35] _AX
DEF STRING[30] _S_KA_NR
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE97_MPF"
DEF STRING[35] _LOG_FILE
DEF INT _LOG,_LOG_ON=0
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE97_MPF")
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,";! only for internal diagnostics ! Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T-Number $P_TOOLNO="<<$P_TOOLNO)
WRITE(_TEMP,_TEMP_FILE,";D-Number $P_TOOL="<<$P_TOOL)
IF (($P_TOOL)AND($P_TOOLNO))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$P_ADT[1]<<"    ; TOOL-TYPE")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$P_ADT[2]<<"    ; CUTTING EDGE POSITION")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP3[1,1]="<<$P_ADT[3]<<"    ; TOOL GEO LENGTH 1")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP4[1,1]="<<$P_ADT[4]<<"    ; TOOL GEO LENGTH 2")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP12[1,1]="<<$P_ADT[12]<<"    ; TOOL WEAR LENGTH 1")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP13[1,1]="<<$P_ADT[13]<<"    ; TOOL WEAR LENGTH 2")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$P_ADT[6]<<"    ; TOOL RADIUS GEOMETRY")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP15[1,1]="<<$P_ADT[15]<<"    ; TOOL RADIUS WEAR")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP8[1,1]="<<$P_ADT[8]<<"    ; PLATE LENGTH")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP9[1,1]="<<$P_ADT[9]<<"    ; PLATE WIDTH")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP10[1,1]="<<$P_ADT[10]<<"    ; TOOLHOLDER ANGLE")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP11[1,1]="<<$P_ADT[11]<<"    ; CUTTING DIRECTION")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP24[1,1]="<<$P_ADT[24]<<"    ; CLEARANCE ANGLE")
ENDIF
IF ($P_TOOLNO>0)
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
ELSE
WRITE(_TEMP,_TEMP_FILE,";T0")
WRITE(_TEMP,_TEMP_FILE,";M6")
ENDIF
IF ($P_TOOL==0)
WRITE(_TEMP,_TEMP_FILE,";D0")
ELSE
WRITE(_TEMP,_TEMP_FILE,";D1")
ENDIF
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19")
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...")
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...")
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/...")
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F)
IF $P_MSNUM==0
WRITE(_TEMP,_TEMP_FILE,";$P_MSNUM=0 no spindle existant")
ELSE
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$P_MSNUM])
ENDIF
WRITE(_TEMP,_TEMP_FILE,"CYCLE99("<<PIT<<","<<MPIT<<","<<SPL<<","<<FPL<<","<<DM1<<","<<DM2<<","<<APP<<","<<ROP<<","<<TDEP<<","<<FAL<<","<<IANG<<","<<NSP<<","<<NRC<<","<<NID<<","<<VARI<<","<<NUMTH<<","<<_VRT<<")")
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
_LOG_FILE="/_N_MPF_DIR/_N_LOG_CYCLE97_"<<$P_CHANNO<<"_MPF"
_LOG_ON=ISFILE(_LOG_FILE)
IF(_LOG_ON)
DELETE(_LOG,_LOG_FILE)
WRITE(_LOG,_LOG_FILE,"-------------------")
WRITE(_LOG,_LOG_FILE,"Logfile CYCLE97: "<<$A_DAY<<"."<<$A_MONTH<<"."<<$A_YEAR<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
ENDIF
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
_FAK2=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK2=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)OR($P_GG[13]==4)
_FAK2=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK3=1/$MN_SCALING_VALUE_INCH
ELSE
_FAK3=1
ENDIF
_FAK4=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==3)
_FAK4=$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==4)
_FAK4=1/$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
_GG10=$P_GG[10]
IF _GG10<2
_GG10=2
ENDIF
IF _VRT<=0
IF ($P_GG[13]==2) OR ($P_GG[13]==4)
SAB=1
ELSE
SAB=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
SAB=_VRT
ENDIF
_AKTLFON=(VARI/10) MOD 10
IF(_AKTLFON>1) GOTOF FEHL2
VARI=VARI MOD 10
_MA1:_ZA=$P_AXN2 _SA=$P_AXN1 _INCHFAK=$P_GG[13] IA=VARI MOD 2 PP=PIT TW2=TAN(ABS(IANG)) _NRCI=NRC _ZKOR=FAL*TW2 DM1=DM1/2 DM2=DM2/2
IF _SC_TOOL_VALI[0]<>0
_ARTIS[0]=_SC_TOOL_VALI[0] _ARTIS[1]=_SC_TOOL_VALI[1] _ARTIS[2]=_SC_TOOL_VALI[2] _ARTIS[3]=_SC_TOOL_VALI[3] _ARTIS[4]=_SC_TOOL_VALI[4] _ARTIS[5]=_SC_TOOL_VALI[5] _ARTIS[6]=_SC_TOOL_VALI[6]
_ARTIS[7]=_SC_TOOL_ON_OFF[0] _ARTIS[8]=_SC_TOOL_ON_OFF[1]
IF (_ARTIS[0] MOD 10 <>1 )
GOTOF _FEHL4
ENDIF
II=_ARTIS[0] DIV 10
IF ((II MOD 10 > 3) OR (II MOD 10 < 1))
GOTOF _FEHL4
ELSE
_ARTIS[11]=II MOD 10
IF (_ARTIS[3]<>0)
_ARTIS[13]=_ARTIS[1]
ENDIF
IF (_ARTIS[6]<>0)
_ARTIS[14]=_ARTIS[4]
ENDIF
ENDIF
II=II DIV 10
IF ((II MOD 10 > 2) OR (II MOD 10 < 0))
GOTOF _FEHL4
ELSE
_ARTIS[12]=II MOD 10
ENDIF
ENDIF
_INCHFAK=_INCHFAK MOD 2
IF(($P_GG[29]==1) OR ($P_GG[29]==4))
_PLAN=1
ELSE
_PLAN=2
DIAMON
ENDIF
IF _INCHFAK==1
ENDIF
IF (VARI<1)OR(VARI>4) GOTOF FEHL2 IF IA==1 GOTOF _MB1
IA=-1
_MB1:HH2=FPL-SPL
IF HH2==0 GOTOF _MC1
N710 TW1=(DM2-DM1)/HH2 WI=0
IF ABS(TW1)<=1 GOTOF _MD1
N720 _MC1:LP=0 HH2=DM2-DM1 TW1=(FPL-SPL)/HH2 _ZA=$P_AXN1 _SA=$P_AXN2
_MD1:
IF (($MC_DIAMETER_AX_DEF=="") OR ($MC_DIAMETER_AX_DEF==" "))
_ZAF=1 _SAF=1
DIAMOF
ELSE
IF _ZA==AXNAME($MC_DIAMETER_AX_DEF)
_ZAF=_PLAN
ENDIF
IF _SA==AXNAME($MC_DIAMETER_AX_DEF)
_SAF=_PLAN
ENDIF
ENDIF
IF ABS(TW1)<0.00001 GOTOF _MY10
IANG=ABS(IANG)
N730 _MY10:RF=HH2/ABS(HH2) IA=IA/$P_ACTFRAME[_ZA,SC] SAB=SAB/$P_ACTFRAME[_ZA,SC]
IF NUMTH GOTOF _ML1
NUMTH=1
_ML1:IF MPIT==0 GOTOF _MM1 IF (MPIT<3)OR(MPIT>60) GOTOF FEHL1
N1 CYCLE204(PP,MPIT)
IF (PP<>PIT)AND(PIT<>0) GOTOF FEHL1
_MM1:IF (NRC<>0)OR(NID<>0) GOTOF _MA2
NRC=1 _NRCI=1
_MA2:IF LP==0 GOTOF _MG2
SPS=SPL-RF*APP SPZ=DM1+IA*SAB-TW1*RF*APP EPZ=FPL+RF*ROP EPX=DM2+IA*SAB+TW1*RF*ROP RZP=EPX HH3=EPZ
GOTOF _MA3
_MG2:SPS=DM1-RF*APP EPX=DM2+RF*ROP
IF WI GOTOF _MP2
SPZ=SPL+IA*SAB-RF*TW1*APP EPZ=FPL+IA*SAB+RF*TW1*ROP
GOTOF _MQ2
_MP2:SPZ=SPL+IA EPZ=FPL+IA
_MQ2:RZP=EPZ HH3=EPX
_MA3:IF NRC<>0 GOTOF _MC3
_NRCI=1
N740 _MC3:_ZANF=SPS _HC1=ABS((TDEP-FAL)/SQRT(_NRCI)*TW2) II=NRC JJ=-RF
IF IANG==0 GOTOF _MA4 IF IANG>0 GOTOF _MA4 IF VARI<3 GOTOF _MA4 IF _NRCI==1 GOTOF _MA4
N750 _MB3:HH1=(SQRT(II)-SQRT(II-1))*_HC1 II=II-1 JJ=-JJ
IF II>1 GOTOB _MB3
_MA4:
IF ($MCS_FUNCTION_MASK_TURN B_AND 'B1000000000000') GOTOF _M5304
_H_MSNUM=$P_MSNUM
IF(_H_MSNUM)
REPEAT
REPEAT
_KA_NR_SP=_KA_NR_SP+1
_S_KA_NR="$MC_AXCONF_MACHAX_USED["<<_KA_NR_SP<<"]"
IF ISVAR(_S_KA_NR)
_MA_NR_SP=$MC_AXCONF_MACHAX_USED[_KA_NR_SP]
ELSE
GOTOF _FEHL5
ENDIF
UNTIL(_MA_NR_SP>0)
_AX="AX"<<_MA_NR_SP
_MAX=(AXNAME(_AX))
UNTIL(_H_MSNUM==$MA_SPIND_ASSIGN_TO_MACHAX[_MAX])
IF(($MCS_AXIS_USAGE_ATTRIB[_KA_NR_SP]) B_AND 'B1000')
_CDIR=-1
ELSE
_CDIR=1
ENDIF
IF(($MCS_AXIS_USAGE_ATTRIB[_KA_NR_SP]) B_AND 'B100000')
_C_M3=-1
ELSE
_C_M3=1
ENDIF
ELSE
GOTOF _FEHL5
ENDIF
IF($P_SDIR[$P_MSNUM]==5) GOTOF _FEHL6
_PM=RF
_GDIR=-($P_SDIR[0]*2-7)*_PM*_CDIR*_C_M3
_FRL=-_CDIR*_GDIR
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE," M3/4: M"<<$P_SDIR[0])
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE," _CDIR:"<<_CDIR)
WRITE(_LOG,_LOG_FILE," _FRL: "<<_FRL)
ENDIF
_SP=-1
IF($MCS_AXIS_USAGE[_KA_NR_SP]==3)
_SP=0
ELSE
IF($MCS_AXIS_USAGE[_KA_NR_SP]==5)
_SP=1
ENDIF
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Spindel synchronisieren: _SP="<<_SP)
ENDIF
IF(_SP>=0)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"_SC_C97["<<_SP<<",0...3]= "<<_SC_C97[_SP,0]<<" , "<<_SC_C97[_SP,1]<<" , "<<_SC_C97[_SP,2]<<" , "<<_SC_C97[_SP,3])
WRITE(_LOG,_LOG_FILE,"_FAK1="<<_FAK1<<" _FAK2="<<_FAK2<<" _FAK3="<<_FAK3<<" _FAK4="<<_FAK4)
WRITE(_LOG,_LOG_FILE,"$P_TOOLL[2]="<<$P_TOOLL[2]<<" $P_TOOLL[1]="<<$P_TOOLL[1])
ENDIF
IF(_SC_C97[_SP,0]==1)
_ZZ=_SA
_XX=_ZA
_LP=LP
_SPD=DM1
_SPL=SPL
_PIT=PIT
$AC_MEAS_VALID=0
$AC_MEAS_TYPE=24
$AC_MEAS_P1_COORD=2
$AC_MEAS_P2_COORD=0
$AA_MEAS_POINT1[_ZZ]=_SC_C97[_SP,2]*_FAK3-$P_TOOLL[2]*_FAK1
$AA_MEAS_POINT1[_XX]=_SC_C97[_SP,3]*_FAK3-$P_TOOLL[1]*_FAK1
_ERR=MEASURE()
IF(_ERR) GOTOF _FEHL14
_C97_2=$AA_MEAS_POINT2[_ZZ]
_C97_3=$AA_MEAS_POINT2[_XX]/_PLAN
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Z: "<<_SC_C97[_SP,2]<<"(MKS) = "<<_C97_2<<"(WKS)")
WRITE(_LOG,_LOG_FILE,"X: "<<_SC_C97[_SP,3]<<"(MKS) = "<<_C97_3<<"(WKS)")
WRITE(_LOG,_LOG_FILE,"Z MEAS_POINTS: "<<$AA_MEAS_POINT1[_ZZ]<<"(MKS) = "<<$AA_MEAS_POINT2[_ZZ]<<"(WKS)")
ENDIF
IF(_LP)
_D=_SPL-_C97_2
ELSE
_D=_C97_3-_SPD/2
ENDIF
_F=_PIT
_UMQ=_D/_F
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"UMQ= "<<_UMQ*360)
WRITE(_LOG,_LOG_FILE,"D  = "<<_D)
WRITE(_LOG,_LOG_FILE,"F  = "<<_F)
ENDIF
IF(_LP)
_UMQ=-(_UMQ-TRUNC(_UMQ))*_FRL
ELSE
_UMQ=(_UMQ-TRUNC(_UMQ))*_FRL
ENDIF
_NSP=_NSP+_SC_C97[_SP,1]+_UMQ*360
_NSP=((_NSP MOD 360)+360) MOD 360
_ANGPLUS=_NSP
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"NSP= "<<_NSP)
WRITE(_LOG,_LOG_FILE,"UMQ= "<<_UMQ*360)
WRITE(_LOG,_LOG_FILE,"SYNC="<<_SC_C97[_SP,1])
ENDIF
ENDIF
ENDIF
GOTOF _M5304
IF ($AN_NCK_VERSION >= 201000)
IF $P_NUM_SPINDLES<_SPIZAHL
_SPIZAHL=$P_NUM_SPINDLES
ENDIF
ENDIF
KK=0 _C97_NR[0]=REP(0) _C97_AXNAM[0]=REP("")
_AXZAHL=$ON_NUM_AXES_IN_SYSTEM-1
SBLOF
FOR II=0 TO _AXZAHL
JJ=$MC_AXCONF_MACHAX_USED[II]
IF JJ<>0
IF $MA_SPIND_ASSIGN_TO_MACHAX[AXNAME("AX"<<JJ)]<>0
_C97_NR[KK]=$MA_SPIND_ASSIGN_TO_MACHAX[AXNAME("AX"<<JJ)] _C97_NR[KK+5]=JJ
_C97_AXNAM[KK]=$MC_AXCONF_CHANAX_NAME_TAB[II] KK=KK+1
IF (KK>_SPIZAHL-1)
GOTOF _END_SPISUCH
ENDIF
ENDIF
ENDIF
ENDFOR
_END_SPISUCH:_C97_NR[10]=$P_MSNUM
SBLON
IF _C97[3]==1
IF ($P_ACTFRAME[_SA,RT]<>0) OR ($P_ACTFRAME[_ZA,RT]<>0) OR (NOT($P_TRAFO==0))
GOTOF _FEHL3
ENDIF
_KSDIFF[0]=$AA_IM[_ZA]-$AA_IW[_ZA] _KSDIFF[1]=$AA_IM[_SA]-$AA_IW[_SA]
IF _INCHFAK==1
_KSDIFF[0]=_KSDIFF[0]/$MN_SCALING_VALUE_INCH _KSDIFF[1]=_KSDIFF[1]/$MN_SCALING_VALUE_INCH
ENDIF
IF LP
HH1=_C97[1]-SPS-_KSDIFF[LP]
ELSE
HH1=_C97[2]-SPS-_KSDIFF[1-LP]
ENDIF
IF $AA_S[$P_MSNUM]>0
HH1=-HH1
ENDIF
_ANGPLUS=_ANGPLUS+_C97[0]-((HH1/PP)-TRUNC(HH1/PP))*360
_M5301:IF(_ANGPLUS<360)GOTOF _M5302
_ANGPLUS=_ANGPLUS-360
GOTOB _M5301
_M5302:IF(_ANGPLUS>=0)GOTOF _M5303
_ANGPLUS=_ANGPLUS+360
GOTOB _M5302
_M5303:
ENDIF
_M5304:
IF(LP==1)
IF(IA==1)
_ALF=3
ELSE
_ALF=7
ENDIF
ELSE
IF(IA==1)
_ALF=1
ELSE
_ALF=5
ENDIF
ENDIF
II=0
_MB4:HH1=ABS(TDEP-FAL)/_NRCI
IF VARI<3 GOTOF _MC4
N760 HH1=HH1*_NRCI/SQRT(_NRCI)
IF (NRC MOD 2)==0 GOTOF _MC4 IF IANG>=0 GOTOF _MC4
ZF=-1
_MC4:SPV=NSP+360/NUMTH*II JJ=1 HH2=0
IF (SPV+_ANGPLUS)>=360
_ANGPLUS=_ANGPLUS-360
ENDIF
SBLOF
IF(_AKTLFON==1)
$AC_LIFTFAST=0
ENDIF
SBLON
_MD4:
IF (_ARTIS[11]==3)
_ARTIS[10]=_ARTIS[10]+1
IF (_ARTIS[6]<>0)
IF (_ARTIS[10]==_ARTIS[14])
_ARTIS[4]=_ARTIS[14] _ARTIS[5]=_ARTIS[14]
IF (_ARTIS[14]+_ARTIS[6]<=_SC_TOOL_VALI[5])
_ARTIS[14]=_ARTIS[14]+_ARTIS[6]
ENDIF
ENDIF
ELSE
IF ((_SC_TOOL_VALI[4]<=_ARTIS[10]) AND (_ARTIS[10]<=_SC_TOOL_VALI[5]))
_ARTIS[4]=_ARTIS[10] _ARTIS[5]=_ARTIS[10]
ENDIF
ENDIF
ENDIF
DEL=HH1*SQRT(JJ)
IF NRC==0 GOTOF _MJ4 IF VARI>2 GOTOF _ME4
DEL=HH1*JJ
_ME4:HH4=-IA*(SAB+DEL)
IF IANG==0 GOTOF _MF4
_MQ4:HH2=-RF*ZF*((TDEP-DEL)*TW2-_ZKOR)
N40 _MF4:G0 G90 G60 AX[_SA]=(_ZANF+HH2)*_SAF AX[_ZA]=SPZ*_ZAF
IF(_AKTLFON==1)
IF($P_LIFTFAST==0)
GOTOF _XWEIT
ELSE
SBLOF
_MDG=1
SBLON
M0
STOPRE
SBLOF
SBLON
ENDIF
ENDIF
_XWEIT:
IF(_AKTLFON==1)
SBLOF
$AC_LIFTFAST=0
SBLON
ENDIF
IF IANG>0 GOTOF _MG4
ZF=-ZF
N41 _MG4:G91 AX[_ZA]=HH4*_ZAF
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
IF(_AKTLFON==1)
N42 G33 G90 AX[_SA]=HH3*_SAF AX[_ZA]=(RZP+HH4)*_ZAF IP[_SA]=PP SF=SPV+_ANGPLUS LFON DILF=ABS(HH4) LFWP ALF=_ALF
LFOF G33
IF $P_LIFTFAST
_MDG=1
STOPRE
GOTOF _M5311
ENDIF
ELSE
N42 G33 G90 AX[_SA]=HH3*_SAF AX[_ZA]=(RZP+HH4)*_ZAF IP[_SA]=PP SF=SPV+_ANGPLUS
N43 G0
ENDIF
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
N43 _M5311: G[10]=_GG10
IF (_AKTLFON==0)
N44 G0 G[10]=_GG10 G90 AX[_ZA]=RZP*_ZAF
JJ=JJ+1
ELSE
IF ($P_LIFTFAST==0)
N44 G0 G[10]=_GG10 G90 AX[_ZA]=RZP*_ZAF
GOTOF _M531A
ELSE
GOTOB _MD4
ENDIF
ENDIF
_M531A:
IF (_AKTLFON==1)
STOPRE
IF ($AC_LIFTFAST==0)
N44 G0 G[10]=_GG10 G90 AX[_ZA]=RZP*_ZAF
JJ=JJ+1
ELSE
GOTOB _MD4
ENDIF
ENDIF
IF JJ<=NRC GOTOB _MD4 IF (NID==0)AND(FAL==0) GOTOF _MMP4
_MJ4:JJ=0 HH4=RZP-IA*(SAB+TDEP)
_M5310:
IF LP==1 GOTOF _MMJ4
HH4=EPZ-IA*(SAB+TDEP)
_MMJ4:
IF (_ARTIS[11]==3)
_ARTIS[10]=_ARTIS[10]+1
IF (_ARTIS[6]<>0)
IF (_ARTIS[10]==_ARTIS[14])
_ARTIS[4]=_ARTIS[14] _ARTIS[5]=_ARTIS[14]
IF (_ARTIS[14]+_ARTIS[6]<=_SC_TOOL_VALI[5])
_ARTIS[14]=_ARTIS[14]+_ARTIS[6]
ENDIF
ENDIF
ELSE
IF ((_SC_TOOL_VALI[4]<=_ARTIS[10]) AND (_ARTIS[10]<=_SC_TOOL_VALI[5]))
_ARTIS[4]=_ARTIS[10] _ARTIS[5]=_ARTIS[10]
ENDIF
ENDIF
ENDIF
N50 G0 G90 G60 AX[_SA]=SPS*_SAF AX[_ZA]=SPZ*_ZAF
IF(_AKTLFON==1)
IF($P_LIFTFAST==0)
GOTOF _XWEITS
ELSE
SBLOF
_MDG=1
SBLON
M0
STOPRE
SBLOF
SBLON
ENDIF
ENDIF
_XWEITS:
IF(_AKTLFON==1)
SBLOF
$AC_LIFTFAST=0
SBLON
ENDIF
N51 G91 AX[_ZA]=(-IA*(SAB+TDEP))*_ZAF
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
IF(_AKTLFON==1)
N52 G33 G90 AX[_SA]=HH3*_SAF AX[_ZA]=HH4*_ZAF IP[_SA]=PP SF=SPV+_ANGPLUS LFON DILF=ABS(SAB+TDEP) LFWP ALF=_ALF
LFOF G33
IF $P_LIFTFAST
_MDG=1
STOPRE
GOTOF _M5312
ENDIF
ELSE
N52 G33 G90 AX[_SA]=HH3*_SAF AX[_ZA]=HH4*_ZAF IP[_SA]=PP SF=SPV+_ANGPLUS
N53 G0
ENDIF
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
N53 _M5312: G0
IF (_AKTLFON==0)
N54 G0 G[10]=_GG10 G90 AX[_ZA]=RZP*_ZAF
JJ=JJ+1
ELSE
IF ($P_LIFTFAST==0)
N54 G0 G[10]=_GG10 G90 AX[_ZA]=RZP*_ZAF
GOTOF _M531B
ELSE
GOTOB _M5310
ENDIF
ENDIF
_M531B:
IF (_AKTLFON==1)
STOPRE
IF ($AC_LIFTFAST==0)
N54 G0 G[10]=_GG10 G90 AX[_ZA]=RZP*_ZAF
JJ=JJ+1
ELSE
GOTOB _M5310
ENDIF
ENDIF
IF ((JJ<=NID) AND (FAL<>0)) GOTOB _MMJ4
IF ((JJ<NID) AND (FAL==0)) GOTOB _MMJ4
_MMP4:II=II+1
IF _SC_TOOL_VALI[0]<>0
_ARTIS[0]=_SC_TOOL_VALI[0] _ARTIS[1]=_SC_TOOL_VALI[1] _ARTIS[2]=_SC_TOOL_VALI[2] _ARTIS[3]=_SC_TOOL_VALI[3] _ARTIS[4]=_SC_TOOL_VALI[4] _ARTIS[5]=_SC_TOOL_VALI[5] _ARTIS[6]=_SC_TOOL_VALI[6]
_ARTIS[9]=0 _ARTIS[10]=0
IF (_ARTIS[3]<>0)
_ARTIS[13]=_ARTIS[1]
ENDIF
IF (_ARTIS[6]<>0)
_ARTIS[14]=_ARTIS[4]
ENDIF
ENDIF
IF (II<NUMTH)AND(NRC==0) GOTOB _MC4 IF II<NUMTH GOTOB _MB4
N60 G0 G90 G60 AX[_SA]=SPS*_SAF AX[_ZA]=SPZ*_ZAF
IF (_ARTIS[0]<>0)
M=QU(_ARTIS[8])
ENDIF
RET
FEHL1: STOPRE
N709701 SETAL(61001)
RET
FEHL2: STOPRE
N709702 SETAL(61002)
RET
_FEHL3: STOPRE
N709703 SETAL(61612)
RET
_FEHL4: STOPRE
N709704 SETAL(62106)
RET
_FEHL5: STOPRE
N709705 SETAL(61287)
RET
_FEHL6: STOPRE
N709706 SETAL(61102)
RET
_FEHL14: STOPRE
N709714 SETAL(61099,"MEASURE")
RET
