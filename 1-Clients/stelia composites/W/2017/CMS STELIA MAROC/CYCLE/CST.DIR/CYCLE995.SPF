PROC CYCLE995 (INT S_MVAR,INT S_KNUM,INT S_PRNUM,REAL S_SETV,REAL S_FA,REAL S_TSA,REAL S_STA1,REAL S_INCA,REAL S_DZ,REAL S_SETV0,REAL S_SETV1,REAL S_SETV2,REAL S_TUL,REAL S_TZL,INT S_NMSP,INT S_MCBIT,INT _DMODE,INT _AMODE) SAVE ACTBLOCNO DISPLOF
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.52.00 ;DATE: 2013-10-21
;Measure geometry maschine
DEF INT _ALARM,_H_MVAR,_II,_CHBIT10,_H_DMODE,_H_ME,_M_N28,_SD42940,_SD55740_0,_H_SIM
DEF REAL _H_DB,_H_PR,_H_OVR[32],_MP[20],_FAK1,_FAK2
DEF AXIS _XX,_YY,_ZZ
DEF FRAME _RET_CYCFR
DEF STRING[40] _SERR
DEF INT _TEMP,_TEMP_ON
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE995_MPF"
_OVI[2]=995
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE995_MPF")
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,";! only for internal diagnostics ! Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
IF (($P_TOOL)AND($P_TOOLNO))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$P_ADT[1]<<"    ; Tool type")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$P_ADT[2]<<"    ; Cutting edge position")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP3[1,1]="<<$P_ADT[3]<<"    ; Tool length L1")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP4[1,1]="<<$P_ADT[4]<<"    ; Tool length L2")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP5[1,1]="<<$P_ADT[5]<<"    ; Tool length L3")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$P_ADT[6]<<"    ; Tool geo radius")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP15[1,1]="<<$P_ADT[15]<<"  ; Tool wear radius")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP7[1,1]="<<$P_ADT[7]<<"    ; Boom length/Outside radius")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP10[1,1]="<<$P_ADT[10]<<"  ; Correction angle")
WRITE(_TEMP,_TEMP_FILE,";T-Number internal $P_TOOLNO="<<$P_TOOLNO)
WRITE(_TEMP,_TEMP_FILE,";D-Number $P_TOOL="<<$P_TOOL)
ENDIF
IF ($P_TOOLNO>0)
WRITE(_TEMP,_TEMP_FILE,";T1")
ELSE
WRITE(_TEMP,_TEMP_FILE,";T0")
ENDIF
WRITE(_TEMP,_TEMP_FILE,";M6")
IF ($P_TOOL==0)
WRITE(_TEMP,_TEMP_FILE,";D0")
ELSE
WRITE(_TEMP,_TEMP_FILE,";D1")
ENDIF
WRITE(_TEMP,_TEMP_FILE,";G[06]="<<$P_GG[6]<<"     ; G17/G18/G19") ; aktive Ebene
WRITE(_TEMP,_TEMP_FILE,";G[13]="<<$P_GG[13]<<"    ; G70/G71/...") ; Inch/Metrisch
WRITE(_TEMP,_TEMP_FILE,";G[29]="<<$P_GG[29]<<"    ; DIAMON /...") ; DIAMON/DIAMOF/DIAM90
WRITE(_TEMP,_TEMP_FILE,";G[08]="<<$P_GG[8]<<"     ; G500/G54/G55/...") ; aktive Einstellbare Nullpunktverschiebung
WRITE(_TEMP,_TEMP_FILE,"CYCLE995("<<S_MVAR<<","<<S_KNUM<<","<<S_PRNUM<<","<<S_PRNUM<<","<<S_SETV<<","<<S_FA<<","<<S_TSA<<","<<S_STA1<<","<<S_INCA<<","<<S_SETV0<<","<<S_SETV1<<","<<S_SETV2<<","<<S_DZ<<","<<S_TUL<<","<<S_TZL<<","<<S_NMSP<<","<<S_MCBIT<<","<<_DMODE<<","<<_AMODE<<")")
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
IF ($AN_NCK_VERSION<720000) GOTOF _ERR0
S_MVAR=ABS(S_MVAR) _H_MVAR=S_MVAR _MP[4]=ABS(S_DZ) _AMODE = ABS(_AMODE)
S_STA1=S_STA1 MOD 360 S_INCA=90
_SERR=<<"(S_MVAR: dec1)"
IF ((S_MVAR _DEC1)<>5) GOTOF _ERR1
_SERR=<<"(S_MVAR: dec2)"
IF ((S_MVAR _DEC2)<>1) GOTOF _ERR1
_SERR=<<"(S_MVAR: dec3)"
IF ((S_MVAR _DEC3)<>0) GOTOF _ERR1
_SERR=<<"(S_MVAR: dec4)"
IF ((S_MVAR _DEC4)<1) OR ((S_MVAR _DEC4)>2) GOTOF _ERR1
_SERR=<<"(S_MVAR: dec5)"
IF ((S_MVAR _DEC5)<>0) GOTOF _ERR1
_SERR=<<"(S_MVAR: dec6)"
IF ((S_MVAR _DEC6)<>1) GOTOF _ERR1
_SERR=<<"(S_MVAR: dec7)"
IF ((S_MVAR _DEC7)>1) GOTOF _ERR1
_SERR=<<"(S_MVAR: dec8)"
IF ((S_MVAR _DEC8)<>0) GOTOF _ERR1
S_TUL=ABS(S_TUL MOD 360) S_TZL=ABS(S_TZL MOD 360)
_SERR=<<"(S_TZL > S_TUL)"
IF (S_TZL > S_TUL) GOTOF _ERR1
S_FA=ABS(S_FA)
IF S_NMSP<>0
S_NMSP=ABS(S_NMSP)
ELSE
S_NMSP=1
ENDIF
_SERR=<<"(_DMODE: dec1)"
_H_DMODE=ABS(_DMODE _DEC1)
IF(_H_DMODE>4) GOTOF _ERR1
IF(_H_DMODE>0)AND($P_GG[6]<>_H_DMODE)
G[6]=_H_DMODE
ENDIF
_XX=$P_AXN1 _YY=$P_AXN2 _ZZ=$P_AXN3
_FAK1=1
IF (($MN_SCALING_SYSTEM_IS_METRIC==1)AND($P_GG[13]==1))
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
IF (($MN_SCALING_SYSTEM_IS_METRIC==0)AND($P_GG[13]==2))
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
_FAK2=1
IF (($MN_SCALING_SYSTEM_IS_METRIC==1)AND(($P_GG[13]==1)OR($P_GG[13]==3)))
_FAK2=1/$MN_SCALING_VALUE_INCH
ENDIF
IF (($MN_SCALING_SYSTEM_IS_METRIC==0)AND(($P_GG[13]==2)OR($P_GG[13]==4)))
_FAK2=$MN_SCALING_VALUE_INCH
ENDIF
_SERR=<<"(_AMODE: dec1)"
_AMODE = ABS(_AMODE)
IF ((_AMODE _DEC1) > 1) GOTOF _ERR1
S_TUL=ABS(S_TUL MOD 360) S_TZL=ABS(S_TZL MOD 360)
IF (_AMODE _DEC1) == 1
_SERR=<<"(S_TUL)"
IF S_TUL<=0 GOTOF _ERR2
_SERR=<<"(S_TZL > S_TUL)"
IF (S_TZL > S_TUL) GOTOF _ERR1
ENDIF
_H_DB=ABS(S_SETV)
_H_PR=($SNS_MEA_WP_BALL_DIAM[S_PRNUM-1]/2)*_FAK1
_H_ME=($MCS_MEA_FUNCTION_MASK B_AND 'B1')+1
_SERR=<<"A"
IF (($P_TOOLNO==0) OR ($P_TOOL==0)) GOTOF _ERR6
_MP[14]=$P_TOOLL[1]*_FAK1
_SD42940=($SC_TOOL_LENGTH_CONST _DEC1) + (($SC_TOOL_LENGTH_CONST _DEC2)*10)
IF ((($P_AD[2]==5) OR ($P_AD[2]==7)) AND (_SD42940==18) AND (($SC_TOOL_LENGTH_TYPE _DEC1)==2))
_MP[14]=$P_TOOLL[2]*_FAK1
ENDIF
_MP[15]=0 _MP[16]=$P_TOOLR*_FAK1
IF ($MNS_MEA_FUNCTION_MASK B_AND 'B10')
_MP[15]=($SNS_MEA_WP_BALL_DIAM[S_PRNUM-1]/2)*_FAK1
ENDIF
DIAMOF
S_SETV0=$AA_IW[_XX]*_FAK1 S_SETV1=$AA_IW[_YY]*_FAK1
S_SETV2=$AA_IW[_ZZ]*_FAK1-_H_DB/2-S_FA
_SERR=<<"S_SETV= "<<_H_DB
IF (_H_DB<=0) GOTOF _ERR2
_SERR=<<"S_DZ  "<<_MP[4]
IF (_MP[4] < _H_DB) GOTOF _ERR2
_MP[14]=_MP[14]+_MP[15]
_SERR=<<"S_DZ > L1: "<<_MP[4]<<" > "<<_MP[14]
IF (_MP[4] > _MP[14]) GOTOF _ERR2
_CHBIT10 = _CHBIT[10]
_CHBIT[10] = 0
_OVI[18]=0
_MP[11]=S_SETV/2
CYCLE997 (S_MVAR+4,0,S_PRNUM,S_SETV,S_FA,_MP[11],S_STA1,S_INCA,S_SETV0,S_SETV1,S_SETV2,,,,,,,,S_NMSP,,_DMODE)
_OVI[2]=995
FOR _II=0 TO 31
_H_OVR[_II]=_OVR[_II] ;Ergebnisparameter CYCLE997 retten
ENDFOR
_MP[0]=_OVR[9]*_FAK2 _MP[1]=_OVR[10]*_FAK2
_MP[10]=_OVR[7]*_FAK2 -_MP[15]
_MP[8]=_OVR[5]*_FAK2 _MP[9]=_OVR[6]*_FAK2
_H_DB=_OVR[4]*_FAK2
IF ISVAR("$MN_SIM_ENVIRONMENT")
_H_SIM=(($MN_SIM_ENVIRONMENT B_AND 'B100')*100)+(($MN_SIM_ENVIRONMENT B_AND 'B1'))
ELSE
IF $P_SIM
_H_SIM=2
ENDIF
ENDIF
IF _OVI[18]==1
_H_SIM=3
ENDIF
IF _H_SIM==0
IF $P_SEARCH GOTOF _GEND IF $P_ISTEST OR $P_DRYRUN GOTOF _GEND
ENDIF
_RET_CYCFR=$P_CYCFRAME
$P_CYCFRAME=$P_CYCFRAME:CROT(_ZZ,S_STA1)
CUST_MEACYC(1)
_SD55740_0=1
IF _CHBIT[2]== -1
IF NOT($SCS_MEA_FUNCTION_MASK B_AND 'B1')
_SD55740_0=0
ENDIF
ELSE
_SD55740_0=_CHBIT[2]
ENDIF
IF _H_SIM<>0
_SD55740_0=0
ENDIF
G1 F=$SCS_MEA_FEED_PLANE_VALUE
IF _SD55740_0==0
N9961 AX[_XX]=IC(_H_DB/2+_FA+_H_PR)
N9962 AX[_ZZ]=AC(_MP[10])
N9963 AX[_ZZ]=IC(-_MP[4])
ELSE
N9951 MEAS=_H_ME AX[_XX]=IC(_H_DB/2+_FA+_H_PR)
STOPRE
IF $AC_MEA[_H_ME]<>0 GOTOF _ERR4
N9952 MEAS=_H_ME AX[_ZZ]=AC(_MP[10])
STOPRE
IF $AC_MEA[_H_ME]<>0 GOTOF _ERR4
N9953 MEAS=_H_ME AX[_ZZ]=IC(-_MP[4])
IF $AC_MEA[_H_ME]<>0 GOTOF _ERR4
ENDIF
$P_CYCFRAME=_RET_CYCFR
CUST_MEACYC(2)
_CHBIT[10] = 0
CYCLE979(21002,,,S_PRNUM,S_SETV,S_FA,_MP[11],_MP[8],_MP[9],S_STA1,S_INCA,S_NMSP,,,,,,,,,,,_DMODE)
_OVI[2]=995
_MP[5]=_OVR[17]*_FAK2
_MP[6]=_OVR[18]*_FAK2
_MP[2]=ATAN2((_MP[5]),(_MP[4]))
_MP[3]=ATAN2((_MP[6]),(_MP[4]))
_RET_CYCFR=$P_CYCFRAME
$P_CYCFRAME=$P_CYCFRAME:CROT(_ZZ,(S_STA1+3*S_INCA) MOD 360)
CUST_MEACYC(1)
G1 F=$SCS_MEA_FEED_PLANE_VALUE
IF _SD55740_0==0
N9964 AX[_XX]=IC(_FA+_H_PR)
N9965 AX[_ZZ]=AC(_MP[10]+_MP[15]+_H_DB/2+_FA)
$P_CYCFRAME=_RET_CYCFR
N9966 AX[_XX]=AC(_MP[8]) AX[_YY]=AC(_MP[9])
ELSE
N9954 MEAS=_H_ME AX[_XX]=IC(_FA+_H_PR)
STOPRE
IF $AC_MEA[_H_ME]<>0 GOTOF _ERR4
N9955 MEAS=_H_ME AX[_ZZ]=AC(_MP[10]+_MP[15]+_H_DB/2+_FA)
STOPRE
IF $AC_MEA[_H_ME]<>0 GOTOF _ERR4
$P_CYCFRAME=_RET_CYCFR
N9956 MEAS=_H_ME AX[_XX]=AC(_MP[8]) AX[_YY]=AC(_MP[9])
STOPRE
IF $AC_MEA[_H_ME]<>0 GOTOF _ERR4
ENDIF
CUST_MEACYC(2)
_OVR[22]=_OVR[0] _OVR[23]=_OVR[1] _OVR[24]=_OVR[2] _OVR[25]=_OVR[5] _OVR[26]=_OVR[6] _OVR[27]=_OVR[17] _OVR[28]=_OVR[18]
FOR _II=0 TO 21
_OVR[_II]=0
ENDFOR
FOR _II=0 TO 11
_OVR[_II+10]=_H_OVR[_II]
ENDFOR
_OVR[2]=_MP[2] _OVR[3]=_MP[3] _OVR[4]=_MP[4] _OVR[7]=_MP[5] _OVR[8]=_MP[6] _OVR[9]=S_TUL
_PRNUM=S_PRNUM _OVI[5]=_PRNUM
_MVAR=_H_MVAR+(_AMODE _DEC1)*10000000
_OVI[2]=995 _OVI[3]=_MVAR
_CHBIT[10] = _CHBIT10
IF (_CHBIT[10] == -1)
_M_N28= $SCS_MEA_RESULT_DISPLAY
ELSE
_M_N28=0
IF _CHBIT[10]
IF _CHBIT[11]
_M_N28= 3
ELSE
_M_N28= 1
IF _CHBIT[18]
_M_N28= 2
ENDIF
ENDIF
ENDIF
ENDIF
_OVR[5]=0 _OVR[6]=0
_OVI[9]=0 _ALARM=0
IF ((_AMODE _DEC1) == 1)
IF ((S_TZL<>0) AND (ABS(_OVR[2])<S_TZL))
_OVR[2]=0 _OVR[7]=0
ENDIF
IF ((S_TZL<>0) AND (ABS(_OVR[3])<S_TZL))
_OVR[3]=0 _OVR[8]=0
ENDIF
_MP[12]=ROUND(_OVR[2]*1000000)/1000000
_MP[13]=ROUND(_OVR[3]*1000000)/1000000
IF (ABS(_OVR[2])>S_TUL)
_OVR[5]=ABS(_MP[2])-S_TUL
IF (_M_N28<>0)
_SERR=<<" _OVR[2] > S_TUL: "<<_MP[12]<<" > "<<S_TUL
_ALARM=62377 _OVI[9]=_ALARM
SETAL(_ALARM,_SERR)
ENDIF
ENDIF
IF (ABS(_OVR[3])>S_TUL)
_OVR[6]=ABS(_MP[3])-S_TUL
IF (_M_N28<>0)
_SERR=<<" _OVR[3] > S_TUL: "<<_MP[13]<<" > "<<S_TUL
_ALARM=62377 _OVI[9]=_ALARM
SETAL(_ALARM,_SERR)
ENDIF
ENDIF
ENDIF
_TSA=ABS(S_TSA)
IF ((ABS(_MP[2]))>_TSA) OR ((ABS(_MP[3]))>_TSA)
_ALARM=62303 _OVI[9]=_ALARM
ENDIF
IF (_M_N28==0) OR (_M_N28==2) OR (_M_N28>4) GOTOF _M125
IF ((_M_N28==4) AND ((_ALARM>=62303)XOR(_ALARM<=62306))) GOTOF _M125
IF (_ALARM==62303)
SETAL(_ALARM,_SERR)
ENDIF
_OVR[10]=_OVR[10]*_FAK2 _OVR[14]=_OVR[14]*_FAK2
CYCLE102(1,_M_N28)
STOPRE
IF (_M_N28>=3) GOTOF _M128
IF (_ALARM<>0)
M0
STOPRE
ELSE
G4 F8
ENDIF
_M128: CYCLE102(0)
_OVR[4]=_OVR[4]/_FAK2 _OVR[7]=_OVR[7]/_FAK2 _OVR[8]=_OVR[8]/_FAK2
_M125:
_OVR[10]=_H_OVR[0] _OVR[14]=_H_OVR[4]
IF (_ALARM==62303) GOTOF _ERR5
IF (_AMODE _DEC1) == 1
_MP[12]=ROUND(_OVR[2]*1000000)/1000000
_MP[13]=ROUND(_OVR[3]*1000000)/1000000
_SERR=<<" _OVR[2] > S_TUL: "<<_MP[12]<<" > "<<S_TUL
IF (ABS(_OVR[2])>S_TUL) GOTOF _ERR3
_SERR=<<" _OVR[3] > S_TUL: "<<_MP[13]<<" > "<<S_TUL
IF (ABS(_OVR[3])>S_TUL) GOTOF _ERR3
ELSE
_OVR[5]=0 _OVR[6]=0
ENDIF
_GEND:
RET
_ERR0: _ALARM=61342 _OVI[9]=_ALARM
N699500 SETAL(_ALARM)
STOPRE
RET
_ERR1: _ALARM=61019 _OVI[9]=_ALARM
STOPRE
N699501 SETAL(_ALARM,_SERR)
RET
_ERR2: _ALARM=61022 _OVI[9]=_ALARM
STOPRE
N699502 SETAL(_ALARM,_SERR)
RET
_ERR3: _ALARM=61377 _OVI[9]=_ALARM
STOPRE
N699503 SETAL(_ALARM,_SERR)
RET
_ERR4: _ALARM=61302 _OVI[9]=_ALARM
STOPRE
N699504 SETAL(_ALARM)
RET
_ERR5: _ALARM=61303 _OVI[9]=_ALARM
STOPRE
N699505 SETAL(_ALARM)
RET
_ERR6: _ALARM=61427 _OVI[9]=_ALARM
STOPRE
N699506 SETAL(_ALARM,_SERR)
RET
