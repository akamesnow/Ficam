PROC CYCLE322 SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.60.00 ;DATE: 2014-05-20
;ISO working area limitation set (G22)
DEF AXIS _XX,_YY,_ZZ
DEF INT _I,_GAX,_PLAN,_FCX_P,_FCY_P,_FCZ_P,_FCI_P,_FCJ_P,_FCK_P,_KPA,_SNUM=2,_SOUT,_SDUM,_AX3B,_PANR,_MVG90G91
DEF REAL _FCX,_FCY,_FCZ,_FCI,_FCJ,_FCK,_LPX,_LPY,_LPZ,_LPI,_LPJ,_LPK,_AX1O,_AX1U,_AX2O,_AX2U,_AX3O,_AX3U,_FAK1,_FAK2,_AXWA,_AXWO,_AXWP,_PA1
DEF INT _TEMP
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE322_MPF"
DEF STRING[200] _TEMP_LINE=""
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE322_MPF")
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,"G290")
WRITE(_TEMP,_TEMP_FILE,";Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<"  Time: "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T="<<$TC_TP2[$P_TOOLNO]<<" D"<<$P_TOOL<<" T"<<$P_TOOLNO<<"   ; active TOOL")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$TC_DP1[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-TYPE") ; Werkzeugtyp
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$TC_DP2[$P_TOOLNO,$P_TOOL]<<"     ; EDGE-POSITION") ; Schneidenlage
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$TC_DP6[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-RADIUS") ; Werkzeugradius
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
WRITE(_TEMP,_TEMP_FILE,";D1")
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19") ; aktive Ebene
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...") ; Inch/Metrisch
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...") ; DIAMON/DIAMOF/DIAM90
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/...") ; Vorschubart
WRITE(_TEMP,_TEMP_FILE,"G[14]="<<$P_GG[14]<<"    ; G90/G91/...") ; Positionierung abs./ink.
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F) ; Vorschub
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$AC_MSNUM]) ; Drehzahl und Drehrichtung
WRITE(_TEMP,_TEMP_FILE,";")
WRITE(_TEMP,_TEMP_FILE,"G291")
_TEMP_LINE=""
_TEMP_LINE=_TEMP_LINE<<"G22 "
IF $C_X_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"X"<<$C_X<<" "
ENDIF
IF $C_U_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"U"<<$C_U<<" "
ENDIF
IF $C_Y_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Y"<<$C_Y<<" "
ENDIF
IF $C_V_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"V"<<$C_V<<" "
ENDIF
IF $C_Z_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Z"<<$C_Z<<" "
ENDIF
IF $C_W_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"W"<<$C_W<<" "
ENDIF
IF $C_P_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"P"<<$C_P<<" "
ENDIF
IF $C_Q_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Q"<<$C_Q<<" "
ENDIF
IF $C_R_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"R"<<$C_R<<" "
ENDIF
IF $C_F_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"F"<<$C_F<<" "
ENDIF
IF $C_S_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"S"<<$C_S<<" "
ENDIF
IF $C_T_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"T"<<$C_T<<" "
ENDIF
IF $C_I_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"I"<<$C_I[0]<<" "
ENDIF
IF $C_J_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"J"<<$C_J[0]<<" "
ENDIF
IF $C_K_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"K"<<$C_K[0]<<" "
ENDIF
WRITE(_TEMP,_TEMP_FILE,_TEMP_LINE)
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
IF($MN_MM_EXTERN_LANGUAGE<>1) GOTOF _FEHL1
IF $MCS_ISO_ENABLE_INTERRUPTS==1
IF $MN_EXTERN_INTERRUPT_BITS_M96 B_AND 'B1'
$AC_PARAM[1]=0
$A_OUT[1]=0
STOPRE
IF($MN_EXTERN_INTERRUPT_BITS_M96) B_AND 'B1000'
DISABLE(1)
ID=1 WHEN $A_IN[1]==1 DO $AC_PARAM[1]=1
ENDIF
ENDIF
ENDIF
_MVG90G91=$P_GG[14]
G90
IF($MN_SCALING_SYSTEM_IS_METRIC==1)
IF($MCS_ISO_SCALING_SYSTEM<>1)
CYCLE301
ENDIF
ELSE
IF($MCS_ISO_SCALING_SYSTEM<>2)
CYCLE301
ENDIF
ENDIF
_FAK2=1
IF($MCS_ISO_SCALING_SYSTEM==1)
IF($P_GG[13]==1) OR ($P_GG[13]==3)
_FAK2=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2) OR ($P_GG[13]==4)
_FAK2=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
_PA1=0
FOR _PANR = 3 TO 8
_PA1=_PA1+(_ZSFR[_PANR]*_FAK2)
ENDFOR
IF(_PA1==0)
FOR _PANR = 3 TO 8
IF(_PANR<6)
_ZSFR[_PANR]=-9998*_FAK2
ELSE
_ZSFR[_PANR]=-9999*_FAK2
ENDIF
ENDFOR
ENDIF
IF($C_X_PROG>0)OR($C_I_PROG>0)
IF($C_X_PROG>0)AND($C_I_PROG>0)
IF($C_X==$C_I[0]) GOTOF _FEHL4
ENDIF
IF($C_X_PROG>0)AND($C_I_PROG==0)
IF($C_X==_ZSFR[06]) GOTOF _FEHL4
ENDIF
IF($C_X_PROG==0)AND($C_I_PROG>0)
IF($C_X==_ZSFR[03]) GOTOF _FEHL4
ENDIF
ENDIF
IF($C_Y_PROG>0)OR($C_J_PROG>0)
IF($C_Y_PROG>0)AND($C_J_PROG>0)
IF($C_Y==$C_J[0]) GOTOF _FEHL4
ENDIF
IF($C_Y_PROG>0)AND($C_J_PROG==0)
IF($C_Y==_ZSFR[07]) GOTOF _FEHL4
ENDIF
IF($C_Y_PROG==0)AND($C_J_PROG>0)
IF($C_Y==_ZSFR[04]) GOTOF _FEHL4
ENDIF
ENDIF
IF($C_Z_PROG>0)OR($C_K_PROG>0)
IF($C_Z_PROG>0)AND($C_K_PROG>0)
IF($C_Z==$C_K[0]) GOTOF _FEHL4
ENDIF
IF($C_Z_PROG>0)AND($C_K_PROG==0)
IF($C_Z==_ZSFR[08]) GOTOF _FEHL4
ENDIF
IF($C_Z_PROG==0)AND($C_K_PROG>0)
IF($C_Z==_ZSFR[05]) GOTOF _FEHL4
ENDIF
ENDIF
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
;aktive Ebene auslesen
_PLAN=$P_GG[6]
_GAX=0
FOR _I=0 TO 2
IF ($MC_AXCONF_GEOAX_ASSIGN_TAB[_I]>0)
_GAX=_GAX+1
ENDIF
ENDFOR
IF (_GAX>2)
_XX=$P_AXN1 _YY=$P_AXN2 _ZZ=$P_AXN3
ELSE
_XX=$P_AXN1 _YY=$P_AXN2
ENDIF
NPROT(_SNUM,0)
_SOUT=$MC_STROKE_CHECK_INSIDE
IF ($C_X_PROG>0)
_ZSFR[3]=$C_X
ENDIF
IF ($C_Y_PROG>0)
_ZSFR[4]=$C_Y
ENDIF
IF ($C_Z_PROG>0)
_ZSFR[5]=$C_Z
ENDIF
IF ($C_I_PROG>0)
_ZSFR[6]=$C_I[0]
ENDIF
IF ($C_J_PROG>0)
_ZSFR[7]=$C_J[0]
ENDIF
IF ($C_K_PROG>0)
_ZSFR[8]=$C_K[0]
ENDIF
IF (_ZSFR[3]<_ZSFR[6])
_LPX=_ZSFR[6] _LPI=_ZSFR[3]
ELSE
_LPX=_ZSFR[3] _LPI=_ZSFR[6]
ENDIF
IF (_ZSFR[4]<_ZSFR[7])
_LPY=_ZSFR[7] _LPJ=_ZSFR[4]
ELSE
_LPY=_ZSFR[4] _LPJ=_ZSFR[7]
ENDIF
IF (_ZSFR[5]<_ZSFR[8])
_LPZ=_ZSFR[8] _LPK=_ZSFR[5]
ELSE
_LPZ=_ZSFR[5] _LPK=_ZSFR[8]
ENDIF
CASE _PLAN OF 3 GOTOF _G19 2 GOTOF _G18 DEFAULT GOTOF _G17
_G19:
_AX1O=_LPY _AX1U=_LPJ _AX2O=_LPZ _AX2U=_LPK _AX3O=_LPX _AX3U=_LPI
GOTOF _GEND
_G18:
_AX1O=_LPZ _AX1U=_LPK _AX2O=_LPX _AX2U=_LPI _AX3O=_LPY _AX3U=_LPJ
GOTOF _GEND
_G17:
_AX1O=_LPX _AX1U=_LPI _AX2O=_LPY _AX2U=_LPJ _AX3O=_LPZ _AX3U=_LPK
_GEND:
IF (($MN_MM_EXTERN_CNC_SYSTEM == 2) OR ($MN_MM_EXTERN_CNC_SYSTEM == 5))
_AX3B=0
_AX3O=0
_AX3U=0
ELSE
_AX3B=3
ENDIF
IF (_SOUT==0)
NPROTDEF(_SNUM,FALSE,_AX3B,_AX3O,_AX3U)
G01 AX[_XX]=_AX1U AX[_YY]=_AX2U
AX[_XX]=_AX1O
AX[_YY]=_AX2O
AX[_XX]=_AX1U
AX[_YY]=_AX2U
EXECUTE(_SDUM)
ELSE
NPROTDEF(_SNUM,FALSE,_AX3B,_AX3O,_AX3U)
G01 AX[_XX]=_AX1U AX[_YY]=_AX2U
AX[_YY]=_AX2O
AX[_XX]=_AX1O
AX[_YY]=_AX2U
AX[_XX]=_AX1U
EXECUTE(_SDUM)
ENDIF
NPROT(_SNUM,2)
IF(_SOUT==0)
_AXWA=$AA_IW[_XX]
_AXWO=$AA_IW[_YY]
_AXWP=$AA_IW[_ZZ]
IF(_AXWA<_AX1O) AND (_AXWA>_AX1U) AND (_AXWO<_AX2O) AND (_AXWO>_AX2U) AND (_AXWP<_AX3O) AND (_AXWP>_AX3U) GOTOF _FEHL3
ENDIF
IF $MCS_ISO_ENABLE_INTERRUPTS==1
IF $MN_EXTERN_INTERRUPT_BITS_M96 B_AND 'B1'
ENABLE(1)
IF $AC_PARAM[1]==1
$A_OUT[1]=0
$A_OUT[1]=1
ENDIF
ENDIF
ENDIF
IF(_MVG90G91==2)
G91
ENDIF
GOTOF _RET
_FEHL1: STOPRE
N332201 SETAL(61800)
RET
_FEHL3: STOPRE
NPROT(_SNUM,0)
STOPRE
N332203 SETAL(61817)
RET
_FEHL4: STOPRE
N332204 SETAL(61818)
RET
_RET: M17
