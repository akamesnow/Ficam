PROC CYCLE98(REAL _PO1,REAL _DM1,REAL _PO2,REAL _DM2,REAL _PO3,REAL _DM3,REAL _PO4,REAL _DM4,REAL APP,REAL ROP,REAL TDEP,REAL FAL,REAL _IANG,REAL _NSP,INT NRC,INT NID,REAL _PP1,REAL _PP2,REAL _PP3,INT _VARI,INT _NUMTH,REAL _VRT,REAL _MID,REAL _GDEP,REAL _IFLANK,INT _PITA,STRING[15] _PITM1,STRING[15] _PITM2,STRING[15] _PITM3,INT _DMODE,INT _AMODE) SAVE DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.64.00 ;DATE: 2014-10-02
;Cycle support HMIsl
;Thread chaining
N10 DEF AXIS _ZA,_SA,_IPAX,_ZZ,_XX,_MAX
N11 DEF INT IA,LP=1,RF=1,WI1=90,II,JJ,KK,ZF=1,_NRCI,_INCHFAK,PLAN=1,_ZAF=1,_SAF=1,_NULLWEG[3]=(1,1,1)
N12 DEF INT _ALF, _LIFTNR, _AXZAHL=4, _AKTLFON, _DIA,_ISO, _SPIZAHL=4,VARI,NUMTH,NSP,_VI[7],_AI[8],_NRCX,_DMODE1,_GG10
DEF INT _ERR,_SP,_LP,_PM,_FRL,_CDIR,_H_MSNUM,_MA_NR_SP=0,_KA_NR_SP=-1,_PLAN
N13 DEF INT _ARTIS[16]
N14 DEF REAL SAB=1,SPV,DEL,TW1,TW2,TW3,RZP,SPS,SPZ,EPZ,EPX,HH1,HH2,HH3,HH4,ZP[4,4],AEP[2,2],_ZKOR,_ZANF,_HC1
N15 DEF REAL _KSDIFF[2], _ANGPLUS=0, _KEGV, _EPS=0.001,PO1,DM1,PO2,DM2,PO3,DM3,PO4,DM4,IANG,_ZUG,_ZUA,PP1,PP2,PP3
DEF REAL _SPD,_SPL,_PIT,_UMQ,_D,_F,_C97_2,_C97_3,_GDIR,_C_M3
DEF REAL _FAK1,_FAK2,_FAK3,_FAK4
N16 DEF BOOL _MDG
N17 DEF STRING[32] _PAR_NAME
DEF STRING[35] _AX
DEF STRING[30] _S_KA_NR
DEF INT _TEMP
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE98_MPF"
DEF STRING[35] _LOG_FILE
DEF INT _LOG,_LOG_ON=0
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE98_MPF")
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,";! only for internal diagnostics ! Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T-Number $P_TOOLNO="<<$P_TOOLNO)
WRITE(_TEMP,_TEMP_FILE,";D-Number $P_TOOL="<<$P_TOOL)
IF (($P_TOOL)AND($P_TOOLNO))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$P_ADT[1]<<"    ; TOOL-TYPE")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$P_ADT[2]<<"    ; CUTTING EDGE POSITION")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP3[1,1]="<<$P_ADT[3]<<"    ; TOOL GEO LENGTH 1")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP4[1,1]="<<$P_ADT[4]<<"    ; TOOL GEO LENGTH 2")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP12[1,1]="<<$P_ADT[12]<<"    ; TOOL WEAR LENGTH 1")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP13[1,1]="<<$P_ADT[13]<<"    ; TOOL WEAR LENGTH 2")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$P_ADT[6]<<"    ; TOOL RADIUS GEOMETRY")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP15[1,1]="<<$P_ADT[15]<<"    ; TOOL RADIUS WEAR")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP8[1,1]="<<$P_ADT[8]<<"    ; PLATE LENGTH")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP9[1,1]="<<$P_ADT[9]<<"    ; PLATE WIDTH")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP10[1,1]="<<$P_ADT[10]<<"    ; TOOLHOLDER ANGLE")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP11[1,1]="<<$P_ADT[11]<<"    ; CUTTING DIRECTION")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP24[1,1]="<<$P_ADT[24]<<"    ; CLEARANCE ANGLE")
ENDIF
IF ($P_TOOLNO>0)
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
ELSE
WRITE(_TEMP,_TEMP_FILE,";T0")
WRITE(_TEMP,_TEMP_FILE,";M6")
ENDIF
IF ($P_TOOL==0)
WRITE(_TEMP,_TEMP_FILE,";D0")
ELSE
WRITE(_TEMP,_TEMP_FILE,";D1")
ENDIF
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19")
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...")
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...")
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/...")
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F)
IF $P_MSNUM==0
WRITE(_TEMP,_TEMP_FILE,";$P_MSNUM=0 no spindle existant")
ELSE
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$P_MSNUM])
ENDIF
WRITE(_TEMP,_TEMP_FILE,"CYCLE98("<<_PO1<<","<<_DM1<<","<<_PO2<<","<<_DM2<<","<<_PO3<<","<<_DM3<<","<<_PO4<<","<<_DM4<<","<<APP<<","<<ROP<<","<<TDEP<<","<<FAL<<","<<_IANG<<","<<_NSP<<","<<NRC<<","<<NID<<","<<_PP1<<","<<_PP2<<","<<_PP3<<","<<_VARI<<","<<_NUMTH<<","<<_VRT<<","<<_MID<<","<<_GDEP<<","<<_IFLANK<<","<<_PITA<<","<<_PITM1<<","<<_PITM2<<","<<_PITM3<<","<<_DMODE<<","<<_AMODE<<")")
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
_LOG_FILE="/_N_MPF_DIR/_N_LOG_CYCLE98_"<<$P_CHANNO<<"_MPF"
_LOG_ON=ISFILE(_LOG_FILE)
IF(_LOG_ON)
DELETE(_LOG,_LOG_FILE)
WRITE(_LOG,_LOG_FILE,"-------------------")
WRITE(_LOG,_LOG_FILE,"Logfile CYCLE98: "<<$A_DAY<<"."<<$A_MONTH<<"."<<$A_YEAR<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
ENDIF
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
_FAK2=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK2=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)OR($P_GG[13]==4)
_FAK2=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK3=1/$MN_SCALING_VALUE_INCH
ELSE
_FAK3=1
ENDIF
_FAK4=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==3)
_FAK4=$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==4)
_FAK4=1/$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
DM1=_DM1 PO1=_PO1 IANG=_IANG VARI=_VARI PP1=_PP1 PP2=_PP2 PP3=_PP3
_GG10=$P_GG[10]
IF _GG10<2
_GG10=2
ENDIF
IF _VARI<0 GOTOF _FEHL1
_VI[0]=VARI _DEC1 _VI[1]=VARI _DEC2 _VI[2]=VARI _DEC3 _VI[3]=VARI _DEC4 _VI[4]=VARI _DEC5 _VI[5]=VARI _DEC6 _VI[6]=VARI _DEC7
IF ((_VI[0]==0) OR (_VI[0]>4)) GOTOF _FEHL1
IF (_VI[1]>1) GOTOF _FEHL1
IF (_VI[2]>2) GOTOF _FEHL1
IF (_VI[3]>1) GOTOF _FEHL1
IF (_VI[4]>1) GOTOF _FEHL1
IF ((_VI[5]<0) OR (_VI[5]>3)) GOTOF _FEHL1
IF (_VI[6]>1) GOTOF _FEHL1
_ISO=_VI[3]
_AKTLFON=_VI[1]
_AI[0]=_AMODE _DEC1 _AI[1]=_AMODE _DEC2 _AI[2]=_AMODE _DEC3 _AI[3]=_AMODE _DEC4 _AI[4]=_AMODE _DEC5 _AI[5]=_AMODE _DEC6 _AI[6]=_AMODE _DEC7 _AI[7]=_AMODE _DEC8
IF _AMODE<0 GOTOF _FEHL2
FOR II=0 TO 6
IF _AI[II]>2 GOTOF _FEHL2
ENDFOR
II=1
IF (_AI[0]>1) GOTOF _FEHL2
II=3
IF (_AI[2]>1) GOTOF _FEHL2
II=5
IF (_AI[4]>1) GOTOF _FEHL2
II=7
IF (_AI[6]>1) GOTOF _FEHL2
II=8
IF (_AI[7]>2) GOTOF _FEHL2
IF APP<0
_PAR_NAME="LW"
GOTOF _FEHL5
ENDIF
IF ROP<0
_PAR_NAME="LR"
GOTOF _FEHL5
ENDIF
IF TDEP<0
_PAR_NAME="H1"
GOTOF _FEHL5
ENDIF
IF FAL<0
_PAR_NAME="U"
GOTOF _FEHL5
ENDIF
IF NSP<0
_PAR_NAME=" < alpha0 > "
GOTOF _FEHL5
ENDIF
IF NRC<0
_PAR_NAME="ND"
GOTOF _FEHL5
ENDIF
IF NID<0
_PAR_NAME="NN"
GOTOF _FEHL5
ENDIF
IF NUMTH<0
_PAR_NAME="N"
GOTOF _FEHL5
ENDIF
IF _MID<0
_PAR_NAME="D1"
GOTOF _FEHL5
ENDIF
IF _GDEP<0
_PAR_NAME="DA"
GOTOF _FEHL5
ENDIF
IF ((_DMODE<0) OR (_DMODE>3))
_PAR_NAME=" < _DMODE dec1>"
GOTOF _FEHL5
ENDIF
IF _AI[0]==0
PO2=_PO2
ELSE
PO2=PO1+_PO2
ENDIF
IF _AI[1]==0
DM2=_DM2
ELSE
IF _AI[1]==1
DM2=DM1+_DM2*2
ELSE
DM2=DM1+(TAN(_DM2)*ABS(PO2-PO1))*2
ENDIF
ENDIF
IF _AI[2]==0
PO3=_PO3
ELSE
PO3=PO2+_PO3
ENDIF
IF _AI[3]==0
DM3=_DM3
ELSE
IF _AI[3]==1
DM3=DM2+_DM3*2
ELSE
DM3=DM2+(TAN(_DM3)*ABS(PO3-PO2))*2
ENDIF
ENDIF
IF _AI[4]==0
PO4=_PO4
ELSE
PO4=PO3+_PO4
ENDIF
IF _AI[5]==0
DM4=_DM4
ELSE
IF _AI[5]==1
DM4=DM3+_DM4*2
ELSE
DM4=DM3+(TAN(_DM4)*ABS(PO4-PO3))*2
ENDIF
ENDIF
IF (DM1==DM2) AND (PO1==PO2)
_NULLWEG[0]=0
ENDIF
IF (DM2==DM3) AND (PO2==PO3)
_NULLWEG[1]=0
ENDIF
IF (DM3==DM4) AND (PO3==PO4)
_NULLWEG[2]=0
ENDIF
IF (DM1==DM4) AND (PO1==PO4)
GOTOF _FEHL8
ENDIF
IF _VRT<=0
IF ($P_GG[13]==2) OR ($P_GG[13]==4)
SAB=1
ELSE
SAB=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
SAB=_VRT
ENDIF
_DMODE1=_DMODE _DEC1
IF((_DMODE1>0)AND(_DMODE1<4))
G[6]=_DMODE1
ENDIF
VARI=_VI[0]
DM1=DM1/2 DM2=DM2/2 DM3=DM3/2 DM4=DM4/2
ZP[0,0]=PO2 ZP[0,1]=DM2 ZP[1,0]=PO3 ZP[1,1]=DM3 ZP[2,0]=PO1 ZP[2,1]=DM1 ZP[3,0]=PO4 ZP[3,1]=DM4
_ZA=$P_AXN2 _SA=$P_AXN1
IA=VARI MOD 2 TW2=TAN(ABS(IANG)) _NRCI=NRC _ZKOR=FAL*TW2
IF _SC_TOOL_VALI[0]<>0
_ARTIS[0]=_SC_TOOL_VALI[0] _ARTIS[1]=_SC_TOOL_VALI[1] _ARTIS[2]=_SC_TOOL_VALI[2] _ARTIS[3]=_SC_TOOL_VALI[3] _ARTIS[4]=_SC_TOOL_VALI[4] _ARTIS[5]=_SC_TOOL_VALI[5] _ARTIS[6]=_SC_TOOL_VALI[6]
_ARTIS[7]=_SC_TOOL_ON_OFF[0] _ARTIS[8]=_SC_TOOL_ON_OFF[1]
IF (_ARTIS[0] MOD 10 <>1 )
GOTOF _FEHL4
ENDIF
II=_ARTIS[0] DIV 10
IF ((II MOD 10 > 3) OR (II MOD 10 < 1))
GOTOF _FEHL4
ELSE
_ARTIS[11]=II MOD 10
IF (_ARTIS[3]<>0)
_ARTIS[13]=_ARTIS[1]
ENDIF
IF (_ARTIS[6]<>0)
_ARTIS[14]=_ARTIS[4]
ENDIF
ENDIF
II=II DIV 10
IF ((II MOD 10 > 2) OR (II MOD 10 < 0))
GOTOF _FEHL4
ELSE
_ARTIS[12]=II MOD 10
ENDIF
ENDIF
IF(($P_GG[29]==1) OR ($P_GG[29]==4))
PLAN=1
ELSE
PLAN=2
DIAMON
ENDIF
_INCHFAK=$P_GG[13] _INCHFAK=_INCHFAK MOD 2
IF _INCHFAK==1
SAB=SAB/$MN_SCALING_VALUE_INCH
ENDIF
IF IA==1 GOTOF _MA1
IA=-1
_MA1:
IF _AI[7]==0
NUMTH=_NUMTH NSP=_NSP
ELSE
IF _AI[7]==1
NUMTH=1 NSP=_NSP
ELSE
NUMTH=_NUMTH NSP=0
ENDIF
ENDIF
_MMB1:
IF (NRC==0)
_NRCI=1
ENDIF
_ZUG=ABS(TDEP-FAL)
IF(_VI[4]==1)AND(_VI[5]<>2)
IF(_MID<=0) GOTOF _FEHL6
IF(_VI[0]<=2)
_NRCI=_ZUG/_MID+0.499999
ELSE
_NRCI=POT(_ZUG/_MID/2)+1.999999
ENDIF
ENDIF
IF _VI[5]<>1
IF FAL==0
NID=NID+1
ENDIF
ENDIF
_MC1:
IF NOT(_NULLWEG[0]==0)
HH2=PO2-PO1
IF HH2==0
GOTOF _MD1
ENDIF
N700 TW1=(DM2-DM1)/HH2 WI1=0
IF ABS(TW1)<=1
GOTOF _ME1
ENDIF
_MD1:LP=0
N701 HH2=DM2-DM1 TW1=(PO2-PO1)/HH2 _ZA=$P_AXN1 _SA=$P_AXN2
ELSE
HH2=PO3-PO2
IF HH2==0
GOTOF _MDD1
ENDIF
N700 TW1=(DM3-DM2)/HH2 WI1=0
IF ABS(TW1)<=1
GOTOF _ME1
ENDIF
_MDD1:LP=0
N701 HH2=DM3-DM2 _ZA=$P_AXN1 _SA=$P_AXN2
IF HH2==0
TW1=0
ELSE
TW1=(PO3-PO2)/HH2
ENDIF
ENDIF
_ME1:
IF (($MC_DIAMETER_AX_DEF=="") OR ($MC_DIAMETER_AX_DEF==" "))
_ZAF=1 _SAF=1
DIAMOF
ELSE
IF _ZA==AXNAME($MC_DIAMETER_AX_DEF)
_ZAF=PLAN
ENDIF
IF _SA==AXNAME($MC_DIAMETER_AX_DEF)
_SAF=PLAN
ENDIF
ENDIF
HH3=PO4-PO3
IF HH3==0 GOTOF _MG1
N702 TW3=(DM4-DM3)/HH3
IF LP GOTOF _MJ1
_MG1:IF TW3==0 GOTOF _MJ1
N703 TW3=1/TW3
_MJ1:
IF NOT(HH2==0)
N704 RF=HH2/ABS(HH2)
ELSE
RF=1
ENDIF
IA=IA/$P_ACTFRAME[_ZA,SC] SAB=SAB/$P_ACTFRAME[_ZA,SC]
_ML1:IF IANG>=0 GOTOF _MA2 IF (TW1==0)OR(WI1==90) GOTOF _MA2
IANG=ABS(IANG)
_MA2:IF(_PITA<0)OR(_PITA>4) GOTOF _FEHL7
IF(_PITA==2)
PP1=$MN_SCALING_VALUE_INCH/PP1 PP2=$MN_SCALING_VALUE_INCH/PP2 PP3=$MN_SCALING_VALUE_INCH/PP3
ENDIF
IF(_PITA==3)
PP1=PP1*$MN_SCALING_VALUE_INCH PP2=PP2*$MN_SCALING_VALUE_INCH PP3=PP3*$MN_SCALING_VALUE_INCH
ENDIF
IF(_PITA==4)
PP1=PP1*$PI PP2=PP2*$PI PP3=PP3*$PI
ENDIF
PP1=PP1*_FAK3 PP2=PP2*_FAK3 PP3=PP3*_FAK3
IF LP==0 GOTOF _MG2
SPS=PO1-RF*APP SPZ=DM1+IA*SAB-TW1*RF*APP EPZ=PO4+RF*ROP EPX=DM4+IA*SAB+TW3*RF*ROP RZP=EPX HH3=EPZ
AEP[0,0]=SPS AEP[0,1]=SPZ AEP[1,0]=EPZ AEP[1,1]=EPX
GOTOF _MA3
_MG2:SPS=DM1-RF*APP EPZ=DM4+RF*ROP
IF WI1 GOTOF _MP2
SPZ=PO1+IA*SAB-RF*TW1*APP EPX=PO4+IA*SAB+RF*TW3*ROP
GOTOF _MQ2
_MP2:SPZ=PO1+IA EPX=PO4+IA
_MQ2:RZP=EPX HH3=EPX AEP[0,0]=SPZ AEP[0,1]=SPS AEP[1,0]=EPX AEP[1,1]=EPZ
_MA3:IF ABS(ZP[1,1-LP]-ZP[0,1-LP])>=ABS(ZP[1,LP]-ZP[0,LP]) GOTOF _MMB3
ZP[0,2]=1
_MMB3:IF ABS(AEP[1,1-LP]-ZP[1,1-LP])>=ABS(AEP[1,LP]-IA*SAB-ZP[1,LP]) GOTOF _MC3
ZP[1,2]=1
N705 _MC3:
IF (ABS(ZP[3,LP]-ZP[0,LP])<_EPS) AND (ABS(ZP[2,LP]-ZP[0,LP])<_EPS) AND (ABS(ZP[1,LP]-ZP[0,LP])<_EPS)
ZP[0,3]=0 ZP[1,3]=0
GOTOF _MG3
ENDIF
ZP[0,3]=0 ZP[1,3]=0
IF ABS(ZP[3,1-LP]-ZP[1,1-LP])<_EPS
HH1=0
ELSE
HH1=IA*((ZP[3,LP]-ZP[1,LP])/(ZP[3,1-LP]-ZP[1,1-LP]))
ENDIF
IF ABS(ZP[1,1-LP]-ZP[0,1-LP])<_EPS
HH2=0
ELSE
HH2=IA*((ZP[1,LP]-ZP[0,LP])/(ZP[1,1-LP]-ZP[0,1-LP]))
ENDIF
IF ABS(ZP[0,1-LP]-ZP[2,1-LP])<_EPS
HH3=0
ELSE
HH3=IA*((ZP[0,LP]-ZP[2,LP])/(ZP[0,1-LP]-ZP[2,1-LP]))
ENDIF
IF (ZP[2,1-LP]<ZP[3,1-LP])
HH1=-HH1 HH2=-HH2 HH3=-HH3
ENDIF
IF (HH1>HH2)
ZP[1,3]=1
ENDIF
IF (HH2>HH3)
ZP[0,3]=1
ENDIF
_MG3:IF NRC<>0 GOTOF _MH3
_NRCI=1
N706 _MH3:_ZANF=SPS _HC1=ABS((TDEP-FAL)/SQRT(_NRCI)*TW2) II=_NRCI JJ=-RF
IF IANG>=0 GOTOF _MA4 IF VARI<3 GOTOF _MA4
N711 _MB3:HH1=(SQRT(II)-SQRT(II-1))*_HC1 II=II-1 JJ=-JJ
IF II>1 GOTOB _MB3
_MA4:
IF ($MCS_FUNCTION_MASK_TURN B_AND 'B1000000000000') GOTOF _M5304
_H_MSNUM=$P_MSNUM
IF(_H_MSNUM)
REPEAT
REPEAT
_KA_NR_SP=_KA_NR_SP+1
_S_KA_NR="$MC_AXCONF_MACHAX_USED["<<_KA_NR_SP<<"]"
IF ISVAR(_S_KA_NR)
_MA_NR_SP=$MC_AXCONF_MACHAX_USED[_KA_NR_SP]
ELSE
GOTOF _FEHL5
ENDIF
UNTIL(_MA_NR_SP>0)
_AX="AX"<<_MA_NR_SP
_MAX=(AXNAME(_AX))
UNTIL(_H_MSNUM==$MA_SPIND_ASSIGN_TO_MACHAX[_MAX])
IF(($MCS_AXIS_USAGE_ATTRIB[_KA_NR_SP]) B_AND 'B1000')
_CDIR=-1
ELSE
_CDIR=1
ENDIF
IF(($MCS_AXIS_USAGE_ATTRIB[_KA_NR_SP]) B_AND 'B100000')
_C_M3=-1
ELSE
_C_M3=1
ENDIF
ELSE
GOTOF _FEHL5
ENDIF
IF($P_SDIR[$P_MSNUM]==5) GOTOF _FEHL6
_PM=RF
_GDIR=-($P_SDIR[0]*2-7)*_PM*_CDIR*_C_M3
_FRL=-_CDIR*_GDIR
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE," M3/4: M"<<$P_SDIR[0])
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE," _CDIR:"<<_CDIR)
WRITE(_LOG,_LOG_FILE," _FRL: "<<_FRL)
ENDIF
_SP=-1
IF($MCS_AXIS_USAGE[_KA_NR_SP]==3)
_SP=0
ELSE
IF($MCS_AXIS_USAGE[_KA_NR_SP]==5)
_SP=1
ENDIF
ENDIF
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Spindel synchronisieren: _SP="<<_SP)
ENDIF
IF(_SP>=0)
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"_SC_C97["<<_SP<<",0...3]= "<<_SC_C97[_SP,0]<<" , "<<_SC_C97[_SP,1]<<" , "<<_SC_C97[_SP,2]<<" , "<<_SC_C97[_SP,3])
WRITE(_LOG,_LOG_FILE,"_FAK1="<<_FAK1<<" _FAK2="<<_FAK2<<" _FAK3="<<_FAK3<<" _FAK4="<<_FAK4)
WRITE(_LOG,_LOG_FILE,"$P_TOOLL[2]="<<$P_TOOLL[2]<<" $P_TOOLL[1]="<<$P_TOOLL[1])
ENDIF
IF(_SC_C97[_SP,0]==1)
_ZZ=_SA
_XX=_ZA
_LP=LP
_SPD=DM1
_SPL=_PO1
_PIT=PP1
IF(($P_GG[29]==1) OR ($P_GG[29]==4))
_PLAN=1
ELSE
_PLAN=2
ENDIF
$AC_MEAS_VALID=0
$AC_MEAS_TYPE=24
$AC_MEAS_P1_COORD=2
$AC_MEAS_P2_COORD=0
$AA_MEAS_POINT1[_ZZ]=_SC_C97[_SP,2]*_FAK3-$P_TOOLL[2]*_FAK1
$AA_MEAS_POINT1[_XX]=_SC_C97[_SP,3]*_FAK3-$P_TOOLL[1]*_FAK1
_ERR=MEASURE()
IF(_ERR) GOTOF _FEHL14
_C97_2=$AA_MEAS_POINT2[_ZZ]
_C97_3=$AA_MEAS_POINT2[_XX]/_PLAN
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"Z: "<<_SC_C97[_SP,2]<<"(MKS) = "<<_C97_2<<"(WKS)")
WRITE(_LOG,_LOG_FILE,"X: "<<_SC_C97[_SP,3]<<"(MKS) = "<<_C97_3<<"(WKS)")
WRITE(_LOG,_LOG_FILE,"Z MEAS_POINTS: "<<$AA_MEAS_POINT1[_ZZ]<<"(MKS) = "<<$AA_MEAS_POINT2[_ZZ]<<"(WKS)")
ENDIF
IF(_LP)
_D=_SPL-_C97_2
ELSE
_D=_C97_3-_SPD/2
ENDIF
_F=_PIT
_UMQ=_D/_F
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"UMQ= "<<_UMQ*360)
WRITE(_LOG,_LOG_FILE,"D  = "<<_D)
WRITE(_LOG,_LOG_FILE,"F  = "<<_F)
ENDIF
IF(_LP)
_UMQ=-(_UMQ-TRUNC(_UMQ))*_FRL
ELSE
_UMQ=(_UMQ-TRUNC(_UMQ))*_FRL
ENDIF
_NSP=_NSP+_SC_C97[_SP,1]+_UMQ*360
_NSP=((_NSP MOD 360)+360) MOD 360
_ANGPLUS=_NSP
IF(_LOG_ON)
WRITE(_LOG,_LOG_FILE,"NSP= "<<_NSP)
WRITE(_LOG,_LOG_FILE,"UMQ= "<<_UMQ*360)
WRITE(_LOG,_LOG_FILE,"SYNC="<<_SC_C97[_SP,1])
ENDIF
ENDIF
ENDIF
GOTOF _M5304
IF ($AN_NCK_VERSION >= 201000)
IF $P_NUM_SPINDLES<_SPIZAHL
_SPIZAHL=$P_NUM_SPINDLES
ENDIF
ENDIF
KK=0 _C97_NR[0]=REP(0) _C97_AXNAM[0]=REP("")
_AXZAHL=$ON_NUM_AXES_IN_SYSTEM-1
SBLOF
FOR II=0 TO _AXZAHL
JJ=$MC_AXCONF_MACHAX_USED[II]
IF JJ<>0
IF $MA_SPIND_ASSIGN_TO_MACHAX[AXNAME("AX"<<JJ)]<>0
_C97_NR[KK]=$MA_SPIND_ASSIGN_TO_MACHAX[AXNAME("AX"<<JJ)] _C97_NR[KK+5]=JJ
_C97_AXNAM[KK]=$MC_AXCONF_CHANAX_NAME_TAB[II] KK=KK+1
IF (KK>_SPIZAHL-1)
GOTOF _END_SPISUCH
ENDIF
ENDIF
ENDIF
ENDFOR
_END_SPISUCH:_C97_NR[10]=$P_MSNUM
SBLON
IF _C97[3]==1
IF ($P_ACTFRAME[_SA,RT]<>0) OR ($P_ACTFRAME[_ZA,RT]<>0) OR (NOT($P_TRAFO==0))
GOTOF _FEHL3
ENDIF
_KSDIFF[0]=$AA_IM[_ZA]-$AA_IW[_ZA] _KSDIFF[1]=$AA_IM[_SA]-$AA_IW[_SA]
IF _INCHFAK==1
_KSDIFF[0]=_KSDIFF[0]/$MN_SCALING_VALUE_INCH _KSDIFF[1]=_KSDIFF[1]/$MN_SCALING_VALUE_INCH
ENDIF
IF LP
HH1=_C97[1]-SPS-_KSDIFF[LP]
ELSE
HH1=_C97[2]-SPS-_KSDIFF[1-LP]
ENDIF
IF $AA_S[$P_MSNUM]>0
HH1=-HH1
ENDIF
_ANGPLUS=_ANGPLUS+_C97[0]-((HH1/PP1)-TRUNC(HH1/PP1))*360
_M5301:IF(_ANGPLUS<360)GOTOF _M5302
_ANGPLUS=_ANGPLUS-360
GOTOB _M5301
_M5302:IF(_ANGPLUS>=0)GOTOF _M5303
_ANGPLUS=_ANGPLUS+360
GOTOB _M5302
_M5303:
ENDIF
_M5304:
IF(LP==1)
IF(IA==1)
_ALF=3
ELSE
_ALF=7
ENDIF
ELSE
IF(IA==1)
_ALF=1
ELSE
_ALF=5
ENDIF
ENDIF
IF(($P_GG[29]==1) OR ($P_GG[29]==4))
_DIA=1
ELSE
_DIA=2
ENDIF
IF(_ISO==1)
_KEGV=_ZFPR[29]*_DIA*(-1)
ENDIF
II=0 _ZUA=0
_MMB4: _IPAX=_SA
IF (NRC MOD 2)==0 GOTOF _MC4 IF IANG>=0 GOTOF _MC4
ZF=-1
N709 _MC4:SPV=NSP+360/NUMTH*II JJ=1 HH2=0
IF (SPV+_ANGPLUS)>=360
_ANGPLUS=_ANGPLUS-360
ENDIF
SBLOF
IF(_AKTLFON==1)
$AC_LIFTFAST=0
ENDIF
SBLON
N712 _MD4: _LIFTNR=0
_IPAX=_SA
IF(_AKTLFON==1)
SBLOF
IF NOT $AC_LIFTFAST
_MDG=1
ENDIF
SBLON
ENDIF
IF (_ARTIS[11]==3)
_ARTIS[10]=_ARTIS[10]+1
IF (_ARTIS[6]<>0)
IF (_ARTIS[10]==_ARTIS[14])
_ARTIS[4]=_ARTIS[14] _ARTIS[5]=_ARTIS[14]
IF (_ARTIS[14]+_ARTIS[6]<=_SC_TOOL_VALI[5])
_ARTIS[14]=_ARTIS[14]+_ARTIS[6]
ENDIF
ENDIF
ELSE
IF ((_SC_TOOL_VALI[4]<=_ARTIS[10]) AND (_ARTIS[10]<=_SC_TOOL_VALI[5]))
_ARTIS[4]=_ARTIS[10] _ARTIS[5]=_ARTIS[10]
ENDIF
ENDIF
ENDIF
HH1=_ZUG/_NRCI
IF (_VI[0]<=2)
HH1=_ZUG/_NRCI DEL=HH1*JJ
ELSE
_NRCX=TRUNC((_NRCI-1)*_ZUA*_ZUA/(_ZUG*_ZUG)+1)+1
IF _NRCI==1
DEL=_ZUG
ELSE
IF(_NRCX<=2)
_NRCX=TRUNC(_ZUA/_ZUG*2*SQRT(_NRCI-1))+1
DEL=_ZUG/2*_NRCX/SQRT(_NRCI-1)
ELSE
DEL=_ZUG*SQRT((_NRCX-1)/(_NRCI-1))
ENDIF
ENDIF
_ZUA=DEL
ENDIF
IF NRC==0 GOTOF _MJ4
IF _VI[5]==2 GOTOF _MJ4
HH4=-IA*DEL
IF IANG==0 GOTOF _MF4
HH2=-RF*ZF*((TDEP-DEL)*TW2-_ZKOR)
_MF4:
IF(_ISO==0)
N40 G0 G90 G60 AX[_SA]=(_ZANF+HH2)*_SAF AX[_ZA]=SPZ*_ZAF
ELSE
N401 G0 G90 G60 AX[_SA]=(_ZANF+HH2)*_SAF AX[_ZA]=SPZ*_ZAF+_KEGV
ENDIF
IF(_AKTLFON==1)
IF($P_LIFTFAST==0)
GOTOF _XWEIT
ELSE
SBLOF
_MDG=1
SBLON
M0
STOPRE
SBLOF
_MDG=1
SBLON
ENDIF
ENDIF
_XWEIT:
IF(_AKTLFON==1)
SBLOF
$AC_LIFTFAST=0
SBLON
ENDIF
IF IANG>0 GOTOF _MG4
ZF=-ZF
_MG4:
IF(_ISO==0)
N42 G91 AX[_ZA]=(HH4-IA*SAB)*_ZAF
ELSE
N421 G91 AX[_ZA]=(HH4-IA*SAB)*_ZAF-_KEGV
ENDIF
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
IF _NULLWEG[0]
_LIFTNR=1
IF(_AKTLFON==0)
N43 G33 G90 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+HH4)*_ZAF IP[_SA]=PP1 SF=SPV+_ANGPLUS
ELSE
N43 G33 G90 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+HH4)*_ZAF IP[_SA]=PP1 SF=SPV+_ANGPLUS LFON DILF=ABS(HH4-IA*SAB) LFWP ALF=_ALF
N430 LFOF ALF=0 G33
IF $P_LIFTFAST
_MDG=1
STOPRE
GOTOF _M5311
ENDIF
ENDIF
ENDIF
IF NOT(ZP[0,2]==0)
_IPAX=_ZA
ENDIF
IF _NULLWEG[1]
_LIFTNR=2
IF _NULLWEG[0]==1
IF(_AKTLFON==0)
N44 G33 G90 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+HH4)*_ZAF IP[_IPAX]=PP2
ELSE
N44 G33 G90 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+HH4)*_ZAF IP[_IPAX]=PP2 LFON DILF=ABS(HH4-IA*SAB) LFWP ALF=_ALF
N440 LFOF ALF=0 G33
IF $P_LIFTFAST
_MDG=1
STOPRE
GOTOF _M5311
ENDIF
ENDIF
ELSE
IF(_AKTLFON==0)
N44 G33 G90 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+HH4)*_ZAF IP[_IPAX]=PP2 SF=SPV+_ANGPLUS
ELSE
N44 G33 G90 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+HH4)*_ZAF IP[_IPAX]=PP2 SF=SPV+_ANGPLUS LFON DILF=ABS(HH4-IA*SAB) LFWP ALF=_ALF
N440 LFOF ALF=0 G33
IF $P_LIFTFAST
_MDG=1
STOPRE
GOTOF _M5311
ENDIF
ENDIF
ENDIF
ENDIF
_IPAX=_SA
IF NOT(ZP[1,2]==0)
_IPAX=_ZA
ENDIF
IF _NULLWEG[2]
_LIFTNR=3
IF(_AKTLFON==0)
IF(_ISO==1)
IF(IA>0)
IF(((RZP-IA*SAB+HH4)*_ZAF)>=((SPZ*_ZAF)+_KEGV))
IF((AEP[1,1-LP]*_SAF)>(SPS*_SAF))
N451 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)-((((RZP-IA*SAB+HH4)*_ZAF)-(SPZ*_ZAF+_KEGV))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3
ELSE
N452 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)+((((RZP-IA*SAB+HH4)*_ZAF)-(SPZ*_ZAF+_KEGV))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3
ENDIF
ELSE
N453 G33 G90 AX[_SA]=AEP[1,1-LP]*_SAF AX[_ZA]=(RZP-IA*SAB+HH4)*_ZAF IP[_IPAX]=PP3
ENDIF
ELSE
IF(((RZP-IA*SAB+HH4)*_ZAF)<((SPZ*_ZAF)+_KEGV))
IF((AEP[1,1-LP]*_SAF)>(SPS*_SAF))
N454 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)-((((SPZ*_ZAF+_KEGV)-((RZP-IA*SAB+HH4)*_ZAF)))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3
ELSE
N455 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)+((((SPZ*_ZAF+_KEGV)-((RZP-IA*SAB+HH4)*_ZAF)))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3
ENDIF
ELSE
N456 G33 G90 AX[_SA]=AEP[1,1-LP]*_SAF AX[_ZA]=(RZP-IA*SAB+HH4)*_ZAF IP[_IPAX]=PP3
ENDIF
ENDIF
ELSE
N45 G33 G90 AX[_SA]=AEP[1,1-LP]*_SAF AX[_ZA]=(RZP-IA*SAB+HH4)*_ZAF IP[_IPAX]=PP3
ENDIF
N450 G0
ELSE
IF(_ISO==1)
IF(IA>0)
IF(((RZP-IA*SAB+HH4)*_ZAF)>=((SPZ*_ZAF)+_KEGV))
IF((AEP[1,1-LP]*_SAF)>(SPS*_SAF))
N451 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)-((((RZP-IA*SAB+HH4)*_ZAF)-(SPZ*_ZAF+_KEGV))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3 LFON DILF=ABS(HH4-IA*SAB) LFWP ALF=_ALF
ELSE
N452 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)+((((RZP-IA*SAB+HH4)*_ZAF)-(SPZ*_ZAF+_KEGV))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3 LFON DILF=ABS(HH4-IA*SAB) LFWP ALF=_ALF
ENDIF
ELSE
N453 G33 G90 AX[_SA]=AEP[1,1-LP]*_SAF AX[_ZA]=(RZP-IA*SAB+HH4)*_ZAF IP[_IPAX]=PP3 LFON DILF=ABS(HH4-IA*SAB) LFWP ALF=_ALF
ENDIF
ELSE
IF(((RZP-IA*SAB+HH4)*_ZAF)<((SPZ*_ZAF)+_KEGV))
IF((AEP[1,1-LP]*_SAF)>(SPS*_SAF))
N454 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)-((((SPZ*_ZAF+_KEGV)-((RZP-IA*SAB+HH4)*_ZAF)))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3 LFON DILF=ABS(HH4-IA*SAB) LFWP ALF=_ALF
ELSE
N455 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)+((((SPZ*_ZAF+_KEGV)-((RZP-IA*SAB+HH4)*_ZAF)))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3 LFON DILF=ABS(HH4-IA*SAB) LFWP ALF=_ALF
ENDIF
ELSE
N456 G33 G90 AX[_SA]=AEP[1,1-LP]*_SAF AX[_ZA]=(RZP-IA*SAB+HH4)*_ZAF IP[_IPAX]=PP3 LFON DILF=ABS(HH4-IA*SAB) LFWP ALF=_ALF
ENDIF
ENDIF
ELSE
N45 G33 G90 AX[_SA]=AEP[1,1-LP]*_SAF AX[_ZA]=(RZP-IA*SAB+HH4)*_ZAF IP[_IPAX]=PP3 LFON DILF=ABS(HH4-IA*SAB) LFWP ALF=_ALF
ENDIF
N450 LFOF ALF=0 G33
IF $P_LIFTFAST
_MDG=1
STOPRE
GOTOF _M5311
ENDIF
ENDIF
ENDIF
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
_M5311: G0 G[10]=_GG10
IF (_AKTLFON==0)
IF(_ISO==0)
N46 G[10]=_GG10 G90 AX[_ZA]=RZP*_ZAF
IF ZP[1,3]==1
N47 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+IA*SAB)*_ZAF
ENDIF
IF ZP[0,3]==1
N48 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+IA*SAB)*_ZAF
ENDIF
ELSE
N461 G0 G[10]=_GG10 G90 AX[_ZA]=(SPZ*_ZAF)+_KEGV ;ISO
ENDIF
JJ=JJ+1
ELSE
IF ($P_LIFTFAST==0)
IF(_ISO==0)
N46 G[10]=_GG10 G90 AX[_ZA]=RZP*_ZAF
ELSE
N461 G0 G[10]=_GG10 G90 AX[_ZA]=(SPZ*_ZAF)+_KEGV ;ISO
ENDIF
GOTOF _M531A
ELSE
IF(_ISO==0)
IF _LIFTNR==1
GOTOB _MD4
ENDIF
IF _LIFTNR==2
IF ZP[0,3]==1
N460 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+IA*SAB)*_ZAF
ENDIF
GOTOB _MD4
ELSE
IF ZP[1,3]==1
N461 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+IA*SAB)*_ZAF
ENDIF
IF ZP[0,3]==1
N462 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+IA*SAB)*_ZAF
ENDIF
GOTOB _MD4
ENDIF
ELSE
N461 G0 G[10]=_GG10 G90 AX[_ZA]=(SPZ*_ZAF)+_KEGV ;ISO
GOTOB _MD4
ENDIF
ENDIF
ENDIF
_M531A:
IF (_AKTLFON==1)
STOPRE
IF ($AC_LIFTFAST==0)
IF(_ISO==0)
N46 G[10]=_GG10 G90 AX[_ZA]=RZP*_ZAF
IF ZP[1,3]==1
N47 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+IA*SAB)*_ZAF
ENDIF
IF ZP[0,3]==1
N48 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+IA*SAB)*_ZAF
ENDIF
ELSE
N461 G0 G[10]=_GG10 G90 AX[_ZA]=(SPZ*_ZAF)+_KEGV ;ISO
ENDIF
JJ=JJ+1
ELSE
IF(_ISO==0)
IF _LIFTNR==1
GOTOB _MD4
ENDIF
IF _LIFTNR==2
IF ZP[0,3]==1
N460 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+IA*SAB)*_ZAF
ENDIF
GOTOB _MD4
ELSE
IF ZP[1,3]==1
N461 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+IA*SAB)*_ZAF
ENDIF
IF ZP[0,3]==1
N462 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+IA*SAB)*_ZAF
ENDIF
GOTOB _MD4
ENDIF
ELSE
N461 G0 G[10]=_GG10 G90 AX[_ZA]=(SPZ*_ZAF)+_KEGV ;ISO
GOTOB _MD4
ENDIF
ENDIF
ENDIF
IF JJ<=_NRCI GOTOB _MD4 IF (NID==0)AND(FAL==0) GOTOF _MX4
IF _VI[5]==1 GOTOF _MX4
_MJ4:JJ=0 HH2=-IA*TDEP HH4=EPX-IA*(SAB+TDEP) _IPAX=_SA
_M5310:
IF LP>0 GOTOF _MM4
HH4=RZP-IA*(SAB+TDEP)
_MM4:
IF (_ARTIS[11]==3)
_ARTIS[10]=_ARTIS[10]+1
IF (_ARTIS[6]<>0)
IF (_ARTIS[10]==_ARTIS[14])
_ARTIS[4]=_ARTIS[14] _ARTIS[5]=_ARTIS[14]
IF (_ARTIS[14]+_ARTIS[6]<=_SC_TOOL_VALI[5])
_ARTIS[14]=_ARTIS[14]+_ARTIS[6]
ENDIF
ENDIF
ELSE
IF ((_SC_TOOL_VALI[4]<=_ARTIS[10]) AND (_ARTIS[10]<=_SC_TOOL_VALI[5]))
_ARTIS[4]=_ARTIS[10] _ARTIS[5]=_ARTIS[10]
ENDIF
ENDIF
ENDIF
IF(_ISO==0)
N50 G0 G90 G60 AX[_SA]=SPS*_SAF AX[_ZA]=SPZ*_ZAF
ELSE
N501 G0 G90 G60 AX[_SA]=SPS*_SAF AX[_ZA]=SPZ*_ZAF+_KEGV
ENDIF
IF(_AKTLFON==1)
IF($P_LIFTFAST==0)
GOTOF _XWEITS
ELSE
SBLOF
_MDG=1
SBLON
M0
STOPRE
SBLOF
_MDG=1
SBLON
ENDIF
ENDIF
_XWEITS:
IF(_AKTLFON==1)
SBLOF
$AC_LIFTFAST=0
SBLON
ENDIF
IF(_ISO==0)
N51 G91 AX[_ZA]=(-IA*(SAB+TDEP))*_ZAF
ELSE
N511 G91 AX[_ZA]=(-IA*(SAB+TDEP))*_ZAF-_KEGV
ENDIF
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
IF _NULLWEG[0]
_LIFTNR=1
IF(_AKTLFON==0)
N52 G33 G90 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+HH2)*_ZAF IP[_SA]=PP1 SF=SPV+_ANGPLUS
ELSE
N52 G33 G90 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+HH2)*_ZAF IP[_SA]=PP1 SF=SPV+_ANGPLUS LFON DILF=ABS(SAB+TDEP) LFWP ALF=_ALF
N520 LFOF ALF=0 G33
IF $P_LIFTFAST
_MDG=1
STOPRE
GOTOF _M5312
ENDIF
ENDIF
ENDIF
_IPAX=_SA
IF NOT(ZP[0,2]==0)
_IPAX=_ZA
ENDIF
IF _NULLWEG[1]
_LIFTNR=2
IF _NULLWEG[0]
IF(_AKTLFON==0)
N53 G33 G90 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+HH2)*_ZAF IP[_IPAX]=PP2
ELSE
N53 G33 G90 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+HH2)*_ZAF IP[_IPAX]=PP2 LFON DILF=ABS(SAB+TDEP) LFWP ALF=_ALF
N530 LFOF ALF=0 G33
IF $P_LIFTFAST
_MDG=1
STOPRE
GOTOF _M5312
ENDIF
ENDIF
ELSE
IF(_AKTLFON==0)
N53 G33 G90 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+HH2)*_ZAF IP[_IPAX]=PP2 SF=SPV+_ANGPLUS
ELSE
N53 G33 G90 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+HH2)*_ZAF IP[_IPAX]=PP2 SF=SPV+_ANGPLUS LFON DILF=ABS(SAB+TDEP) LFWP ALF=_ALF
N530 LFOF ALF=0 G33
IF $P_LIFTFAST
_MDG=1
STOPRE
GOTOF _M5312
ENDIF
ENDIF
ENDIF
ENDIF
_IPAX=_SA
IF NOT(ZP[1,2]==0)
_IPAX=_ZA
ENDIF
IF _NULLWEG[2]
_LIFTNR=3
IF(_AKTLFON==0)
IF(_ISO==1)
IF(IA>0)
IF(((HH4)*_ZAF)>=((SPZ*_ZAF)+_KEGV))
IF((AEP[1,1-LP]*_SAF)>(SPS*_SAF))
N541 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)-((((HH4)*_ZAF)-(SPZ*_ZAF+_KEGV))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3
ELSE
N542 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)+((((HH4)*_ZAF)-(SPZ*_ZAF+_KEGV))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3
ENDIF
ELSE
N543 G33 G90 AX[_SA]=AEP[1,1-LP]*_SAF AX[_ZA]=HH4*_ZAF IP[_IPAX]=PP3
ENDIF
ELSE
IF(((HH4)*_ZAF)<((SPZ*_ZAF)+_KEGV))
IF((AEP[1,1-LP]*_SAF)>(SPS*_SAF))
N544 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)-((((SPZ*_ZAF+_KEGV)-((HH4)*_ZAF)))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3
ELSE
N545 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)+((((SPZ*_ZAF+_KEGV)-((HH4)*_ZAF)))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3
ENDIF
ELSE
N546 G33 G90 AX[_SA]=AEP[1,1-LP]*_SAF AX[_ZA]=HH4*_ZAF IP[_IPAX]=PP3
ENDIF
ENDIF
ELSE
N54 G33 G90 AX[_SA]=AEP[1,1-LP]*_SAF AX[_ZA]=HH4*_ZAF IP[_IPAX]=PP3
ENDIF
N540 G0
ELSE
IF(_ISO==1)
IF(IA>0)
IF((HH4*_ZAF)>=((SPZ*_ZAF)+_KEGV))
IF((AEP[1,1-LP]*_SAF)>(SPS*_SAF))
N541 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)-(((HH4*_ZAF)-(SPZ*_ZAF+_KEGV))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3 LFON DILF=ABS(SAB+TDEP) LFWP ALF=_ALF
ELSE
N542 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)+(((HH4*_ZAF)-(SPZ*_ZAF+_KEGV))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3 LFON DILF=ABS(SAB+TDEP) LFWP ALF=_ALF
ENDIF
ELSE
N543 G33 G90 AX[_SA]=AEP[1,1-LP]*_SAF AX[_ZA]=HH4*_ZAF IP[_IPAX]=PP3 LFON DILF=ABS(SAB+TDEP) LFWP ALF=_ALF
ENDIF
ELSE
IF((HH4*_ZAF)<((SPZ*_ZAF)+_KEGV))
IF((AEP[1,1-LP]*_SAF)>(SPS*_SAF))
N544 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)-((((SPZ*_ZAF+_KEGV)-(HH4*_ZAF)))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3 LFON DILF=ABS(SAB+TDEP) LFWP ALF=_ALF
ELSE
N545 G33 G90 AX[_SA]=(AEP[1,1-LP]*_SAF)+((((SPZ*_ZAF+_KEGV)-(HH4*_ZAF)))/_DIA) AX[_ZA]=SPZ*_ZAF+_KEGV IP[_IPAX]=PP3 LFON DILF=ABS(SAB+TDEP) LFWP ALF=_ALF
ENDIF
ELSE
N546 G33 G90 AX[_SA]=AEP[1,1-LP]*_SAF AX[_ZA]=HH4*_ZAF IP[_IPAX]=PP3 LFON DILF=ABS(SAB+TDEP) LFWP ALF=_ALF
ENDIF
ENDIF
ELSE
N54 G33 G90 AX[_SA]=AEP[1,1-LP]*_SAF AX[_ZA]=HH4*_ZAF IP[_IPAX]=PP3 LFON DILF=ABS(SAB+TDEP) LFWP ALF=_ALF
ENDIF
N540 LFOF ALF=0 G33
IF $P_LIFTFAST
_MDG=1
STOPRE
GOTOF _M5312
ENDIF
ENDIF
ENDIF
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
_M5312: G0 G[10]=_GG10
IF (_AKTLFON==0)
IF(_ISO==0)
N55 G[10]=_GG10 G90 AX[_ZA]=RZP*_ZAF
IF ZP[1,3]==1
N56 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+IA*SAB)*_ZAF
ENDIF
IF ZP[0,3]==1
N57 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+IA*SAB)*_ZAF
ENDIF
ELSE
N551 G0 AX[_ZA]=(SPZ*_ZAF)+_KEGV
ENDIF
JJ=JJ+1
ELSE
IF ($P_LIFTFAST==0)
IF(_ISO==0)
N55 G[10]=_GG10 G90 AX[_ZA]=RZP*_ZAF
ELSE
N551 G0 AX[_ZA]=(SPZ*_ZAF)+_KEGV
ENDIF
GOTOF _M531B
ELSE
IF(_ISO==0)
IF _LIFTNR==1
GOTOB _M5310
ENDIF
IF _LIFTNR==2
IF ZP[0,3]==1
N550 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+IA*SAB)*_ZAF
ENDIF
GOTOB _M5310
ELSE
IF ZP[1,3]==1
N551 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+IA*SAB)*_ZAF
ENDIF
IF ZP[0,3]==1
N552 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+IA*SAB)*_ZAF
ENDIF
GOTOB _M5310
ENDIF
ELSE
N551 G0 AX[_ZA]=(SPZ*_ZAF)+_KEGV
GOTOB _M5310
ENDIF
ENDIF
ENDIF
_M531B:
IF (_AKTLFON==1)
STOPRE
IF ($AC_LIFTFAST==0)
IF(_ISO==0)
N55 G[10]=_GG10 G90 AX[_ZA]=RZP*_ZAF
IF ZP[1,3]==1
N56 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+IA*SAB)*_ZAF
ENDIF
IF ZP[0,3]==1
N57 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+IA*SAB)*_ZAF
ENDIF
ELSE
N551 G0 AX[_ZA]=(SPZ*_ZAF)+_KEGV
ENDIF
JJ=JJ+1
ELSE
IF(_ISO==0)
IF _LIFTNR==1
GOTOB _M5310
ENDIF
IF _LIFTNR==2
IF ZP[0,3]==1
N550 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+IA*SAB)*_ZAF
ENDIF
GOTOB _M5310
ELSE
IF ZP[1,3]==1
N551 AX[_SA]=ZP[1,1-LP]*_SAF AX[_ZA]=(ZP[1,LP]+IA*SAB)*_ZAF
ENDIF
IF ZP[0,3]==1
N552 AX[_SA]=ZP[0,1-LP]*_SAF AX[_ZA]=(ZP[0,LP]+IA*SAB)*_ZAF
ENDIF
GOTOB _M5310
ENDIF
ELSE
N551 G0 AX[_ZA]=(SPZ*_ZAF)+_KEGV
GOTOB _M5310
ENDIF
ENDIF
ENDIF
IF ((JJ<=NID) AND (FAL<>0)) GOTOB _MM4 IF ((JJ<NID) AND (FAL==0)) GOTOB _MM4
_MX4:II=II+1
_ZUA=0
IF _SC_TOOL_VALI[0]<>0
_ARTIS[0]=_SC_TOOL_VALI[0] _ARTIS[1]=_SC_TOOL_VALI[1] _ARTIS[2]=_SC_TOOL_VALI[2] _ARTIS[3]=_SC_TOOL_VALI[3] _ARTIS[4]=_SC_TOOL_VALI[4] _ARTIS[5]=_SC_TOOL_VALI[5] _ARTIS[6]=_SC_TOOL_VALI[6]
_ARTIS[9]=0 _ARTIS[10]=0
IF (_ARTIS[3]<>0)
_ARTIS[13]=_ARTIS[1]
ENDIF
IF (_ARTIS[6]<>0)
_ARTIS[14]=_ARTIS[4]
ENDIF
ENDIF
IF (II<NUMTH)AND(NRC==0) GOTOB _MC4 IF II<NUMTH GOTOB _MMB4
IF(_ISO==0)
N60 G0 G90 G60 AX[_SA]=SPS*_SAF AX[_ZA]=SPZ*_ZAF
ELSE
N601 G0 G90 G60 AX[_SA]=SPS*_SAF AX[_ZA]=SPZ*_ZAF+_KEGV
SBLOF
ENDIF
IF (_ARTIS[0]<>0)
M=QU(_ARTIS[8])
ENDIF
RET
_FEHL1:STOPRE
N709801 SETAL(61002)
RET
_FEHL2:STOPRE
N709802 SETAL(61019,"<_AMODE: dec"<<II<<"> ")
RET
_FEHL3:STOPRE
N709803 SETAL(61612)
RET
_FEHL4:
N709804 SETAL(62106)
RET
_FEHL5:STOPRE
N709805 SETAL(61019,_PAR_NAME)
RET
_FEHL6: STOPRE
N709806 SETAL(61610)
RET
_FEHL7: STOPRE
N709807 SETAL(61019," < _PITA > ")
RET
_FEHL8: STOPRE
N709808 SETAL(61126)
RET
_FEHL14: STOPRE
N709814 SETAL(61099,"MEASURE")
RET
