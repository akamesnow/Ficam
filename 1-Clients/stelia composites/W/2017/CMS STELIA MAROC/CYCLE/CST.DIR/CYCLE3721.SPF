PROC CYCLE3721 DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 02.06.02.00 Nov 04, 2008
;ISO-M contour repeating (G72.1/G72.2)
DEF AXIS _AX1,_AX2
DEF INT _FCL,_FCP,_GC,_I,_PLAN,_ZFCL
DEF REAL _FCX,_FCY,_FCZ,_FCR,_FAK1,_SPTA1,_SPTA2,_TIA1,_TIA2,_ZFCR
DEF STRING[12] _UPS
DEF INT _TEMP
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE3721_MPF"
DEF STRING[200] _TEMP_LINE=""
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE3721_MPF")
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,"G290")
WRITE(_TEMP,_TEMP_FILE,";Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<"  Time: "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T="<<$TC_TP2[$P_TOOLNO]<<" D"<<$P_TOOL<<" T"<<$P_TOOLNO<<"   ; active TOOL")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$TC_DP1[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-TYPE") ; Werkzeugtyp
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$TC_DP2[$P_TOOLNO,$P_TOOL]<<"     ; EDGE-POSITION") ; Schneidenlage
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$TC_DP6[$P_TOOLNO,$P_TOOL]<<"   ; TOOL-RADIUS") ; Werkzeugradius
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
WRITE(_TEMP,_TEMP_FILE,";D1")
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19") ; aktive Ebene
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...") ; Inch/Metrisch
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...") ; DIAMON/DIAMOF/DIAM90
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/...") ; Vorschubart
WRITE(_TEMP,_TEMP_FILE,"G[14]="<<$P_GG[14]<<"    ; G90/G91/...") ; Positionierung abs./ink.
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F) ; Vorschub
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$AC_MSNUM]) ; Drehzahl und Drehrichtung
WRITE(_TEMP,_TEMP_FILE,";")
WRITE(_TEMP,_TEMP_FILE,"G291")
_TEMP_LINE=""
IF $C_G_PROG<>0
IF ($C_G==721)
_TEMP_LINE=_TEMP_LINE<<"G72.1 "
ELSE
_TEMP_LINE=_TEMP_LINE<<"G72.2 "
ENDIF
ENDIF
IF $C_A_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"A"<<$C_A<<" "
ENDIF
IF $C_B_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"B"<<$C_B<<" "
ENDIF
IF $C_C_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"C"<<$C_C<<" "
ENDIF
IF $C_X_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"X"<<$C_X<<" "
ENDIF
IF $C_U_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"U"<<$C_U<<" "
ENDIF
IF $C_Y_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Y"<<$C_Y<<" "
ENDIF
IF $C_V_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"V"<<$C_V<<" "
ENDIF
IF $C_Z_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Z"<<$C_Z<<" "
ENDIF
IF $C_W_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"W"<<$C_W<<" "
ENDIF
IF $C_P_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"P"<<$C_P<<" "
ENDIF
IF $C_Q_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"Q"<<$C_Q<<" "
ENDIF
IF $C_R_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"R"<<$C_R<<" "
ENDIF
IF $C_F_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"F"<<$C_F<<" "
ENDIF
IF $C_S_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"S"<<$C_S<<" "
ENDIF
IF $C_T_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"T"<<$C_T<<" "
ENDIF
IF $C_I_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"I"<<$C_I[0]<<" "
ENDIF
IF $C_J_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"J"<<$C_J[0]<<" "
ENDIF
IF $C_K_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"K"<<$C_K[0]<<" "
ENDIF
IF $C_L_PROG<>0
_TEMP_LINE=_TEMP_LINE<<"L"<<$C_L<<" "
ENDIF
WRITE(_TEMP,_TEMP_FILE,_TEMP_LINE)
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
IF($MN_MM_EXTERN_LANGUAGE<>1) GOTOF _FEHL1
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
IF ($C_G==721)
_GC=1
ELSE
_GC=2
ENDIF
_PLAN=$P_EXTGG[2]
_AX1=$P_AXN1 _AX2=$P_AXN2
_I=1
IF($C_L_PROG==0)
_FCL=1
ELSE
_FCL=$C_L
IF(_FCL==0)
GOTOF _RET
ELSE
IF(_FCL<0)
_FCL=1
ENDIF
ENDIF
ENDIF
IF($C_P_PROG==0)
GOTOF _FEHL5
ELSE
_FCP=$C_P
ENDIF
IF(_FCP<0) GOTOF _FEHL5
IF NOT ($MC_EXTERN_FUNCTION_MASK B_AND 'B1000000')
IF ($C_L_PROG==0)
_FCL=ABS(_FCP/10000)
IF(_FCL==0)
GOTOF _RET
ENDIF
_FCP=(_FCP MOD 10000)
ENDIF
IF (STRLEN(<<_FCP)>4) GOTOF _FEHL5
CASE STRLEN(<<_FCP) OF 1 GOTOF _M1 2 GOTOF _M2 3 GOTOF _M3 DEFAULT GOTOF _M4
_M1:_UPS="000"<<_FCP
GOTOF _M5
_M2:_UPS="00"<<_FCP
GOTOF _M5
_M3:_UPS="0"<<_FCP
GOTOF _M5
_M4:_UPS=""<<_FCP
_M5:
ELSE
IF(STRLEN(<<_FCP)>8) GOTOF _FEHL5
_UPS=<<_FCP
ENDIF
IF (_GC==1)
IF ($C_R_PROG<>1)
_FCR=0
ELSE
_FCR=$C_R
ENDIF
CASE _PLAN OF 3 GOTOF _MG19R 2 GOTOF _MG18R DEFAULT GOTOF _MG17R
_MG19R:
IF ($C_Y_PROG==0)
_FCY=0
ELSE
IF ($C_Y_PROG==1)
_FZY=$C_Y
ELSE
_FCY=$P_EP[_AX1]*_FAK1+$C_Y
ENDIF
ENDIF
IF ($C_Z_PROG==0)
_FCZ=0
ELSE
IF ($C_Z_PROG==1)
_FCZ=$C_Z
ELSE
_FCZ=$P_EP[_AX2]*_FAK1+$C_Z
ENDIF
ENDIF
_FCX=0 _SPTA1=_FCY _SPTA2=_FCZ
GOTOF _MWBRE
_MG18R:
IF ($C_Z_PROG==0)
_FCZ=0
ELSE
IF ($C_Z_PROG==1)
_FCZ=$C_Z
ELSE
_FCZ=$P_EP[_AX1]*_FAK1+$C_Z
ENDIF
ENDIF
IF ($C_X_PROG==0)
_FCX=0
ELSE
IF ($C_X_PROG==1)
_FCX=$C_X
ELSE
_FCX=$P_EP[_AX2]*_FAK1+$C_X
ENDIF
ENDIF
_FCY=0 _SPTA1=_FCZ _SPTA2=_FCX
GOTOF _MWBRE
_MG17R:
IF ($C_X_PROG==0)
_FCX=0
ELSE
IF ($C_X_PROG==1)
_FCX=$C_X
ELSE
_FCX=$P_EP[_AX1]*_FAK1+$C_X
ENDIF
ENDIF
IF ($C_Y_PROG==0)
_FCY=0
ELSE
IF ($C_Y_PROG==1)
_FCY=$C_Y
ELSE
_FCY=$P_EP[_AX2]*_FAK1+$C_Y
ENDIF
ENDIF
_FCZ=0 _SPTA1=_FCX _SPTA2=_FCY
_MWBRE:
ELSE
CASE _PLAN OF 3 GOTOF _MG19V 2 GOTOF _MG18V DEFAULT GOTOF _MG17V
_MG19V:
IF ($C_J_PROG<>0)
_FCY=$C_J[0]
ELSE
_FCY=0
ENDIF
IF ($C_K_PROG<>0)
_FCZ=$C_K[0]
ELSE
_FCZ=0
ENDIF
_FCX=0 _TIA1=_FCY _TIA2=_FCZ
GOTOF _MWBVE
_MG18V:
IF ($C_K_PROG<>0)
_FCZ=$C_K[0]
ELSE
_FCZ=0
ENDIF
IF ($C_I_PROG<>0)
_FCX=$C_I[0]
ELSE
_FCX=0
ENDIF
_FCY=0 _TIA1=_FCZ _TIA2=_FCX
GOTOF _MWBVE
_MG17V:
IF ($C_I_PROG<>0)
_FCX=$C_I[0]
ELSE
_FCX=0
ENDIF
IF ($C_J_PROG<>0)
_FCY=$C_J[0]
ELSE
_FCY=0
ENDIF
_FCZ=0 _TIA1=_FCX _TIA2=_FCY
_MWBVE:
ENDIF
IF (_GC==1)
ATRANS AX[_AX1]=_SPTA1 AX[_AX2]=_SPTA2
FOR _I=1 TO _FCL
_ZFCL=_FCL
ISOCALL _UPS
AROT RPL=_FCR
ENDFOR
_ZFCR=(_FCR*_ZFCL)
AROT RPL=-_ZFCR
ATRANS AX[_AX1]=-_SPTA1 AX[_AX2]=-_SPTA2
ELSE
FOR _I=1 TO _FCL
ISOCALL _UPS
ATRANS AX[_AX1]=_TIA1 AX[_AX2]=_TIA2
ENDFOR
_TIA1=_FCL*_TIA1 _TIA2=_FCL*_TIA2
ATRANS AX[_AX1]=-_TIA1 AX[_AX2]=-_TIA2
ENDIF
GOTOF _RET
_FEHL1: STOPRE
N372101 SETAL(61800)
RET
_FEHL2: STOPRE
N372102 SETAL(61003)
RET
_FEHL3: STOPRE
N372103 SETAL(61102)
RET
_FEHL4: STOPRE
N372104 SETAL(61808)
RET
_FEHL5: STOPRE
N372105 SETAL(61812)
RET
_RET:
RET
