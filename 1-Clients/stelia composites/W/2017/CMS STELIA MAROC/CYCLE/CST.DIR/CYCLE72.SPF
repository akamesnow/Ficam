PROC CYCLE72(STRING[141] _KNAME,REAL _RTP,REAL _RFP,REAL _SDIS,REAL _DP,REAL _MID,REAL _FAL,REAL _FALD,REAL _FFP1,REAL _FFD,INT _VARI,INT _RL,INT _AS1,REAL __LP1,REAL _FF3,INT _AS2,REAL __LP2,INT _UMODE,REAL _FS, REAL _ZFS,INT _GMODE,INT _DMODE,INT _AMODE) SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.51.00 ;DATE: 2013-07-08
;Cycle support HMIsl
;Contour milling
; Fehlerhandling mit ACTBLOCNO
DEF AXIS _XX,_YY,_ZZ
DEF INT _BA1,_BA10,_BA100,_HZ,_IZ,_AS11,_GZW,_G15T,_G15K,_H8,_SPIND,_H10,_H11,_P49=0,_BACK,_I,_I_MAX,_Z1,_Z2,_ERR,_FFD_TYPE,_WTYP
DEF INT _ERROR,II,IH1,IH2,_II,_VARI1,_ZZSD[15],_ARTIS[16],_TEMP,_DMODE1,_DMODE4,_AMODE1,_AMODE3,_GG10
DEF REAL _LP1,_LP2
DEF REAL _HEZ,_DIS1,_DIS2,_DPA,_DPR,_DPZ,_FAK1,_FAK2,_PMZ,_SDZ,_WEZ,_OFFN,_OFFN1,_XXS,_YYS,_XAP=0,_YAP=0,_ALPHA,_L,_VORZ,_WR
DEF REAL _RDF=0,_LPM=0.001,_LPI=0.0001
DEF REAL _KTS[170,6]
DEF STRING[32] _SLA,_SLE
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE72_MPF"
DEF STRING[100] _PNAME
DEF STRING[200] _CMD
DEF STRING[250] _SERR
DEF STRING[30] _S_FFP1,_S_FFD,_S_FF3
DEF BOOL _ZV[2], _SOWZ,_ZB[13]
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE72_MPF")
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,";! only for internal diagnostics ! Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T-Number $P_TOOLNO="<<$P_TOOLNO)
WRITE(_TEMP,_TEMP_FILE,";D-Number $P_TOOL="<<$P_TOOL)
IF (($P_TOOL)AND($P_TOOLNO))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$P_AD[1]<<"    ; Tool type")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$P_AD[2]<<"    ; Cutting edge position")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$P_AD[6]<<"    ; Tool geo radius")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP15[1,1]="<<$P_AD[15]<<"    ; Tool wear radius")
IF (($P_AD[1]>=200) AND ($P_AD[1]<300))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP24[1,1]="<<$P_AD[24]<<"    ; Tool tip angle")
ENDIF
IF (($P_AD[1]>=100) AND ($P_AD[1]<200))
IF ($P_AD[1]<>145)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP11[1,1]="<<$P_AD[11]<<"    ; Tool angle")
ENDIF
WRITE(_TEMP,_TEMP_FILE,";$TC_DP35[1,1]="<<$P_AD[35]<<"    ; Number of teeth")
ENDIF
IF ($P_AD[1]==140)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP7[1,1]="<<$P_AD[7]<<"   ; Outside radius ")
ENDIF
IF ($P_AD[1]==240)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP9[1,1]="<<$P_AD[9]<<"   ; Thread pitch")
ENDIF
ENDIF
IF ($P_TOOLNO>0)
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
ELSE
WRITE(_TEMP,_TEMP_FILE,";T0")
WRITE(_TEMP,_TEMP_FILE,";M6")
ENDIF
IF ($P_TOOL==0)
WRITE(_TEMP,_TEMP_FILE,";D0")
ELSE
WRITE(_TEMP,_TEMP_FILE,";D1")
ENDIF
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19")
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...")
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...")
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/... $P_F_TYPE="<<$P_F_TYPE)
IF($P_F_TYPE==11)OR($P_F_TYPE==33)
WRITE(_TEMP,_TEMP_FILE,"FZ="<<$P_FZ)
ELSE
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F)
ENDIF
IF $P_MSNUM==0
WRITE(_TEMP,_TEMP_FILE,";$P_MSNUM=0 no spindle existant")
ELSE
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$P_MSNUM])
ENDIF
WRITE(_TEMP,_TEMP_FILE,"_ZSD[1]="<< _ZSD[1]<<" _ZSD[3]="<<_ZSD[3]<<" _ZSD[8]="<<_ZSD[8])
WRITE(_TEMP,_TEMP_FILE,"CYCLE72("<<_KNAME<<","<<_RTP<<","<<_RFP<<","<<_SDIS<<","<<_DP<<","<<_MID<<","<<_FAL<<","<<_FALD<<","<<_FFP1<<","<<_FFD<<","<<_VARI<<","<<_RL<<","<<_AS1<<","<<__LP1<<","<<_FF3<<","<<_AS2<<","<<__LP2<<","<<_UMODE<<","<<_FS<<","<<_ZFS<<","<<_GMODE<<","<<_DMODE<<","<<_AMODE<<")")
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
DIAMCYCOF
IF ($P_GG[30]>1)AND((_RL==41)OR(_RL==42))
COMPOF
ENDIF
_GG10=$P_GG[10]
IF _GG10<2
_GG10=2
ENDIF
_LP1=__LP1 _LP2=__LP2
_LP1=ABS(_LP1) _LP2=ABS(_LP2)
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
_FAK2=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK2=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)OR($P_GG[13]==4)
_FAK2=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
IF(_GMODE _DEC3 == 0)
IF(_ZSD[8]==-1)
_ZZSD[8]=0
ELSE
_ZZSD[8]=_ZSD[8]
ENDIF
ELSE
_ZZSD[8]=_GMODE _DEC3 -1
ENDIF
IF(_ZZSD[8]<0)OR(_ZZSD[8]>1) GOTOF _FEHL21
IF(_ZSD[1]==-1)
_ZZSD[1]=($SCS_FUNCTION_MASK_MILL_SET B_AND 'B100') DIV 4
ELSE
_ZZSD[1]=_ZSD[1]
IF(_ZZSD[1]<0)OR(_ZZSD[1]>1) GOTOF _FEHL20
ENDIF
_DMODE1=_DMODE _DEC1
IF(_DMODE1<0)OR(_DMODE1>3)
GOTOF _FEHL22
ELSE
IF($P_MC)
IF(_DMODE1==0)OR($P_GG[6]==_DMODE1)
ELSE
GOTOF _FEHL23
ENDIF
ELSE
IF((_DMODE1>0)AND($P_GG[6]<>_DMODE1))
G[6]=_DMODE1
ENDIF
ENDIF
ENDIF
_OFFN1=$P_OFFN*_FAK2
_VARI1=_VARI _DEC1
IF(_VARI1 == 5)
_AMODE3=_AMODE _DEC3
IF(_AMODE3<0)OR(_AMODE3>1) GOTOF _FEHL26
IF(_AMODE3==1)
IF(_RTP==_RFP) GOTOF _FEHL3
_PMZ=(_RTP-_RFP)/ABS(_RTP-_RFP)
_DP=_RFP-ABS(_ZFS)*_PMZ
ELSE
_DP=_ZFS
IF (_RFP<>_DP)
_PMZ=(_RFP-_DP)/ABS(_RFP-_DP)
ENDIF
_ZFS=ABS(_RFP-_ZFS) _AMODE3=1
ENDIF
_DPR=ABS(_ZFS)
IF (_RTP<>_RFP) AND (_RFP<>_DP)
IF ((_RFP-_DP)/ABS(_RFP-_DP))<>((_RTP-_RFP)/ABS(_RTP-_RFP)) GOTOF _FEHL3
ELSE
ENDIF
IF(_ZZSD[1]==0)
_MID=ABS(_ZFS)+ABS(_SDIS)
ELSE
_MID=ABS(_ZFS)
ENDIF
_FALD=0 _FAL=_FS
IF(_ZZSD[8]==0)
CYCLE203(1,_FS,_ZFS)
ENDIF
_OFFN=$P_OFFN*_FAK2 _VARI=_VARI-3
ENDIF
IF(_FFP1<=0) GOTOF _FEHL7
IF(_FF3<=0)
_FF3=_FFP1
ENDIF
IF(_FFD<=0)
_FFD=_FFP1
ENDIF
IF(_FF3==0)OR((_VARI _DEC3)==3)
_FF3=_FFP1
ENDIF
IF($P_F_TYPE==1)OR($P_F_TYPE==3)
_S_FFP1="G95 F"<<_FFP1
G95 F=_FFP1
_S_FF3 ="G95 F"<<_FF3
ELSE
IF($P_F_TYPE==11)OR($P_F_TYPE==33)
_WTYP=$P_AD[1]
IF(_WTYP<100)OR(_WTYP>199) GOTOF _FEHL32
_S_FFP1="G95 FZ="<<_FFP1
G95 FZ=_FFP1
_S_FF3 ="G95 FZ="<<_FF3
ELSE
_S_FFP1="G94 F"<<_FFP1
G94 F=_FFP1
_S_FF3 ="G94 F"<<_FF3
ENDIF
ENDIF
IF(_DMODE _DEC2 == 0)
IF(_ZSD[3]==-1)OR(_ZSD[3]==0)
_FFD_TYPE=$P_F_TYPE
ELSE
IF($P_F_TYPE==0)OR($P_F_TYPE==2)
_FFD_TYPE=1
ELSE
_FFD_TYPE=0
ENDIF
ENDIF
ELSE
IF(_DMODE _DEC2 == 1)
_FFD_TYPE=$P_F_TYPE
ELSE
IF($P_F_TYPE==0)OR($P_F_TYPE==2)
_FFD_TYPE=11
ELSE
_FFD_TYPE=0
ENDIF
ENDIF
ENDIF
IF(_FFD_TYPE==1)OR(_FFD_TYPE==3)
_S_FFD="G95 F"<<_FFD
ELSE
IF(_FFD_TYPE==11)OR(_FFD_TYPE==33)
IF (_SC_TEETH==0) GOTOF _FEHL31
_S_FFD="G95 FZ="<<_FFD
_WTYP=$P_AD[1]
IF NOT(((_WTYP<300)AND(_WTYP>199))AND((_AS1 _DEC2==1)AND(_AS2 _DEC2==1)))
IF(_WTYP<100)OR(_WTYP>199) GOTOF _FEHL32
ENDIF
ELSE
_S_FFD="G94 F"<<_FFD
ENDIF
ENDIF
_DMODE4=_DMODE _DEC4
IF ((_DMODE4<0) OR (_DMODE4>1)) GOTOF _FEHL19
IF (((_KNAME<>"") AND (_DMODE4==1)) OR ((_KNAME=="") AND (_DMODE4==0))) GOTOF _FEHL25
IF (_DMODE4==1) GOTOF _CONTNEW62
IH2=STRLEN(_KNAME) IH1=0
FOR II=0 TO IH2
IF SUBSTR(_KNAME,II,1)==":"
IF IH1<>0
GOTOF _M5201
ENDIF
IH1=II
ENDIF
ENDFOR
_M5201:
IF IH1==0 GOTOF _M5202
IF (IH1<>0) AND (II==STRLEN(_KNAME))
_SLA=SUBSTR(_KNAME,0,IH1) _SLE=SUBSTR(_KNAME,IH1+1,IH2-IH1-1)
ELSE
_PNAME=SUBSTR(_KNAME,0,IH1)
_SLA=SUBSTR(_KNAME,IH1+1,II-IH1-1)
_SLE=SUBSTR(_KNAME,II+1,STRLEN(_KNAME)-II-1)
ENDIF
_M5202: GOTOF _ENDCONTNEW
_CONTNEW62:
IF ISVAR("_SC_LAST_CONT")
IF (_SC_LAST_CONT>1)
GOTOF _FEHL9
ELSE
IF (STRLEN(_SC_CONT_NAME[_SC_LAST_CONT-1])>100)
_SERR=<<_SC_CONT_NAME[_SC_LAST_CONT-1]
GOTOF _FEHL33
ENDIF
_PNAME=_SC_CONT_NAME[_SC_LAST_CONT-1]
_SLA=_SC_CONT_LAB1[_SC_LAST_CONT-1]
_SLE=_SC_CONT_LAB2[_SC_LAST_CONT-1]
ENDIF
_SC_FIRST_CONT=0
ELSE
ENDIF
_ENDCONTNEW:
_SDIS=ABS(_SDIS) _MID=ABS(_MID) _FALD=ABS(_FALD) _RL=ABS(_RL) _AS1=ABS(_AS1) _AS2=ABS(_AS2) _VARI=ABS(_VARI)
_DMODE1=_DMODE _DEC1
IF((_DMODE1>0)AND(_DMODE1<4))
G[6]=_DMODE1
ENDIF
_XX=$P_AXN1 _YY=$P_AXN2 _ZZ=$P_AXN3
IF _SC_TOOL_VALI[0]<>0
_ARTIS[0]=_SC_TOOL_VALI[0] _ARTIS[1]=_SC_TOOL_VALI[1] _ARTIS[2]=_SC_TOOL_VALI[2] _ARTIS[3]=_SC_TOOL_VALI[3] _ARTIS[4]=_SC_TOOL_VALI[4] _ARTIS[5]=_SC_TOOL_VALI[5] _ARTIS[6]=_SC_TOOL_VALI[6]
_ARTIS[7]=_SC_TOOL_ON_OFF[0] _ARTIS[8]=_SC_TOOL_ON_OFF[1]
IF (_ARTIS[0] MOD 10 <>1 )
GOTOF _FEHL15
ENDIF
_II=_ARTIS[0] DIV 10
IF ((_II MOD 10 > 3) OR (_II MOD 10 < 1))
GOTOF _FEHL15
ELSE
_ARTIS[11]=_II MOD 10
IF (_ARTIS[3]<>0)
_ARTIS[13]=_ARTIS[1]
ENDIF
IF (_ARTIS[6]<>0)
_ARTIS[14]=_ARTIS[4]
ENDIF
ENDIF
_II=_II DIV 10
IF ((_II MOD 10 > 2) OR (_II MOD 10 < 0))
GOTOF _FEHL15
ELSE
_ARTIS[12]=_II MOD 10
ENDIF
ENDIF
IF($P_ACTFRAME[_ZZ,SC]<>1) GOTOF _FEHL10
IF(_AS1 MOD 10 <> 4)
IF(_LP1==0)
IF($P_GG[13]==2)OR($P_GG[13]==4)
_LP1=_LPM
ELSE
_LP1=_LPI
ENDIF
ENDIF
IF(_LP2==0)
IF($P_GG[13]==2)OR($P_GG[13]==4)
_LP2=_LPM
ELSE
_LP2=_LPI
ENDIF
ENDIF
ENDIF
IF(_RL==40)AND(_AS1 MOD 10 == 1)
_LP1=_LP1+$P_TOOLR*_FAK1 _LP2=_LP2+$P_TOOLR*_FAK1
ENDIF
IF($P_TOOLNO==0) GOTOF _FEHL0
IF($P_TOOL==0) GOTOF _FEHL1
_WR=($P_TOOLR*_FAK1+_OFFN)
IF(_ZZSD[8]==0)
IF((_AS1 MOD 10 == 2)OR(_AS1 == 3))AND(_LP1<=(-_WR)) GOTOF _FEHL17
IF((_AS2 MOD 10 == 2)OR(_AS2 == 3))AND(_LP2<=(-_WR)) GOTOF _FEHL18
ENDIF
_SOWZ=FALSE
_BA1=_VARI _DEC1
_BA10=(_VARI _DEC2) _BA100=(_VARI _DEC3)
_SPIND=(_VARI _DEC4)
_BACK=(_VARI _DEC5)
IF(_BA1<1)OR(_BA1>5)OR(_BA1==3)OR(_BA1==4)OR(_BA100>3)OR(_SPIND>2)OR(_BACK>1) GOTOF _FEHL2
_STCCMA:
_H8=$P_TRAFO
IF ((_SPIND==2) AND (_H8 B_AND 'H300') ) GOTOF _FEHL2
IF(_RL<40) OR (_RL>42) GOTOF _FEHL4
_AS11=_AS1 MOD 10
IF(_AS11<1)OR(_AS11>4) GOTOF _FEHL5
IF(_AS11<4)AND(_AS2 MOD 10 >3) GOTOF _FEHL5
IF(_RL==40)AND((_AS11==2)OR(_AS11==3)) GOTOF _FEHL5
IF(_AS11==4)AND(_RL<>40) GOTOF _FEHL11
IF(TRUNC(_AS1/10)>1) GOTOF _FEHL5
IF(_AS11<4)
IF(TRUNC(_AS2/10)>1) GOTOF _FEHL5
IF(_AS2==10)OR(_AS2 MOD 10 > 3) GOTOF _FEHL5
IF(_AS2==0)
_AS2=_AS1 _LP2=_LP1
ENDIF
IF(_RL==40)AND(_AS2 MOD 10 >1) GOTOF _FEHL5
ENDIF
IF(_RL==40)AND(_VARI MOD 10 == 1)
_FAL=0
ENDIF
IF(_VARI1<>5)
IF(_RTP<>_RFP)
_PMZ=(_RTP-_RFP)/ABS(_RTP-_RFP)
ELSE
IF (_RTP==_RFP) AND (_RFP==_DP) GOTOF _FEHL3
ENDIF
_AMODE1=(_AMODE _DEC1)
IF(_AMODE1<0)OR(_AMODE1>1) GOTOF _FEHL24
IF((_AMODE1==1) AND ($P_SUBPAR[5]==0)) GOTOF _FEHL29
IF(_AMODE1==1)
_DP=ABS(_DP)
IF _DP
_DPR=ABS(_DP)
_DP=_RFP-_DP*_PMZ
ELSE
GOTOF _FEHL30
ENDIF
ELSE
_DPR=ABS(_RFP-_DP)
IF (_RFP<>_DP)
_PMZ= (_RFP-_DP)/ABS(_RFP-_DP)
ENDIF
ENDIF
IF (_RFP<>_DP) AND (_RTP<>_RFP)
IF (_RTP-_RFP)/ABS(_RTP-_RFP) <> (_RFP-_DP)/ABS(_RFP-_DP) GOTOF _FEHL3
ENDIF
ENDIF
IF(_RFP==_DP) GOTOF _RET
IF(_RFP==_RTP)
_RTP=_RFP+_SDIS*_PMZ
ENDIF
IF(_PMZ==1)
IF((_RFP+_SDIS) > _RTP) GOTOF _FEHL12
ELSE
IF((_RFP-_SDIS) < _RTP) GOTOF _FEHL12
ENDIF
IF($P_EP[_ZZ]*_FAK1<_RTP)AND(_ZZSD[8]==0)
N4 SBLON
N5 G0 G90 AX[_ZZ]=_RTP
N6 SBLOF
ENDIF
IF(_ZZSD[1]==0)
_SDZ=_SDIS
ELSE
_SDZ=0
ENDIF
IF(_BA1==2)
_FALD=0 _FAL=0
ENDIF
IF(_FALD>=_DPR) GOTOF _FEHL8
_DPA=_DPR-_FALD
IF(_MID>=_DPA)OR(_MID==0)
_MID=_DPA+_SDZ
ENDIF
_HZ=(_DPA+_SDZ)/_MID+0.4999
_HEZ=(_DPA+_SDZ)/_HZ
_ZV[1]=0 _G15T=3
IF ((_ZSD[3])AND($P_GG[15]==3))OR((_ZSD[3]==0)AND($P_GG[15]==2) OR ($P_GG[15]==8))
_ZV[1]=1 _G15T=2
ENDIF
IF(_AS11==4)OR(_BACK)OR(_ZZSD[8]==1)
IF($P_GG[49]==3)
CP
_P49=3
ENDIF
IF ($AN_NCK_VERSION<510300)OR(_BACK)
N398 CONTDCON(_KTS)
ELSE
N399 CONTDCON(_KTS,1)
ENDIF
IF ((_PNAME=="") AND (_SLA=="") AND (_SLE==""))
N400 CALL _KNAME
ELSE
IF (_PNAME=="")
N402 CALL $P_PROG[$P_STACK-1] BLOCK _SLA TO _SLE
ELSE
IF ((_SLA=="") AND (_SLE==""))
N404 CALL _PNAME
ELSE
N405 CALL _PNAME BLOCK _SLA TO _SLE
ENDIF
ENDIF
ENDIF
N406 EXECUTE(_ERROR)
IF(_ERROR)GOTOF _FEHL14
IF(_P49==3)
PTPG0
ENDIF
ENDIF
IF(_ZZSD[8]==1)
IF(NOT _BACK)
_Z1=1 _Z2=_Z1+1
_XXS=_KTS[_Z1,1] _YYS=_KTS[_Z1,2]
IF((_KTS[_Z2,0]MOD 10)<=1)
_ALPHA=ATAN2(_KTS[_Z2,2]-_KTS[_Z1,2],_KTS[_Z2,1]-_KTS[_Z1,1])
ELSE
_ALPHA=ATAN2(_KTS[_Z2,4]-_KTS[_Z1,2],_KTS[_Z2,3]-_KTS[_Z1,1])
IF((_KTS[_Z2,0]MOD 10)==2)
_ALPHA=_ALPHA+90
ELSE
_ALPHA=_ALPHA-90
ENDIF
ENDIF
ELSE
_Z1=_KTS[0,5] _Z2=_Z1-1
_XXS=_KTS[_KTS[0,5],1] _YYS=_KTS[_KTS[0,5],2]
IF((_KTS[_Z1,0]MOD 10)<=1)
_ALPHA=ATAN2(_KTS[_Z2,2]-_KTS[_Z1,2],_KTS[_Z2,1]-_KTS[_Z1,1])
ELSE
_ALPHA=ATAN2(_KTS[_Z1,4]-_KTS[_Z1,2],_KTS[_Z1,3]-_KTS[_Z1,1])
IF((_KTS[_Z1,0]MOD 10)==2)
_ALPHA=_ALPHA-90
ELSE
_ALPHA=_ALPHA+90
ENDIF
ENDIF
ENDIF
IF(_AS11==4)
_XAP=_XXS
_YAP=_YYS
ELSE
IF(_RL==40)
_XAP=_XXS-_LP1*COS(_ALPHA)
_YAP=_YYS-_LP1*SIN(_ALPHA)
ELSE
IF(_RL==41)
_VORZ=1
ELSE
_VORZ=-1
ENDIF
IF((_AS1 MOD 10)==3)
_XAP=_XXS-_VORZ*(_WR+_FAL+2*_LP1)*SIN(_ALPHA)
_YAP=_YYS+_VORZ*(_WR+_FAL+2*_LP1)*COS(_ALPHA)
ELSE
IF((_AS1 MOD 10)==1)
_XAP=_XXS-(_LP1+_WR)*COS(_ALPHA)-_VORZ*(_WR+_FAL)*SIN(_ALPHA)
_YAP=_YYS-(_LP1+_WR)*SIN(_ALPHA)+_VORZ*(_WR+_FAL)*COS(_ALPHA)
ELSE
_XAP=_XXS-_VORZ*(_WR+_FAL+_LP1)*SIN(_ALPHA)-_LP1*COS(_ALPHA)
_YAP=_YYS+_VORZ*(_WR+_FAL+_LP1)*COS(_ALPHA)-_LP1*SIN(_ALPHA)
ENDIF
ENDIF
ENDIF
ENDIF
GOTOF _M_ST_POS
ENDIF
IF(_AS11==4)
IF(_ZZSD[3]==1)
IF(_G15T==3)
_G15K=2
ELSE
_G15K=3
ENDIF
ELSE
_G15K=_G15T
ENDIF
IF(NOT _BACK)
_XXS=_KTS[1,1] _YYS=_KTS[1,2]
ELSE
_XXS=_KTS[_KTS[0,5],1] _YYS=_KTS[_KTS[0,5],2]
ENDIF
ENDIF
IF(_SPIND==2)
N410 CUST_TECHCYC(_UMODE)
_H11=1
ENDIF
FOR _IZ=1 TO _HZ
IF _SOWZ==TRUE
_IZ=_HZ
ENDIF
IF (_ARTIS[11]==3)
_ARTIS[10]=_ARTIS[10]+1
IF (_ARTIS[6]<>0)
IF (_ARTIS[10]==_ARTIS[14])
_ARTIS[4]=_ARTIS[14] _ARTIS[5]=_ARTIS[14]
IF (_ARTIS[14]+_ARTIS[6]<=_SC_TOOL_VALI[5])
_ARTIS[14]=_ARTIS[14]+_ARTIS[6]
ENDIF
ENDIF
ELSE
IF ((_SC_TOOL_VALI[4]<=_ARTIS[10]) AND (_ARTIS[10]<=_SC_TOOL_VALI[5]))
_ARTIS[4]=_ARTIS[10] _ARTIS[5]=_ARTIS[10]
ENDIF
ENDIF
ENDIF
IF(_BA1==1)AND(_HZ>1)
IF(_IZ==1)
ENDIF
IF(_IZ==_HZ)
ENDIF
ENDIF
IF(_BA10==0)
_GZW=1
N430 G0 G90 G[10]=_GG10
ELSE
_GZW=2
EXECSTRING(_S_FF3)
N435 G1 G90 G[10]=_GG10
ENDIF
_DPZ=_DP+(_DPR+_SDZ-_IZ*_HEZ)*_PMZ
IF _ZSD[1]==0
_DIS1=_HEZ*_PMZ
ELSE
_DIS1=(_HEZ+_SDIS)*_PMZ
ENDIF
IF(ABS(_DIS1)>ABS(_RTP-_DPZ))
_DIS1=ABS(_RTP-_DPZ)*_PMZ
ENDIF
IF(_IZ>1)
IF(_BA100==1)
IF(_PMZ==1)
IF((_DPZ+_DIS1)>(_RFP+_SDIS*_PMZ))
_DIS1=((_RFP+_SDIS*_PMZ)-_DPZ)
ENDIF
ELSE
IF((_DPZ+_DIS1)<(_RFP+_SDIS*_PMZ))
_DIS1=((_RFP+_SDIS*_PMZ)-_DPZ)
ENDIF
ENDIF
ENDIF
IF(_BA100==3)
_DIS1=_HEZ*_PMZ
ENDIF
ENDIF
IF(_AS11<>4)
IF(_BA1==1) AND (_RL<>40)
CFTCP
ENDIF
IF($P_GG[1]==1)AND($P_GG[49]==3)AND($P_TRAFO B_AND 'H100')AND(_IZ>1)
IF(_RL==40)
_XAP=$P_APR[_XX]
_YAP=$P_APR[_YY]
ELSE
IF((_AS1 MOD 10)==3)
_L=(_WR+_FAL)/(2*(_FAL+_LP1+_WR))
_XAP=$P_APR[_XX]-($P_APR[_XX]-$P_AEP[_XX])*_L
_YAP=$P_APR[_YY]-($P_APR[_YY]-$P_AEP[_YY])*_L
ELSE
IF(_RL==41)
_VORZ=1
ELSE
_VORZ=-1
ENDIF
IF((_AS1 MOD 10)==1)
_ALPHA=ATAN2(($P_APR[_YY]-$P_AEP[_YY]),($P_APR[_XX]-$P_AEP[_XX]))
_XAP=$P_APR[_XX]+(_WR+_FAL)*SIN(_ALPHA)*_VORZ
_YAP=$P_APR[_YY]-(_WR+_FAL)*COS(_ALPHA)*_VORZ
ELSE
_ALPHA=ATAN2(($P_APR[_YY]-$P_AEP[_YY]),($P_APR[_XX]-$P_AEP[_XX]))
_XAP=$P_APR[_XX]-(_WR+_FAL)*SIN(45-_ALPHA*_VORZ)
_YAP=$P_APR[_YY]-(_WR+_FAL)*COS(45-_ALPHA*_VORZ)*_VORZ
ENDIF
ENDIF
ENDIF
N21 G0 AX[_XX]=_XAP AX[_YY]=_YAP
ENDIF
IF(_RL==40)
N18 _CMD="G140 G40"
GOTOF _MAN
ELSE
IF(_BA1==1)
N19 OFFN=_OFFN1+_FAL
ENDIF
NORM
IF(_RL==41)
N20 _CMD="G140 G41"
ELSE
N30 _CMD="G140 G42"
ENDIF
ENDIF
_MAN:
_CMD="N35 "<<_CMD<<" G34"<<1-(_AS1 _DEC2)
_CMD=_CMD<<" G"<<_AS1 _DEC1<<"47"
_CMD=_CMD<<" AX[_ZZ]="<<_DPZ<<" DISR="<<_LP1<<" DISCL="<<_DIS1
_CMD=_CMD<<" "<<_S_FFP1
IF(_AS1 _DEC2 == 0)
IF(_FFD_TYPE==1)OR(_FFD_TYPE==3)
_CMD=_CMD<<" FAD=PR("<<_FFD<<")"
ELSE
IF(_FFD_TYPE==0)OR(_FFD_TYPE==2)
_CMD=_CMD<<" FAD=PM("<<_FFD<<")"
ELSE
IF(_SC_TEETH==0) GOTOF _FEHL31
_CMD=_CMD<<" FAD=PZ("<<_FFD<<")"
ENDIF
ENDIF
ENDIF
N32 SBLON
N35 EXECSTRING(_CMD)
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[4])
M=QU(_ARTIS[7])
ENDIF
ENDIF
N34 SBLOF
IF(NOT _BACK)
IF ((_PNAME=="") AND (_SLA=="") AND (_SLE==""))
N91 CALL _KNAME
ELSE
IF (_PNAME=="")
N92 CALL $P_PROG[$P_STACK-1] BLOCK _SLA TO _SLE
ELSE
IF ((_SLA=="") AND (_SLE==""))
N93 CALL _PNAME
ELSE
N93 CALL _PNAME BLOCK _SLA TO _SLE
ENDIF
ENDIF
ENDIF
ELSE
_BACK_1:
_I_MAX=_KTS[0,5]
G0 AX[_XX]=_KTS[_I_MAX,1] AX[_YY]=_KTS[_I_MAX,2]
_I=_I_MAX
WHILE(_I>1)
IF((_KTS[_I,0]MOD 10)>=2)
_CMD="G"<<5-(_KTS[_I,0]MOD 10)
ELSE
_CMD="G"<<_KTS[_I,0]MOD 10
ENDIF
_CMD=_CMD<<" "<<AXSTRING(_XX)<<"="<<_KTS[_I-1,1]<<" "<<AXSTRING(_YY)<<"="<<_KTS[_I-1,2]
IF((_KTS[_I,0]MOD 10)>=2)
_CMD=_CMD<<" IP["<<AXSTRING(_XX)<<"]=AC("<<_KTS[_I,3]<<") IP["<<AXSTRING(_YY)<<"]=AC("<<_KTS[_I,4]<<")"
ENDIF
IF(_KTS[_I,5])
IF($P_F_TYPE==11)OR($P_F_TYPE==33)
_CMD=_CMD<<" FZ="<<_KTS[_I,5]
ELSE
_CMD=_CMD<<" F="<<_KTS[_I,5]
ENDIF
ENDIF
EXECSTRING(_CMD)
_I=_I-1
ENDWHILE
_BACK_2:
ENDIF
IF(_BA100==0)
_WEZ=_RTP
IF(_AS2<10)
_DIS2=_RDF*_PMZ
ELSE
_DIS2=(_HEZ+_SDIS)*_PMZ
IF(_PMZ==1)
IF((_DPZ+_DIS2)>_WEZ)
_DIS2=_WEZ-_DPZ
ENDIF
ELSE
IF((_DPZ+_DIS2)<_WEZ)
_DIS2=_WEZ-_DPZ
ENDIF
ENDIF
ENDIF
ENDIF
IF(_BA100==1)
_WEZ=_RFP+_SDIS*_PMZ+_RDF*_PMZ
IF(_AS2<10)
_DIS2=_RDF*_PMZ
ELSE
_DIS2=(_HEZ+_SDIS)*_PMZ
IF(_PMZ==1)
IF((_DPZ+_DIS2)>_WEZ)
_DIS2=_WEZ-_DPZ
ENDIF
ELSE
IF((_DPZ+_DIS2)<_WEZ)
_DIS2=_WEZ-_DPZ
ENDIF
ENDIF
ENDIF
ENDIF
IF(_BA100==2)
_WEZ=_DPZ+_SDIS*_PMZ+_RDF*_PMZ _DIS2=_SDIS*_PMZ
ENDIF
IF(_BA100==3)
_WEZ=_DPZ+_RDF*_PMZ _DIS2=0 _BA10=1
ENDIF
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
_CMD="N100 G34"<<1-(_AS2 _DEC2)
_CMD=_CMD<<" G"<<_AS2 _DEC1<<"48"
_CMD=_CMD<<" G90 G40 AX[_ZZ]="<<_WEZ<<" DISR="<<_LP2<<" DISCL="<<_DIS2
IF(_BA10==0)AND(_BA100<>3)
ELSE
IF(_BA100==3)
_CMD=_CMD<<" "<<_S_FFP1
ELSE
_CMD=_CMD<<" "<<_S_FF3
ENDIF
ENDIF
N94 SBLON
IF(_BA10==0)AND(_BA100<>3)
N95 G0
ELSE
N140 G1
ENDIF
N100 EXECSTRING(_CMD)
N176 SBLOF
ELSE
IF(_GZW==2)
EXECSTRING(_S_FF3)
ENDIF
SBLON
N200 AX[_XX]=_XXS AX[_YY]=_YYS
SBLOF
IF((_SPIND==1)AND(_BA1==1))
N202 CUST_TECHCYC(_UMODE)
_H10=1
ENDIF
SBLON
N205 AX[_ZZ]=_DPZ+_DIS1
SBLOF
EXECSTRING(_S_FFD)
N210 G1 AX[_ZZ]=_DPZ
IF(_H10==1)
N215 CUST_TECHCYC(_UMODE+1)
_H10=0
ENDIF
EXECSTRING(_S_FFP1)
IF(NOT _BACK)
IF ((_PNAME=="") AND (_SLA=="") AND (_SLE==""))
N220 CALL _KNAME
ELSE
IF (_PNAME=="")
N225 CALL $P_PROG[$P_STACK-1] BLOCK _SLA TO _SLE
ELSE
IF ((_SLA=="") AND (_SLE==""))
N230 CALL _PNAME
ELSE
N230 CALL _PNAME BLOCK _SLA TO _SLE
ENDIF
ENDIF
ENDIF
ELSE
REPEAT _BACK_1 _BACK_2
ENDIF
IF(_BA100==0)
_WEZ=_RTP
ENDIF
IF(_BA100==1)
_WEZ=_RFP+_SDIS*_PMZ
ENDIF
IF(_BA100==2)
_WEZ=_DPZ+_SDIS*_PMZ
ENDIF
IF(_BA100==3)
_WEZ=_DPZ _GZW=2 _BA10=1
ENDIF
IF(_GZW==1)AND(_BA100<>3)
N235 G0
ELSE
N236 G1
N240 EXECSTRING(_S_FFP1)
ENDIF
IF (_ARTIS[11]==3)
IF (_ARTIS[10]==_ARTIS[5])
M=QU(_ARTIS[8])
ENDIF
ENDIF
SBLON
N250 G90 G40 AX[_ZZ]=_WEZ
SBLOF
ENDIF
ENDFOR
IF (_ARTIS[1]<>0)
M=QU(_ARTIS[8])
ENDIF
N298 SBLON
N300 G0 AX[_ZZ]=_RTP
N310 AX[_XX]=IC(0) AX[_YY]=IC(0)
N312 SBLOF
IF((_SPIND==2)AND(_H11==1))
N320 CUST_TECHCYC(_UMODE+1)
_H11=0
ENDIF
_RET:
IF(_ZZSD[8]==0)
OFFN=_OFFN1
ENDIF
SBLON
RET
_M_ST_POS:
$AC_MEAS_VALID=0
$AC_MEAS_TYPE=24
$AC_MEAS_P1_COORD=0
$AC_MEAS_P2_COORD=1
$AA_MEAS_POINT1[_XX]=_XAP
$AA_MEAS_POINT1[_YY]=_YAP
$AA_MEAS_POINT1[_ZZ]=_RFP+_SDIS*_PMZ
_ERR=MEASURE()
_SC_POS[3]=SQRT(ABS(POT($AA_MEAS_POINT2[_XX])+POT($AA_MEAS_POINT2[_YY])))
_SC_POS[0]=_XAP
_SC_POS[1]=_YAP
_SC_POS[2]=_RFP+_SDIS*_PMZ
RET
_FEHL0: STOPRE
N707200 SETAL(61009)
RET
_FEHL1: STOPRE
N707201 SETAL(61000)
RET
_FEHL2: STOPRE
N707202 SETAL(61002)
RET
_FEHL3: STOPRE
N707203 SETAL(61101)
RET
_FEHL4: STOPRE
N707204 SETAL(61114)
RET
_FEHL5: STOPRE
N707205 SETAL(61115)
RET
_FEHL6: STOPRE
N707206 SETAL(61116)
RET
_FEHL7: STOPRE
N707207 SETAL(61003)
RET
_FEHL8: STOPRE
N707208 SETAL(61010)
RET
_FEHL9:STOPRE
N707209 SETAL(61914)
RET
_FEHL10: STOPRE
N707210 SETAL(61011)
RET
_FEHL11: STOPRE
N707211 SETAL(61129)
RET
_FEHL12: STOPRE
N707212 SETAL(61014)
RET
_FEHL13:STOPRE
N707213 SETAL(61027,"CUST_TECHCYC")
RET
_FEHL14:STOPRE
N707214 SETAL(61606)
RET
_FEHL15:
N707215 SETAL(62106)
RET
_FEHL17: STOPRE
N707217 SETAL(61223)
RET
_FEHL18: STOPRE
N707218 SETAL(61224)
RET
_FEHL19: STOPRE
N707219 SETAL(61019,"(_DMODE: dec4)")
RET
_FEHL20: STOPRE
N707220 SETAL(61156)
RET
_FEHL21: STOPRE
N707221 SETAL(61019,"(_GMODE: dec3/_ZSD[8])")
RET
_FEHL22: STOPRE
N707222 SETAL(61158)
RET
_FEHL23: STOPRE
N707223 SETAL(61159)
RET
_FEHL24: STOPRE
N707224 SETAL(61019,"(_AMODE: dec1)")
RET
_FEHL25: STOPRE
N707225 SETAL(61019,"(_DMODE: dec4/_KNAME)")
RET
_FEHL26: STOPRE
N707226 SETAL(61019,"(_AMODE: dec3)")
RET
_FEHL29: STOPRE
N707229 SETAL(61019,"(_AMODE: dec1/DP)")
RET
_FEHL30: STOPRE
N707230 SETAL(61019,"(_AMODE: dec1/DP)")
RET
_FEHL31: STOPRE
N707231 SETAL(61218)
RET
_FEHL32: STOPRE
N707232 SETAL(61216)
RET
_FEHL33: STOPRE
N707233 SETAL(61029,_SERR)
RET
