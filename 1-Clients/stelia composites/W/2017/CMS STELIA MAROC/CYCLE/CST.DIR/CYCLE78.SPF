PROC CYCLE78(REAL _RTP,REAL _RFP,REAL _SDIS,REAL __DP,REAL _ADPR,REAL _FDPR,REAL __LDPR,REAL _DIAM,REAL _PIT,INT _PITA,REAL __DAM,REAL _MDEP,INT _VARI,INT _CDIR,REAL _GE,REAL _FFD,REAL _FRDP,REAL __FFR,REAL __FFP2,INT _FFA,STRING[15] _PITM,STRING[20] _PTAB,STRING[20] _PTABA,INT _GMODE,INT _DMODE,INT _AMODE) SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.43.00 ;DATE: 2013-01-21
;Cycle support HMIsl
;Drill and thread milling
DEF REAL _DV1,_DV2,_DV3,_DV6,_DV7,_DV9,_FAK3,_SKX,_SKY,_SKZ,_FFD_R
DEF REAL _DV10,_DV11,_WR,_DV12,_DV13,_DV14,_DV16,_DV17,_DP,_DPR,_LDPR
DEF REAL _DV19,_FAK1,_RST,_HH5,_HH8,_FFR,_FFP2,_DAM
DEF INT TNummer,_DNUM,_RICH,_MIRR,_PD,_CRM,_SRDP,_MILL,_WTYP,_GG10
DEF INT _TEPA=0
DEF INT _AMODE1,_AMODE2,_DMODE1,_VARS,_VARI5,_VARI2,_VARI3,_VARI4,_ZAE,_TYP,_HH1
DEF AXIS _X, _Y, _Z
DEF INT _TEMP,_SDIR
DEF STRING[30] _S_FFD,_S_FFD_R,_S_FRDP,_S_FFR,_S_FFR_25,_S_FFP2,_S_FFP2_25
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE78_MPF"
DEF FRAME _RE_CYCFR
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE78_MPF")
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,";! only for internal diagnostics ! Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T-Number $P_TOOLNO="<<$P_TOOLNO)
WRITE(_TEMP,_TEMP_FILE,";D-Number $P_TOOL="<<$P_TOOL)
IF (($P_TOOL)AND($P_TOOLNO))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$P_AD[1]<<"    ; Tool type")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$P_AD[2]<<"    ; Cutting edge position")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$P_AD[6]<<"    ; Tool geo radius")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP15[1,1]="<<$P_AD[15]<<"    ; Tool wear radius")
IF (($P_AD[1]>=200) AND ($P_AD[1]<300))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP24[1,1]="<<$P_AD[24]<<"    ; Tool tip angle")
ENDIF
IF (($P_AD[1]>=100) AND ($P_AD[1]<200))
IF ($P_AD[1]<>145)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP11[1,1]="<<$P_AD[11]<<"    ; Tool angle")
ENDIF
WRITE(_TEMP,_TEMP_FILE,";$TC_DP35[1,1]="<<$P_AD[35]<<"    ; Number of teeth")
ENDIF
IF ($P_AD[1]==140)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP7[1,1]="<<$P_AD[7]<<"   ; Outside radius ")
ENDIF
IF ($P_AD[1]==240)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP9[1,1]="<<$P_AD[9]<<"   ; Thread pitch")
ENDIF
ENDIF
IF ($P_TOOLNO>0)
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
ELSE
WRITE(_TEMP,_TEMP_FILE,";T0")
WRITE(_TEMP,_TEMP_FILE,";M6")
ENDIF
IF ($P_TOOL==0)
WRITE(_TEMP,_TEMP_FILE,";D0")
ELSE
WRITE(_TEMP,_TEMP_FILE,";D1")
ENDIF
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19")
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...")
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...")
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/... $P_F_TYPE="<<$P_F_TYPE)
IF($P_F_TYPE==11)OR($P_F_TYPE==33)
WRITE(_TEMP,_TEMP_FILE,"FZ="<<$P_FZ)
ELSE
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F)
ENDIF
IF $P_MSNUM==0
WRITE(_TEMP,_TEMP_FILE,";$P_MSNUM=0 no spindle existant")
ELSE
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$P_MSNUM])
ENDIF
WRITE(_TEMP,_TEMP_FILE,"CYCLE78("<<_RTP<<","<<_RFP<<","<<_SDIS<<","<<__DP<<","<<_ADPR<<","<<_FDPR<<","<<__LDPR<<","<<_DIAM<<","<<_PIT<<","<<_PITA<<","<<__DAM<<","<<_MDEP<<","<<_VARI<<","<<_CDIR<<","<<_GE<<","<<_FFD<<","<<_FRDP<<","<<__FFR<<","<<__FFP2<<","<<_FFA<<","<<_PITM<<","<< _PTAB<<","<<_PTABA<<","<<_GMODE<<","<<_DMODE<<","<<_AMODE<<")")
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
IF ($P_TRAFO B_AND 'H201')=='H201'
GOTOF _FEHL31
ENDIF
IF ($P_TRAFO B_AND 'H202')=='H202'
IF ($P_TRAFO_PAR[1]==1) GOTOF _FEHL32
ENDIF
DIAMCYCOF
IF ($P_GG[30]>1)
COMPOF
ENDIF
_GG10=$P_GG[10]
IF _GG10<2
_GG10=2
ENDIF
_VARS=_PITA _DAM=__DAM _FFR=__FFR _FFP2=__FFP2 _DP=__DP _LDPR=__LDPR
_DPR=ABS(_DPR) _FDPR=ABS(_FDPR) _SDIS=ABS(_SDIS) _VARI=ABS(_VARI)
_FFA=ABS(_FFA) _FFD=ABS(_FFD) _FRDP=ABS(_FRDP) _FFR=ABS(_FFR)
_FFP2=ABS(_FFP2)
IF(_FFD<=0)OR(_FFR<=0)GOTOF _FEHL6
IF(_FFA _DEC1 == 0)
_S_FFD="G94 F"<<_FFD
ELSE
_S_FFD="G95 F"<<_FFD
ENDIF
IF(_TEPA==0)
IF(_FFA _DEC1 == 0)
IF(_FFD<(0.15*($P_S[$P_MSNUM])))
_FFD_R=0.3*_FFD
ELSE
_FFD_R=($P_S[$P_MSNUM])*0.1
ENDIF
ELSE
IF(_FFD<0.15)
_FFD_R=0.3*_FFD
ELSE
_FFD_R=0.1
ENDIF
ENDIF
ELSE
_FFD_R=0.3*_FFD
ENDIF
IF(_FFA _DEC1 == 0)
_S_FFD_R="G94 F"<<_FFD_R
ELSE
_S_FFD_R="G95 F"<<_FFD_R
ENDIF
IF(_VARI _DEC4 == 0)
IF(_TEPA==0)
IF(_FFA _DEC2 == 0)
_FRDP=0.1*($P_S[$P_MSNUM])
ELSE
_FRDP=0.1
ENDIF
ENDIF
ENDIF
IF(_FFA _DEC2 == 0)
_S_FRDP="G94 F"<<_FRDP
ELSE
_S_FRDP="G95 F"<<_FRDP
ENDIF
IF(_FFA _DEC3 == 0)
_S_FFR="G94 F"<<_FFR
_S_FFR_25="G94 F"<<_FFR*2.5
ELSE
_WTYP=$P_AD[1]
IF(_WTYP<100)OR(_WTYP>199) GOTOF _FEHL42
_S_FFR="G95 FZ="<<_FFR
_S_FFR_25="G95 FZ="<<_FFR*2.5
ENDIF
IF(_FFA _DEC4 == 0)
_S_FFP2="G94 F"<<_FFP2
_S_FFP2_25="G94 F"<<_FFP2*2.5
ELSE
_WTYP=$P_AD[1]
IF(_WTYP<100)OR(_WTYP>199) GOTOF _FEHL42
_S_FFP2="G95 FZ="<<_FFP2
_S_FFP2_25="G95 FZ="<<_FFP2*2.5
ENDIF
_SDIR=$P_SDIR[$P_MSNUM]
IF(_SDIR<3) OR (_SDIR>4) GOTOF _FEHL15
_RE_CYCFR=$P_CYCFRAME
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
IF($P_GG[13]==1)OR($P_GG[13]==3)
_FAK3=1/$MN_SCALING_VALUE_INCH
ELSE
_FAK3=1
ENDIF
_DMODE1=_DMODE _DEC1
IF(_DMODE1<0)OR(_DMODE1>3)
GOTOF _FEHL22
ELSE
IF($P_MC)
IF(_DMODE1==0)OR($P_GG[6]==_DMODE1)
ELSE
GOTOF _FEHL23
ENDIF
ELSE
IF((_DMODE1>0)AND($P_GG[6]<>_DMODE1))
G[6]=_DMODE1
ENDIF
ENDIF
ENDIF
_X=$P_AXN1 _Y=$P_AXN2 _Z=$P_AXN3
_SKX=$P_ACTFRAME[_X,SC] _SKY=$P_ACTFRAME[_Y,SC] _SKZ=$P_ACTFRAME[_Z,SC]
$P_CYCFRAME=$P_CYCFRAME:CSCALE(_X,1/_SKX,_Y,1/_SKY,_Z,1/_SKZ)
_AMODE1=(_AMODE _DEC1)
IF(_AMODE1<0)OR(_AMODE1>1) GOTOF _FEHL24
_AMODE2=(_AMODE _DEC2)
IF(_AMODE2<0)OR(_AMODE2>1) GOTOF _FEHL25
IF(_AMODE1==0)
_DPR=0
ELSE
_DPR=ABS(_DP)
_DP=0
ENDIF
_VARI5 = _VARI _DEC5 _VARI2 = _VARI _DEC2
_VARI3 = _VARI _DEC3 _VARI4 = _VARI _DEC4
IF (_VARI5<0) OR (_VARI5>1) GOTOF _FEHL33
IF (_VARI2<0) OR (_VARI2>1) GOTOF _FEHL34
IF (_VARI3<0) OR (_VARI3>1) GOTOF _FEHL35
IF (_VARI4<0) OR (_VARI4>1) GOTOF _FEHL36
IF (_AMODE2==1)
IF (_DAM>0)
_DAM=-(ABS(_DAM))/100
ENDIF
ENDIF
IF (_AMODE2==0)
_DAM=ABS(_DAM)
ENDIF
IF _DAM<-1 GOTOF _FEHL37
_MILL=_CDIR MOD 10
_PD=_VARI5 _CRM=_VARI2 _SRDP=_VARI4 _RICH=_VARI3
IF(_RICH>1) GOTOF _FEHL10
IF _DP==0
IF(_RTP==_RFP)GOTOF _FEHL11
_HH1=(_RTP-_RFP)/ABS(_RTP-_RFP)
ELSE
_HH1=(_RFP-_DP)/ABS(_RFP-_DP)
IF (_RTP==_RFP)
_RTP=_RFP+_SDIS*_HH1
ENDIF
ENDIF
IF _DPR==0
_DPR=(_RFP-_DP)*_HH1
IF _DPR==0 GOTOF _FEHL30
IF NOT(_RTP==_RFP)
IF (((_RTP-_RFP)/ABS(_RTP-_RFP))<>_HH1) GOTOF _FEHL11
ENDIF
ENDIF
_DV12=_DAM
IF(_DAM==0)
_DAM=_DPR
ENDIF
IF(_VARS<1) OR (_VARS>4) GOTOF _FEHL9
IF(_VARS==1)
_RST=_PIT
ENDIF
IF(_VARS==2)
_RST=$MN_SCALING_VALUE_INCH/_PIT
ENDIF
IF(_VARS==3)
_RST=$MN_SCALING_VALUE_INCH*_PIT
ENDIF
IF(_VARS==4)
_RST=_PIT*$PI
ENDIF
_RST=_RST*_FAK3
IF($P_TOOL>0)
_TYP=$P_AD[1]
IF(_TYP<>160) GOTOF _FEHL39
ELSE
GOTOF _FEHL3
ENDIF
_MIRR=$P_ACTFRAME[_X,MI]+$P_ACTFRAME[_Y,MI]
IF $P_ACTFRAME[_Z,MI]==1
IF ($P_GG[22]<>2) GOTOF _FEHL41
_MIRR=ABS(_MIRR-1)
ENDIF
_DV1=_DIAM/2
_DV13=_RFP+_SDIS*_HH1
_DV14=_RST*0.15
_DNUM=$P_TOOL
IF(_DNUM==0) GOTOF _FEHL1
TNummer=$P_TOOLNO
IF (TNummer==0) GOTOF _FEHL3
_WR=(($P_AD[6])+($P_AD[15]))*_FAK1
IF(_WR<0.75*_DV1) GOTOF _FEHL2
IF(_WR>=_DIAM/2) GOTOF _FEHL7
IF(_SRDP>1) GOTOF _FEHL10
IF(_SRDP==0)
_LDPR=0.0
ELSE
IF(_LDPR==0.0) GOTOF _FEHL5
ENDIF
IF(_FDPR>_DPR)
_FDPR=_DPR
ENDIF
_DV6=_FDPR
_DV11=1.3*_RST+(_DV1-_WR)+_GE
IF(_CDIR==0)
_DV11=_RST/3+_GE
ENDIF
_DV2=_DPR-_DV11
_DV3=_DV1+_WR
IF(_PD>1) GOTOF _FEHL10
IF(_PD==1)
_DV9=_ADPR
ELSE
_DV9=0
ENDIF
_DV19=_DAM
CFC
SBLON
G0 G90 NORM AX[_Z]=_DV13
SBLOF
IF(_PD==1)
IF(_FDPR>0)
IF(_DV9>_FDPR)
_DV9=_FDPR
ENDIF
ENDIF
GOTOF LevelPD
ELSE
GOTOF LevelOPD
ENDIF
LevelPD:
EXECSTRING(_S_FFD_R)
G1 G60 G91 AX[_Z]=-(_DV9+_SDIS)*_HH1
IF(_FDPR>(_DPR-_LDPR))
EXECSTRING(_S_FFD)
AX[_Z]=-(_DPR-_LDPR-_DV9)*_HH1
EXECSTRING(_S_FRDP)
AX[_Z]=-(_FDPR-(_DPR-_LDPR))*_HH1
ELSE
EXECSTRING(_S_FFD)
AX[_Z]=-(_FDPR-_DV9)*_HH1
ENDIF
GOTOF LevelWeiter
LevelOPD:
IF (_FDPR>(_DPR-_LDPR))
EXECSTRING(_S_FFD)
G1 G60 G91 AX[_Z]=-(_DPR-_LDPR+_SDIS)*_HH1
EXECSTRING(_S_FRDP)
AX[_Z]=-(_FDPR-(_DPR-_LDPR))*_HH1
ELSE
_DV6=_FDPR+_SDIS
EXECSTRING(_S_FFD)
G1 G60 G91 AX[_Z]=-(_FDPR+_SDIS)*_HH1
ENDIF
LevelWeiter:
IF(_DAM>=0) AND (_FDPR<_DPR)
IF(_PD==0) AND (_DV12>0)
_DV6=_DV6-_SDIS
ENDIF
WHILE _DV6<_DPR
IF(_PD==1) OR (_DV12>0)
SBLON
G0 AX[_Z]=+_DV6*_HH1
AX[_Z]=-(_DV6-1.0*_FAK3)*_HH1
SBLOF
ELSE
IF(_FDPR>0)
SBLON
G0 AX[_Z]=+(_DV6-_SDIS)*_HH1
AX[_Z]=-((_DV6-1.0*_FAK3)+_SDIS)*_HH1
SBLOF
_DV6=_DV6-1*_FAK3
ENDIF
ENDIF
_DV7=_DV6
_DV6=(_DV6+_DV19)
IF(_DV6>_DPR)
_DV6=_DPR
_DV19=(_DPR-_DV7)
ENDIF
IF(_DV6>(_DPR-_LDPR))
IF(_DV7<(_DPR-_LDPR))
EXECSTRING(_S_FFD)
N40G1 AX[_Z]=-((_DPR-_LDPR)-_DV7+1.0*_FAK3)*_HH1
EXECSTRING(_S_FRDP)
N45AX[_Z]=-(_DV19-((_DPR-_LDPR)-_DV7))*_HH1
ELSE
EXECSTRING(_S_FRDP)
G1 AX[_Z]=-(_DV19+1.0*_FAK3)*_HH1
ENDIF
ELSE
EXECSTRING(_S_FFD)
IF(_PD==0) AND (_DV12==0)
G1 AX[_Z]=-(_DV19)*_HH1-_SDIS*_HH1
ELSE
G1 AX[_Z]=-(_DV19+1.0*_FAK3)*_HH1
ENDIF
ENDIF
ENDWHILE
ELSE
IF(_FDPR==0)
_HH8=1 _HH5=-_DV9*_HH1
ELSE
_HH8=_FDPR _HH5=-_FDPR*_HH1
ENDIF
IF (_HH8<_DPR)
MAR1:
SBLON
G90 G0 AX[Z]=_RFP
AX[Z]=(_HH5+1*_FAK3*_HH1)+_RFP
SBLOF
_HH8=-_HH8*_DAM
IF(_HH8>=_MDEP)GOTOF _MMD1
_HH8=_MDEP
_MMD1:
_HH5=_HH5-_HH8*_HH1
IF((_DPR-_LDPR-ABS(_HH5))>=0)GOTOF _MA6
_HH5=-(_DPR-_LDPR)*_HH1
_MA6:
EXECSTRING(_S_FFD)
G1 AX[_Z]=_HH5+_RFP
IF (ABS(_HH5)<(_DPR-_LDPR)) GOTOB MAR1
IF(_SRDP==1)
EXECSTRING(_S_FRDP)
G1 AX[Z]=_RFP-_DPR*_HH1
ENDIF
ENDIF
ENDIF
IF(_RICH==1)
IF(_MILL>0)
_DV2=_DV2+_RST+(2*_DV14)
_DV11=_DV11-_RST-(2*_DV14)
ELSE
_DV2=_DV2-_RST-(2*_DV14)
_DV11=_DV11+_RST+(2*_DV14)
ENDIF
ENDIF
IF(_CRM>1) GOTOF _FEHL10
SBLON
IF(_CRM==1)
G91 G0 AX[_Z]=_DPR*_HH1
AX[_Z]=-_DV2
ELSE
G91 G0 AX[_Z]=_DV11*_HH1
ENDIF
SBLOF
_DV16=_DV3-0.02*_FAK3
_DV17=_DV1-0.02*_FAK3
IF (_RICH==1)
_DV14=_DV14*(-1)
_RST=_RST*(-1)
ENDIF
IF (_MILL<0)OR(_MILL>4) GOTOF _FEHL8
IF (_MILL==2)OR(_MILL==3) GOTOF _FEHL8
IF(_MILL==1) OR (_MILL==4)
EXECSTRING(_S_FFR)
IF(_MIRR==1) XOR (_HH1==-1)
G1 G41 G[10]=_GG10 AX[_X]=0 AX[_Y]=_WR
ELSE
G1 G42 G[10]=_GG10 AX[_X]=0 AX[_Y]=_WR
ENDIF
IF(_MILL==1)
IF(_MIRR==1) XOR (_HH1==-1)
G3 AX[_X]=0 AX[_Y]=-_DV3 AR=180 AX[_Z]=-_DV14*_HH1
ELSE
G2 AX[_X]=0 AX[_Y]=-_DV3 AR=180 AX[_Z]=-_DV14*_HH1
ENDIF
AX[_X]=0 AX[_Y]=0 IP[_X]=0 IP[_Y]=_DV1 AX[_Z]=-_RST*_HH1
EXECSTRING(_S_FFR_25)
AX[_X]=0 AX[_Y]=_DV3 AR=180 AX[_Z]=-_DV14*_HH1
ELSE
IF(_MIRR==1) XOR (_HH1==-1)
G3 AX[_X]=0 AX[_Y]=-_DV16 AR=180 AX[_Z]=-_DV14*_HH1
ELSE
G2 AX[_X]=0 AX[_Y]=-_DV16 AR=180 AX[_Z]=-_DV14*_HH1
ENDIF
AX[_X]=0 AX[_Y]=0 IP[_X]=0 IP[_Y]=_DV17 AX[_Z]=-_RST*_HH1
EXECSTRING(_S_FFR_25)
AX[_X]=0 AX[_Y]=_DV16 AR=180 AX[_Z]=-_DV14*_HH1
SBLON
G0 G40 G60 AX[_Y]=-_WR
SBLOF
EXECSTRING(_S_FFP2)
IF(_MIRR==1) XOR (_HH1==-1)
G1 G42 G[10]=_GG10 AX[_X]=0 AX[_Y]=_WR
G2 AX[_X]=0 AX[_Y]=-_DV3 AR=180 AX[_Z]=_DV14*_HH1
ELSE
G1 G41 G[10]=_GG10 AX[_X]=0 AX[_Y]=_WR
G3 AX[_X]=0 AX[_Y]=-_DV3 AR=180 AX[_Z]=_DV14*_HH1
ENDIF
AX[_X]=0 AX[_Y]=0 IP[_X]=0 IP[_Y]=_DV1 AX[_Z]=_RST*_HH1
EXECSTRING(_S_FFP2_25)
AX[_X]=0 AX[_Y]=_DV3 AR=180 AX[_Z]=_DV14*_HH1
ENDIF
ELSE
EXECSTRING(_S_FFR)
IF(_MIRR==1) XOR (_HH1==-1)
G1 G42 G[10]=_GG10 AX[_X]=0 AX[_Y]=_WR
G2 AX[_X]=0 AX[_Y]=-_DV3 AR=180 AX[_Z]=_DV14*_HH1
ELSE
G1 G41 G[10]=_GG10 AX[_X]=0 AX[_Y]=_WR
G3 AX[_X]=0 AX[_Y]=-_DV3 AR=180 AX[_Z]=_DV14*_HH1
ENDIF
N5AX[_X]=0 AX[_Y]=0 IP[_X]=0 IP[_Y]=_DV1 AX[_Z]=_RST*_HH1
EXECSTRING(_S_FFR_25)
N6AX[_X]=0 AX[_Y]=_DV3 AR=180 AX[_Z]=_DV14*_HH1
ENDIF
GewFertig:
SBLON
G0 G40 G60 AX[_Y]=-_WR
G0 G90 AX[_Z]=_RTP
SBLOF
MSG("")
$P_CYCFRAME=_RE_CYCFR
MSG()
RET
_FEHL1:STOPRE
N707801 SETAL(61328)
RET
_FEHL2:STOPRE
N707802 SETAL(61220)
RET
_FEHL3:STOPRE
N707803 SETAL(61320)
RET
_FEHL4:STOPRE
N707804 SETAL(61014)
RET
_FEHL5:STOPRE
N707805 SETAL(61610)
RET
_FEHL6:STOPRE
N707806 SETAL(61003)
RET
_FEHL7:STOPRE
N707807 SETAL(61105)
RET
_FEHL8:STOPRE
N707808 SETAL(61109)
RET
_FEHL9:STOPRE
N707809 SETAL(61001)
RET
_FEHL10:STOPRE
N707810 SETAL(61002)
RET
_FEHL11: STOPRE
N707811 SETAL(61101)
RET
_FEHL15:STOPRE
N707815 SETAL(61102)
RET
_FEHL22: STOPRE
N707822 SETAL(61158)
RET
_FEHL23: STOPRE
N707823 SETAL(61159)
RET
_FEHL24: STOPRE
N707824 SETAL(61019,"(_AMODE: dec1)")
RET
_FEHL25: STOPRE
N707825 SETAL(61019,"(_AMODE: dec2)")
RET
_FEHL29: STOPRE
N707829 SETAL(61019,"(_AMODE: dec1/DP)")
RET
_FEHL30: STOPRE
N707830 SETAL(61019,"(_AMODE: dec1/DPR)")
RET
_FEHL31: STOPRE
N707831 SETAL(61026,"TRACYL (TRAFO_TYPE=513)")
RET
_FEHL32: STOPRE
N707832 SETAL(61026,"TRACYL (TRAFO_TYPE=514 MODE=1)")
RET
_FEHL33: STOPRE
N707833 SETAL(61019,"(_VARI: dec5)")
RET
_FEHL34: STOPRE
N707834 SETAL(61019,"(_VARI: dec2)")
RET
_FEHL35: STOPRE
N707835 SETAL(61019,"(_VARI: dec3)")
RET
_FEHL36: STOPRE
N707836 SETAL(61019,"(_VARI: dec4)")
RET
_FEHL37: STOPRE
N707837 SETAL(61019,"(_DAM)")
RET
_FEHL39: STOPRE
N707839 SETAL(61212)
RET
_FEHL40: STOPRE
N707840 SETAL(61218)
RET
_FEHL41: STOPRE
N707841 SETAL(61801)
RET
_FEHL42: STOPRE
N707842 SETAL(61216)
RET
