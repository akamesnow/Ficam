PROC CYCLE86 (REAL RTP,REAL RFP,REAL SDIS,REAL DP,REAL DPR,REAL DTB,INT SDIR,REAL _RPA,REAL _RPO,REAL RPAP,REAL POSS,INT _GMODE,INT _DMODE,INT _AMODE,INT _UMODE) SAVE SBLOF DISPLOF ;ACTBLOCNO
;VERSION: 04.05.65.00 ;DATE: 2014-10-22
;CHANGE : 04.05.47.00 ;DATE: 2013-03-09
;Cycle support HMIsl
;Boring 2, Turning
DEF AXIS _X,_Y,_Z
DEF REAL HH2,_POSS,_RG[4],RPA,RPO
DEF INT HH7,_II
DEF INT _ABS=1,_ORD=2,_APP=3,_ARTIS[16],_TEMP,_GMODE1,_DMODE1,_AMODE1,_AMODE2,_G17_18_19,_TC,_TC_TYP
DEF STRING[35] _TEMP_FILE="/_N_MPF_DIR/_N_TEMP_CYCLE86_MPF"
DEF REAL _DATC116[13]
DEF INT _STATC116
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE86_MPF")
DELETE(_TEMP,_TEMP_FILE)
WRITE(_TEMP,_TEMP_FILE,";! only for internal diagnostics ! Date: "<<$A_DAY<<"."<<$A_MONTH<<"."<<($A_YEAR+2000)<<" "<<$A_HOUR<<":"<<$A_MINUTE<<":"<<$A_SECOND)
WRITE(_TEMP,_TEMP_FILE,";T-Number $P_TOOLNO="<<$P_TOOLNO)
WRITE(_TEMP,_TEMP_FILE,";D-Number $P_TOOL="<<$P_TOOL)
IF (($P_TOOL)AND($P_TOOLNO))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP1[1,1]="<<$P_AD[1]<<"    ; Tool type")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP2[1,1]="<<$P_AD[2]<<"    ; Cutting edge position")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP6[1,1]="<<$P_AD[6]<<"    ; Tool geo radius")
WRITE(_TEMP,_TEMP_FILE,";$TC_DP15[1,1]="<<$P_AD[15]<<"    ; Tool wear radius")
IF (($P_AD[1]>=200) AND ($P_AD[1]<300))
WRITE(_TEMP,_TEMP_FILE,";$TC_DP24[1,1]="<<$P_AD[24]<<"    ; Tool tip angle")
ENDIF
IF (($P_AD[1]>=100) AND ($P_AD[1]<200))
IF ($P_AD[1]<>145)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP11[1,1]="<<$P_AD[11]<<"    ; Tool angle")
ENDIF
WRITE(_TEMP,_TEMP_FILE,";$TC_DP35[1,1]="<<$P_AD[35]<<"    ; Number of teeth")
ENDIF
IF ($P_AD[1]==140)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP7[1,1]="<<$P_AD[7]<<"   ; Outside radius ")
ENDIF
IF ($P_AD[1]==240)
WRITE(_TEMP,_TEMP_FILE,";$TC_DP9[1,1]="<<$P_AD[9]<<"   ; Thread pitch")
ENDIF
ENDIF
IF ($P_TOOLNO>0)
WRITE(_TEMP,_TEMP_FILE,";T1")
WRITE(_TEMP,_TEMP_FILE,";M6")
ELSE
WRITE(_TEMP,_TEMP_FILE,";T0")
WRITE(_TEMP,_TEMP_FILE,";M6")
ENDIF
IF ($P_TOOL==0)
WRITE(_TEMP,_TEMP_FILE,";D0")
ELSE
WRITE(_TEMP,_TEMP_FILE,";D1")
ENDIF
WRITE(_TEMP,_TEMP_FILE,"G[06]="<<$P_GG[6]<<"    ; G17/G18/G19")
WRITE(_TEMP,_TEMP_FILE,"G[13]="<<$P_GG[13]<<"    ; G70/G71/...")
WRITE(_TEMP,_TEMP_FILE,"G[29]="<<$P_GG[29]<<"    ; DIAMON /...")
WRITE(_TEMP,_TEMP_FILE,"G[15]="<<$P_GG[15]<<"    ; G94/G95/... $P_F_TYPE="<<$P_F_TYPE)
IF($P_F_TYPE==11)OR($P_F_TYPE==33)
WRITE(_TEMP,_TEMP_FILE,"FZ="<<$P_FZ)
ELSE
WRITE(_TEMP,_TEMP_FILE,"F"<<$P_F)
ENDIF
IF $P_MSNUM==0
WRITE(_TEMP,_TEMP_FILE,";$P_MSNUM=0 no spindle existant")
ELSE
WRITE(_TEMP,_TEMP_FILE,"S"<<$P_S[0]<<" M"<<$P_SDIR[$P_MSNUM])
ENDIF
WRITE(_TEMP,_TEMP_FILE,"CYCLE86("<<RTP<<","<<RFP<<","<<SDIS<<","<<DP<<","<<DPR<<","<<DTB<<","<<SDIR<<","<<RPA<<","<<RPO<<","<<RPAP<<","<<POSS<<","<<_GMODE<<","<<_DMODE<<","<<_AMODE<<","<<_UMODE<<")")
WRITE(_TEMP,_TEMP_FILE,"M30")
ENDIF
RPA=_RPA RPO=_RPO
IF _SC_TOOL_VALI[0]<>0
_ARTIS[0]=_SC_TOOL_VALI[0] _ARTIS[1]=_SC_TOOL_VALI[1] _ARTIS[2]=_SC_TOOL_VALI[2] _ARTIS[3]=_SC_TOOL_VALI[3] _ARTIS[4]=_SC_TOOL_VALI[4] _ARTIS[5]=_SC_TOOL_VALI[5] _ARTIS[6]=_SC_TOOL_VALI[6]
_ARTIS[7]=_SC_TOOL_ON_OFF[0] _ARTIS[8]=_SC_TOOL_ON_OFF[1]
IF (SUBSTR($P_PROG[$P_STACK-1],3,6)=="HOLES1") OR (SUBSTR($P_PROG[$P_STACK-1],3,6)=="HOLES2") OR (SUBSTR($P_PROG[$P_STACK-1],3,8)=="CYCLE801")
_ARTIS[15]=1
GOTOF _END_ARTIS_STAT
ENDIF
IF (_ARTIS[0] MOD 10 <>1 )
GOTOF _FEHL4
ENDIF
_II=_ARTIS[0] DIV 10
IF ((_II MOD 10 > 3) OR (_II MOD 10 < 1))
GOTOF _FEHL4
ENDIF
_II=_II DIV 10
IF ((_II MOD 10 > 2) OR (_II MOD 10 < 0))
GOTOF _FEHL4
ENDIF
ENDIF
_END_ARTIS_STAT:
_GMODE1=_GMODE _DEC1
IF(_GMODE1<0)OR(_GMODE1>1) GOTO _FEHL5
_DMODE1=_DMODE _DEC1
IF(_DMODE1<0)OR(_DMODE1>3)
GOTOF _FEHL22
ELSE
IF($P_MC)
IF(_DMODE1==0)OR($P_GG[6]==_DMODE1)
ELSE
GOTOF _FEHL23
ENDIF
ELSE
IF((_DMODE1>0)AND($P_GG[6]<>_DMODE1))
G[6]=_DMODE1
ENDIF
ENDIF
ENDIF
_AMODE1=(_AMODE _DEC1)
IF(_AMODE1<0)OR(_AMODE1>2) GOTOF _FEHL24
IF((_AMODE1==2) AND ($P_SUBPAR[4]==0)) GOTOF _FEHL29
IF((_AMODE1==1) AND ($P_SUBPAR[5]==0)) GOTOF _FEHL30
_AMODE2=(_AMODE _DEC2)
IF(_AMODE2<0)OR(_AMODE2>2) GOTOF _FEHL26
IF ((_AMODE2==2)AND(DTB>0))
DTB=-DTB
ENDIF
IF ((_AMODE2==1)AND(DTB<0))
DTB=ABS(DTB)
ENDIF
IF $P_GG[6]==2
_ABS=3 _ORD=1 _APP=2
ENDIF
IF $P_GG[6]==3
_ABS=2 _ORD=3 _APP=1
ENDIF
IF (ISAXIS(_APP)==0) GOTOF _FEHL2
IF HH7 GOTOF _MM1B
_Z=$P_AXN3
IF(ISAXIS(_ABS)==1)
_X=$P_AXN1
ENDIF
IF(ISAXIS(_ORD)==1)
_Y=$P_AXN2
ENDIF
DPR=ABS(DPR) SDIS=ABS(SDIS)
IF (SDIR==3)OR(SDIR==4)OR(SDIR==5)
IF(((DPR==0)AND(_AMODE1==0))OR(_AMODE1==2)) GOTOF _MM1
IF RTP==RFP GOTOF _FEHL1
ELSE
GOTOF _FEHL3
ENDIF
HH2=RFP-((RTP-RFP)/ABS(RTP-RFP)*DPR)
IF DP==0 GOTOF _MM0 IF DP==HH2 GOTOF _MM1
_MM0:DP=HH2
_MM1:HH2=RTP-RFP
IF RFP==DP GOTOF _FEHL30 IF HH2==0 GOTOF _MM1A IF HH2/ABS(HH2)<>(RFP-DP)/ABS(RFP-DP) GOTOF _FEHL1
_MM1A:HH7=1
_MM1B:
IF (SDIR<>5)
M=SDIR
ENDIF
SBLON
IF ($P_GG[10] < 2)
G[10]=2
ENDIF
N1 G0 G90 AX[_Z]=RFP+SDIS*(RFP-DP)/ABS(RFP-DP)
SBLOF
IF ((_ARTIS[0]==11) OR((_ARTIS[15]==1)AND(_ARTISUP==1)))
M=QU(_ARTIS[7])
ENDIF
N2 G1 AX[_Z]=DP
IF(((DTB>=0)AND(_AMODE2==0))OR(_AMODE2==1))
N3 G4 F=DTB
ELSE
N3 G4 S=-DTB
ENDIF
IF ($SCS_FUNCTION_MASK_DRILL_SET B_AND 'B1000000')
_POSS=POSS
_STATC116=2
CYCLE216(_DATC116,_STATC116)
CUST_TECHCYC(300)
_POSS=_POSS-_MEA_CORR_ANGLE[1]-_MEA_CORR_ANGLE[0]
_POSS=((_POSS MOD 360)+360) MOD 360
GOTOF _NO_CORRECT_OTHER_BITS
ENDIF
_POSS=POSS _TC=$P_TC _G17_18_19=$P_GG[6]
IF (_TC AND (ISVAR("$P_PARTFRAME")) AND ($SCS_FUNCTION_MASK_DRILL_SET B_AND 'B100'))
_RG[3]=$P_PARTFRAME[_Z,RT]
IF ($TC_CARR23[_TC]<>"T")
_TC_TYP=1
ENDIF
_RG[0]=ABS($TC_CARR10[_TC]) _RG[1]=ABS($TC_CARR11[_TC]) _RG[2]=ABS($TC_CARR12[_TC])
IF ((_RG[0]+_RG[1]+_RG[2])==0)
_RG[0]=ABS($TC_CARR7[_TC]) _RG[1]=ABS($TC_CARR8[_TC]) _RG[2]=ABS($TC_CARR9[_TC])
IF ($TC_CARR23[_TC]=="M")
_TC_TYP=0
ENDIF
ENDIF
ELSE
_RG[3]=0 _TC_TYP=0
ENDIF
IF NOT(SUBSTR($P_PROG[$P_STACK-1],3,8)=="E_DR_BOR")
IF ($SCS_FUNCTION_MASK_DRILL_SET B_AND 'B10')
_POSS=(_POSS-$P_ACTFRAME[_Z,RT]+_RG[3]) MOD 360
ENDIF
ELSE
_POSS=(_POSS+_RG[3]) MOD 360
ENDIF
IF (_TC_TYP==1)
IF ((_G17_18_19==1) AND ((_RG[0]+_RG[1])==0)) OR ((_G17_18_19==2) AND ((_RG[0]+_RG[2])==0)) OR ((_G17_18_19==3) AND ((_RG[1]+_RG[2])==0))
_POSS=(_POSS-_RG[3]) MOD 360
ENDIF
ENDIF
IF _POSS<0
_POSS=(_POSS+360) MOD 360
ENDIF
IF(ISFILE(_TEMP_FILE))AND($P_PROG[$P_STACK-1]<>"_N_TEMP_CYCLE86_MPF")
WRITE(_TEMP,_TEMP_FILE,"; SPOS:"<<_POSS<<" $P_ACTFRAME[_Z,RT]:"<<$P_ACTFRAME[_Z,RT]<<" $P_PARTFRAME[_Z,RT]:"<<_RG[3])
ENDIF
_NO_CORRECT_OTHER_BITS:
IF ((($P_ACTFRAME[_X,MI]==1) OR ($P_ACTFRAME[_Y,MI]==1)) AND (_POSS==POSS) AND ($SCS_FUNCTION_MASK_DRILL_SET B_AND 'B10000000'))
_II=0
IF $P_ACTFRAME[_X,MI]==1
_II=1
ENDIF
IF $P_ACTFRAME[_Y,MI]==1
_II=_II + 2
ENDIF
IF _II==1
RPA=-RPA
ENDIF
IF _II==2
RPO=-RPO
ENDIF
IF _II==3
RPA=-RPA RPO=-RPO
ENDIF
ENDIF
_NO_MIRROR:
N4 SPOS=_POSS
IF (_GMODE1==0)
IF(_UMODE)
N41 CUST_TECHCYC(_UMODE+1)
ENDIF
IF(ISAXIS(_ABS)==1) AND (ISAXIS(_ORD)==1) AND (ISAXIS(_APP)==1)
N5 G91 G0 AX[_X]=RPA AX[_Y]=RPO AX[_Z]=RPAP
ELSE
IF(ISAXIS(_ABS)==1) AND (ISAXIS(_APP)==1)
N51 G91 G0 AX[_X]=RPA AX[_Z]=RPAP
ELSE
IF(ISAXIS(_ORD)==1) AND (ISAXIS(_APP)==1)
N52 G91 G0 AX[_Y]=RPO AX[_Z]=RPAP
ELSE
GOTOF _FEHL2
ENDIF
ENDIF
ENDIF
ENDIF
IF ((_ARTIS[0]==11) OR((_ARTIS[15]==1)AND(_ARTISUP==1)))
M=QU(_ARTIS[8])
ENDIF
IF (_GMODE1==0)
N6 G90 G0 AX[_Z]=RFP+SDIS*(RFP-DP)/ABS(RFP-DP)
ELSE
N61 G90 G0 AX[_Z]=RTP
ENDIF
IF (_GMODE1==0)
IF(ISAXIS(_ABS)==1) AND (ISAXIS(_ORD)==1) AND (ISAXIS(_APP)==1)
SBLON
N7 G91 AX[_X]=-RPA AX[_Y]=-RPO AX[_Z]=RTP-(RFP+SDIS*(RFP-DP)/ABS(RFP-DP))
SBLOF
ELSE
IF(ISAXIS(_ABS)==1) AND (ISAXIS(_APP)==1)
SBLON
N71 G91 AX[_X]=-RPA AX[_Z]=RTP-(RFP+SDIS*(RFP-DP)/ABS(RFP-DP))
SBLOF
ELSE
SBLON
N72 G91 AX[_Y]=-RPO AX[_Z]=RTP-(RFP+SDIS*(RFP-DP)/ABS(RFP-DP))
SBLOF
ENDIF
ENDIF
ENDIF
_MM2:
RET
_FEHL1:STOPRE
N708601 SETAL(61101)
RET
_FEHL2:STOPRE
N708602 SETAL(61005)
RET
_FEHL3:STOPRE
N708603 SETAL(61102)
RET
_FEHL4:
N708604 SETAL(62106)
RET
_FEHL5: STOPRE
N708605 SETAL(61019,"(_GMODE: dec1)")
RET
_FEHL22: STOPRE
N708622 SETAL(61158)
RET
_FEHL23: STOPRE
N708623 SETAL(61159)
RET
_FEHL24: STOPRE
N708624 SETAL(61019,"(_AMODE: dec1)")
RET
_FEHL26: STOPRE
N708626 SETAL(61019,"(_AMODE: dec2)")
RET
_FEHL29: STOPRE
N708629 SETAL(61019,"(_AMODE: dec1/DP)")
RET
_FEHL30: STOPRE
N708630 SETAL(61019,"(_AMODE: dec1/DPR)")
RET
