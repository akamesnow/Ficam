;%_N_RNC_9862_SPF
;$PATH=/_N_CMA_DIR
;NCTS GUI GENERIC SINUMERIK OPERATE
;© 2010 - 2011 RENISHAW PLC
PROC RNC_9862(REAL _BB,REAL _CC,REAL _DD,REAL _FF,REAL _GG,REAL _HH,REAL _II,REAL _JJ,REAL _KK,REAL _MM,REAL _QQ,REAL _RR,REAL _SS,REAL _WW,REAL _XX,REAL _YY,REAL _ZZ)SAVE
EXTERN RNC_9762(REAL,REAL,REAL,REAL,REAL)
EXTERN RNC_9763(REAL,REAL,REAL,REAL)
EXTERN RNC_9764(REAL,REAL,REAL,REAL,REAL,REAL,REAL)
EXTERN RNC_9766(REAL,REAL,REAL,REAL,REAL)
DEF REAL _REN[33]
;REN TOOL SETTING
_RENT[18]=0;DEFAULT 1ST POINT
_RENC[48]=0 _RENC[20]=0 _RENC[49]=562
IF $SNS_TM_FUNCTION_MASK_SET B_OR 0==1
_DD=_DD/2
_II=_II/2
ENDIF
IF (_BB==1) AND (_SS==1017)
_RENT[1]=9999; NO RPM CHECK
_RENT[19]=$P_S[1]; LAST PROGRAMMED SPINDLE SPEED
ELSE
_RENT[19]=_SS
ENDIF
IF ($P_SEARCH)OR($P_SIM)OR($P_DRYRUN) GOTOF LN99
_RENC[49]=566
STOPRE
IF _GG<=3 ; Meas/Chk/Ctrl
_RENC[20]=_GG
ELSE
_RENC[20]=0
ENDIF
_RENT[11]=9862; RE-MEASURE
IF _XX==0
_XX=9999
ENDIF
IF _WW==9999
_WW=0
ENDIF
IF _YY==9999
_YY=0
ENDIF
IF _BB==1 GOTOF LN1
_RENT[1]=0; _BB=2, 3 OR 10 ONLY
LN1:
RNC_USTA
STOPRE
_REN[32]=_WW
RNC_9760
IF (_RR<>9999) AND (_RR<>0) GOTOF LN15
_RR=_RENC[12]
LN15:
IF _XX==9999 GOTOF LN3
IF _CC<>9999 GOTOF LN3
IF _FF<>9999 GOTOF LN2
_FF=.3*_RENC[29];DEFAULT STEP
LN2:
_FF=_FF/_RENC[29]
LN3:
IF _CC==9999 GOTOF LN5
IF _BB==1 GOTOF LN46
LN5:
IF _KK<>9999 GOTOF LN9
_KK=_RENC[25]
LN9:
IF _RENC[8] == 0 GOTOF LN11
IF _RR<= ABS(_RENC[8]) GOTOF LN11
_RENC[13]=1 ;SINGLE SIDE SET
IF _RENC[8] >=0 GOTOF LN11
_RENC[13]=-1
LN11:
IF _REN[32]>0
_ZZ=-ABS(_ZZ)
ENDIF
IF (_BB==1) AND (_SS==1017)
_RENT[1]=3; NO RPM CHECK ONLY
ENDIF
RNC_9761
_REN[29]=0; COUNTER
LN166:
IF _REN[29] <= _RENT[38] GOTOF LN167
G0 SUPA AX[AXV[_RENC[23]]]=_RENC[6]
_RENC[49]=565
GOTOF LN46; TOOL MEASUREMENT ERROR
LN167:
STOPRE
_REN[29]=_REN[29]+1
; RAPID TO LONG TOOL POS
_REN[31]=_RENT[20]*_RENC[29]/_RENC[7];
RNC_9764(9999,9999,9999,9999,_REN[31]+_RENC[10],9999,0)
RNC_9764(9999,9999,_RENT[24]*_RENC[29]/_RENC[7],_RENT[35],9999,9999,9999)
_RENC[49]=550
IF _RENT[49]==2 GOTOF LN46
; FIND BEAM
_REN[12]=_SS
IF _REN[12]>800 GOTOF LN17
_REN[12]=800; MIN FEED
LN17:
IF _REN[12]<=6000 GOTOF LN18
_REN[12]=6000; MAX FEED
LN18:
IF ABS(_YY)>0 GOTOF LN19
; ON CNTR LEN MEAS
IF _BB==2 GOTOF LN19
_RENT[10]=1; LONG/SHORT TOOL
RNC_9762(_RENC[23],_QQ,9999,_REN[31]+_RENC[11],_REN[12])
_RENT[10]=9999
IF (_RENC[49]>1000)AND(_RENC[49]<>9999) GOTOB LN166
GOTOF LN24
LN19:;Y INPUT OFFSET
;ON CENTRE FIND
_RENT[10]=1; LONG/SHORT TOOL
R_AIRON; AIR ON
RNC_9763(_RENC[23],_RENC[5],_REN[31]+_RENC[11]-(_QQ*_RENC[0]),_REN[12])
_RENT[10]=9999
IF (_RENC[49]>1000)AND(_RENC[49]<>9999)GOTOB LN166
_RENC[49]=551
IF $AC_MEA[ABS(_RENT[7])]==0
_RENC[49]=_RENC[49]+1000
GOTOB LN166
ELSE
ENDIF
IF _RENC[39]<>0
_RENC[31]=_RENC[31]+(_REN[12]/_RENC[39]*_RENC[0]*_RENC[29]); DRIP REJ
ENDIF
_REN[21]=_RENC[31]; STORE
IF _BB==2 GOTOF LN25
;ADDED FOR FEEDRATE CONTROL
IF _WW < 0 ;SET REDUCED RAPID FEEDRATE
_REN[9]=_REN[12];*0.5
ELSE
_REN[9]=_REN[12]
ENDIF
;END OF ADDED
;STEP OVER DIR
; SELECT CYCLE MOVES
IF _RENC[13]==2 GOTOF LN20
_YY=ABS(_YY)
_YY=_YY*_RENC[13]
LN20:;STEP OVER
IF _REN[32]<= 0 ;
_WW=(ABS(_REN[32])-(2*_RENC[29]))*_RENC[0]; ABOVE THE BEAM
ELSE
_WW=(ABS(_REN[32])+(2*_RENC[29]))*_RENC[0]; BELOW THE BEAM
ENDIF
STOPRE
RNC_9764(9999,9999,9999,_RENT[35]+_YY,_REN[21]-_WW,_RENC[27],9999); END MEASURE POSN
IF _REN[32]==0 GOTOF LN23
; Y W INPUT MEAS
IF _REN[32] < 0
RNC_9762(_RENC[23],_QQ,9999,_REN[21]+(_REN[32]*_RENC[0]),500); MEAS
ELSE
RNC_9762(_RENC[23],_QQ,9999,_REN[21]-(_REN[32]*_RENC[0]),500); MEAS
ENDIF
LN21:
IF (_RENC[49]>1000)AND(_RENC[49]<>9999) GOTOB LN166
GOTOF LN24
LN23:; NO W INPUT MEAS
RNC_9762(_RENC[23],_QQ,9999,_REN[21],_REN[12]/4); MEAS
LN24:
IF (_RENC[49]>1000)AND(_RENC[49]<>9999) GOTOB LN166
_REN[21]=_RENC[31];  STORE +LM
IF _BB==1 GOTOF LN32
LN25:; RAD MEAS;
_REN[29]=0; COUNTER
LN168:
IF _REN[29] <= _RENT[38] GOTOF LN169
G0 SUPA AX[AXV[_RENC[23]]]=_RENC[6]
_RENC[49]=565
GOTOF LN46; TOOL MEASUREMENT ERROR
LN169:
STOPRE
_REN[29]=_REN[29]+1
;RESET FEED RATE TO DEFAULT
_REN[9]=_REN[12]
_REN[28]=_RR/2+_QQ; CLEAR RAD
IF _RENC[13]==-1 GOTOF LN28
RNC_9764(9999,9999,9999,_RENT[35]+_REN[28],_REN[21]-(_ZZ*_RENC[0]),_RENC[27],9999)
IF _CC<>9999 GOTOF LN26
IF _XX==9999 GOTOF LN26
RNC_9766(_RENT[35],1,_XX,_FF,_QQ);Z SCAN
IF (_RENC[49]>1000)AND(_RENC[49]<>9999) GOTOB LN168
IF _RENC[13]==2 GOTOF LN27
_RENC[1]=(_REN[21]-_RENC[1])*_RENC[0]; Z HEIGHT
GOTOF LN27
LN26:
RNC_9762(_RENC[22],_QQ,_RR,_RENT[35],_REN[12]/2)
IF (_RENC[49]>1000)AND(_RENC[49]<>9999) GOTOB LN168
LN27:
STOPRE
_REN[22]=_RENC[31]; STORE +RM
_REN[28]=_RENC[31]-_RENT[35]+(2.*_RENC[29]); ADJ CLEAR POSN
LN28:
STOPRE
IF _RENC[13]==1 GOTOF LN32
LN29:
RNC_9764(9999,9999,9999,_RENT[35]-_REN[28],_REN[21]-(_ZZ*_RENC[0]),_RENC[27],9999)
STOPRE
IF _CC<>9999 GOTOF LN30
IF _XX==9999 GOTOF LN30
RNC_9766(_RENT[35],-1,_XX,_FF,_QQ);Z SCAN
IF (_RENC[49]>1000)AND(_RENC[49]<>9999)GOTOB LN168
_RENC[1]=(_REN[21]-_RENC[1])*_RENC[0]; Z HEIGHT
GOTOF LN31
LN30:
RNC_9762(_RENC[22],_QQ,_RR,_RENT[35],_REN[12]/2)
IF (_RENC[49]>1000)AND(_RENC[49]<>9999) GOTOB LN168
LN31:
STOPRE
_REN[23]=_RENC[31]; STORE -RM
LN32: ; CUTTING-EDGE CHK
IF _CC==9999 GOTOF LN35
S=(75/_RENC[15]/_CC); SET RPM
G4 F1.
STOPRE
; GOTO K TOL POSITION
_REN[30]=_RENC[31]-_KK
IF _RENC[13]==1 GOTOF LN33
_REN[30]=_RENC[31]+_KK
LN33:
RNC_9764(9999,9999,9999,_REN[30],9999,_RENC[27],9999)
R_LATON
G4 F.2
IF _XX==9999 GOTOF LN34
RNC_9764(9999,9999,9999,9999,_REN[21]-((_ZZ+_XX)*_RENC[0]),$P_S[1]*_FF,9999)
LN34: ; DWELL FOR 2 REVS
G4 F=_RENC[15]*_CC*2
; CHK LATCH SIGNAL
_RENC[49]=560;CUTTING EDGE CHK
_RENC[48]=2
STOPRE
IF ABS(_RENT[8]) < 11
IF $A_PROBE[ABS(_RENT[8])]<>_RENC[2] GOTOF LN45; SPARE MEASURE INPUT
ELSE
IF $A_IN[ABS(_RENT[8])-10]<>_RENC[2] GOTOF LN45; DIGITAL INPUT
ENDIF
STOPRE
R_LATOFF
LN35:
_RENC[48]=0
RNC_9764(9999,9999,9999,_RENT[35],9999,_RENC[27],9999)
IF _BB==4 GOTOF LN45
; SET TOOL OFFSETS
IF _BB==2 GOTOF LN270
; LEN SET
STOPRE
IF _REN[32]<=0 ; UPDATE -MEAS
_REN[10]=_REN[21]-(_RENT[20]*_RENC[29]/_RENC[7])-_JJ-_RENC[16]; LEN ERR
ELSE ; UPDATE +MEAS
_REN[10]=_REN[21]-(_RENT[21]*_RENC[29]/_RENC[7])-_JJ-_RENC[16]
ENDIF
;READ LEN GEOM & WEAR
_REN[14]=$TC_DP3[TRUNC(_RENT[2]),_RENT[3]];GEOM
_REN[15]=$TC_DP12[TRUNC(_RENT[2]),_RENT[3]];WEAR
CASE(_RENC[20]) OF 1 GOTOF LN250 2 GOTOF LN260 ; 0=meas, 1 =chk, 2=ctrl
;NORMAL UPDATE
$TC_DP3[TRUNC(_RENT[2]),_RENT[3]]=(_RENC[16]+_REN[10])*_RENC[0];LG
$TC_DP12[TRUNC(_RENT[2]),_RENT[3]]=0; LW
GOTOF LN270
LN250:;UPDATE WEAR
$TC_DP12[TRUNC(_RENT[2]),_RENT[3]]=(_REN[15]+_REN[10])*_RENC[0]; LW
LN260:;TOL CHECK
IF ABS(_REN[10])<=_HH GOTOF LN270
_RENC[49]=561
_RENC[48]=1
IF _BB==3 GOTOF LN270
GOTOF LN45
LN270:
IF _BB==1 GOTOF LN45
; RAD SET
;READ RAD GEOM & WEAR
_REN[14]=$TC_DP6[TRUNC(_RENT[2]),_RENT[3]];GEOM
_REN[15]=$TC_DP15[TRUNC(_RENT[2]),_RENT[3]];WEAR
_REN[17]=_REN[14]+_REN[15];CURRENT RAD/DIAM
IF _RENC[13] <> -1 GOTOF LN39
_REN[10]=(_RENT[23]*_RENC[29]/_RENC[7])-_REN[23]
_REN[10]=(_REN[10]*_RENC[9])-_II-_REN[17]; -SIDE ERR
GOTOF LN41
LN39:
IF _RENC[13] <> 1 GOTOF LN40
_REN[10]=_REN[22]-(_RENT[22]*_RENC[29]/_RENC[7])
_REN[10]=(_REN[10]*_RENC[9])-_II-_REN[17]; +SIDE ERR
GOTOF LN41
LN40:
_REN[10]=(_RENT[23]*_RENC[29]/_RENC[7])-_REN[23]
_REN[10]=_REN[10]-((_RENT[22]*_RENC[29]/_RENC[7])-_REN[22])
_REN[10]=_REN[10]/2
_REN[10]=(_REN[10]*_RENC[9])-_II-_REN[17]; BOTH SIDES ERR
LN41:
CASE(_RENC[20]) OF 1 GOTOF LN310 2 GOTOF LN320 ; Meas=0/Chk=1/Ctrl=2
;NORMAL UPDATE
$TC_DP6[TRUNC(_RENT[2]),_RENT[3]]=(_REN[17]+_REN[10])
$TC_DP15[TRUNC(_RENT[2]),_RENT[3]]=0; RW
GOTOF LN45
LN310:;UPDATE WEAR
$TC_DP15[TRUNC(_RENT[2]),_RENT[3]]=(_REN[15]+_REN[10]);WEAR
LN320:;TOL CHECK
IF ABS(_REN[10])<=_DD GOTOF LN45
_RENC[49]=561
_RENC[48]=1
LN45:
M5
G0 SUPA AX[AXV[_RENC[23]]]=_RENC[6]
G90
IF _RENC[48]==0 GOTOF LN47
$TC_TP8[$P_TOOLNO]=$TC_TP8[$P_TOOLNO] B_OR 4; TOOL LOCK
IF _MM<>0 GOTOF LN47
LN46:
RNC_9769
LN47:
_RENC[49]=9999
R_SPLOFF
D=_RENT[3]
RNC_UEND
LN99:
STOPRE
RET

