;%_N_RNC_9766_SPF
;NCTS GUI GENERIC SINUMERIK OPERATE
;© 2010 - 2011 RENISHAW PLC
;REN SEARCH
PROC RNC_9766(REAL _JJ,REAL _KK,REAL _XX,REAL _FF,REAL _QQ)
EXTERN RNC_9763(REAL,REAL,REAL,REAL)
EXTERN RNC_9764(REAL,REAL,REAL,REAL,REAL,REAL,REAL)
DEF REAL _REN[33]
STOPRE
_REN[15]=_FF; STEP
IF _REN[15] < (1.5*_RENC[29]) GOTOF LN1
_REN[15]=1.5*_RENC[29] ; MAX STEP
LN1:
_FF=80 ;C FEED
IF _REN[15] >= (.1*_RENC[29]) GOTOF LN2
_REN[15]=.3*_RENC[29]; F STEP
_FF=40. ; F FEED
LN2:
_REN[21]=1 ; HIGH SPOT FLAG
IF _XX >= 0 GOTOF LN3
_REN[21]=-1 ; LOW SPOT FLAG
LN3:
_XX=ABS(_XX)
_REN[3]=0 ; CSTEP FLAG
_REN[19]=_FF/4 ; 2ND SIDE
_REN[12]=$AA_IM[AXV[_RENC[22]]] ; RA CUR POS
_REN[13]=$AA_IM[AXV[_RENC[23]]] ; -_RENC[16] SP CUR POS
_REN[32]=_REN[13]-(_XX*_RENC[0]) ; ABS Z LIMIT
; FIND SURFACE
_REN[25]=1
_REN[20]=_REN[12]-((_QQ*2)*_KK) ; TARGET Q
IF _KK == 1 GOTOF LN4
IF _REN[20] >= _JJ GOTOF LN5
GOTOF LN6
LN4:
IF _REN[20] <= _JJ GOTOF LN5 ; TARGET CNTR
GOTOF LN6
LN5:
_REN[20]=_JJ; BEAM CNTR
LN6:
IF _KK == 1 GOTOF LN7
IF _RENC[13] == 2 GOTOF LN17
LN7:
RNC_9764(_RENC[22],_REN[20],9999,9999,9999,_FF*2,-1)
RNC_9764(9999,9999,9999,_RENC[31]+(1.0*_RENC[29]*_KK),9999,500,9999)
RNC_9764(_RENC[22],_REN[20],9999,9999,9999,_FF,-1)
IF ABS(_RENC[31]-_REN[20]) >= _RENC[45] GOTOF LN75
RNC_9764(_RENC[23],_REN[32],9999,9999,9999,_FF*2,-1); Z FIND
_RENC[49]=551
IF ABS(_RENC[31]-_REN[32]) <= _RENC[45] GOTOF LN19
RNC_9764(9999,9999,9999,_REN[12],9999,1000,9999)
GOTOB LN7
LN75:;INITIALISE
_REN[30]=_RENC[31]; Y MAX MIN
_REN[31]=$AA_IM[AXV[_RENC[22]]]; Y LOOP START
_RENC[1]=$AA_IM[AXV[_RENC[23]]]; Z POS
LN8:;LOOP
_REN[28]=$AA_IM[AXV[_RENC[22]]]; CUR Y POS
_REN[29]=$AA_IM[AXV[_RENC[23]]]; -RENC[16] CUR ZPOS
IF _REN[25] == 1 GOTOF LN9
_RENC[49]=550 ; BEAM CUT
IF (_REN[28]*_KK) > (_REN[12]*_KK) GOTOF LN19 ; CHK Y MAX LIMIT
_RENC[49]=551 ; BEAM NOT CUT
IF (_REN[28]*_KK) < (_REN[20]*_KK) GOTOF LN19 ; CHK Y MIN LIMIT
IF (_REN[29]*_RENC[0]) <= (_REN[32]*_RENC[0]) GOTOF LN14 ; CHK Z MIN LIMIT
LN9:
_REN[16]=(_REN[15]+(0.1*_RENC[29]))*_KK
RNC_9764(9999,9999,9999,_REN[28]+_REN[16],9999,500,9999) ; Y+ MOVE
RNC_9764(_RENC[23],_REN[29]-(_REN[15]*_RENC[0]),9999,9999,9999,_FF*1.5,-1) ; Z MOVE
_RENC[31]=$AA_IM[AXV[_RENC[22]]]
IF _REN[25]==9999 GOTOF LN10
_REN[25]=9999
LN10:
; Y MEAS MOVE
_REN[16]=$AA_IM[AXV[_RENC[22]]] ; CUR Y POS
RNC_9764(_RENC[22],_REN[20],9999,9999,9999,_FF,-1)
IF ABS(_RENC[31]-_REN[16]) >= _RENC[45] GOTOF LN11
RNC_9764(9999,9999,9999,_REN[16]+(_REN[15]*_KK),9999,500.,9999)
LN11:
RNC_9764(_RENC[22],_REN[20],9999,9999,9999,_FF,-1)
IF ABS(_RENC[31]-_REN[20]) < _RENC[45] GOTOF LN12
IF ABS(_RENC[31]-_REN[2]) < _RENC[45] GOTOF LN12
IF _RENC[39]==0 GOTOF LN12
STOPRE
_RENC[31]=_RENC[31]+(_FF/_RENC[39]*_RENC[29]*_KK); DRIP REJECT STUFF
LN12:
IF _REN[21]==-1 GOTOF LN13
; IF Y SKIP <= CUR.MAX.
IF (_RENC[31]*_KK) <= (_REN[30]*_KK) GOTOB LN8
; STORE MAX DATA IF >
_REN[30]=_RENC[31] ; STORE Y MAX
_REN[31]=_REN[28] ; STORE Y LOOP START
_RENC[1]=$AA_IM[AXV[_RENC[23]]] ; -RENC[16] STORE Z POS
GOTOB LN8
LN13:
; IF Y SKIP >= CUR.MIN.
IF (_RENC[31]*_KK) >= (_REN[30]*_KK) GOTOB LN8
; STORE MIN DATA IF <
_REN[30]=_RENC[31] ; STORE Y MIN
_REN[31]=_REN[28] ; STORE Y LOOP START
_RENC[1]=$AA_IM[AXV[_RENC[23]]] ; -RENC[16] STORE Z POS
GOTOB LN8
LN14:
_RENC[31]=_REN[30] ; Y VAL
IF _REN[3]==1 GOTOF LN20 ; FSTEP END
; ADJ FOR FSTEP
_REN[14]=_RENC[1]+(_REN[15]*_RENC[0])
IF (_REN[14]*_RENC[0]) <= (_REN[13]*_RENC[0]) GOTOF LN15
_REN[14]=_REN[13] ; START POS
LN15:
_REN[11]=_RENC[1]-(_REN[15]*_RENC[0])
IF (_REN[11]*_RENC[0]) <= (_REN[32]*_RENC[0]) GOTOF LN16
_REN[32]=_REN[11] ; NEW ABS Z LIMIT
LN16:
_FF=_FF/4 ; FINE FEED
_REN[15]=_REN[15]/4 ; FSTEP SCAN
_REN[3]=1 ;  FSTEP FLAG
_REN[30]=$AA_IM[AXV[_RENC[22]]]
RNC_9764(9999,9999,9999,_REN[31]+(_REN[15]*4*_KK),_REN[14],500,9999)
IF _REN[21]<>-1 GOTOF LN165
_REN[30]=$AA_IM[AXV[_RENC[22]]]
LN165:
_REN[20]=_REN[31]-(1.5*_KK) ; ADJ Q LIMIT
GOTOB LN8 ; LOOP BACK
LN17: ; 2ND SIDE OF BEAM
_REN[20]=_JJ ; SET TO CNTR
; 2-TCH MEAS
RNC_9764(9999,9999,9999,9999,_RENC[1],500,9999)
; Y MEAS MOVE
RNC_9764(_RENC[22],_REN[20],9999,9999,9999,100,-1)
_REN[2]=_RENC[31]+(.5*_RENC[29]*_KK)
RNC_9764(9999,9999,9999,_REN[2],9999,500,9999)
_FF=_REN[19]
RNC_9764(_RENC[22],_REN[20],9999,9999,9999,_FF,-1)
IF ABS(_RENC[31]-_REN[20]) < _RENC[45] GOTOF LN18
IF ABS(_RENC[31]-_REN[2]) < _RENC[45] GOTOF LN18
IF _RENC[39]==0 GOTOF LN18
STOPRE
_RENC[31]=_RENC[31]+(_FF/_RENC[39]*_RENC[29]*_KK); DRIP REJECT STUFF
LN18:
_RENC[49]=551 ; BEAM NOT CUT
IF ABS(_RENC[31]-_REN[20]) > _RENC[45] GOTOF LN20
LN19:
IF _RENT[11] == 9862
_RENC[49]=_RENC[49]+1000
GOTOF LN20
ENDIF
RNC_9769
LN20:
RET

