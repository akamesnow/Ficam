[POST_VERSION] #DO NOT MOVE OR ALTER THIS LINE# V24.00 P0 E1 W24.00 T1635327048 M24.00 I0 O0
#[POST_VERSION] #DO NOT MOVE OR ALTER THIS LINE# V19.00 P0 E1 W19.00 T1447190139 M19.00 I0 O0
scustpost_revision    : "21.0100"  #:= Revision number for use by Resellers or customers.
#version PP 1.0.0.2
# ----------------------------------------
#	POST-PROCESSEUR MASTERCAM / FICAM
# ----------------------------------------
# - REALISE PAR                	--> FS
# ---------------------------------------- config PP
# - TYPE PP                 	--> FRAISAGE
# - NOMBRE d'AXES            	--> 5
# - AXES                     	--> A/C
# - TYPE DE LANGAGE         	--> FANUC
#            VERSION            --> 31i
# ---------------------------------------- client / infos machine
# - CLIENT                    	--> UNM
# - NON MACHINE                	--> OKK
# - AXE ROTATIF(1)            	--> A/C
# ----------------------------------------

[STARTBIN]
#property of ficam, Eric Dauvilliers, e.dauvilliers@ficam.com, +33 (0)2 37 26 28 10

#region possibilites_PP
# ---------------------------------------- infos complEmentaires / config PP
# - RESTRICTIONS                --> NON - numéro de clé/en durée/version MC
# - ENTETEs
#                   ANCIENNE    --> NON
#                   NOUVELLE    --> OUI
#         OP MC COMMENTAIRE     --> NON
# - LECTURE INFOS ARMOIRE       --> OUI
# - LECTURE INFOS MACHINE       --> OUI
# - ORIGINES                    --> OUI
# - INSPECTION D'OUTIL          --> OUI
# - ARROSAGES VX                --> OUI
# - AVANCES EN VARIABLES        --> NON
# - OUTILS EN VARIABLES         --> NON
# - CYCLES PALPAGES             --> OUI
# - SOUS-PROGRAMMES
#                       en Z    --> OUI
#                translation    --> OUI
#                   Rotation    --> OUI
#                     Miroir    --> OUI
# ---------------------------------------- infos complEmentaires
# - SIMULATION ISO				--> OUI
# - PERCAGES AVANCé				--> NON
# - PERC. TRES PROFOND          --> OUI
# ---------------------------------------- INFOS
# CINEMATIQUES
# AXE --A-- EN "-" = PIECE COTE OPERATEUR
# --> AXE --B-- EN "+" --> X+
# ***************************************
# CONVENTION DE ROTATION **EULER**
# G0 A-89.471 C-90.041                        Mise en position physique des axes
# G68.2 P1 X0. Y0. Z0. I-89.471 J0. K-90.041
#        P1              --> convention suivante
#        X0. Y0. Z0.     --> POINT pour la rotation
#        I-89.471         --> PREMIERE ROTATION suivant l'axe X du RUD
#        J0.             --> DEUXIEME ROTATION on tourne SUR LE Y du RUD
#        K-90.041         --> TROISIEME ROTATION on tourne SUR LE Z du RUD

#region Historique_modifs_versions
#
#MODIFS ------------------
#FS
#Ajout ORIGINES G54 par dEfaut et G55 .... en activant mr4$
#Ajout clampage et dEclampage uniquement avant et fin du 5 axes continu
#Ajout *MESSAGE SI PLUSIEURS RUDs"

#0100    #ajout pour ne pas remettre les axes A ZERO/remonter en haut sans changer d'outil

#endregion
#endregion

#region FS
fs  1  1.9lt    # Format avec toute la precision pour les variable internes de mp
fs  2  1.3l     # frormat d'affichage a 3 chifres max pour les variables affichEes
fs  3  1^3ln    # idem mais non modale
fs  4  1 0      # 1 chiffre mini avant virgule  pas de virgule pas de chiffre apres
fs  5  1 0n     # idem mais non modale
fs  6  4 0ln    # 4 chiffres avant pas de virgule pas de chiffre apres non modal force 0 de tete
fs  7  1 3t     # 1 chiffre mini avant virgule  pas de virgule 3 apres force 0 de queue non modal.
fs  8  1.3ln    # 1 chiffre avant la vigule met . 3 chiffres apres virgule non modal force 0 de tete
fs  9  1 0n     # pour liste outil
fs  10 1.3n     # pour liste outil
fs  11 +1^3li   # force 1 chiffre avant virgule met . 3 chiffres apres virgule en incremental
fs  12 +1^3lni
fs  13 3 0ln
fs  14 1.4lt
fs  15 1^3n     # pour liste outil
fs  16 1^3l
fs  17 1.5ln
fs  18 +1^4ln
fs  19 1^3l
#endregion

#region AFFECTATION VARIABLES
fmt  "O" 6 progno$
fmt 4 speed_tar
fmt 4 dir_tar
fmt "D" 5 tloffno$
fmt "H" 4 tlngno$
fmt 1 old_xform_opid
fmt 1 old_m7
fmt 1 old_m8
fmt 1 old_m9
fmt "" 1 return
fmt  "" 2 sweep$
fmt "X" 2 tox4$
fmt "Y" 2 toy4$
fmt "Z" 2 toz4$
fmt "X" 2 old_tox4
fmt "Y" 2 old_toy4
fmt "Z" 2 old_toz4
fmt 1 mode_deg
fmt 1 debut_5X
fmt 1 xdep
fmt 1 ydep
fmt 1 zdep
fmt "R" 2 arcrad$	#3
fmt "X" 2 x$
fmt "Y" 2 y$
fmt "Z" 2 z$
fmt "I" 2 i$
fmt "J" 2 j$
fmt "X" 2 xdegage_butee
fmt "Y" 2 ydegage_butee
fmt "Z" 2 zdegage_butee
fmt 2 degagezbutee
fmt "X" 2 degagex
fmt "Y" 2 degagey
fmt "Z" 2 degagez
fmt "X" 2 degagex_plan
fmt "Y" 2 degagey_plan
fmt "Z" 2 degagez_plan
fmt "Z" 2 refht$
fmt "Z" 2 initht$
fmt "VX" 2 vx
fmt "VY" 2 vy
fmt "VZ" 2 vz
fmt "C" 2 axec
fmt "B" 2 axeab
fmt "longvec" 2 longvec
fmt "X" 2 xabs
fmt "Y" 2 yabs
fmt "Z" 2 zabs
fmt "X" 2 xr$
fmt "Y" 2 yr$
fmt "Z" 2 zr$
fmt "N" 4 n$
fmt "T"  5 t$
fmt "T" 5 next_tool$
fmt  "F" 4 fr_pos$
fmt 4 av_travail
fmt 4 av_plonge
fmt 4 av_retract
fmt  "S" 4 ss$
fmt "X" 3 xmin
fmt "Y" 3 ymin
fmt "Z" 3 zmin
fmt "X" 3 xmax
fmt "Y" 3 ymax
fmt "Z" 3 zmax
fmt 4 old_op_id
fmt "OPERATION #" 4 numop
fmt "SEQ" 4 mi1$
fmt "SEQ" 4 mi1_2
fmt "X1=" 1 x1
fmt "X2=" 1 x2
fmt "Y1=" 1 y1
fmt "Y2=" 1 y2
fmt "Z1=" 1 z1
fmt "Z2=" 1 z2
fmt 2 angle_X
fmt 2 angle_Z0
fmt 2 angle_Z1
fmt "I" 2 angle_autour_X
fmt "J" 2 angle_autour_Y
fmt "K" 2 angle_autour_Z
fmt "I" 2 angle_autour_X2
fmt "J" 2 angle_autour_Y2
fmt "K" 2 angle_autour_Z2
fmt "K" 2 angle_autour_Zp
fmt "I" 2 old_angle_autour_X
fmt "J" 2 old_angle_autour_Y
fmt "K" 2 old_angle_autour_Z
fmt "I" 2 angle_autour_X_2
fmt "J" 2 angle_autour_Y_2
fmt "K" 2 angle_autour_Z_2
fmt "" 2 cos_angleY
fmt "" 2 tr_x
fmt "" 2 tr_y
fmt "X tourne=" 1 New_x_tourne
fmt "Y tourne=" 1 New_y_tourne
fmt 2 rtcp
fmt 2 percage_5x
fmt 2 usinage_5x
fmt  "R" 2 bq200
fmt  "Z" 2 bq201
fmt  "Q" 2 bq202
fmt  "" 3 bq203
fmt  "" 3 bq204
fmt  "" 3 bq205
fmt  "F" 4 bq206
fmt  "" 4 bq208
fmt  "" 8 bq210
fmt  "P" 19 bq211
fmt  "" 3 bq212
fmt  "" 5 bq213
fmt  "" 5 bq214
fmt  "F" 8 bq239
fmt  "Q" 3 bq256
fmt  "" 3 bq257
fmt  "" 3 bq258
fmt  "" 3 bq259
fmt  "" 3 bq336
fmt 3 old_bq200
fmt 3 old_bq201
fmt "long_OA=" 1 long_OA
fmt "long_OB=" 1 long_OB
fmt "long_OC=" 1 long_OC
fmt "long_AB=" 1 long_AB
fmt "long_AC=" 1 long_AC
fmt "long_CB=" 1 long_CB
fmt "Angle A=" 1 angle_a
fmt "Angle B=" 1 angle_b
fmt "Angle C=" 1 angle_c
fmt "Cos Angle A=" 1 cosangle_a
fmt "Cos Angle B=" 1 cosangle_b
fmt "Cos Angle C=" 1 cosangle_c
fmt " produitAA =" 1 produitAA
fmt " produitBB =" 1 produitBB
fmt " produitCC =" 1 produitCC
fmt "P base=" 1 produit_p_base
fmt "C base=" 1 C_angle_base
fmt "sin_C_base=" 1 C_angle_base_sin
fmt "cos_C_base=" 1 C_angle_base_cos
fmt "P souhaiter=" 1 produit_p_souhaite
fmt "C souhaiter=" 1 C_angle_souhaite
fmt "sin_C_souhaiter=" 1 C_angle_souhaiter_sin
fmt "cos_C_souhaiter=" 1 C_angle_souhaiter_cos
fmt "C=" 1 C_rotation
fmt "C reel=" 1 C_angle_reel
fmt "C reel droit=" 1 C_angle_reel_droite
fmt "C reel gauche=" 1 C_angle_reel_gauche
fmt "P pour B=" 1 produit_p_B
fmt "sin_B_souhaiter=" 1 B_angle_sin
fmt "cos_B_souhaiter=" 1 B_angle_cos
fmt "B=" 1 B_rotation
fmt "Sens de AB=" 4 sens_de_AB
fmt "Sens de C=" 4 sens_de_C
fmt "Polarite=" 4 polarite_axe
fmt "" 1 changpolar_C
fmt "" 1 change_polar
fmt "Vecteur porteur X=" 1 Vect_porteur_x
fmt "Vecteur porteur Y=" 1 Vect_porteur_y
fmt "Vecteur porteur Z=" 1 Vect_porteur_z
fmt "angle entre repere et axe B=" 1 angle_axeB
fmt "angle entre repere et axe outil=" 1 angle_axe_outil
fmt "diff angle=" 1 dif_angle_B_outil
fmt "sens de rotation 1 pour inverser et  0 pour normal  =" 1 sens_axe_outil
fmt "TX" 1 tx
fmt "TY" 1 ty
fmt "TZ" 1 tz
fmt "TX" 1 old_tx
fmt "TY" 1 old_ty
fmt "TZ" 1 old_tz
fmt "X" 2 old_x
fmt "Y" 2 old_y
fmt "Z" 2 old_z
fmt "C" 2 axec_reel
fmt "B" 2 axeab_reel
fmt "C" 2 axec_degage_butee
fmt "B" 2 axeab_degage_butee
fmt "C" 2 old_axec_reel
fmt "B" 2 old_axeab_reel
fmt 1 xplan_inter
fmt 1 yplan_inter
fmt 1 zplan_inter
fmt "X" 2 xplan
fmt "Y" 2 yplan
fmt "Z" 2 zplan
fmt 1 lub
fmt 2 coolant$
fmt 2 spdir$
fmt 2 delta_axeC
fmt 3 old_spdir
fmt "R" 1 result
fmt 2 maxiab
fmt 2 miniab
fmt 2 maxic
fmt 2 minic
fmt 2 erreur
fmt 2 autre_solution
fmt 2 use_retract_plane
fmt 2 use_secu_start_end
fmt 2 use_secu_plane
fmt 2 feed_plane
fmt 2 retract_plane
fmt 2 secu_plane
fmt 2 garde_plane
fmt 2 vecteur_degage
fmt 2 avance_param
fmt 2 combinaison_axes
fmt 2 cinematique
fmt 2 gestion_rotation
fmt 2 use_plane_spacial
fmt 2 type_machine
fmt 2 Cycle_lissage
fmt 1 m1
fmt 1 m2
fmt 1 m3
fmt 1 m4
fmt 1 m5
fmt 1 m6
fmt 1 m7
fmt 1 m8
fmt 1 m9
fmt 2 use_fmax_plane
fmt 2 degage_butee
fmt "X=" 2 vec_perc_X
fmt "Y=" 2 vec_perc_Y
fmt "Z=" 2 vec_perc_Z
fmt "" 2 Lg_vec_per
fmt "X" 2 surf_piece_X
fmt "Y" 2 surf_piece_Y
fmt "Z" 2 surf_piece_Z
fmt "X" 2 plan_secu_X
fmt "Y" 2 plan_secu_Y
fmt "Z" 2 plan_secu_Z
fmt "Z" 2 plan_secu_end_Z
fmt "X" 2 plan_retract_X
fmt "Y" 2 plan_retract_Y
fmt "Z" 2 plan_retract_Z
fmt "X" 2 plan_garde_X
fmt "Y" 2 plan_garde_Y
fmt "Z" 2 plan_garde_Z
fmt "X" 2 drl_depth_x$
fmt "Y" 2 drl_depth_y$
fmt "Z" 2 drl_depth_z$
fmt "X" 2 drl_depth_xplan
fmt "Y" 2 drl_depth_yplan
fmt "Z" 2 drl_depth_zplan
fmt 2 old_tool_op
fmt 2 ecri_cor
fmt 2 usi_5X
fmt 1 m1_
fmt 1 m5_
fmt 1 m9_
fmt 2 G68pt2_P_    #FS
fmt 2 old_usi_5x
#------------------------------- FS origines
fmt "G" 4 g_wcs
fmt "G" 4 origine                  # origine d'usinage G54 a G59 pour NC
fmt "G54.1 P"  4 originebis        #0046 origine d'usinage G54.1 P1 Ã  G54.1 P49 pour NC
fmt "G" 4 old_origine              # Stocage de la valeur precedente de origine d'usinage
fmt     4 workofs$
fmt     4 oldworkofs
fmt     4 workofs_                #Numéro de l'origine actif depuis prmcode$
fmt " " 4 mr4$

#0079
fmt 2   Val_origine_Z
fmt 2   Val_origine_Y
fmt 2   Val_origine_X
fmt 2   Old_Val_origine_Z
fmt 2   Old_Val_origine_Y
fmt 2   Old_Val_origine_X

fmt 2     clamp
fmt "N"    4     num
#----------------------------------- palpages
fmt  "U" 2 u_palpage    #0047
fmt  "V" 2 v_palpage
fmt  "X" 2 x_palpage
fmt  "Y" 2 y_palpage
fmt  "Z" 2 z_palpage
fmt  "S" 4 w_palpage
fmt  "D" 2 d_palpage
fmt  "A" 2 a_palpage
fmt  "B" 2 b_palpage
fmt  "K" 2 k_palpage
fmt  "Q" 3 _shftdrl
fmt  "Z" 2 _refht
fmt     4 palpage
fmt     4 _scycle
palpeur   : 0
_scycle : 0
palpage   : 0

fmt     4 utilise_cycle_lissage
#endregion

#region VALEURS PAR DEFAUT
ecri_cor : 1
bug1$     : 2
conteur_string : 0
old_op_id : 999
ss$ = abs(ss$)
numop : 0
percage_5x : 0
usinage_5x : 0
#Vect_porteur_x :  1	#0
#Vect_porteur_y :  0
#Vect_porteur_z :  0	#1
changpolar_C : 1
polarite_axe : 1
lub : 0
old_tox4 : 0
old_toy4 : 0
old_toz4 : 0
old_angle_autour_X : 99999.99
old_angle_autour_Y : 99999.99
old_angle_autour_Z : 99999.99
x$ : 99999.99
y$ : 99999.99
z$ : 99999.99
i$ : 99999.99
j$ : 99999.99
sweep$ : 99999.99
tox4$ : 99999.99
toy4$ : 99999.99
toz4$ : 99999.99
arcrad$ : 99999.99
refht$ : 99999.99
initht$ : 99999.99
xr$ : 99999.99
yr$ : 99999.99
zr$ : 99999.99
change_polar : -1
old_axec_reel : 0
old_axeab_reel : 0
delta_axeC : 0
erreur : 0
autre_solution : 0
avance_param : -1
Cycle_lissage : 0
use_fmax_plane : 1
subprg$    : yes$
mergesub$  : 0
degagezbutee : 0
degage_butee : 0

num : 1
util_x_ori = 0      #0199 utiliser les origines par orientation 0 = NON, 1 = OUI
clamp : -1            #clampE par dEfaut
#endregion

#region DECLARATION STRING
sext$ : ".nc"
smachine : ""
slettrea : "A"
slettreb : "B"
slettrec : "C"
srot : "G69"
sg43 : "G43"
sluboff: ""
sarret_optionnel : "M1"
sannul_plan :"G69"
sannul_Dec :"G52 X0 Y0 Z0"
sm99 : ""
sinc : "G91"
sabs : "G90"
smode_deg : "G28"
smode_deg_plan : "G53"
sc00 : "G40"
sc01 : "G41"
sc02 : "G42"
splane_spacial : "G68.2 P1 "
splane_reset_turn : ""
splane_reset_stay : ""
serreur_visu : ""
serreuraxeab_1 : " -  ATTENTION ARRET POST-PRO : L'axe B sort de ses limites de "
serreuraxeab_2 : ", aucune solution trouvEe, veuillez modifier le parcours Operation nÂ°"
schange_polar : "ATTENTION Changement de polaritE suite butEe axe B "

Sold_snom_RUD : ""   #0080
snom_RUD : ""
sinfo_origine : ""
svide : ""

s_open_com    : "("   #String for open parenthesis "("
s_close_com   : ")"   #String for close parenthesis ")"
#--------------------------
sg00 : "G0"
sg01 : "G1"
sg02 : "G2"
sg03 : "G3"
sq04 : "G4"
sg05 : "G80"
sgcode : ""
fstrsel sg00 gcode$ sgcode 6 -1

sm00 : "M4"
sm01 : "M5"
sm02 : "M3"
spdlon : ""
spdlsel = fsg3(spdir$)
fstrsel  sm00 spdlsel spdlon 3 -1

sp00 : ""
sp01 : ""
spolar : ""
fstrsel sp00 mi1_2 spolar 2 -1

sr00 : "G49"
sr01 : "G43.4"
srtcp : ""
fstrsel sr00 rtcp srtcp 2 -1

splanR00 : "G17"
splanR01 : "G19"
splanR02 : "G18"
splanR    : ""
fstrsel  splanR00 plane$ splanR 3 -1

#frein axes rotatifs
fmt 1 frein_AB
sf_AB00 : "M10 (CLAMP ON AXE A-B)"
sf_AB01 : "M11 (CLAMP OFF AXE A-B)"
sfrein_AB : ""
fstrsel sf_AB00 frein_AB sfrein_AB 2 -1

fmt 1 frein_C
sf_C00 : "M78 (CLAMP ON AXE C)"
sf_C01 : "M79 (CLAMP OFF AXE C)"
sfrein_C : ""
fstrsel sf_C00 frein_C sfrein_C 2 -1

# --------------------------------------------------------------------------
#Canned drill cycle reference height
sg98    : "G98"      #Reference at initht
sg99    : "G99"      #Reference at refht
sgdrlref : ""        #Target string

fstrsel sg98 drillref sgdrlref 2 -1
drillref     : 0     #Select drill reference
# --------------------------------------------------------------------------

pcorrection
    if cc$ = 41, sc01
    if cc$ = 42, sc02
    if cc$ = 140, sc00

#endregion

#region CALCUL
pcalcul_block_form
    if stck_crnr$ = 0,  [
                        xmin = stck_x$ - (stck_ht$ / 2)
                        ymin = stck_y$ - (stck_wdth$ / 2)
                        xmax = stck_x$ + (stck_ht$ / 2)
                        ymax = stck_y$ + (stck_wdth$ / 2)
                        ]
    if stck_crnr$ = 1 | stck_crnr$ = 5, [
                                        xmin = stck_x$
                                        ymin = stck_y$ - stck_wdth$
                                        xmax = stck_x$ + stck_ht$
                                        ymax = stck_y$
                                        ]
    if stck_crnr$ = 2 | stck_crnr$ = 6, [
                                        xmin = stck_x$ - stck_ht$
                                        ymin = stck_y$ - stck_wdth$
                                        xmax = stck_x$
                                        ymax = stck_y$
                                        ]
    if stck_crnr$ = 3 | stck_crnr$ = 7, [
                                        xmin = stck_x$ - stck_ht$
                                        ymin = stck_y$
                                        xmax = stck_x$
                                        ymax = stck_y$ + stck_wdth$
                                        ]
    if stck_crnr$ = 4 | stck_crnr$ = 8, [
                                        xmin = stck_x$
                                        ymin = stck_y$
                                        xmax = stck_x$ + stck_ht$
                                        ymax = stck_y$ + stck_wdth$
                                        ]
    if stck_crnr$ < 5,  [
                        zmin = stck_z$ - stck_thck$
                        zmax = stck_z$
                        ]
    else,   [
            zmin = stck_z$
            zmax = stck_z$ + stck_thck$
            ]
pnumop      # numerotation des operations post-processees
    !old_op_id
    if op_id$ <> old_op_id | old_xform_opid <> xform_op_id$,
        [
        numop = numop + 1
        if old_tool_op <> 154, debut_5X = 0
        ]
pcalcul_plan
    old_angle_autour_X = angle_autour_X
    old_angle_autour_Y = angle_autour_Y
    old_angle_autour_Z = angle_autour_Z
    angle_autour_Y = asin (m3$)
    cos_angleY = cos (angle_autour_Y)
    angle_autour_Y = angle_autour_Y *-1			# GESTION DU "J"
    if cos_angleY > 0.005 , [
        #3 angle autour de X
        tr_x = m9$ / cos_angleY
        tr_y = -m6$ / cos_angleY
        angle_autour_X  = atan2 (tr_y,tr_x)
        if angle_autour_X > 180 , angle_autour_X = angle_autour_X - 360
        angle_autour_X = angle_autour_X * -1 	# GESTION DU "I"
        #4 angle autour de Z
        tr_x = m1$ / cos_angleY
        tr_y = -m2$ / cos_angleY
        angle_autour_Z  = atan2 (tr_y,tr_x)
        if angle_autour_Z > 180 , angle_autour_Z = angle_autour_Z - 360
        angle_autour_Z = angle_autour_Z * -1	# GESTION DU "K"
        ]
    else,   [
        # angle autour de X
        angle_autour_X  = 0
        # angle autour de Z
        angle_autour_Z  = atan2 (m4$,m5$)
        if angle_autour_Z > 180 , angle_autour_Z = angle_autour_Z - 360
        angle_autour_Z = angle_autour_Z * -1
        ]
    #+FS *****
    if G68pt2_P_ = 1,
        [
        if m5$ > 0 & mi1$ = 0, angle_autour_Z = angle_autour_Z - 180
        #if m5$ < 0 & mi1$ = 1, angle_autour_Z = angle_autour_Z + 180
        #
        ]
    #"voir la matrice = ",e$, *m1$,*m2$,*m3$,e$,*m4$,*m5$,*m6$,e$,*m7$,*m8$,*m9$, e$
    #
    #"coucou", *angle_autour_X, *angle_autour_Y, *angle_autour_Z, "cos_angleY", *cos_angleY, e$
    if gestion_rotation = 2,    [
        if combinaison_axes = 1,    [
            if m9$ < 1,    [
                if m9$ > -1,    [
                    angle_autour_X2 = acos(m9$)
                    angle_autour_Z2 = atan2(m3$,-m6$)
                    angle_autour_Zp = atan2(m7$,m8$)
                    ]
                else,   [
                    angle_autour_X2 = 180
                    angle_autour_Z2 = (atan2(-m2$,m1$)) * -1
                    angle_autour_Zp = 0
                    ]
                ]
            else,   [
                angle_autour_X2 = 0
                angle_autour_Z2 = atan2(-m2$,m1$)
                angle_autour_Zp = 0
                ]
            ]
        if combinaison_axes = 2 | combinaison_axes = 3 ,    [
            if m9$ < 1, [
                if m9$ > -1,    [
                    angle_autour_Y2 = acos(m9$)
                    angle_autour_Z2 = atan2(m6$,m3$)
                    angle_autour_Zp = atan2(m8$,-m7$) #atan2(m8$,m7$)
                    ]
                else,   [
                    angle_autour_Y2 = 180
                    angle_autour_Z2 = (atan2(m4$,m5$)) * -1
                    angle_autour_Zp = 0
                    ]
                ]
            else,   [
                angle_autour_Y2 = 0
                angle_autour_Z2 = atan2(m4$,m5$)
                angle_autour_Zp = 0
                ]
            ]
        angle_autour_X2 = angle_autour_X2
        angle_autour_Y2 = angle_autour_Y2
        angle_autour_Z2 = (angle_autour_Z2 * -1) + 180
        angle_autour_Zp = (angle_autour_Zp * -1) + 180
        if mi1$ = 1 | m9$ = 1,  [
            angle_autour_X2 = angle_autour_X2 * -1
            angle_autour_Y2 = angle_autour_Y2 * -1
            angle_autour_Z2 = angle_autour_Z2 + 180
            angle_autour_Zp = angle_autour_Zp + 180
            if m9$ = 1, angle_autour_Zp = angle_autour_Z2
            ]
        if angle_autour_X2 > 180 , angle_autour_X2 = angle_autour_X2 - 360
        if angle_autour_Y2 > 180 , angle_autour_Y2 = angle_autour_Y2 - 360
        if angle_autour_Z2 > 180 , angle_autour_Z2 = angle_autour_Z2 - 360
        if angle_autour_Zp > 180 , angle_autour_Zp = angle_autour_Zp - 360
        if angle_autour_X2 < -180 , angle_autour_X2 = angle_autour_X2 + 360
        if angle_autour_Y2 < -180 , angle_autour_Y2 = angle_autour_Y2 + 360
        if angle_autour_Z2 < -180 , angle_autour_Z2 = angle_autour_Z2 + 360
        if angle_autour_Zp < -180 , angle_autour_Zp = angle_autour_Zp + 360
    ]
pcalcul_axe_reels
    if usinage_5x = 0,  [
        tx=m7$
        ty=m8$
        tz=m9$
        old_axec_reel = axec_reel
        old_axeab_reel = axeab_reel
        ]
    else,   [
        pcalcul_vecteur_5x
        tx=vx
        ty=vy
        tz=vz
        ]
    if Vect_porteur_x <> 0 & Vect_porteur_y <> 0 & Vect_porteur_z <> 1 ,    [
        #"voir tx y$ et z$", *tx, *ty, *tz, e$
        long_OA = 1
        long_OC = 1
        long_OB = 1
        long_AC = sqrt((0 - tx)^2 + (0 - ty)^2 + (1 - tz)^2)
        long_CB = sqrt((0 - Vect_porteur_x)^2 + (0 - Vect_porteur_y)^2 + (1 - Vect_porteur_z)^2)
        long_AB = sqrt((tx - Vect_porteur_x)^2 + (ty - Vect_porteur_y)^2 + (tz - Vect_porteur_z)^2)
        if abs(tz) <> 1,    [
            angle_axeB = atan2(Vect_porteur_y,Vect_porteur_x)
            angle_axe_outil = atan2(ty,tx)
            dif_angle_B_outil = angle_axe_outil - angle_axeB
            if dif_angle_B_outil < 0,  dif_angle_B_outil = dif_angle_B_outil + 360
            if dif_angle_B_outil < 180, sens_axe_outil = -1
            else, sens_axe_outil = 1
            cosangle_b = (long_OC^2 + long_OA^2 - long_AC^2)/(2*long_OC*long_OA)
            cosangle_c = (long_OB^2 + long_OA^2 - long_AB^2)/(2*long_OB*long_OA)
            cosangle_a = (long_OC^2 + long_OB^2 - long_CB^2)/(2*long_OC*long_OB)
            if cosangle_a <= 1 & cosangle_a >= -1,angle_b = (acos(cosangle_b))
            if cosangle_b <= 1 & cosangle_b >= -1,angle_c = (acos(cosangle_c))
            if cosangle_c <= 1 & cosangle_c >= -1,angle_a = (acos(cosangle_a))
            produit_p_base = (angle_a + angle_b + angle_c)/2
            produitAA = ((sin(produit_p_base - angle_a))*(sin(produit_p_base - angle_b)))
            produitBB = ((sin(angle_a))*(sin(angle_b)))
            produitCC = ((sin(produit_p_base))*(sin(produit_p_base - angle_c)))
            C_angle_base_sin = sqrt(abs(produitAA/produitBB))
            if Vect_porteur_x, C_angle_base_cos = sqrt(abs(produitCC/produitBB)), else,  C_angle_base_cos = 0
            C_angle_base = (atan2(C_angle_base_sin,C_angle_base_cos))*2
            angle_c = angle_a
            produit_p_souhaite = (angle_a + angle_b + angle_c)/2
            C_angle_souhaiter_sin = ((sqrt (abs(((sin(produit_p_souhaite - angle_a))*(sin(produit_p_souhaite - angle_b)))/(sin(angle_a)*(sin(angle_b)))))))
            C_angle_souhaiter_cos = ((sqrt (abs(((sin(produit_p_souhaite))*(sin(produit_p_souhaite - angle_c)))/(sin(angle_a)*(sin(angle_b)))))))
            C_angle_souhaite = (atan2(C_angle_souhaiter_sin,C_angle_souhaiter_cos))*2
            C_rotation = C_angle_souhaite - C_angle_base
            C_angle_reel_droite =  ( C_angle_base * 2 ) + C_rotation
            C_angle_reel_gauche = C_rotation
            if C_angle_reel_droite > 180, C_angle_reel_droite = C_angle_reel_droite -360
            if C_angle_reel_gauche > 180, C_angle_reel_gauche = C_angle_reel_gauche -360
            produit_p_B = (angle_a + angle_b + angle_c)/2
            B_angle_sin = ((sqrt (abs(((sin(produit_p_B - angle_c))*(sin(produit_p_B - angle_a)))/(sin(angle_c)*(sin(angle_a)))))))
            B_angle_cos = ((sqrt(abs (((sin(produit_p_B))*(sin(produit_p_B - angle_b)))/(sin(angle_c)*(sin(angle_a)))))))
            B_rotation = (atan2(B_angle_sin,B_angle_cos))*2
            if polarite_axe = 1,    [
                if sens_axe_outil = -1,    [
                    C_angle_reel = C_angle_reel_droite * changpolar_C * -1 * sens_de_C
                    B_rotation = B_rotation  * -1 * sens_de_AB
                    ]
                else,   [
                    C_angle_reel = C_angle_reel_gauche * changpolar_C * -1 * sens_de_C
                    B_rotation = B_rotation *  -1 * sens_de_AB
                    ]
                ]
            else,   [
                if sens_axe_outil = -1,    [
                    C_angle_reel = C_angle_reel_gauche * changpolar_C * sens_de_C * -1
                    B_rotation = B_rotation * sens_de_AB
                    ]
                else,   [
                    C_angle_reel = C_angle_reel_droite * changpolar_C * sens_de_C * -1
                    B_rotation = B_rotation * sens_de_AB
                    ]
            ]
            axeab_reel = B_rotation
            axec_reel = C_angle_reel
        ]
        else,    [
            axec_reel = angle_autour_Z
            axeab_reel = 0
            ]
        if type_machine = 3,    [
            axec_reel = axec_reel + 180
            axeab_reel = axeab_reel * -1
            ]
        if type_machine = 9,    [
            axec_reel = axec_reel + 180
            axeab_reel = axeab_reel * -1
            ]
        ]
    else,    [
         if tz <> 1,    [
            if combinaison_axes = 1, axec_reel = (atan2(tx,ty) * -1) + 180
            if combinaison_axes = 2 | combinaison_axes = 3 , axec_reel = (atan2(ty,-tx) * -1) + 180
            axeab_reel = acos(tz)
            ]
         else,    [
            axec_reel = angle_autour_Z #FS + 180
            axeab_reel = 0
            ]
        ]
    if mi1$ = 1,    [
        axec_reel = axec_reel + 180
        axeab_reel = axeab_reel * -1
        ]
    if change_polar = 1,    [
        axec_reel = axec_reel + 180
        axeab_reel = axeab_reel * -1
        ]
    !old_axec_reel
    delta_axeC = axec_reel - old_axec_reel
    if abs(delta_axeC) > 180,   [
        if delta_axeC > 0, axec_reel = axec_reel - 360
        if delta_axeC < 0, axec_reel = axec_reel + 360
        ]
    if axec_reel > 360, axec_reel = axec_reel - 360
    if axec_reel < -360, axec_reel = axec_reel + 360
    #*tz, "voir axes", *axec_reel, *axeab_reel, e$
    if angle_autour_X=0 & angle_autour_Y=0 & angle_autour_Z=0 & usinage_5x = 0, [
        axec_reel = 0
        axeab_reel = 0
          ]
p_filtre
    !tx
    !ty
    !tz
    !old_tx
    !old_ty
    !old_ty
    #"voir", *old_tx, *tx, *old_ty, *ty, e$
    if axeab_reel <> 0,    [
        if tx <> 0 | ty <> 0,    [
            if (old_tx <= 0 & tx > 0 & old_ty = 0 & ty = 0)
            | (old_tx >= 0 & tx < 0 & old_ty = 0 & ty = 0)
            | (old_tx = 0 & tx = 0 & old_ty >= 0 & ty < 0)
            | (old_tx = 0 & tx = 0 & old_ty <= 0 & ty > 0)
            | (old_tx < 0 & tx > 0 & old_ty < 0 & ty > 0)
            | (old_tx > 0 & tx < 0 & old_ty > 0 & ty < 0)
            | (old_tx = 0 & tx > 0 & old_ty = 0 & ty < 0)
            | (old_tx = 0 & tx < 0 & old_ty = 0 & ty > 0)
            | autre_solution = 1,    [
                if autre_solution = 1, pchange_polar
                #else, " ; Changement de polaritE", e$
                change_polar = change_polar * -1
                pcalcul_axe_reels
                ]
            ]
        ]
pcalcul_degage_vecteur
    xdegage_butee = old_x + (vecteur_degage * old_tx)
    ydegage_butee = old_y + (vecteur_degage * old_ty)
    zdegage_butee = old_z + (vecteur_degage * old_tz)
pcalcul_degage_axe
    axec_degage_butee = old_axec_reel + 180
    axeab_degage_butee = old_axeab_reel * -1
    if axec_degage_butee > 360, axec_degage_butee = axec_degage_butee - 360
    if axec_degage_butee < -360, axec_degage_butee = axec_degage_butee + 360
    old_axec_reel = axec_degage_butee
    pcalcul_axe_reels
pcalcul_percage_5X
    #"voir fond percage abs", *drl_depth_x$ ,*drl_depth_y$ ,*drl_depth_z$,e$
    vec_perc_X = u$ - drl_depth_x$
    vec_perc_Y = v$ - drl_depth_y$
    vec_perc_Z = w$ - drl_depth_z$
    Lg_vec_per = sqrt(vec_perc_X^2 + vec_perc_Y^2 + vec_perc_Z^2)
    vec_perc_X = vec_perc_X / Lg_vec_per
    vec_perc_Y = vec_perc_Y / Lg_vec_per
    vec_perc_Z = vec_perc_Z / Lg_vec_per
    surf_piece_X = drl_depth_x$ + (abs(depth$)  * vec_perc_X)
    surf_piece_Y = drl_depth_y$ + (abs(depth$)  * vec_perc_Y)
    surf_piece_Z = drl_depth_z$ + (abs(depth$)  * vec_perc_Z)
    #"voir surf_piece abs" , *surf_piece_X, *surf_piece_Y, *surf_piece_Z ,e$
    plan_secu_X = surf_piece_X + ((secu_plane + garde_plane) * vec_perc_X)
    plan_secu_Y = surf_piece_Y + ((secu_plane + garde_plane) * vec_perc_Y)
    plan_secu_Z = surf_piece_Z + ((secu_plane + garde_plane) * vec_perc_Z)
    #"voir plan secu abs" , *plan_secu_X, *plan_secu_Y, *plan_secu_Z ,e$
    plan_retract_X = surf_piece_X + ((retract_plane + garde_plane) * vec_perc_X)
    plan_retract_Y = surf_piece_Y + ((retract_plane + garde_plane) * vec_perc_Y)
    plan_retract_Z = surf_piece_Z + ((retract_plane + garde_plane) * vec_perc_Z)
    #"voir retract abs" , *plan_retract_X, *plan_retract_Y, *plan_retract_Z ,e$
    plan_garde_X = surf_piece_X + (garde_plane * vec_perc_X)
    plan_garde_Y = surf_piece_Y + (garde_plane * vec_perc_Y)
    plan_garde_Z = surf_piece_Z + (garde_plane * vec_perc_Z)
    #"voir garde abs" , *plan_garde_X, *plan_garde_Y, *plan_garde_Z ,e$
    # "recalcul dans le plan" ,e$
    if mill5$ = 2,
        [
        xdep = surf_piece_X
        ydep = surf_piece_Y
        zdep = surf_piece_Z
        pcalcul_xyz_plan
        surf_piece_X = xplan
        surf_piece_Y = yplan
        surf_piece_Z = zplan
        #"voir surf_piece plan" , *surf_piece_X, *surf_piece_Y, *surf_piece_Z ,e$
        xdep = plan_secu_X
        ydep = plan_secu_Y
        zdep = plan_secu_Z
        pcalcul_xyz_plan
        plan_secu_X = xplan
        plan_secu_Y = yplan
        plan_secu_Z = zplan
        #"voir plan secu plan", *plan_secu_X, *plan_secu_Y, *plan_secu_Z ,e$
        xdep = plan_retract_X
        ydep = plan_retract_Y
        zdep = plan_retract_Z
        pcalcul_xyz_plan
        plan_retract_X = xplan
        plan_retract_Y = yplan
        plan_retract_Z = zplan
        #"voir retract plan" , *plan_retract_X, *plan_retract_Y, *plan_retract_Z ,e$
        xdep = plan_garde_X
        ydep = plan_garde_Y
        zdep = plan_garde_Z
        pcalcul_xyz_plan
        plan_garde_X = xplan
        plan_garde_Y = yplan
        plan_garde_Z = zplan
        #"voir garde abs" , *plan_garde_X, *plan_garde_Y, *plan_garde_Z ,e$
        xdep = drl_depth_x$
        ydep = drl_depth_y$
        zdep = drl_depth_z$
        pcalcul_xyz_plan
        drl_depth_xplan = xplan
        drl_depth_yplan = yplan
        drl_depth_zplan = zplan
        ]
    #"voir fond percage plan" , *drl_depth_xplan, *drl_depth_yplan, *drl_depth_zplan ,e$
    plan_secu_Z = drl_init_z$
    plan_retract_Z = drl_ref_z$
    plan_secu_end_Z = plan_secu_Z
    if use_secu_plane = 0 ,
        [
        plan_secu_end_Z = plan_retract_Z
        plan_secu_Z = plan_retract_Z
        ]
    if use_secu_start_end = 1,
        [
        plan_secu_Z = plan_retract_Z
        ]
    plan_secu_Z = zr$ #+FS
pcalcul_percage
    pcalcul_percage_5X
    if initht$ <> refht$, drillref = 0    #+FS
      else, drillref = 1
    bq200 = refht$ #- w$
    if percage_5x = 1, bq200 = plan_garde_Z - plan_secu_Z
    bq201 = depth$#(depth$ - tosz$) - abs(refht$ - tosz$)
    if percage_5x = 1, bq201 = depth$ - drl_sel_tos$
    if drillcyc$ = 0 | drillcyc$ = 3, bq202 = abs(bq201)
    else, bq202 = abs(peck1$)
    bq203 = tosz$
    if percage_5x = 1, bq203 = surf_piece_Z
    bq204 = initht$ #- bq203
    if percage_5x = 1, bq204 = plan_secu_Z
    if drillcyc$ = 1 , bq205 = abs(shftdrl$)
    bq206 = frplunge$
    if drillcyc$ = 4, bq208 = frplunge$
    else, bq208 = 9999
    bq210 = 0
    bq211 = dwell$
    if drillcyc$ = 1, bq212 = abs(retr$)
    if drillcyc$ = 2, bq213 = abs(bq201/bq202)
    else, bq213 = 0
    bq214 = abs(shftdrl$)
    if tool_typ$ = 5, bq239 = n_tap_thds$ * ss$
    if tool_typ$ = 4, bq239 = n_tap_thds$ * ss$
    if drillcyc$ = 5 , bq256 = abs(shftdrl$)    #abs(retr$)
    else, bq256 = 0.2
    if drillcyc$ = 6, bq257 = bq202
    if drillcyc$ = 2, bq257 = abs(peck2$)
    if drillcyc$ = 2, bq258 = 0.2
    if drillcyc$ = 2, bq259 = 0.2
    if drillcyc$ = 5, bq336 = abs(peckclr$)
    else, bq336 = 0
pcalcul_op
    if tool_op$ = 28 | tool_op$ = 29 | tool_op$ = 45 | tool_op$ = 46 | tool_op$ = 48 |
    tool_op$ = 49 | tool_op$ = 110 | tool_op$ = 111 | tool_op$ = 112 | tool_op$ = 113|
    tool_op$ = 154 | tool_op$ = 441 | tool_op$ = 442 | tool_op$ = 443 | tool_op$ = 444 |
    tool_op$ = 445 | tool_op$ = 446 | tool_op$ = 447 | tool_op$ = 448 | tool_op$ = 449 |
    tool_op$ = 450 | tool_op$ = 451 | nextop$ = 11,  [
                                        usinage_5x = 1
                                        if opcode$ = 16, percage_5x = 1
                                        ]
    else, usinage_5x = 0, percage_5x = 0
pcalcul_matrice_5x
    longvec = sqrt(vx*vx+vy*vy+vz*vz)
    if longvec = 0, longvec = 1
    vx = vx/longvec
    vy = vy/longvec
    vz = vz/longvec
    angle_X = acos(vz)
    angle_Z0 = 0
    angle_Z1 = atan2(vx,vy)
    if (vx=0 & vy=0) , angle_Z1 = 0
    m1 = m1$
    m2 = m2$
    m3 = m3$
    m4 = m4$
    m5 = m5$
    m6 = m6$
    m7 = m7$
    m8 = m8$
    m9 = m9$
    m1$ = (cos(angle_Z0) * cos(angle_Z1)) - (cos(angle_X) * sin(angle_Z0) * sin(angle_Z1))
    m2$ = -(cos(angle_X) * cos(angle_Z1) * sin(angle_Z0)) - (cos(angle_Z0) * sin(angle_Z1))
    m3$ = (sin(angle_X) * sin(angle_Z0))
    m4$ = (cos(angle_Z1) * sin(angle_Z0)) + (cos(angle_X) * cos(angle_Z0) * sin(angle_Z1))
    m5$ = (cos(angle_X) * cos(angle_Z0) * cos(angle_Z1)) - (sin(angle_Z0) * sin(angle_Z1))
    m6$ = -sin(angle_X) * cos(angle_Z0)
    m7$ = sin(angle_X) * sin(angle_Z1)
    m8$ = sin(angle_X) * cos(angle_Z1)
    m9$ = cos(angle_X)
pcalcul_vecteur_5x
    vx = u$ - x$
    vy = v$ - y$
    vz = w$ - z$
    longvec = sqrt(vx*vx+vy*vy+vz*vz)
    if longvec = 0, longvec = 1
    vx = vx/longvec
    vy = vy/longvec
    vz = vz/longvec
pcalcul_xyz_plan
    # tourne le point autour de Z
    xplan_inter = ydep  * sin(angle_autour_Z) + xdep  * cos(angle_autour_Z)
    yplan_inter = ydep  * cos(angle_autour_Z) - xdep  * sin(angle_autour_Z)
    #  tourne le point autour Y
    zplan_inter = xplan_inter * sin(angle_autour_Y) + zdep * cos(angle_autour_Y)
    xplan = xplan_inter * cos(angle_autour_Y) - zdep  * sin(angle_autour_Y)
    # tourne le point autour de X
    yplan = zplan_inter * sin(angle_autour_X) + yplan_inter * cos(angle_autour_X)
    zplan = zplan_inter * cos(angle_autour_X) - yplan_inter * sin(angle_autour_X)
pcalcul_xyz_absolu
    !angle_autour_X, !angle_autour_Y, !angle_autour_Z
    angle_autour_X_2 = angle_autour_X * -1
    angle_autour_Z_2 = angle_autour_Z * -1
    angle_autour_Y_2 = angle_autour_Y * -1
    #   tourne le point autour X
    y1 = zdep * sin(angle_autour_X_2) + ydep * cos(angle_autour_X_2)
    z1 = zdep * cos(angle_autour_X_2) - ydep * sin(angle_autour_X_2)
    #   tourne le point autour Y
    zabs = xdep * sin(angle_autour_Y_2) + z1  * cos(angle_autour_Y_2)
    x1 = xdep * cos(angle_autour_Y_2) - z1  * sin(angle_autour_Y_2)
    # tourne le point autour de Z
    xabs = y1  * sin(angle_autour_Z_2) + x1  * cos(angle_autour_Z_2)
    yabs = y1  * cos(angle_autour_Z_2) - x1  * sin(angle_autour_Z_2)
pavance
    if (fr_pos$ = av_travail | fr_pos$ = av_plonge) & mr7$ = 1,
        [
        if (av_travail = fr_pos$) & (av_plonge = fr_pos$), avance_param = 1, savance
        else,    [
            if av_travail = fr_pos$, avance_param = 1, savance
            if av_plonge = fr_pos$, avance_param = 0, savance
            ]
        ]
    else, fr_pos$
pavance_force
    if (fr_pos$ = av_travail | fr_pos$ = av_plonge) & mr7$ = 1,
        [
        if (av_travail = fr_pos$) & (av_plonge = fr_pos$), avance_param = 1, *savance
        else,    [
            if av_travail = fr_pos$, avance_param = 1, *savance
            if av_plonge = fr_pos$, avance_param = 0, *savance
            ]
        ]
    else, *fr_pos$
#endregion

#region tourne_axes
fmt  "X" 2 X_tourne
fmt  "Y" 2 Y_tourne
fmt  "I" 2 I_tourne
fmt  "J" 2 J_tourne
fmt  "X" 2 Xr_tourne
fmt  "Y" 2 Yr_tourne
fmt  "A=" 10 A_plan
fmt  "B=" 10 B_plan
fmt       1 old_plane
fmt      1 tourne

pcal_tourne    #TOURNE LES AXES UNIQUEMENT SUR ***LES PLANS**
    #tourne = atan2(m6$,m3$)
    #"voir 1 : ", *tourne ,e$
    #tourne = atan2(m6$,-m3$)
    #"voir 2 : ", *tourne ,e$
    #tourne = atan2(-m6$,m3$)
    #"voir 3 : ", *tourne ,e$
    #tourne = atan2(-m6$,-m3$)
    #"voir 4 actuel: ", *tourne ,e$
    #tourne = atan2(m3$,m6$)
    #"voir 5 : ", *tourne ,e$
    tourne = atan2(-m3$,m6$)
    #"voir 6 : ", *tourne ,e$
    #tourne = atan2(m3$,-m6$)
    #"voir 7 : ", *tourne ,e$
    #tourne = atan2(-m3$,-m6$)
    #"voir 8 : ", *tourne ,e$
    #if m1$ = 1 & m5$ = 1 &  m9$ = 1 , tourne = 0    #A PLAT DONC FORCE TOURNE A ZERO
    if m1$ = 1, m1_ = 1
    if m5$ = 0, m5_ = 0
    if m9$ = 1, m9_ = 1

    #BIDOUILLE
    if m1_ = 1, tourne = 0   #A PLAT DONC FORCE TOURNE A ZERO
    if m9_ = 1, tourne = 0   #A PLAT DONC FORCE TOURNE A ZERO
    if m1_ = 0 & m5_ = 0 & m9_ = 0, tourne = 0
    # pas d'autres solutions avec l'axe A en +
    if G68pt2_P_ = 1,
        [
        if m5$ > 0 & mi1$ = 0 & m9$ <> 1, tourne = 180
        ]
    #"VOIR :", *m1$,*m5$,*m9$, "tourne :", *tourne, e$
    #FIN DE BIDOUILLE

    #AXES
    X_tourne = y$ * sin(tourne) + x$ * cos(tourne)
    Y_tourne = y$ * cos(tourne) - x$ * sin(tourne)
    #ARCS
    I_tourne = j$ * sin(tourne) + i$ * cos(tourne)
    J_tourne = j$ * cos(tourne) - i$ * sin(tourne)
    #Pts dEpart - fin OPs
    Xr_tourne = yr$ * sin(tourne) + xr$ * cos(tourne)
    Yr_tourne = yr$ * cos(tourne) - xr$ * sin(tourne)

#endregion

#region simulation
fmt "la string commence a:" 4 conteur_string
fmt 1 simu
simu : 0
sextsub$ : ".ini"
snom : ""
snom_ini : ""
spathnc_original : ""
sous_chaine : "appdata\local\temp"
sdllMachSim : "E:\projet VS2017\Simulation_FICAM\Simulation_FICAM\x64\Release\Simulation_FICAM.dll" # pour debug cedric
#sdllMachSim : "C:\Users\Public\Documents\shared Mcam2019\MachineSimulation\MachSim\Simulation_FICAM.dll"
#sdll :"MachineSimulation\MachSim\convert_iso.dll"
psimulation
    spathnc_original = spathnc$
    conteur_string = scan(sous_chaine,spathnc_original)
    if st_str_ix$, simu = 1
    if simu = 1,
    [
        spathsub$ = spathpst$
        snamesub$ = snom_ini
        subout$ = 1
        snom = spathnc$ + snamenc$ + sextnc$
        "KEY=38226F8454I00C00A0000",e$
        "REP =", *snom, e$
        "USE_OTHER_NC_FILE = YES" ,e$
        "[SHIFT ORIGIN BETWEEN MACHSIM TO REALITY]" ,e$
        "X = 256" ,e$
        "Y = 510" ,e$
        "Z = 511" ,e$

        "[DOT TO DISPLAY MACHSIM]" ,e$
        "X = 215" ,e$
        "Y = 510" ,e$
        "Z = 511" ,e$

        "[MACHINE_DEF]" ,e$
        #;FANUC HEID ect...
        "CONTROL_TYPE = FANUC" ,e$
        #;radius ;delta_start_to_center ;delta_center_to_start; signed_radius
        "ARC_TYPE = delta_start_to_center",e$
        "COMMENT = ( |" ,e$
        ";VARIABLE = #" ,e$
        "FEED_MAX= 50000" ,e$
        "COORD_MACH = G53|G28" ,e$

        "[PLANE_TYPE]" ,e$

        #;PLANE_ON = (UPR|0|XYZ|0.|0.|ROTZ|SHIFTXabs|SHIFTYabs|SHIFTZabs|)|next_line|(UPR|1|XYZ|ROTX|0.|0.)|
        "PLANE_ON = G68.2|P1|SHIFTXabs|SHIFTYabs|SHIFTZabs|ROTX|ROTY|ROTZ|" ,e$
        "PLANE_OFF = G69" ,e$

        #";SHIFT_ON = CYCL DEF 7.0| POINT ZERO|next_line|CYCL |DEF |7.1|SHIFTXabs|next_line|CYCL |DEF |7.2| SHIFTYabs |next_line|CYCL |DEF |7.3| SHIFTZabs|" ,e$
        "SHIFT_ON = G52|SHIFTXabs|SHIFTYabs|SHIFTZabs|" ,e$
        ";SHIFT_OFF = G69 ",e$

        ";ROT_ON = G68|AXE|ROT|" ,e$
        ";ROT_OFF = G69" ,e$

        "RTCP_ON = G43.4" ,e$
        "RTCP_OFF = G49" ,e$

        ";TOOL_ON = G43" ,e$
        ";TOOL_OFF = G49 ",e$

        "[DRILL_CYCLE]" ,e$
        #; si on est sur un type CYCLE81 () siemens indiquer la position de la valeur dans le cycle ... pas besoin de definir pour HEID car toujour identique
        "DRILL_ON_CYCLE = YES" ,e$
        "CALL_CYCLE = G81|G83|G73|G74|G84" ,e$
        "SECU_PLANE_ABS = OLD_Z" ,e$
        ";SECU_PLANE_RELATIV = OLD_Z" ,e$
        ";PROF_RELATIV = Z" ,e$
        "PROF_ABS = Z" ,e$
        ";RETRACT_RELATIV = R" ,e$
        "RETRACT_ABS = R",e$
        "AVANCE = F" ,e$
        "PECK = Q X 1" ,e$
        "CYCLE_OFF = G80" ,e$

        "[NOT READ]" ,e$
        "G53.1" ,e$
        #"G0 G28 G91" ,e$

        "[MACRO] (attention pas MACHMOVE avec axes XYZABC)" ,e$

        "{M6}" ,e$
        "G0 G28 Z0" ,e$
        "G0 G28 X41 Y0 Z0" ,e$
        "G0 G28 X41 Y0 Z-255 ",e$
        "display_tool" ,e$
        "G0 G28 X41 Z-255 ",e$
        "G0 G28 X41 Z0" ,e$

        "{FIN}" ,e$

        subout$ = 0
    ]
fmt "X" 1 angle_autour_X_RUD
fmt "Y" 1 angle_autour_Y_RUD
fmt "Z" 1 angle_autour_Z_RUD

fmt 1 m1_RUD
fmt 1 m2_RUD
fmt 1 m3_RUD
fmt 1 m4_RUD
fmt 1 m5_RUD
fmt 1 m6_RUD
fmt 1 m7_RUD
fmt 1 m8_RUD
fmt 1 m9_RUD

fmt 1 m1_RUDA
fmt 1 m2_RUDA
fmt 1 m3_RUDA
fmt 1 m4_RUDA
fmt 1 m5_RUDA
fmt 1 m6_RUDA
fmt 1 m7_RUDA
fmt 1 m8_RUDA
fmt 1 m9_RUDA

fmt 1 m1_RUDB
fmt 1 m2_RUDB
fmt 1 m3_RUDB
fmt 1 m4_RUDB
fmt 1 m5_RUDB
fmt 1 m6_RUDB
fmt 1 m7_RUDB
fmt 1 m8_RUDB
fmt 1 m9_RUDB

fmt 1 Lg_X
fmt 1 Lg_Y
fmt 1 Lg_Z
precal_new_matrice_RUD
    #vois comment le rud a tourner
    if t_wcs_m1$ <> 1 | t_wcs_m5$ <> 1 | t_wcs_m9$ <> 1,
        [
        angle_autour_Y_RUD = asin (t_wcs_m3$)
        cos_angleY = cos (angle_autour_Y_RUD)
            angle_autour_Y_RUD = angle_autour_Y_RUD *-1
            if cos_angleY > 0.005 ,
            [
            #3 angle autour de X
            tr_x = t_wcs_m9$ / cos_angleY
            tr_y = -t_wcs_m6$ / cos_angleY
            angle_autour_X_RUD = atan2 (tr_y,tr_x)

            angle_autour_X_RUD = angle_autour_X_RUD * -1
            #4 angle autour de Z
            tr_x = t_wcs_m1$ / cos_angleY
            tr_y = -t_wcs_m2$ / cos_angleY
            angle_autour_Z_RUD  = atan2 (tr_y,tr_x)
            angle_autour_Z_RUD = angle_autour_Z_RUD * -1
            ]
            else,
            [
            # angle autour de X
            angle_autour_X_RUD  = 0
            # angle autour de Z
            angle_autour_Z_RUD = atan2 (t_wcs_m4$,t_wcs_m5$)
            angle_autour_Z_RUD = angle_autour_Z_RUD * -1
            ]
        #tourne X autour Z :
        m1_RUDA = m2$  * sin(angle_autour_Z_RUD) + m1$  * cos(angle_autour_Z_RUD)
        m2_RUDA = m2$  * cos(angle_autour_Z_RUD) - m1$  * sin(angle_autour_Z_RUD)

        #tourne X autour Y :
        m3_RUDA = m1_RUDA * sin(angle_autour_Y_RUD) + m3$ * cos(angle_autour_Y_RUD)
        m1_RUDB = m1_RUDA * cos(angle_autour_Y_RUD) - m3$  * sin(angle_autour_Y_RUD)

        #tourne X autour X :
        m2_RUDB = m3_RUDA * sin(angle_autour_X_RUD) + m2_RUDA  * cos(angle_autour_X_RUD)
        m3_RUDB = m3_RUDA * cos(angle_autour_X_RUD) - m2_RUDA  * sin(angle_autour_X_RUD)

        #tourne Y autour Z :
        m4_RUDA = m5$  * sin(angle_autour_Z_RUD) + m4$  * cos(angle_autour_Z_RUD)
        m5_RUDA = m5$  * cos(angle_autour_Z_RUD) - m4$  * sin(angle_autour_Z_RUD)

        #tourne Y autour Y :
        m6_RUDA = m4_RUDA * sin(angle_autour_Y_RUD) + m6$ * cos(angle_autour_Y_RUD)
        m4_RUDB = m4_RUDA * cos(angle_autour_Y_RUD) - m6$  * sin(angle_autour_Y_RUD)

        #tourne Y autour X :
        m5_RUDB = m6_RUDA * sin(angle_autour_X_RUD) + m5_RUDA  * cos(angle_autour_X_RUD)
        m6_RUDB = m6_RUDA * cos(angle_autour_X_RUD) - m5_RUDA  * sin(angle_autour_X_RUD)

        #tourne Z autour Z :
        m7_RUDA = m8$  * sin(angle_autour_Z_RUD) + m7$  * cos(angle_autour_Z_RUD)
        m8_RUDA = m8$  * cos(angle_autour_Z_RUD) - m7$  * sin(angle_autour_Z_RUD)

        #tourne Z autour Y :
        m9_RUDA = m7_RUDA * sin(angle_autour_Y_RUD) + m9$ * cos(angle_autour_Y_RUD)
        m7_RUDB = m7_RUDA * cos(angle_autour_Y_RUD) - m9$  * sin(angle_autour_Y_RUD)

        #tourne Z autour X :
        m8_RUDB = m9_RUDA * sin(angle_autour_X_RUD) + m8_RUDA  * cos(angle_autour_X_RUD)
        m9_RUDB = m9_RUDA * cos(angle_autour_X_RUD) - m8_RUDA  * sin(angle_autour_X_RUD)

        Lg_X = sqrt(m1_RUDB^2+m2_RUDB^2+m3_RUDB^2)
        m1$ = m1_RUDB / Lg_X
        m2$ = m2_RUDB / Lg_X
        m3$ = m3_RUDB / Lg_X
        Lg_Y = sqrt(m4_RUDB^2+m5_RUDB^2+m6_RUDB^2)
        m4$ = m4_RUDB / Lg_Y
        m5$ = m5_RUDB / Lg_Y
        m6$ = m6_RUDB / Lg_Y
        Lg_Z = sqrt(m7_RUDB^2+m8_RUDB^2+m9_RUDB^2)
        m7$ = m7_RUDB / Lg_Z
        m8$ = m8_RUDB / Lg_Z
        m9$ = m9_RUDB / Lg_Z
        y1 = t_orgin_z$ * sin(-angle_autour_X_RUD) + t_orgin_y$ * cos(-angle_autour_X_RUD)
        z1 = t_orgin_z$ * cos(-angle_autour_X_RUD) - t_orgin_y$ * sin(-angle_autour_X_RUD)
        #   tourne le point autour Y
        zabs = t_orgin_x$ * sin(-angle_autour_Y_RUD) + z1  * cos(-angle_autour_Y_RUD)
        x1 = t_orgin_x$ * cos(-angle_autour_Y_RUD) - z1  * sin(-angle_autour_Y_RUD)
        # tourne le point autour de Z
        xabs = y1  * sin(-angle_autour_Z_RUD) + x1  * cos(-angle_autour_Z_RUD)
        yabs = y1  * cos(-angle_autour_Z_RUD) - x1  * sin(-angle_autour_Z_RUD)

        tox4$ = tox4$ - xabs
        toy4$ = toy4$ - yabs
        toz4$ = toz4$ - zabs
        ]

ppost$       # traitement apres post pro pour effacer le fichier OPS et renommer le fichier NC
    if simu = 1,
        [
        #sdllMachSim = smc_shared_dir$ + sdll
        result = dll(sdllMachSim,spathnc$)
        ]
#endregion

#region CORPS DU PP
serreur_Aff_ORI : "ATTENTION INFORMER LES VALEURS D ORIGINE ET RELANCER LE PST"
s_erreur_origine_plan : "ATTENTION coordonnEe de l'origine du plan inclinE ne correspond Ã  l'origine de base"  #0079
s_erreur_Nom_RUD : "ATTENTION *** RUDs DIFFERENTS dans un meme programme ****"  #0080
serreurPalp1    : "ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"
serreurPalp2    : "ATTENTION SENS DE PALPAGE X ERRONE"
serreurPalp3    : "ATTENTION SENS DE PALPAGE Y ERRONE" # op_id$," AVEC OUTIL ",t$,e$
serreurPalp4_1  : "ATTENTION IL MANQUE UNE LONGUEUR DE PALPAGE ORIGINE X/Y 2 FACES"
serreurPalp4_2  : "ATTENTION IL MANQUE LE TYPE DE PALPAGE ORIGINE X/Y 2 FACES"
s_erreur_val_peck1 : "RENSEIGNER LA VALEUR DE PASSE AU PERCAGE"

perreur_Aff_Ori #"ATTENTION INFORMER LES VALEURS D ORIGINE ET RELANCER LE PST"
    if axeab_reel <> 0 & (workofs$ < 1 | mr4$ <> 1), [
        "ATTENTION ERREUR 6 OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(serreur_Aff_ORI)
        exitpost$
        ]
Perreur_origine_plan    #0079
    if Val_origine_Z <> Old_Val_origine_Z | Val_origine_Y <> Old_Val_origine_Y | Val_origine_X <> Old_Val_origine_X,
        [
        "ATTENTION ERREUR 13 OP: ", op_id$, " AVEC OUTIL ", t$, e$
        s_erreur_origine_plan, e$
        result = mprint(s_erreur_origine_plan)
        #exitpost$
        ]

Perreur_nom_RUD         #0080
    if snom_RUD <> Sold_snom_RUD,
        [
        "ATTENTION ERREUR 14 OP: ", op_id$, " AVEC OUTIL ", t$, e$
        s_erreur_Nom_RUD, e$
        result = mprint(s_erreur_Nom_RUD)
        #exitpost$
        ]
    Sold_snom_RUD = snom_RUD
perreurPalp1    #"ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"
    if drl_prm1$ <> 1 & drl_prm2$ <> 1, [
        "ATTENTION ERREUR 2 OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(serreurPalp1)
        exitpost$
        ]

perreurPalp2    #"ATTENTION SENS DE PALPAGE X ERRONE"
    if peck1$ =0, [
        "ATTENTION ERREUR 3 OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(serreurPalp2)
        exitpost$
        ]

perreurPalp3    #"ATTENTION SENS DE PALPAGE Y ERRONE"
    if peck1$ < 0 | peck1$ > 1, [
        "ATTENTION ERREUR 4 OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(serreurPalp3)
        exitpost$
        ]

perreurPalp4    #"ATTENTION IL MANQUE UNE VALEUR DE PALPAGE ORIGINE X/Y 2 FACES"
    if (drillcyc$ = 15 & peck1$ = 0) | (drillcyc$ = 16 & peck2$ = 0), erreur = 41
    if ((drl_prm1$ + drl_prm2$) <> 1), erreur = 42
    if erreur = 41, result = mprint(serreurPalp4_1)
    if erreur = 42, result = mprint(serreurPalp4_2)
    if erreur = 41 | erreur = 42,
        [
        "ATTENTION ERREUR 5 OP: ", op_id$, " AVEC OUTIL ", t$, e$
        exitpost$
        ]

p_erreur_val_cycles
    if peck1$ =0, [
        "ATTENTION ERREUR 6 OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(s_erreur_val_peck1)
        exitpost$
        ]

#---------------------------------
P_f_val_origine_depart_idem #0079
    Old_Val_origine_Z = Val_origine_Z
    Old_Val_origine_Y = Val_origine_Y
    Old_Val_origine_X = Val_origine_X
    Sold_snom_RUD = snom_RUD

# Gestion des Origines d'usinages G54 a G59 et G54.1 P1 Ã  G54.1 P49
p_ori_ltlchg
    @workofs$,@oldworkofs,@workofs_
    if workofs_ > 53, workofs_ = workofs_ - 53 #Pour les saisies MC en 54-55 ... compatibilitE avec 1-2 ...
    if workofs_ > 0,  [    #| mr4$ = 1,
        if workofs_ = -1, g_wcs = workofs_ + 55, else, g_wcs = workofs_ + 54
        if g_wcs >= 54 & g_wcs < 60, n$, *g_wcs, e$
        if g_wcs > 59 & g_wcs < 108, [
            originebis = g_wcs - 59
            n$, *originebis, e$
            ]
        ]
    else, g_wcs = 54, n$, *g_wcs, e$
    if sinfo_origine <> svide, [
        n$, "( INFO DECALAGE :)", e$
        n$, "(", *sinfo_origine, ")", e$
        ]
    oldworkofs = workofs_
    if util_x_ori = 1, perreur_Aff_Ori

#   Gestion des G54 a 59 et G54.1 P1 Ã  G54.1 P49 pour changement outil mul
p_ori_ltlchg0
    @workofs$,@oldworkofs,@workofs_
    if workofs_ > 53, workofs_ = workofs_ - 53 #Pour les saisies MC en 54-55 ... compatibilitE avec 1-2 ...
    if workofs_ <> oldworkofs, [
        if workofs_ = -1, g_wcs = workofs_ + 55, else, g_wcs = workofs_ + 54
        if workofs_ >0 | mr4$ = 1, [
            if workofs_ <> oldworkofs & g_wcs = 54, n$, *g_wcs, e$    #0073
            if g_wcs >= 54 & g_wcs < 60, n$, *g_wcs, e$        #, n$, *sgcode, *xabs, *yabs, e$
            if g_wcs > 59 & g_wcs < 108, [
                originebis = g_wcs - 59
                n$, *originebis, e$
                ]
            ]
        else, n$, *g_wcs, e$
        if sinfo_origine <> svide, [
            n$, "(", *sinfo_origine, ")", e$
            oldworkofs = workofs_
            ]
         ]
    if util_x_ori = 1, perreur_Aff_Ori #0200

p_clamp    #uniquement pour le 5 axes continus
    if clamp = 1,
        [
        n$, "M79 (CLAMP OFF AXE C)", e$
        n$, "M11 (CLAMP OFF AXE A-B)", e$
        ]
    if clamp = 0,
        [
        n$, "M78 (CLAMP ON AXE C)", e$
        n$, "M10 (CLAMP ON AXE A-B)", e$
        clamp = 1
        ]
#-------------------------------
pdec_ori
    !tox4$
    !old_tox4
    !toy4$
    !old_toy4
    !toz4$
    !old_toz4
    #if tox4$ <> old_tox4 | toy4$ <> old_toy4 | toz4$ <> old_toz4, n$, "G52", *tox4$, *toy4$, *toz4$, e$
    old_tox4 = tox4$
    old_toy4 = toy4$
    old_toz4 = toz4$
pdegage
    #if clamp = 0, p_clamp
    if mode_deg > 0,    [
        n$, sg00, smode_deg, sinc, *degagez,e$
        #n$, sg00, smode_deg, sinc, *degagex,e$
        #n$, sabs ,e$
        ]
    if mode_deg = 2, n$, sg00, smode_deg, sinc, *degagey, e$ ,n$, sabs ,e$
    if mode_deg = 3, n$, sg00, smode_deg, sinc, *degagex, *degagey, e$ ,n$, sabs ,e$
    if mode_deg > 0 & tool_op$ <> old_tool_op,    [	#modif FS
        frein_AB = 1
        frein_C = 1
        n$, sfrein_AB ,e$ ,n$ ,sfrein_C,e$
        if combinaison_axes = 1, n$, "G0 G90 A0 C0", e$
        if combinaison_axes = 2, n$, "G0 G90 B0 C0", e$
        frein_AB = 0
        frein_C = 0
        if nextop$ <> 11, n$, sfrein_AB ,e$ ,n$ ,sfrein_C,e$
        ]
    #pdegage_plan #FS
pdegage_plan
    n$, sg00, smode_deg_plan, *degagey_plan, e$    #*degagex_plan, e$
pannulplan
    rtcp = 0
    n$, srtcp, e$
    if old_usi_5x = 1, n$, "G5.1 Q0", e$, old_usi_5x = 0
    pdegage
    n$, sannul_plan, e$
    n$, sannul_Dec, e$
    old_tox4 = 0
    old_toy4 = 0
    old_toz4 = 0
pcycle_lissage_on
    if Cycle_lissage = 0,  [
        n$, "G5.1 Q1", e$
        Cycle_lissage = 1
        ]
pcycle_lissage_off
    if Cycle_lissage = 1 | opcode$ = 3,  [    #ou usinages axiales
        n$, "G5.1 Q0", e$
        Cycle_lissage = 0
        ]
pdecfin
    n$, "G52 X0 Y0 Z0", e$
#NON UTILISE
pplan_AB_nul    #0100 +FS
     mi1_2 = mi1$
    pcalcul_plan
    pcalcul_axe_reels
    pbutee
    !mi1_2
    if percage_5x <> 1,
        [
        xdep = xr$ + tox$
        ydep = yr$ + toy$
        zdep = zr$ + toz$
        pcalcul_xyz_absolu
        ]
    #n$, sarret_optionnel, e$
    #n$, *spdlon, e$
	#if axec_reel >= 360, axec_reel = axec_reel - 360
    frein_AB = 1
    frein_C = 1
    n$, sfrein_AB ,e$ ,n$ ,sfrein_C,e$
    if degage_butee = 0, n$, sg00, "G90", *axeab_reel, *axec_reel, e$
    frein_AB = 0
    frein_C = 0
    n$, sfrein_AB ,e$ ,n$ ,sfrein_C,e$
    if usinage_5x = 0, pdec_ori
    frein_C = 0
    n$, sfrein_C, e$
pplan
    mi1_2 = mi1$
    pcalcul_plan
    pcalcul_axe_reels
    pbutee
    !mi1_2
    if percage_5x <> 1,
        [
        xdep = xr$ + tox$
        ydep = yr$ + toy$
        zdep = zr$ + toz$
        pcalcul_xyz_absolu
        ]
    frein_AB = 1
    frein_C = 1
    n$, sfrein_AB ,e$ ,n$ ,sfrein_C,e$
    # Ajout FS
    if G68pt2_P_ = 1,
        [
        #"VOIR :", *m1$, *m5$, *m9$, "tourne :", *tourne, e$
        if m1$ = 1 & m5$ = 1 &  m9$ = 1, axec_reel = 0
        #if m1$ <> 1 & m5$ <> 1 & m9$ <> 1, axec_reel = angle_autour_Z
        if m9$ <> 1, axec_reel = angle_autour_Z - 180
        ]
    #
    if degage_butee = 0, n$, sg00, "G90", *axeab_reel, *axec_reel,e$
    if cinematique = 2, [
        rtcp = 1
        n$, srtcp, *tlngno$, e$
        n$, sg00, *xabs, *yabs, e$
        n$, sg00, *zabs, e$
        rtcp = 0
        n$, srtcp ,e$
        ]
    if usinage_5x = 0, pdec_ori
    pecriture_plan
    if utilise_cycle_lissage = yes$, [
        if opcode$ <> 3 & opcode$ <> 16, pcycle_lissage_on
        ]
    frein_AB = 0
    frein_C = 0
    n$, sfrein_AB ,e$ ,n$ ,sfrein_C,e$
    if mr9$ = 1, pdecfin
    old_axeab_reel = axeab_reel    #+FS
pecriture_plan
    if m1$ = 1 & m5$ = 1 & m9$ = 1, n$, sannul_plan, e$
    else ,
        [
        # AJOUT FS
        if G68pt2_P_ = 1,
            [
            #if angle_autour_X < 0, angle_autour_X = angle_autour_X * -1
                #angle_autour_Z = axec_reel #angle_autour_Z * -1 #+ 180
            #
            #G68.2 P1 (Angles Roll-Pitch-Yaw )  FANUC (et HEIDENAIM)
            #P1 = XYZ (on tourne autour des axes du RUD et non les nouveaux axes)
            #1 --> On tourne sur le X du RUD
            #2 --> On tourne sur le Y du RUD
            #3 --> On tourne sur le Z du RUD
            ]
        n$, splane_spacial, *tox4$, *toy4$, *toz4$, *angle_autour_X, *angle_autour_Y, *angle_autour_Z, e$
        n$ ,"G53.1",e$
        ]
pheader$
    rd_md$
    psimulation
    pstart_header
    if simu = 1,    [
        subout$ = 1
        snom = spathnc$ + snamenc$ + sextnc$
        *snom, e$
        subout$ = 0
        ]
    pend_header
psof$
    #precal_new_matrice_RUD
    pstart_posf
	n$, " ", e$
	n$, "G0 G90 G80 G49 G17", e$
    n$, "G69", e$
    n$, "M68 (CONVOYEUR ON)", e$
	n$, " ", e$
	n$, "(****ORIGINES****)", e$
	n$, "G10L2P1X0.Y0.Z0.", e$
	n$, " ", e$
	n$, "(G59A-90.POUR-LAVAGE)", e$
	n$, "G10L2P6X0.Y0.Z0.", e$ 
    old_op_id = op_id$
    pend_psof
    ptlchg$
ptlchg$
    if simu = 1, precal_new_matrice_RUD
    i$ = 99999.99
    j$ = 99999.99
    percage_5x = 0
    change_polar = -1
    old_axec_reel = 0
    old_axeab_reel = 0
    pstart_ptlchg
    if usi_5X = 1 ,
        [
        #n$, "G64 (LISSAGE OFF)", e$    #MAZAK
        #n$, "M44" ,e$    #mazak
        #n$, "M47", e$    #MAZAK
        usi_5X = 0
        ]
    if utilise_cycle_lissage = yes$, pcycle_lissage_off
    plub_off
    old_spdir = spdir$
    spdir$ = 0
    @spdir$
    n$, *spdlon, e$
    spdir$ = old_spdir
    @spdir$
    pcalcul_op
    pannulplan
	comment$ 
    n$, sarret_optionnel, e$
    n$, "G69", e$
    n$, "G49", e$
    pstart_outil_ptlchg
    *num, *t$, "M6", e$     #n$
    num = num + 1
    #"xxxxxxxxxxxxxxxxxxxx", *_scycle, " ", *drillcyc$, e$
    if _scycle >= 8 & drillcyc$ <> 18,                     #FS
        [
        #n$, "M5 M9", e$ #" ", *_scycle, " ", *drillcyc$, e$
        palpage = 1
        ]
    pnumop
    #pdegage_plan
    n$, "(", *numop, ")", e$
    if bldnxtool$ = 1 & next_tool$ <> t$, n$, *next_tool$, e$
    pend_outil_ptlchg
    n$, *spdlon, *ss$, e$
    p_ori_ltlchg, e$
    if usinage_5x <> 1, [
        pplan
        pcal_tourne
        #n$, sg00, *xr$, *yr$, e$    #p_ori_ltlchg,
		#if axeab_reel <> 0 | axec_reel <> 0, n$, sg00, *Xr_tourne, *Yr_tourne, e$    #p_ori_ltlchg,
		n$, sg00, *Xr_tourne, *Yr_tourne, e$ 
        ]
    else , pend_ptlchg, ex$
    old_op_id = op_id$
    ecri_cor = 1
    old_m7 = m7$
    old_m8 = m8$
    old_m9 = m9$
    pend_ptlchg
    old_tool_op = tool_op$
    old_xform_opid = xform_op_id$
ptlchg0$
    if simu = 1, precal_new_matrice_RUD
    pstart_between_path_ptlchg0
    !old_op_id
    #if op_id$ <> old_op_id,    [
    if op_id$ <> old_op_id | old_m7 <> m7$ | old_m8 <> m8$ | old_m9 <> m9$, [ #A essayer (du Hermle C400 U LDM)
        i$ = 99999.99
        j$ = 99999.99
        if usi_5X = 1 ,
            [
            #n$, "G64 (LISSAGE OFF)", e$ #MAZAK
            #n$, "M44" ,e$ #MAZAK
            #n$, "M47", e$ #MAZAK
            usi_5X = 0
            ]   
		pstart_between_op_ptlchg0
        percage_5x = 0
        if usinage_5x = 1, pannulplan
        pcalcul_op
        pnumop
        change_polar = -1
        pcalcul_plan
        !old_angle_autour_X
        !angle_autour_X
        !old_angle_autour_Y
        !angle_autour_Y
        !old_angle_autour_Z
        !angle_autour_Z	
        #"voir angle autour", *old_angle_autour_X, *angle_autour_X, *old_angle_autour_Y, *angle_autour_Y, *old_angle_autour_Z, *angle_autour_Z, e$
        if old_angle_autour_X <> angle_autour_X | old_angle_autour_Y <> angle_autour_Y | old_angle_autour_Z <> angle_autour_Z,
            [
            if utilise_cycle_lissage = yes$, pcycle_lissage_off
            ecri_cor = 0
            if axeab_reel <> old_axeab_reel, [    #0100 +FS
                pannulplan
                #pdegage_plan
                n$, sarret_optionnel, e$
                n$, *spdlon, e$
                ]
            n$, "G49", e$
			n$, "G69", e$
			n$, "(", *numop, ")", e$
            p_ori_ltlchg0
            if usinage_5x <> 1,
                [
                if axeab_reel = old_axeab_reel, [    #0100 +FS
					pdegage
                    #pplan_AB_nul
					pplan
					n$, "G52 X0 Y0", e$
                    ecri_cor = 1 #1 ne pas écrire le G43 H... dans le pZrapid$
                    ]
                else, [
                    pplan
                    pcal_tourne
                    ]
				n$, sg00, *xr$, *yr$, e$
                #n$, sg00, *Xr_tourne, *Yr_tourne, e$
                ]
            ]
        else,
            [
            n$, "(", *numop, ")", e$
            if usinage_5x = 0, pdec_ori
            ]
        ]
    old_m7 = m7$
    old_m8 = m8$
    old_m9 = m9$
    old_op_id = op_id$
    old_tool_op = tool_op$
    old_xform_opid = xform_op_id$
    pend_ptlchg0
plin$
    pcal_tourne
    #n$, sgcode, pcorrection, x$, y$, z$, pavance, e$
    n$, sgcode, pcorrection, X_tourne, Y_tourne, z$, pavance, e$
    old_x = X_tourne
    old_y = Y_tourne
    old_z = z$
pcir$
    pcal_tourne
    ##n$, sgcode, splanR, x$, y$, z$, *i$, *j$, pavance, e$
	# I & J
    #if plane$ = 0, n$, *sgcode, splanR, *X_tourne, *Y_tourne, z$, *I_tourne, *J_tourne, pavance, e$   
    #if plane$ = 1, n$, *sgcode, splanR, *X_tourne, *Y_tourne, z$, *J_tourne, *k$, pavance, e$    
    #if plane$ = 2, n$, *sgcode, splanR, *X_tourne, *Y_tourne, z$, *I_tourne, *k$, pavance, e$    
    # R
	if plane$ = 0, n$, *sgcode, splanR, *X_tourne, *Y_tourne, z$, *arcrad$, pavance, e$   
    if plane$ = 1, n$, *sgcode, splanR, *X_tourne, *Y_tourne, z$, *arcrad$, pavance, e$   
    if plane$ = 2, n$, *sgcode, splanR, *X_tourne, *Y_tourne, z$, *arcrad$, pavance, e$    
	!x$,!y$
    old_x = X_tourne
    old_y = Y_tourne
    old_z = z$
pz$
    n$, *sgcode, z$, pavance, e$
    old_z = z$
prapid$
    !x$, !y$
	pcal_tourne
    #n$, sgcode, x$, y$, z$, e$
    if X_tourne <> old_x | Y_tourne <> old_y | z$ <> old_z, n$, sgcode, *X_tourne, *Y_tourne, z$, e$
    old_x = X_tourne
    old_y = Y_tourne
    old_z = z$
pzrapid$
	if ecri_cor = 1,	[
		# opcode$: 3 = perCages ****** opcode$: 16 = perCages 5 axes
        if opcode$ <> 3 & opcode$ <> 16, n$, *sgcode, sg43, *tlngno$, *tloffno$, [if palpeur <> 1, z$, ], plub_on, e$ #FS pas aux perCages
		#n$, sg43, *tlngno$, *tloffno$, [if palpeur <> 1, z$, ], plub_on, e$	#*sgcode, 
        ecri_cor = 0
		]
    else , n$, *sgcode, z$, plub_on, e$
    old_z = z$  
pmx0$
pmx$
    if percage_5x = 0,    [
        pcalcul_plan
        xdep = x$ + tox$
        ydep = y$ + toy$
        zdep = z$ + toz$
        pcalcul_xyz_absolu
        x$ = xabs
        y$ = yabs
        z$ = zabs
        xdep = u$ + tox$
        ydep = v$ + toy$
        zdep = w$ + toz$
        pcalcul_xyz_absolu
        u$ = xabs
        v$ = yabs
        w$ = zabs
        pcalcul_axe_reels
        if debut_5X = 1, p_filtre
        pbutee
        ]
    if debut_5X = 0,    [
        if percage_5x = 1,    [
            vx = u$ - x$
            vy = v$ - y$
            vz = w$ - z$
            pcalcul_matrice_5x
            xabs = x$
            yabs = y$
            zabs = z$
            pplan
            xdep = x$
            ydep = y$
            zdep = z$
            pcalcul_xyz_plan
            n$, sg00, *xplan, *yplan, e$
            n$, sg00, sg43 , *tlngno$ ,*zplan, plub_on, e$
            ]
    else,    [
        if cinematique = 1,    [
            vx = u$ - x$
            vy = v$ - y$
            vz = w$ - z$
            pcalcul_matrice_5x
            #pplan    #mazak
			clamp = 1
            p_clamp, clamp = 0
            n$, "G0 G90 A0. C0.", e$
            n$, "G69", e$
            xdep = x$
            ydep = y$
            zdep = z$
            pcalcul_xyz_plan 
            n$, sg00, *xplan, *yplan, e$
            n$, "G5.1 Q1", e$
            n$, "G43", *tlngno$, *zplan, plub_on, e$
            n$, "G49", e$
            n$, "G69", e$
            #n$, sannul_plan, e$ #mazak
            #n$, sannul_Dec, e$    #mazak
            rtcp = 1
            #n$, "M46", e$ #mazak
            #n$, "M43", e$ #mazak
            #n$, "G61.1 K50. (LISSAGE)", e$ #mazak
            #n$, "M825 (ENTRE M821 et M829 = qualite du lissage)", e$
            usi_5X = 1
            old_usi_5x = usi_5X
            n$, srtcp, *tlngno$, e$
            n$, sg00, *xplan, *yplan, *zplan, *axeab_reel, *axec_reel, e$
            m1$=m1
            m2$=m2
            m3$=m3
            m4$=m4
            m5$=m5
            m6$=m6
            m7$=m7
            m8$=m8
            m9$=m9
            ]
        else,    [
            n$, sg00, *axeab_reel, *axec_reel, e$
            rtcp = 1
            n$, srtcp, *tlngno$, e$
            n$, sg00, *x$, *y$, e$
            n$, sg00, *z$, e$
            ]
        ]
    ]
    debut_5X = 1
    old_tx = tx
    old_ty = ty
    old_tz = tz
    old_x = x$
    old_y = y$
    old_z = z$
    if axeab_reel = 0, axec_reel = old_axec_reel
    old_axec_reel = axec_reel
    old_axeab_reel = axeab_reel
    if percage_5x = 1,  ex$
    rtcp = 1
    if debut_5X = 0, n$, srtcp, *tlngno$, e$
    if fr$ = -2, n$, `sg00, x$, y$, z$, axeab_reel, axec_reel, e$
    else, n$, sg01, x$, y$, z$, axeab_reel, axec_reel, pcorrection, pavance, plub_on, e$
pbutee
    if axeab_reel > maxiab | axeab_reel < miniab,   [
        autre_solution = 1
        p_filtre
        if mi1$ = 0, mi1_2 = 1
        else, mi1_2 = 0
        autre_solution = 0
        if usinage_5x = 1 & fr$ <> -2, pdegage_butee
        if axeab_reel > maxiab | axeab_reel < miniab, psortie_axeab
        ]
pdegage_butee
    vecteur_degage = feed_plane
    pcalcul_degage_vecteur
    !xdegage_butee
    !ydegage_butee
    !zdegage_butee
    n$, sg01, *xdegage_butee, *ydegage_butee, *zdegage_butee, pcorrection, pavance, plub_on, e$
    if use_secu_plane = 1, vecteur_degage = secu_plane
    if use_retract_plane = 1, vecteur_degage = retract_plane
    if use_retract_plane = 1 & use_secu_start_end = 0, vecteur_degage = secu_plane
    if use_secu_plane = 0 & use_retract_plane = 0, vecteur_degage = feed_plane
    if vecteur_degage <> feed_plane,    [
        pcalcul_degage_vecteur
        !xdegage_butee
        !ydegage_butee
        !zdegage_butee
        n$, `sg00, *xdegage_butee, *ydegage_butee, *zdegage_butee, e$
        ]
    pcalcul_degage_axe
    !axeab_degage_butee
    !axec_degage_butee
    if degagezbutee = 1,    [
        rtcp = 0
        n$ , srtcp , e$
        n$, sg00, smode_deg, sinc, *degagez, e$
        n$, sabs ,e$
        ]
    n$, `sg00, *axeab_degage_butee, *axec_degage_butee, e$
    if vecteur_degage <> feed_plane,    [
        vecteur_degage = feed_plane
        pcalcul_degage_vecteur
        !xdegage_butee
        !ydegage_butee
        !zdegage_butee
        if degagezbutee = 1,    [
            vx = old_tx
            vy = old_ty
            vz = old_tz
            pcalcul_matrice_5x
            xabs = xdegage_butee
            yabs = ydegage_butee
            zabs = zdegage_butee
            degage_butee = 1
            pplan
            degage_butee = 0
            xdep = xdegage_butee
            ydep = ydegage_butee
            zdep = zdegage_butee
            pcalcul_xyz_plan
            n$, sg00, *xplan, *yplan, e$
            n$, sg00, *zplan, plub_on, e$
            n$, sannul_plan, e$
            n$, sannul_Dec, e$
            rtcp = 1
            n$, srtcp, *tlngno$, e$
            n$, `sg00, *xdegage_butee, *ydegage_butee, *zdegage_butee, e$
            m1$=m1
            m2$=m2
            m3$=m3
            m4$=m4
            m5$=m5
            m6$=m6
            m7$=m7
            m8$=m8
            m9$=m9
            ]
        else, n$, `sg00, *xdegage_butee, *ydegage_butee, *zdegage_butee, e$
        ]
    n$, sg01, *old_x, *old_y, *old_z, *axeab_degage_butee, *axec_degage_butee, pcorrection, pavance_force, plub_on, e$
psortie_axeab
    if erreur = 0,  [
        serreur_visu = serreuraxeab_1 + no2str(miniab) + " et " + no2str(maxiab) + serreuraxeab_2 + no2str(numop)
        result = mprint(serreur_visu)
        *serreur_visu, e$
        erreur = 1
        exitpost$
        ]
pchange_polar
    serreur_visu = schange_polar + "Operation num" + no2str(numop)
    #result = mprint(serreur_visu)
    n$, "(", schange_polar, ")", e$
pperc_5X
    xdep = x$
    ydep = y$
    zdep = z$
    pcalcul_xyz_plan
    x$ = xplan
    y$ = yplan
    z$ = zplan
pperc_5X_2
    pcalcul_vecteur_5x
    pcalcul_axe_reels
    vx = u$ - x$
    vy = v$ - y$
    vz = w$ - z$
    pcalcul_matrice_5x
    xabs = drl_init_x$
    yabs = drl_init_y$
    zabs = drl_init_z$
    n$, "G80",e$
    n$, sannul_plan, e$
    n$, sannul_Dec, e$
    old_tox4 = 0
    old_toy4 = 0
    old_toz4 = 0
    ptransi_perc_5X
    xdep = x$
    ydep = y$
    zdep = z$
    pcalcul_xyz_plan
    x$ = xplan
    y$ = yplan
    z$ = zplan
ptransi_perc_5X
    rtcp = 1
    pcalcul_plan
    pcalcul_axe_reels
    n$, srtcp, *tlngno$,e$
    #if axec_reel > 360, axec_reel = axec_reel - 360
    #axeab_reel = axeab_reel * -1
    n$, sg00, *xabs, *yabs, *zabs, *axeab_reel, *axec_reel, e$
    rtcp = 0
    n$, srtcp, e$
    pecriture_plan
pdrill$
    if percage_5x = 1, pperc_5X
    pcalcul_percage
	n$ ,sg00, sg43 , *tlngno$ , *plan_secu_Z ,plub_on, e$
    if percage_5x = 1 & use_secu_start_end = 1 , n$ ,sg00, *plan_secu_Z ,e$
    pcal_tourne
    if utilise_cycle_lissage = yes$, pcycle_lissage_off
    if dwell$ = 0, n$, "G81", *sgdrlref, *X_tourne, *Y_tourne, *bq201 , *bq200 , *bq211 , *bq206 ,e$
	if dwell$ > 0, n$, "G82", *sgdrlref, *X_tourne, *Y_tourne, *bq201 , *bq200 , *bq211 , *bq206 ,e$
    old_bq200 = bq200
    old_bq201 = bq201
pdrill_2$
    pcalcul_percage
    !old_bq200, @old_bq200
    !old_bq201, @old_bq201
    @bq200, @bq201
    if percage_5x = 1,    [
        pperc_5X_2
        pcalcul_percage
        n$ ,sg00, sg43 , tlngno$ , *plan_secu_Z ,e$
        n$, "G82", *sgdrlref, x$, *y$ , *bq201 , *bq200 , *bq211 , *bq206 ,e$
        ]
    else,
        [
        if bq200 <> old_bq200 | bq201 <> old_bq201, ppeck$
        else,
            [
            pcal_tourne
            n$, *X_tourne, *Y_tourne, *bq200 ,e$
            ]
        ]
ppeck$
    if percage_5x = 1, pperc_5X
    pcalcul_percage
    #n$ ,sg00, [ if ecri_cor = 1, sg43, *tlngno$ ], *plan_secu_Z , plub_on, e$
	n$ ,sg00, sg43 , *tlngno$ , *plan_secu_Z , plub_on, e$
    pcal_tourne
    if utilise_cycle_lissage = yes$, pcycle_lissage_off
    p_erreur_val_cycles
    n$, "G83", *sgdrlref, *X_tourne, *Y_tourne, *bq201 , *bq200 , *bq202 , *bq206 ,e$
    old_bq200 = bq200
    old_bq201 = bq201
ppeck_2$
    pcalcul_percage
    !old_bq200, @old_bq200
    !old_bq201, @old_bq201
    @bq200, @bq201
    if percage_5x = 1 , [
        pperc_5X_2
        pcalcul_percage
        n$ ,sg00, sg43 , *tlngno$ , *plan_secu_Z ,e$
        n$, "G83", *sgdrlref, x$, *y$ , *bq201 , *bq200 , *bq202 , *bq206 ,e$
        ]
    else,
        [
        if bq200 <> old_bq200 | bq201 <> old_bq201, ppeck$
        else,
            [
            pcal_tourne
            n$, *X_tourne, *Y_tourne, *bq200 ,e$
            ]
        ]
pchpbrk$
    if percage_5x = 1,  pperc_5X
    pcalcul_percage
    n$ ,sg00, sg43 , *tlngno$ , *plan_secu_Z ,plub_on, e$
    pcal_tourne
    if utilise_cycle_lissage = yes$, pcycle_lissage_off
    n$, "G73", *sgdrlref, *X_tourne, *Y_tourne, *bq201 , *bq200 , *bq202 , *bq206 ,e$
    old_bq200 = bq200
    old_bq201 = bq201
pchpbrk_2$
    pcalcul_percage
    !old_bq200, @old_bq200
    !old_bq201, @old_bq201
    @bq200, @bq201
    if percage_5x = 1 , [
        pperc_5X_2
        pcalcul_percage
        n$ ,sg00, sg43 , tlngno$ , *plan_secu_Z ,e$
        n$, "G73", *sgdrlref, x$, *y$ , *bq201 , *bq200 , *bq202 , *bq206 ,e$
        ]
     else,
        [
        if bq200 <> old_bq200 | bq201 <> old_bq201, ppeck$
        else,
            [
            pcal_tourne
            n$, *X_tourne, *Y_tourne, *bq200 ,e$
            ]
        ]
ptap$
    if percage_5x = 1,  pperc_5X
    pcalcul_percage
    n$ ,sg00, sg43, *tlngno$, *plan_secu_Z, plub_on, e$
    n$, sm02, e$
    if spdir$ = -1 , dir_tar = 4
    if spdir$ = 0 , dir_tar = 5
    if spdir$ = 1 , dir_tar = 3
    speed_tar = ss$
    pcal_tourne
    if utilise_cycle_lissage = yes$, pcycle_lissage_off
    if spdir$ = -1 ,n$, "G74", *sgdrlref, *X_tourne, *Y_tourne, *bq201 , *bq200 , *bq239 ,e$
    else , n$, "G84", *sgdrlref, *X_tourne, *Y_tourne, *bq201 , *bq200 , *bq239 ,e$
    old_bq200 = bq200
    old_bq201 = bq201
ptap_2$
    pcalcul_percage
    !old_bq200, @old_bq200
    !old_bq201, @old_bq201
    @bq200, @bq201
    if percage_5x = 1 , [
        pperc_5X_2
        pcalcul_percage
        n$ ,sg00, sg43 , tlngno$ , *plan_secu_Z ,e$
        if spdir$ = -1 ,n$, "G74", *sgdrlref, *x$, *y$ , *bq201 , *bq200 , *bq239 ,e$
        else , n$, "G84", *sgdrlref, x$, *y$ , *bq201 , *bq200 , *bq239 ,e$
        ]
    else,
        [
        if bq200 <> old_bq200 | bq201 <> old_bq201, ppeck$
        else,
            [
            pcal_tourne
            n$, *X_tourne, *Y_tourne, *bq200 ,e$
            ]
        ]
pbore1$
    if percage_5x = 1,  pperc_5X
    pcalcul_percage
    n$ ,sg00, sg43 , *tlngno$ , *plan_secu_Z ,plub_on, e$
    n$, sm02, e$
    pcal_tourne
    if utilise_cycle_lissage = yes$, pcycle_lissage_off
    n$, "G85", *sgdrlref, *X_tourne, *Y_tourne, *bq201 , *bq200 , *bq206 ,e$
    old_bq200 = bq200
    old_bq201 = bq201
pbore1_2$
    pcalcul_percage
    !old_bq200, @old_bq200
    !old_bq201, @old_bq201
    @bq200, @bq201
    if percage_5x = 1 , [
        pperc_5X_2
        pcalcul_percage
        n$ ,sg00, sg43 , tlngno$ , *plan_secu_Z ,e$
        n$, "G85", *sgdrlref, x$, *y$, *bq201, *bq200, *bq206, e$
        ]
    else,
        [
        if bq200 <> old_bq200 | bq201 <> old_bq201, ppeck$
        else,
            [
            pcal_tourne
            n$, *X_tourne, *Y_tourne, *bq200 ,e$
            ]
        ]
pbore2$
    if percage_5x = 1,  pperc_5X
    pcalcul_percage
    n$ ,sg00, sg43 , *tlngno$ , *plan_secu_Z ,plub_on,e$
    n$, sm02, e$
    pcal_tourne
    if utilise_cycle_lissage = yes$, pcycle_lissage_off
    n$, "G86", *sgdrlref, *X_tourne, *Y_tourne, *bq256, *bq201 , *bq200 , *bq206 , e$
    old_bq200 = bq200
    old_bq201 = bq201
pbore2_2$
    pcalcul_percage
    !old_bq200, @old_bq200
    !old_bq201, @old_bq201
    @bq200, @bq201
    if percage_5x = 1 , [
        pperc_5X_2
        pcalcul_percage
        n$ ,sg00, sg43 , tlngno$ , *plan_secu_Z ,e$
        n$, "G86", *sgdrlref, x$, *y$ , *bq201 , *bq200 , *bq206 ,e$
        ]
    else,
        [
        if bq200 <> old_bq200 | bq201 <> old_bq201, ppeck$
        else,
            [
            pcal_tourne
            n$, *X_tourne, *Y_tourne, *bq200 ,e$
            ]
        ]
pmisc1$

pmisc1_2$

pcanceldc$
    n$, "G80", e$
    if percage_5x = 1,  [
        n$, sg00, *plan_secu_end_Z, e$
        ]
    else, [
        if palpeur = 0, n$, sg00, *initht$, e$
        ]
    if palpeur = 1, palpeur = 0
pmisc2$
pmisc2_2$
#region palpages
pdrlcst$     # Test de l'appel des cycles  et embranchements #0047
        #if dwell$ < 1, "----",e$,"ATTENTION PAS DE DECALAGE D ACTIVE _KNUM", op_id$," AVEC LE PALPEUR", e$, "---",e$ ,exitpost$
        if drillcyc$ = 8, pdrlcst8   #Cycle de palpage Pt de rEf. int. (exter) rectangulaire"
        if drillcyc$ = 9, pdrlcst9   #Cycle de palpage Pt de rEf. int. (exter) DiamEtre"
        #if drillcyc$ = 10, pdrlcst10 #Cycle de palpage Pt de rEf. exter Coin"
        #if drillcyc$ = 11, pdrlcst11 #Cycle de palpage Pt de rEf. inter Coin"
        if drillcyc$ = 12, pdrlcst12  #Cycle de palpage Pt de rEf. EN Z"
        if drillcyc$ = 13, pdrlcst13 #Cycle de palpage Pt de rEf. FACE EN X"
        if drillcyc$ = 14, pdrlcst14 #Cycle de palpage Pt de rEf. FACE EN Y"
        if drillcyc$ = 15, pdrlcst15 #Cycle de palpage Pt de rEf. EN X IN-OUT"
        if drillcyc$ = 16, pdrlcst16 #Cycle de palpage Pt de rEf. EN Y IN-OUT"
         #if drillcyc$ = 18, pdrlcst7 #0091 perCage trEs profond avec trous d'huile
        #Cycle de palpage Pt de rEf. EN Y IN-OUT"
        #if drillcyc >= 8, palpeur = 0  #0033 #0037 Pour dEsactiver le palpeur
        #n, "M71 ;Desactivation du palpeur", e  #0033
        #_scycle = 0             #0033
        gcode$ = 0               #0033

pdrlcst_2$   #0047 Test de l'appel des cycles  et embranchements pour X palpages #0047
        #if dwell$ < 1, "----",e$,"ATTENTION PAS DE DECALAGE D ACTIVE _KNUM", op_id$," AVEC LE PALPEUR", e$, "---",e$ ,exitpost$
        #n$, ";*************", e$
        #if drillcyc$ = 8, pdrlcst8_2   #Cycle de palpage Pt de rEf. int. (exter) rectangulaire"
        #if drillcyc$ = 9, pdrlcst9_2   #Cycle de palpage Pt de rEf. int. (exter) DiamEtre"
                    #if drillcyc$ = 10, pdrlcst10_2   #Cycle de palpage Pt de rEf. exter Coin"
                    #if drillcyc$ = 11, pdrlcst11_2   #Cycle de palpage Pt de rEf. inter Coin"
                    #if drillcyc$ = 12, pdrlcst12_2     #Cycle de palpage Pt de rEf. EN Z"
        #if drillcyc$ = 13, pdrlcst13_2   #Cycle de palpage Pt de rEf. FACE EN X"
        #if drillcyc$ = 14, pdrlcst14_2   #Cycle de palpage Pt de rEf. FACE EN Y"
     #if drillcyc$ = 14, pdrlcst7_2   #0091 perCage trEs profond avec trous d'huile
                    #if drillcyc >= 8, palpeur = 0  #0033 #0037 Pour dEsactiver le palpeur
                    #n, "M71 ;Desactivation du palpeur", e
                    #_scycle = 0
        gcode$ = 0
pdrlcst7    # perCage trEs profond avec trous d'huile   #0091
        gcode$ = 0
pdrlcst7_2    # perCage trEs profond avec trous d'huile   #0091
        gcode$ = 0
pdrlcst8    #Cycle de palpage Pt de rEf. int. (exter) rectangulaire"    #0047
          gcode$ = 0
        #profrelatif = (initht$-depth$) * ( -1)
          if drl_prm1$ = 1 | drl_prm2$ = 1,
            [
            u_palpage = peck1$
            v_palpage = peck2$
            z_palpage = z$
            w_palpage = dwell$
            a_palpage = x$
            b_palpage = y$
            a_palpage = a_palpage * -1
            b_palpage = b_palpage * -1
            w_palpage = w_palpage + 53
            if w_palpage > 69, w_palpage = w_palpage - 59
            ]
          if drl_prm1$ = 1 ,
            [
            n$, "(REF. INTER RECTANGLE)", e$
            ]
          if drl_prm2$ = 1 ,
            [
            u_palpage = u_palpage * -1
            v_palpage = v_palpage * -1
            n$, "(REF. EXTER RECTANGLE)", e$
            ]
          perreurPalp1  #0200
          if drl_prm1$ = 1 | drl_prm2$ = 1,
            [
            n$, "G320 ", u_palpage, v_palpage, z_palpage, "E5. ", w_palpage, a_palpage, b_palpage, "Q2. R2 T9998", e$
            n$, "(", *u_palpage, " - LONGUEUR EN X )", e$
            n$, "(", *v_palpage, " - LARGEUR EN Y )", e$
            n$, "(", *z_palpage, " - PROFONDEUR EN Z )", e$
            n$, "( E5 - VALEUR D APPROCHE )", e$
            n$, "(", *w_palpage, " - ORIGINE DO )", e$
            n$, "(", *a_palpage, " - DISTANCE A L ORIGINE EN X )", e$
            n$, "(", *b_palpage, " - DISTANCE A L ORIGINE EN Y )", e$
            n$, "( Q2 - LIMITE DE PALPAGE )", e$
            n$, "( R2 - NOMBRE DE MESURES )", e$
            n$, "( T9998 - NUM. BLOC DE RETOUR SI PARCOUR SUP. A Q )", e$
            ]
            #n$, "M82 ; soufflage OFF", e$
            #poriusi
            _scycle = 0
pdrlcst9    #Cycle de palpage Pt de rÃƒÂ©f. int. (exter) DiamÃƒÂ¨tre" #0047
          gcode$ = 0
        #profrelatif = (initht$-depth$) * ( -1)
          if drl_prm1$ = 1 | drl_prm2$ = 1,
            [
                _refht = refht$
                _shftdrl = shftdrl$
                d_palpage = peck1$
                z_palpage = z$
                w_palpage = dwell$
                #a_palpage = x$
                #b_palpage = y$
                #a_palpage = a_palpage * -1
                #b_palpage = b_palpage * -1
                w_palpage = w_palpage + 53
                if w_palpage > 69, w_palpage = w_palpage - 59
            ]
          if drl_prm1$ = 1 ,
            [
            n$, "(REF. INT. DIAMETRE)", e$
            ]
          if drl_prm2$ = 1 ,
            [
            n$, "(REF. EXT. DIAMETRE)", e$
            ]
          perreurPalp1  #0200
          if drl_prm1$ = 1 | drl_prm2$ = 1,
            [
            spaces$ = 0
            #G28G91Z0
            #G80G40
            #G0G90G54X0Y0
            n$, "M19", e$
            #n$, "G0G90G43H40", e$
            n$, "G65P9832(PALPEUR ON)", e$
            if drl_prm2$ = 1, z_palpage = refht$
            if drl_prm1$ = 1, [
                n$, "G65P9810", *z_palpage, "F2000(MOUVEMENT PROTEGE)", e$
                n$, "G65P9814", *d_palpage, *w_palpage, *_shftdrl, e$
                n$, "(D= ", *d_palpage, " - DIAMETRE DE PALPAGE )", e$
                n$, "(S= ", *w_palpage, " - ORIGINE )", e$
                n$, "(Q= ", *_refht, " - GARDE PALPAGE )", e$
                ]
            if drl_prm2$ = 1, [
                z_palpage = z$
                #G65P9823D70A-30B80C180Z-10S54Q10
                #(D DIAMETRE A PALPER)
                #(A B C ANGLES DE PALPAGE)
                #(S ORIGINE PIECE)
                n$, "G65P9810", *z_palpage, "F2000(MOUVEMENT PROTEGE)", e$
                n$, "G65P9823", *d_palpage, *w_palpage, *_shftdrl, *z_palpage, e$
                n$, "(D= ", *d_palpage, " - DIAMETRE DE PALPAGE )", e$
                n$, "(A B C = ANGLES DE PALPAGE)", e$
                n$, "(S= ", *w_palpage, " - ORIGINE )", e$
                n$, "(Q= ", *_refht, " - GARDE PALPAGE )", e$
                ]
            n$, "G65P9810", *refht$, "F2000(MOUVEMENT PROTEGE)", e$
            n$, "G65P9833(PALPEUR OFF)", e$
            ]
          #poriusi
          _scycle = 0
pdrlcst12    #Cycle de palpage Pt de rEf. EN Z" #0047
        gcode$ = 0
        #profrelatif = (initht$-depth$) * ( -1)
        _refht = refht$
        _shftdrl = shftdrl$
        z_palpage = z$
        w_palpage = dwell$
        #a_palpage = x$
        #b_palpage = y$
        #a_palpage = a_palpage * -1
        #b_palpage = b_palpage * -1
        w_palpage = w_palpage + 53
        if w_palpage > 69, w_palpage = w_palpage - 59
        n$, "(REF. EN Z)", e$
        #perreurPalp1  #0200
        n$, "M19", e$
        n$, "G65P9832(PALPEUR ON)", e$
        n$, "G65P9810", *z_palpage, "F2000(MOUVEMENT PROTEGE)", e$
        n$, "G65P9811", *z_palpage, *w_palpage, *_refht, e$
        n$, "(S= ", *w_palpage, " - ORIGINE )", e$
        n$, "(Q= ", *_refht, " - GARDE PALPAGE )", e$
        n$, "G65P9833(PALPEUR OFF)", e$
        #poriusi
        _scycle = 0
pdrlcst13   #Cycle de palpage Pt de rEf. FACE EN X" #0047
              gcode$ = 0
pdrlcst14   #Cycle de palpage Pt de rEf. FACE EN Y" #0047
              gcode$ = 0
pdrlcst15   #Cycle de palpage Pt de rEf. EN X IN-OUT" #0047
              gcode$ = 0
pdrlcst16   #Cycle de palpage Pt de rEf. EN Y IN-OUT" #0047
        gcode$ = 0
        #profrelatif = (initht$-depth$) * ( -1)
        if drl_prm1$ = 1 | drl_prm2$ = 1,
            [
            u_palpage = peck1$
            v_palpage = peck2$
            z_palpage = z$
            w_palpage = dwell$
            a_palpage = x$
            b_palpage = y$
            a_palpage = a_palpage * -1
            b_palpage = b_palpage * -1
            w_palpage = w_palpage + 53
            if w_palpage > 69, w_palpage = w_palpage - 59
            ]
        if drl_prm1$ = 1 ,
            [
            n$, "(REF. INTER EN Y)", e$
            ]
        if drl_prm2$ = 1 ,
            [
            u_palpage = u_palpage * -1
            v_palpage = v_palpage * -1
            n$, "(REF. EXTER EN Y)", e$
            ]
        perreurPalp1  #0200
        if drl_prm1$ = 1 | drl_prm2$ = 1,
            [
            n$, "G9812 ", b_palpage, v_palpage, z_palpage, "E5. ", w_palpage,  "Q2. R2 T9998", e$
            n$, "(", *v_palpage, " - LARGEUR EN Y )", e$
            n$, "(", *z_palpage, " - PROFONDEUR EN Z )", e$
            n$, "( E5 - VALEUR D APPROCHE )", e$
            n$, "(", *w_palpage, " - ORIGINE DO )", e$
            n$, "(", *b_palpage, " - DISTANCE A L ORIGINE EN Y )", e$
            n$, "( Q2 - LIMITE DE PALPAGE )", e$
            n$, "( R2 - NOMBRE DE MESURES )", e$
            n$, "( T9998 - NUM. BLOC DE RETOUR SI PARCOUR SUP. A Q )", e$
            n$, "G65P9833(PALPEUR OFF)", e$
            ]
        #n$, "M82 ; soufflage OFF", e$
        #poriusi
        _scycle = 0
#endregion
pdrill0$
pdrl_end$
pcancelcc$
peof$
	rtcp = 0
    n$, srtcp, e$
    if old_usi_5x = 1, n$, "G5.1 Q0", e$, old_usi_5x = 0
    pstart_peof
    pend_peof
    #n$, "M0", e$
    n$, "M30", e$
    pafter_end_peof
pdwl_spd$
pmiscint$
pmiscparam$
pmiscreal$
pq$
ptoolend$
ptooltable$
ptransint$
ptransreal$
puid_list$
psof0$
psof00$
psof_end$
ptlchg00$
ptlchg0_end$
ptlchg_end$
peof0$
peof00$
plin0$
plin_end$
pcir0$
pcir_end$
pmachineinfo$
    if prmcode$ = 17012, snom_ini = sparameter$
    smachine = ucase (snom_ini)
psub_call_s$
psub_st_s$
psub_end_s$
psub_call_mm$
psub_call_m$
psub_end_m_r$
psub_st_m$
psub_end_m$
pcomment0$
pcomment_end$
pmx_end$
prot0$
prot$

#endregion

#region paramEtrage spEcifique du pp
pprep$
    spathnc_original = spathnc$
    conteur_string = scan(sous_chaine,spathnc_original)
    if st_str_ix$, simu = 1
    rotaxtyp$ = 3
    tooltable$ = 1 #0=non 1=oui liste des outils
sf00 : "FQ1"
sf01 : "FQ11"
savance : ""
fstrsel sf00 avance_param savance 2 -1

plub_on
    !coolant$
    if lub = 0,    [
        if coolant$ = 0 ,"M9", e$
        if coolant$ = 1 ,"M8", e$     #exter
        if coolant$ = 2 ,"M50", e$    #air
        if coolant$ = 3 ,"M8", e$, n$, "M58",e$ #exter + centre
        ]
    lub = 1
plub_off
    !coolant$
    if coolant$ = 0 , n$, "M9", e$
    if coolant$ = 1 , n$, "M9", e$
    if coolant$ = 2 , n$, "M9", e$
    if coolant$ = 3 , n$, "M9" ,e$, n$, "M59" ,e$
    lub = 0
#endregion

#region ENTETE_NEW
# QUESTIONS ENTETE ----------------------------------------------------
svide2 : ""

schange_nom_fichier

# A modifier si besoin
s_com_open : "("	# Caractere de DEBUT de commentaire
s_com_close : ")"	# Caractere de FIN de commentaire

# Questions UNIQUEMENT des STRINGS NON VIDES !!
s_text_question_1 : "CLIENT"
s_text_question_2 : "NOM DE LA PIECE"
s_text_question_3 : "NUMERO DU PLAN"
s_text_question_4 : "INDICE DU PLAN"
s_text_question_5 : ""
s_text_question_6 : ""
s_text_question_7 : ""
s_text_question_8 : ""
s_text_question_9 : ""
s_text_question_10 : ""
s_text_question_11 : ""
s_text_question_12 : ""
s_text_question_13 : ""
s_text_question_14 : ""
s_text_question_15 : ""
s_text_question_16 : ""
s_text_question_17 : ""
s_text_question_18 : ""
s_text_question_19 : ""
s_text_question_20 : "Numero de programme //snouv_nom// existant, ENTREZ UN NOUVEAU NUMERO"
#----
s_question_1 : s_text_question_1
s_question_2 : s_text_question_2
s_question_3 : s_text_question_3
s_question_4 : s_text_question_4
s_question_5 : s_text_question_5
s_question_6 : s_text_question_6
s_question_7 : s_text_question_7
s_question_8 : s_text_question_8
s_question_9 : s_text_question_9
s_question_10 : s_text_question_10
s_question_11 : s_text_question_11
s_question_12 : s_text_question_12
s_question_13 : s_text_question_13
s_question_14 : s_text_question_14
s_question_15 : s_text_question_15
s_question_16 : s_text_question_16
s_question_17 : s_text_question_17
s_question_18 : s_text_question_18
s_question_19 : s_text_question_19
s_question_20 : s_text_question_20

#----
fq 1 s_question_1 "//s_text_question_1//"
fq 2 s_question_2 "//s_text_question_2//"
fq 3 s_question_3 "//s_text_question_3//"
fq 4 s_question_4 "//s_text_question_4//"
fq 5 s_question_5 "//s_text_question_5//"
fq 6 s_question_6 "//s_text_question_6//"
fq 7 s_question_7 "//s_text_question_7//"
fq 8 s_question_8 "//s_text_question_8//"
fq 9 s_question_9 "//s_text_question_9//"
fq 10 s_question_10 "//s_text_question_10//"
fq 11 s_question_11 "//s_text_question_11//"
fq 12 s_question_12 "//s_text_question_12//"
fq 13 s_question_13 "//s_text_question_13//"
fq 14 s_question_14 "//s_text_question_14//"
fq 15 s_question_15 "//s_text_question_15//"
fq 16 s_question_16 "//s_text_question_16//"
fq 17 s_question_17 "//s_text_question_17//"
fq 18 s_question_18 "//s_text_question_18//"
fq 19 s_question_19 "//s_text_question_19//"
fq 20 s_question_20 "//s_text_question_20//"
# Nombre de questions jusqu'a  25 maxi

fmt 2 Var_1_question
Var_1_question : 1

p_questions_entete		
		# A enrichir si besoin --> apres Q13
        if s_text_question_1 <> svide2, q1
		if s_text_question_2 <> svide2, q2
		if s_text_question_3 <> svide2, q3
		if s_text_question_4 <> svide2, q4
		if s_text_question_5 <> svide2, q5
		if s_text_question_6 <> svide2, q6
		if s_text_question_7 <> svide2, q7
		if s_text_question_8 <> svide2, q8
		if s_text_question_9 <> svide2, q9
		if s_text_question_10 <> svide2, q10
		if s_text_question_11 <> svide2, q11
		if s_text_question_12 <> svide2, q12
		if s_text_question_13 <> svide2, q13		
		
        s_question_1 = ucase(s_question_1)
        s_question_2 = ucase(s_question_2)
        s_question_3 = ucase(s_question_3)
        s_question_4 = ucase(s_question_4)
        s_question_5 = ucase(s_question_5)
        s_question_6 = ucase(s_question_6)
        s_question_7 = ucase(s_question_7)
        s_question_8 = ucase(s_question_8)
        s_question_9 = ucase(s_question_9)
        s_question_10 = ucase(s_question_10)
		s_question_11 = ucase(s_question_11)
        s_question_12 = ucase(s_question_12)
        s_question_13 = ucase(s_question_13)
		
		# Pour toute string a convertir en valeur numerique --> faire la meme chose pour d'autres si besoin
		Var_1_question = rpar(s_question_20, 1)	# convertir la valeur texte en valeur numerique

        schange_nom_fichier = s_question_20	# dans le "Pbloc" --> "pnom_nc" peut-etre modifier le nom de la string --> test si fichier existant
		
		spathnc$ = ucase(spathnc$)
      	stck_matl$ = ucase(stck_matl$)
      	snamenc$ = ucase(snamenc$)
		
		spaces$ = 0
        #s_com_open, "DATE LE ", date$," A ", time$, s_com_close, e$
		#s_com_open, "DESSIN MASTERCAM - ", smcname$, s_com_close, e$
		#s_com_open, "NC FILE - ", *spathnc$, *snamenc$, *sextnc$, s_com_close, e$
		#s_com_open, "MATIERE - ", *stck_matl$, s_com_close, e$	   
		#s_com_open, "NOM DU PROGRAMME - ", sprogname$, s_com_close, e$	
		#" ", e$            
        n$, s_com_open, s_text_question_1, " - ", s_question_1, s_com_close, e$
        n$, s_com_open, s_text_question_2, " - ", s_question_2, s_com_close, e$        
        n$, s_com_open, s_text_question_3, " - ", s_question_3, s_com_close, e$
        n$, s_com_open, s_text_question_4, " - ", s_question_4, s_com_close, e$
        if s_text_question_5 <> s_question_5, s_com_open, s_text_question_5, " - ", s_question_5, s_com_close, e$
        if s_text_question_6 <> s_question_6, s_com_open, s_text_question_6, " - ", s_question_6, s_com_close, e$
        if s_text_question_7 <> s_question_7, s_com_open, s_text_question_7, " - ", s_question_7, s_com_close, e$
		if s_text_question_8 <> s_question_8, s_com_open, s_text_question_8, " - ", s_question_8, s_com_close, e$
        if s_text_question_9 <> s_question_9, s_com_open, s_text_question_9, " - ", s_question_9, s_com_close, e$        
        if s_text_question_10 <> s_question_10, s_com_open, s_text_question_10, " - ", s_question_10, s_com_close, e$
        if s_text_question_11 <> s_question_11, s_com_open, s_text_question_11, " - ", s_question_11, s_com_close, e$
        if s_text_question_12 <> s_question_12, s_com_open, s_text_question_12, " - ", s_question_12, s_com_close, e$
        if s_text_question_13 <> s_question_13, s_com_open, s_text_question_13, " - ", s_question_13, s_com_close, e$
        #s_com_open, " ----------- ", s_com_close, e$
		#n$, "( CLIENT  .", s_text_question_1, ")", e$
		#n$, "( PIECE   .", s_text_question_2, ")", e$
		#n$, "( NUMERO  .", s_text_question_3, ")", e$
		#n$, "( INDICE PLAN  :", s_text_question_4, ")", e$
		n$, "( ORIGINE :             )", e$
		n$, "( X . )", e$
		n$, "( Y . )", e$
		n$, "( Z . )", e$
		n$, "( A . )", e$
		n$, "( C . )", e$
		n$, "( ORIENTATION PIECE )", e$
		n$, "( )", e$
		n$, "( *****************************)", e$
		n$, "( )", e$
		n$, "( *****************************)", e$
		n$, "", e$
		n$, s_com_open, " LISTE D OUTILS ", s_com_close, e$
        spaces$ = 0

#endregion	

pstart_header
    #if smachine = "MAZAK_VARIAXIS_I600", type_machine = 1
    smachine = "OKK-VCX500-AC"
    type_machine = 1
    if type_machine = 1,    [
        combinaison_axes = 1     	#1=AC 2=BC 3=AB
        cinematique = 1         	#1=tout portE sur table 2=au moins un axe sur la tÃªte
        gestion_rotation = 2    	#2=2 composantes 3=3 composantes
        use_plane_spacial = 0     	#0=cycle19 1=cycle plane    ********NON UTILISE********
        bldnxtool$ = 1             	#0=pas d'outil suivant 1=prEparation outil suivant
        mode_deg = 1             	#1=Z 2=Z et Y 3=Z et XY
        maxiab = 30.
        miniab = -120.01
        maxic = 9999999999
        minic = -9999999999
        #vecteurs porteur AXES
        Vect_porteur_x = 1        #
        Vect_porteur_y = 0        #
        Vect_porteur_z = 0        #
        sens_de_AB = 1
        sens_de_C = 1
        use_fmax_plane = 1
        G68pt2_P_ = 1           #FS type de plan P0 = 0, P1 = 1 ...
                                #G68.2 P0 (Angles Euler )
                                #0  = Z(=RUD)XZ (on tourne autour des axes issus des diffErentes rotations = nouveaux axes)
                                #1 --> On tourne sur le Z du RUD
                                #2 --> On tourne sur le Y du nouvel axe
                                #3 --> On tourne sur le X du nouvel axe
                                #G68.2 P1 (Angles Roll-Pitch-Yaw )  FANUC (et HEIDENAIM)
                                #P1 = XYZ (on tourne autour des axes du RUD et non les nouveaux axes)
                                #1 --> On tourne sur le X du RUD
                                #2 --> On tourne sur le Y du RUD
                                #3 --> On tourne sur le Z du RUD
        #Valeurs de dégagements en G28...
        degagex = 0
        degagey = 0
        degagez = 0
        #Entre deux rotations
        degagex_plan = 0
        degagey_plan = 0
        degagez_plan = 0
        ]
    if combinaison_axes = 1,    [
        result = nwadrs(slettrea, axeab_reel)
        result = nwadrs(slettrea, axeab_degage_butee)
        ]
    if combinaison_axes = 2,    [
        result = nwadrs(slettreb, axeab_reel)
        result = nwadrs(slettreb, axeab_degage_butee)
        ]
    if combinaison_axes = 3,    [
        result = nwadrs(slettrea, axec_reel)
        result = nwadrs(slettrea, axec_degage_butee)
        ]

pend_header
    "%" ,e$
    progno$, e$
    n$, "(",smcname$, ")", e$
    n$, "(", smachine, ")", e$
    n$, "( CREE LE ", date$, " A ", time$, ")", e$
	p_questions_entete	#SF  
    #"coucou fin debut", e$
pstart_posf
    #"debut du debut", e$
pend_psof
    #"fin du debut", e$
pstart_ptlchg
    #"je commence le changement d'outil", e$
pstart_outil_ptlchg
    #n$, "(", *paramT1, *stypeT, *paramT5, ptypeBoutT , pangleT , phauteurT , *strtool$, ")", e$
	n$, "(", *strtool$, ")", e$
pend_outil_ptlchg
pend_ptlchg
    #"je fini mon changement d'outil", e$
pstart_between_path_ptlchg0
    #"je change de passe" e$
pstart_between_op_ptlchg0
    #"je change d'op sans changer d'outil", e$
pend_ptlchg0
    #"j'ai fini mon ptlchg0", e$
pstart_peof
    #"debut de la fin", e$
pend_peof
    if type_machine = 1,    [
        if utilise_cycle_lissage = yes$, pcycle_lissage_off
        mode_deg = 1
        pdegage
		 #if axeab_reel <> old_axeab_reel | axec_reel <> old_axec_reel,	[
		if usinage_5x = 0, [ 
			frein_AB = 1
		    frein_C = 1
		    n$, sfrein_AB ,e$ ,n$ ,sfrein_C,e$
		    if combinaison_axes = 1, n$, "G0 G90 A0 C0", e$
		    if combinaison_axes = 2, n$, "G0 G90 B0 C0", e$
		    frein_AB = 0
		    frein_C = 0
		    n$, sfrein_AB ,e$ ,n$ ,sfrein_C,e$
	    	#]
			]
        n$, "M69 (CONVOYEUR OFF)", e$
        n$, "G69", e$
        n$, splane_reset_stay, e$
        axeab_reel = 0
        axec_reel = 0
        #n$, sg00, *axeab_reel, *axec_reel, e$
        ]
    #"fin de la fin", e$
pafter_end_peof
    # apres le M30
        "%" ,e$
pparameter$
    #~prmcode$, "=", sparameter$, e$                # pour afficher tous les parametres
    if prmcode$ = 10030, av_travail = rpar(sparameter$, 1)
    if prmcode$ = 10031, av_plonge = rpar(sparameter$, 1)
    if prmcode$ = 15140, av_retract = rpar(sparameter$, 1)
    if prmcode$ = 15101, use_retract_plane = rpar(sparameter$, 1)
    if prmcode$ = 15100, use_secu_plane = rpar(sparameter$, 1)
    if prmcode$ = 15339, use_secu_start_end = rpar(sparameter$, 1)
    if prmcode$ = 10024, feed_plane = rpar(sparameter$, 1)
    if prmcode$ = 15374, retract_plane = rpar(sparameter$, 1)
    if prmcode$ = 10020, secu_plane = rpar(sparameter$, 1)
    if prmcode$ = 10027, garde_plane = rpar(sparameter$, 1)
    if prmcode$ = 20004, paramT1  = rpar(sparameter$, 16)
    if prmcode$ = 20007, paramT20 = rpar(sparameter$, 11)
    #FS
    if prmcode$ = 15163, Val_origine_Z = rpar(sparameter$, 1)   #0079 "valeur de l'origine MC en Z"
    if prmcode$ = 15164, Val_origine_Y = rpar(sparameter$, 1)   #0079 "valeur de l'origine MC en Y"
    if prmcode$ = 15165, Val_origine_X = rpar(sparameter$, 1)   #0079 "valeur de l'origine MC en X"
    if prmcode$ = 15166, workofs_ = rpar(sparameter$, 1)    	#ou 15181    Numéro de l'origine actif
	if prmcode$ = 20011, sinfo_origine = sparameter$    		#0070
    if prmcode$ = 20014, snom_RUD = sparameter$
    if prmcode$ = 10100, _scycle = rpar(sparameter$, 1) #cycles palpages
	
pwrttparam$ # lire les parametres des outils
    if prmcode$ = 20004, paramT1  = rpar(sparameter$, 16)
    if prmcode$ = 20007, paramT20 = rpar(sparameter$, 11)
pwrtt$      # Lite des outils
    strtool$ = ucase(strtool$)
    #if t$ > 0, n$, "(", *paramT1, *stypeT, *paramT5, ptypeBoutT , pangleT , phauteurT , *strtool$, ")", e$
	if t$ > 0, n$, "(", *strtool$, ")", e$	#*paramT1, 
strtool_v7$ : 2
fmt "T" 8 paramT1    # NÂ° outil
fmt   10 paramT2      # Type d'outil
fmt   10 paramT3      # Matiere de l'outil 1=Rapide 2=carbure 3=carbure revetu 4=cermet 5=borzon
fmt   10 paramT4      # Type de rayon de bout 0=aucun 1=torique 2=spherique
fmt "D=" 10 paramT5   # Diametre
fmt "R=" 10 paramT6   # Rayon de bout
fmt   10 paramT7      # Nombre de filet par mm
fmt "A=" 10 paramT8   # Angle de bout
fmt   10 paramT9      # NÂ° de correcteur de rayon
fmt   10 paramT10     # NÂ° de correcteur de longeur
fmt   10 paramT11     # Avance travail
fmt   10 paramT12     # Avance plongee
fmt   10 paramT13     # Avance retraction
fmt   10 paramT14     # Vitesse de broche
fmt   10 paramT15     # Type de lubrification 0=arret 1=eau 2=air 3=broche 4=les 2
fmt   8 paramT16     # Nombre de dents
fmt   10 paramT20     # DiamEtre pilote
fmt   "EP=" 10 paramT21     # Hauteur de coupe
fmt   10 paramT22     # Hauteur de sortie totale
fmt   10 paramT23     # Hauteur helice
fmt   10 paramT24     # Diametre de queue
fmt   10 paramT25     # Diametre porte-outil
fmt   10 paramT26     # Hauteur porte-outil
fmt   10 paramT27     # 0=sens horaire 1=sens horaire
fmt   10 paramT28     # % de la vitesse de coupe
fmt   10 paramT29     # % de l'avance par dent
fmt   4 paramT30     # 0=pouces 1=metrique
stypT00 : "OUTIL SPECIAL"
stypT01 : "FORET A CENTRER"
stypT02 : "FORET A NOYER"
stypT03 : "FORET"
stypT04 : "TARAUD A DROITE"
stypT05 : "TARAUD A GAUCHE"
stypT06 : "ALESOIR"
stypT07 : "BARRE D'ALESAGE"
stypT08 : "FRAISE A LAMER"
stypT09 : ""
stypT10 : "FRAISE 2 TAILLES"
stypT11 : "FRAISE BOULE"
stypT12 : "FRAISE A CHANFREINER"
stypT13 : "TOURTEAU"
stypT14 : "FRAISE 3 TAILLES"
stypT15 : "FRAISE A RAYON"
stypT16 : "FRAISE QUEUE D'ARONDE"
stypT17 : "FRAISE CONIQUE"
stypT18 : "FRAISE SPHERIQUE"
stypT19 : "FRAISE TORIQUE"
stypT20 : "SPECIALE"
stypT21 : "FRAISE A GRAVER"
stypT22 : "FORET BRAD"
stypT23 : "BARRE D ALESAGE"
stypT24 : "FRAISE A FILETER"
stypT25 : "FRAISE TONNEAU"
stypeT : ""
fstrsel stypT00 paramT2 stypeT 26 -1
smatT0  : ""
smatT1  : "ACIER RAPIDE"
smatT2  : "CARBURE"
smatT3  : "CARBURE REVETU"
smatT4  : "CERMET"
smatT5  : "BORZON"
smatT6  : "BORZON"
smatT7  : "BORZON"
smatT8  : "BORZON"
smatT9  : "BORZON"
smatT10 : "INCONNU"
smatT : ""
fstrsel smatT0 paramT3 smatT 11 -1

ptypeBoutT # afficher on non le rayon de bout
    if paramT4 <> 0, paramT6
pangleT    # afficher on non l'angle de l'outil
    if paramT2 = 3 | paramT2 = 12 | paramT2 = 17, paramT8
phauteurT  # afficher la hauteur de dent pour une fraise 3 tailles
    if paramT2 = 14, paramT21
	
pcomment$
    scomm$ = ucase (scomm$)
    if gcode$ = 1005, n$, s_open_com, scomm$, s_close_com, e$      #Manual entry - as comment
    if gcode$ = 1006, n$, scomm$, e$                             	#Manual entry - as code
    if gcode$ = 1007, s_open_com, scomm$, s_close_com              #Manual entry - as comment with move NO e$
    if gcode$ = 1026, scomm$                                     #Manual entry - as code with move NO e$
    if gcode$ = 1008, n$, s_open_com, scomm$, s_close_com, e$      #Operation comment
    if gcode$ = 1051, n$, s_open_com, scomm$, s_close_com, e$      #Machine name
    if gcode$ = 1052, n$, s_open_com, scomm$, s_close_com, e$      #Group comment
    if gcode$ = 1053, n$, s_open_com, scomm$, s_close_com, e$      #Group name
    if gcode$ = 1054, n$, s_open_com, scomm$, s_close_com, e$      #File Descriptor

[ENDBIN]

[CTRL_TEXT_XML_BEGIN]  # Post text edits MUST be made with Control Definition Manager.
<?xml version="1.0" encoding="UTF-8"?>
<mp_xml_post_text xml:space="preserve">
	<control>
		<control_label>CTRL_MILL|M_FANUC-31I_AXILE-6_VMCTT-AC</control_label>
		<language>fr-FR</language>
		<misc_integers>
			<misc_1>
				<text>POLARITE AXE SECONDAIRE 0= + 1= -</text>
				<value>1</value>
			</misc_1>
			<misc_2>
				<text>""</text>
			</misc_2>
			<misc_3>
				<text>""</text>
			</misc_3>
			<misc_4>
				<text>""</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>""</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>""</text>
			</misc_10>
		</misc_integers>
		<misc_reals>
			<misc_1>
				<text>""</text>
			</misc_1>
			<misc_2>
				<text>""</text>
			</misc_2>
			<misc_3>
				<text>""</text>
			</misc_3>
			<misc_4>
				<text>G55... Ã  activer/toutes les OPS 1=oui 0=nom</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>UTILISEZ LE CYCLE DE LISSAGE 0=NON 1=OUI</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>""</text>
			</misc_10>
		</misc_reals>
		<simple_drill>
			<description>
				<text>PerCage Lamage G81 G82</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sEcuritE</text>
			</clearance>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</simple_drill>
		<peck_drill>
			<description>
				<text>DEbourrage G83</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sEcuritE</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Inc Q</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</peck_drill>
		<chip_break>
			<description>
				<text>Brise copeaux G73</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sEcuritE</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>RemontE D</text>
			</peck_clearance>
			<retract_amount>
				<text>Inc Q</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</chip_break>
		<tap>
			<description>
				<text>Taraudage G84</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sEcuritE</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Inc Q</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</tap>
		<bore1>
			<description>
				<text>AlEsage G85</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sEcuritE</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</bore1>
		<bore2>
			<description>
				<text>AlEsage indexe G75</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sEcuritE</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</bore2>
		<misc1>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</misc1>
		<misc2>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</misc2>
		<drill_cycle_9>
			<description>
				<text>REf. Inter Exter rectangle</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Long. en X</text>
			</first_peck>
			<subsequent_peck>
				<text>Larg. en Y</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_9>
		<drill_cycle_10>
			<description>
				<text>REf. Inter Exter Cercle</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Diametre nominal</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>GARDE XY</text>
			</shift>
		</drill_cycle_10>
		<drill_cycle_11>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_11>
		<drill_cycle_12>
			<description>
				<text>"REF. INTER-EXTER EN Y"</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>"GARDE"</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_12>
		<drill_cycle_13>
			<description>
				<text>REf. PALPAGE en Z</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_13>
		<drill_cycle_14>
			<description>
				<text>REf. PALPAGE en X</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>VERS X+=1/X-=0</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_14>
		<drill_cycle_15>
			<description>
				<text>REf. PALPAGE en Y</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>VERS Y+=1/Y-=0</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_15>
		<drill_cycle_16>
			<description>
				<text>REf. ENTRE 2 FACES X</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Z BOUT PALP.</text>
			</depth>
			<first_peck>
				<text>LONG. A PALPER</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_16>
		<drill_cycle_17>
			<description>
				<text>REf. ENTRE 2 FACES Y</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>1=G54 2=G55...NEW</text>
			</dwell>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Z BOUT PALP.</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>LONG. A PALPER</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_17>
		<drill_cycle_18>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_18>
		<drill_cycle_19>
			<description>
				<text>Percage tres profond</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>Z HORS MAT.</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_19>
		<drill_cycle_20>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_20>
		<simple_drill_custom_parameters>
			<description>
				<text>ParamEtres de cycle spEcial 1</text>
			</description>
		</simple_drill_custom_parameters>
		<peck_drill_custom_parameters>
			<description>
				<text>ParamEtres de cycle spEcial 2</text>
			</description>
		</peck_drill_custom_parameters>
		<chip_break_drill_custom_parameters>
			<description>
				<text>ParamEtres de cycle spEcial 3</text>
			</description>
		</chip_break_drill_custom_parameters>
		<tap_custom_parameters>
			<description>
				<text>ParamEtres de cycle spEcial 4</text>
			</description>
		</tap_custom_parameters>
		<bore1_custom_parameters>
			<description>
				<text>ParamEtres de cycle spEcial 5</text>
			</description>
		</bore1_custom_parameters>
		<bore2_custom_parameters>
			<description>
				<text>ParamEtres de cycle spEcial 6</text>
			</description>
		</bore2_custom_parameters>
		<misc1_custom_parameters>
			<description>
				<text>ParamEtres de cycle spEcial 7</text>
			</description>
		</misc1_custom_parameters>
		<misc2_custom_parameters>
			<description>
				<text>ParamEtres de cycle spEcial 8</text>
			</description>
		</misc2_custom_parameters>
		<drill_cycle_9_custom_parameters>
			<description>
				<text>REf. Int./Ext. Rectangle</text>
			</description>
			<parameter_1>
				<text>REf. Inter rectangle = 1</text>
			</parameter_1>
			<parameter_2>
				<text>REf. Exter rectangle = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_9_custom_parameters>
		<drill_cycle_10_custom_parameters>
			<description>
				<text>REf. Int./Ext. Cercle</text>
			</description>
			<parameter_1>
				<text>REf. Inter Cercle = 1</text>
			</parameter_1>
			<parameter_2>
				<text>REf. Exter Cercle = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_10_custom_parameters>
		<drill_cycle_11_custom_parameters>
			<description>
				<text>ParamEtres de cycle spEcial 11</text>
			</description>
		</drill_cycle_11_custom_parameters>
		<drill_cycle_12_custom_parameters>
			<description>
				<text>ParamEtres de cycle spEcial 12</text>
			</description>
		</drill_cycle_12_custom_parameters>
		<drill_cycle_13_custom_parameters>
			<description>
				<text>SANS</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_13_custom_parameters>
		<drill_cycle_14_custom_parameters>
			<description>
				<text>SANS</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_14_custom_parameters>
		<drill_cycle_15_custom_parameters>
			<description>
				<text>SANS</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_15_custom_parameters>
		<drill_cycle_16_custom_parameters>
			<description>
				<text>A RENSEIGNER</text>
			</description>
		</drill_cycle_16_custom_parameters>
		<drill_cycle_17_custom_parameters>
			<description>
				<text>A RENSEIGNER</text>
			</description>
		</drill_cycle_17_custom_parameters>
		<drill_cycle_18_custom_parameters>
			<description>
				<text>ParamEtres de cycle spEcial 18</text>
			</description>
		</drill_cycle_18_custom_parameters>
		<drill_cycle_19_custom_parameters>
			<description>
				<text>ParamEtres de cycle spEcial 19</text>
			</description>
		</drill_cycle_19_custom_parameters>
		<drill_cycle_20_custom_parameters>
			<description>
				<text>ParamEtres de cycle spEcial 20</text>
			</description>
		</drill_cycle_20_custom_parameters>
		<drill_cycle_descriptions>
			<simple_drill>
				<text>PerCage G81 G82</text>
			</simple_drill>
			<peck_drill>
				<text>DEbourrage G83</text>
			</peck_drill>
			<chip_break>
				<text>Brise copeaux G73</text>
			</chip_break>
			<tapping>
				<text>Taraudage G84</text>
			</tapping>
			<boring_1>
				<text>AlEsage G85</text>
			</boring_1>
			<boring_2>
				<text>AlEsage Indexe G75</text>
			</boring_2>
			<misc_drill_1>
				<text>""</text>
			</misc_drill_1>
			<misc_drill_2>
				<text>""</text>
			</misc_drill_2>
			<custom_drill_9>
				<text>Ref. Inter Exter. Rectangle</text>
			</custom_drill_9>
			<custom_drill_10>
				<text>REf. Inter Exter. Cercle</text>
			</custom_drill_10>
			<custom_drill_11>
				<text>""</text>
			</custom_drill_11>
			<custom_drill_12>
				<text>""</text>
			</custom_drill_12>
			<custom_drill_13>
				<text>REf. FACE EN Z</text>
			</custom_drill_13>
			<custom_drill_14>
				<text>REf. FACE EN X</text>
			</custom_drill_14>
			<custom_drill_15>
				<text>REf. FACE EN Y</text>
			</custom_drill_15>
			<custom_drill_16>
				<text>REf. FACES EN X</text>
			</custom_drill_16>
			<custom_drill_17>
				<text>REf. FACES EN Y</text>
			</custom_drill_17>
			<custom_drill_18>
				<text>""</text>
			</custom_drill_18>
			<custom_drill_19>
				<text>Percage tres profond</text>
			</custom_drill_19>
			<custom_drill_20>
				<text>""</text>
			</custom_drill_20>
		</drill_cycle_descriptions>
		<canned_text>
			<canned_text_1>
				<text>""</text>
			</canned_text_1>
			<canned_text_2>
				<text>""</text>
			</canned_text_2>
			<canned_text_3>
				<text>""</text>
			</canned_text_3>
			<canned_text_4>
				<text>""</text>
			</canned_text_4>
			<canned_text_5>
				<text>""</text>
			</canned_text_5>
			<canned_text_6>
				<text>""</text>
			</canned_text_6>
			<canned_text_7>
				<text>""</text>
			</canned_text_7>
			<canned_text_8>
				<text>""</text>
			</canned_text_8>
			<canned_text_9>
				<text>""</text>
			</canned_text_9>
			<canned_text_10>
				<text>""</text>
			</canned_text_10>
		</canned_text>
	</control>
</mp_xml_post_text>
[CTRL_TEXT_XML_END]
