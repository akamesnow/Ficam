[POST_VERSION] #DO NOT MOVE OR ALTER THIS LINE# V24.00 P0 E1 W24.00 T1617045222 M24.00 I0 O0
#version PP 1.0.0.2
#property of ficam, Eric Dauvilliers, e.dauvilliers@ficam.com, +33 (0)2 37 26 28 10
#region FS
fs  1  1.9lt        # Format avec toute la precision pour les variables internes de mp
fs  2  1^3l        # format d'affichage a 3 chifres max pour les variables affichees
fs  3  1^3ln       # idem mais non modale
fs  4  1 0      # 1 chiffre mini avant virgule  pas de virgule pas de chiffre apres
fs  5  1 0n     # idem mais non modale
fs  6  4 0ln        # 4 chiffres avant pas de virgule pas de chiffre apres non modal force 0 de tete
fs  7  1 3t     # 1 chiffre mini avant virgule  pas de virgule 3 apres force 0 de queue non modal.
fs  8  1.3ln        # 1 chiffre avant la vigule met . 3 chiffres apres virgule non modal force 0 de tete
fs  9  1 0n     # pour liste outil
fs  10 1.3n     # pour liste outil
fs  11 +1^3li       # force 1 chiffre avant virgule met . 3 chiffres apres virgule en incremental
fs  12 +1^3lni
fs  13 3 0ln
fs  14 1.4lt
fs  15 1^3n     # pour liste outil
fs  16 1^3l
fs  17 1.5ln
fs  18 +1^4ln
fs  19 1^3l
#endregion

#region AFFECTATION VARIABLES
fmt 1 Acal
fmt 1 old_numop
old_ToolOp : 0
old_usinage_5x : 0
fmt 1 start
fmt "G" 2 ori_usi
fmt 2 type_comp
fmt 2 mode_4axe
fmt 4 speed_tar
fmt 4 dir_tar
fmt "D" 5 tloffno$
fmt "H" 5 tlngno$
fmt "" 1 return
fmt  "" 2 sweep$
fmt "" 2 tox4$
fmt "" 2 toy4$
fmt "" 2 toz4$
fmt "" 2 tox4A
fmt "" 2 toy4A
fmt "" 2 toz4A
fmt "F" 2 dwell$
fmt "X" 2 old_tox4
fmt "Y" 2 old_toy4
fmt "Z" 2 old_toz4
fmt 1 old_xform_opid
fmt 1 mode_deg
fmt 1 debut_5X
fmt 1 xdep
fmt 1 ydep
fmt 1 zdep
fmt "R" 3 arcrad$
fmt "X" 2 x$
fmt "Y" 2 y$
fmt "Z" 2 z$
fmt "X" 2 x5x
fmt "Y" 2 y5x
fmt "Z" 2 z5x
fmt "Z" 2 nextz$
fmt "I" 2 i$
fmt "J" 2 j$
fmt "X" 2 xdegage_butee
fmt "Y" 2 ydegage_butee
fmt "Z" 2 zdegage_butee
fmt 2 degagezbutee
fmt "X" 2 degagex
fmt "Y" 2 degagey
fmt "Z" 2 degagez
fmt "Z" 2 refht$
fmt "Z" 2 initht$
fmt "A3=" 2 vx
fmt "B3=" 2 vy
fmt "C3=" 2 vz
fmt "C" 2 axec
fmt "B" 2 axeab
fmt "longvec" 2 longvec
fmt "X" 2 xabs
fmt "Y" 2 yabs
fmt "Z" 2 zabs
fmt "X" 2 xr$
fmt "Y" 2 yr$
fmt "Z" 2 zr$
fmt "X" 2 AppX
fmt "Y" 2 AppY
fmt "Z" 2 AppZ
fmt "N" 4 n$
fmt "T"  5 t$ " M6"
fmt "T" 5 next_tool$
fmt  "F" 4 fr_pos$
fmt 4 av_travail
fmt 4 av_plonge
fmt 4 av_retract
fmt  "S" 4 ss$
fmt 1 old_ss
fmt "X" 3 xmin
fmt "Y" 3 ymin
fmt "Z" 3 zmin
fmt "X" 3 xmax
fmt "Y" 3 ymax
fmt "Z" 3 zmax
fmt 4 old_op_id
fmt "OPERATION #" 4 numop
fmt "SEQ" 4 mi1$
fmt "SEQ" 4 mi1_2
fmt "X1=" 1 x1
fmt "X2=" 1 x2
fmt "Y1=" 1 y1
fmt "Y2=" 1 y2
fmt "Z1=" 1 z1
fmt "Z2=" 1 z2
fmt 2 angle_X
fmt 2 angle_Z0
fmt 2 angle_Z1
fmt "" 2 angle_autour_X4C
fmt "" 2 angle_autour_Y4C
fmt "" 2 angle_autour_Z4C
fmt "X" 2 angle_autour_X
fmt "Y" 2 angle_autour_Y
fmt "Z" 2 angle_autour_Z
fmt "" 2 angle_autour_X2
fmt "" 2 angle_autour_Y2
fmt "ROT Z" 2 angle_autour_Z2
fmt "" 2 angle_autour_Zp
fmt "X" 2 old_angle_autour_X
fmt "Y" 2 old_angle_autour_Y
fmt "Z" 2 old_angle_autour_Z
fmt "" 2 angle_autour_X_2
fmt "" 2 angle_autour_Y_2
fmt "" 2 angle_autour_Z_2
fmt "" 2 cos_angleY
fmt "" 2 tr_x
fmt "" 2 tr_y
fmt 1 Idep
fmt 1 Jdep
fmt "X" 2 x_tourne
fmt "Y" 2 y_tourne
fmt "Z" 2 z_tourne
fmt "I" 2 i_tourne
fmt "J" 2 j_tourne
fmt "X tourne=" 1 New_x_tourne
fmt "Y tourne=" 1 New_y_tourne
fmt 2 rtcp
fmt 2 percage_5x
fmt 2 usinage_5x
fmt  "" 19 bq200
fmt  "" 19 bq201
fmt  "" 3 bq202
fmt  "" 3 bq203
fmt  "" 3 bq204
fmt  "" 3 bq205
fmt  "" 4 avance_al
fmt  "F" 4 bq206
fmt  "" 4 bq208
fmt  "" 8 bq210
fmt  "" 8 bq211
fmt  "" 3 bq212
fmt  "" 5 bq213
fmt  "" 2 bq214
fmt  "" 8 bq239
fmt  "" 3 bq256
fmt  "" 3 bq257
fmt  "" 3 bq258
fmt  "" 3 bq259
fmt  "" 3 bq336
fmt 3 old_bq200
fmt 3 old_bq201
fmt "long_OA=" 1 long_OA
fmt "long_OB=" 1 long_OB
fmt "long_OC=" 1 long_OC
fmt "long_AB=" 1 long_AB
fmt "long_AC=" 1 long_AC
fmt "long_CB=" 1 long_CB
fmt "Angle A=" 1 angle_a
fmt "Angle B=" 1 angle_b
fmt "Angle C=" 1 angle_c
fmt "Cos Angle A=" 1 cosangle_a
fmt "Cos Angle B=" 1 cosangle_b
fmt "Cos Angle C=" 1 cosangle_c
fmt " produitAA =" 1 produitAA
fmt " produitBB =" 1 produitBB
fmt " produitCC =" 1 produitCC
fmt "P base=" 1 produit_p_base
fmt "C base=" 1 C_angle_base
fmt "sin_C_base=" 1 C_angle_base_sin
fmt "cos_C_base=" 1 C_angle_base_cos
fmt "P souhaiter=" 1 produit_p_souhaite
fmt "C souhaiter=" 1 C_angle_souhaite
fmt "sin_C_souhaiter=" 1 C_angle_souhaiter_sin
fmt "cos_C_souhaiter=" 1 C_angle_souhaiter_cos
fmt "C=" 1 C_rotation
fmt "C reel=" 1 C_angle_reel
fmt "C reel droit=" 1 C_angle_reel_droite
fmt "C reel gauche=" 1 C_angle_reel_gauche
fmt "P pour B=" 1 produit_p_B
fmt "sin_B_souhaiter=" 1 B_angle_sin
fmt "cos_B_souhaiter=" 1 B_angle_cos
fmt "B=" 1 B_rotation
fmt "Sens de B=" 4 sens_de_B
fmt "Sens de C=" 4 sens_de_C
fmt "Polarite=" 4 polarite_axe
fmt "" 1 changpolar_C
fmt "" 1 change_polar
fmt "Vecteur porteur X=" 1 Vect_porteur_x
fmt "Vecteur porteur Y=" 1 Vect_porteur_y
fmt "Vecteur porteur Z=" 1 Vect_porteur_z
fmt "angle entre repere et axe B=" 1 angle_axeB
fmt "angle entre repere et axe outil=" 1 angle_axe_outil
fmt "diff angle=" 1 dif_angle_B_outil
fmt "sens de rotation 1 pour inverser et  0 pour normal  =" 1 sens_axe_outil
fmt "TX" 1 tx
fmt "TY" 1 ty
fmt "TZ" 1 tz
fmt "TX" 1 old_tx
fmt "TY" 1 old_ty
fmt "TZ" 1 old_tz
fmt "X" 2 old_x
fmt "Y" 2 old_y
fmt "Z" 2 old_z
fmt "C" 2 axec_reel
fmt "B" 2 axeab_reel
fmt "C" 2 axec_degage_butee
fmt "B" 2 axeab_degage_butee
fmt "C" 2 old_axec_reel
fmt "B" 2 old_axeab_reel
fmt 1 xplan_inter
fmt 1 yplan_inter
fmt 1 zplan_inter
fmt "X" 2 xplan
fmt "Y" 2 yplan
fmt "Z" 2 zplan
fmt 2 lub
fmt 2 coolant$
fmt 2 spdir$
fmt 2 delta_axeC
fmt 3 old_spdir
fmt "R" 1 result
fmt 2 maxiab
fmt 2 miniab
fmt 2 maxic
fmt 2 minic
fmt 2 erreur
fmt 2 autre_solution
fmt 2 use_retract_plane
fmt 2 use_secu_start_end
fmt 2 use_secu_plane
fmt 2 feed_plane
fmt 2 retract_plane
fmt 2 secu_plane
fmt 2 garde_plane
fmt 2 vecteur_degage
fmt 2 avance_param
fmt 2 combinaison_axes
fmt 2 cinematique
fmt 2 gestion_rotation
fmt 2 use_plane_spacial
fmt 2 type_machine
fmt 2 cycl32
fmt 1 m1
fmt 1 m2
fmt 1 m3
fmt 1 m4
fmt 1 m5
fmt 1 m6
fmt 1 m7
fmt 1 m8
fmt 1 m9
fmt 2 use_fmax_plane
fmt 2 degage_butee
fmt "X=" 2 vec_perc_X
fmt "Y=" 2 vec_perc_Y
fmt "Z=" 2 vec_perc_Z
fmt "" 2 Lg_vec_per
fmt "X" 2 surf_piece_X
fmt "Y" 2 surf_piece_Y
fmt "Z" 2 surf_piece_Z
fmt "X" 2 plan_secu_X
fmt "Y" 2 plan_secu_Y
fmt "Z" 2 plan_secu_Z
fmt "Z" 2 plan_secu_end_Z
fmt "X" 2 plan_retract_X
fmt "Y" 2 plan_retract_Y
fmt "Z" 2 plan_retract_Z
fmt "X" 2 plan_garde_X
fmt "Y" 2 plan_garde_Y
fmt "Z" 2 plan_garde_Z
fmt "X" 2 drl_depth_x$
fmt "Y" 2 drl_depth_y$
fmt "Z" 2 drl_depth_z$
fmt "X" 2 drl_depth_xplan
fmt "Y" 2 drl_depth_yplan
fmt "Z" 2 drl_depth_zplan
fmt "G" 2 workofs$
fmt "G" 2 old_workof
#endregion

#region VALEURS PAR DEFAUT
old_m7 : 0
old_m8 : 0
old_m9 : 0
fmt 2 mode_inc
bug1$     : 5
old_op_id : 999
ss$ = abs(ss$)
numop : 1
percage_5x : 0
usinage_5x : 0
Vect_porteur_x :  0
Vect_porteur_y :  0
Vect_porteur_z :  1
changpolar_C : 1
polarite_axe : 1
lub : 0
old_tox4 : 0
old_toy4 : 0
old_toz4 : 0
old_angle_autour_X : 99999.99
old_angle_autour_Y : 99999.99
old_angle_autour_Z : 99999.99
x$ : 99999.99
y$ : 99999.99
z$ : 99999.99
i$ : 99999.99
j$ : 99999.99
sweep$ : 99999.99
tox4$ : 99999.99
toy4$ : 99999.99
toz4$ : 99999.99
arcrad$ : 99999.99
refht$ : 99999.99
initht$ : 99999.99
xr$ : 99999.99
yr$ : 99999.99
zr$ : 99999.99
change_polar : -1
old_axec_reel : 0
old_axeab_reel : 0
delta_axeC : 0
erreur : 0
autre_solution : 0
avance_param : -1
cycl32 : 1
use_fmax_plane : 1
subprg$    : yes$
mergesub$  : 0
degagezbutee : 0
degage_butee : 0
workofs$ : 0
old_workof : 0
old_ss : 0

#endregion

#region simulation
fmt "la string commence a:" 4 conteur_string
fmt 1 simu
simu : 0
sextsub$ : ".ini"
snom : ""
snom_ini : ""
spathnc_original : ""
sous_chaine : "appdata\local\temp"
#sdllMachSim : "E:\projet VS2017\Apllication Mastercam\Simulation_FICAM\Simulation_FICAM\x64\Release\Simulation_FICAM.dll" # pour debug cedric
sdllMachSim : "C:\Program Files\Mastercam 2022\Mastercam\chooks\Simulation_FICAM.dll"
psimulation
    spathnc_original = spathnc$
    conteur_string = scan(sous_chaine,spathnc_original)
    if st_str_ix$, simu = 1
    if simu = 1,
    [
        spathsub$ = spathpst$
        snamesub$ = snom_ini
        subout$ = 1
        snom = spathnc$ + snamenc$ + sextnc$
        "REP =", *snom, e$
        #"KEY = 38268F5028I00C00A0000" ,e$
        "KEY = 38226F5028I00C00A0000" ,e$ #david (ma cle Hasp)
        "USE_OTHER_NC_FILE = NO" ,e$ #david
        "[SHIFT ORIGIN BETWEEN MACHSIM TO REALITY]" ,e$
        "X = 346.483" ,e$
        "Y = 468.172 " ,e$
        "Z = 614,751" ,e$

        "[DOT TO DISPLAY MACHSIM]" ,e$
        "X = -800" ,e$
        "Y = 450" ,e$
        "Z = 630" ,e$

        "[MACHINE_DEF]" ,e$
        #;FANUC HEID ect...
        "CONTROL_TYPE = SIEMENS" ,e$
        #;radius ;delta_start_to_center ;delta_center_to_start; signed_radius;absolute
        "ARC_TYPE = delta_start_to_center",e$
        "COMMENT =MSG|(" ,e$
        ";VARIABLE = Q" ,e$
        "FEED_MAX= 50000" ,e$
        "COORD_MACH = SUPA|G53" ,e$
		"C_is_linear = NO" ,e$# definis si les axes rotatif sont geré comme des axes linéaire
        "[PLANE_TYPE]" ,e$

        #;PLANE_ON = (UPR|0|XYZ|0.|0.|ROTZ|SHIFTXabs|SHIFTYabs|SHIFTZabs|)|next_line|(UPR|1|XYZ|ROTX|0.|0.)|
        "PLANE_ON = CYCLE800(0|DMG|10000|57|SHIFTXabs|SHIFTYabs|SHIFTZabs|ROTZ|ROTY|ROTX|0|0|0|0)"    ,e$#
        "PLANE_OFF = CYCLE800()" ,e$

        "SHIFT_ON = CYCL DEF 7.0| POINT ZERO|next_line|CYCL |DEF |7.1|SHIFTXabs|next_line|CYCL |DEF |7.2| SHIFTYabs |next_line|CYCL |DEF |7.3| SHIFTZabs|" ,e$
        #";SHIFT_OFF = G69 ",e$

        ";ROT_ON = G68|AXE|ROT|" ,e$
        ";ROT_OFF = G69" ,e$

        "RTCP_ON = TRAORI" ,e$
        "RTCP_OFF = TRAFOOF" ,e$

        ";TOOL_ON = G43" ,e$
        ";TOOL_OFF = G49 ",e$

        "[DRILL_CYCLE]" ,e$
        #; si on est sur un type CYCLE81 () siemens indiquer la position de la valeur dans le cycle ... pas besoin de definir pour HEID car toujour identique
        "DRILL_ON_CYCLE = NO" ,e$
        "CALL_CYCLE = CYCLE81(|CYCLE82(|CYCLE83(|CYCLE84(|CYCLE85(" ,e$
        ";SECU_PLANE_ABS = OLD_Z" ,e$
        "SECU_PLANE_RELATIV = 1" ,e$
        "PROF_RELATIV = 5" ,e$
        ";PROF_ABS = Z" ,e$
        "RETRACT_RELATIV = 3" ,e$
        ";RETRACT_ABS = R",e$
        "SURF_PIECE = 2" ,e$
        "PECK = 7", e$
        "AVANCE = F" ,e$
        "CYCLE_OFF = MCALL" ,e$

        "[NOT READ]" ,e$
        "T=0 M6" ,e$
        "G52 X0 Y0 Z0", e$

        "[MACRO] (attention pas MACHMOVE avec axes XYZABC)" ,e$

        "{M6}" ,e$
        "G0 SUPA D0 Z0" ,e$
		"display_tool" ,e$
        "G0 SUPA D0 Z0" ,e$
		"{fin}" ,e$
		
        subout$ = 0
    ]
fmt "X" 1 angle_autour_X_RUD
fmt "Y" 1 angle_autour_Y_RUD
fmt "Z" 1 angle_autour_Z_RUD

fmt 1 m1_RUD
fmt 1 m2_RUD
fmt 1 m3_RUD
fmt 1 m4_RUD
fmt 1 m5_RUD
fmt 1 m6_RUD
fmt 1 m7_RUD
fmt 1 m8_RUD
fmt 1 m9_RUD

fmt 1 m1_RUDA
fmt 1 m2_RUDA
fmt 1 m3_RUDA
fmt 1 m4_RUDA
fmt 1 m5_RUDA
fmt 1 m6_RUDA
fmt 1 m7_RUDA
fmt 1 m8_RUDA
fmt 1 m9_RUDA

fmt 1 m1_RUDB
fmt 1 m2_RUDB
fmt 1 m3_RUDB
fmt 1 m4_RUDB
fmt 1 m5_RUDB
fmt 1 m6_RUDB
fmt 1 m7_RUDB
fmt 1 m8_RUDB
fmt 1 m9_RUDB

fmt 1 Lg_X
fmt 1 Lg_Y
fmt 1 Lg_Z
precal_new_matrice_RUD
    #vois comment le rud a tourner
    if t_wcs_m1$ <> 1 | t_wcs_m5$ <> 1 | t_wcs_m9$ <> 1,
    [
        angle_autour_Y_RUD = asin (t_wcs_m3$)
        cos_angleY = cos (angle_autour_Y_RUD)
            angle_autour_Y_RUD = angle_autour_Y_RUD *-1
            if cos_angleY > 0.005 ,
        [
            #3 angle autour de X
            tr_x = t_wcs_m9$ / cos_angleY
            tr_y = -t_wcs_m6$ / cos_angleY
            angle_autour_X_RUD = atan2 (tr_y,tr_x)

            angle_autour_X_RUD = angle_autour_X_RUD * -1
            #4 angle autour de Z
            tr_x = t_wcs_m1$ / cos_angleY
            tr_y = -t_wcs_m2$ / cos_angleY
            angle_autour_Z_RUD  = atan2 (tr_y,tr_x)
            angle_autour_Z_RUD = angle_autour_Z_RUD * -1
        ]
            else,
        [
            # angle autour de X
            angle_autour_X_RUD  = 0
            # angle autour de Z
            angle_autour_Z_RUD = atan2 (t_wcs_m4$,t_wcs_m5$)
            angle_autour_Z_RUD = angle_autour_Z_RUD * -1

        ]

        #tourne X autour Z :
        m1_RUDA = m2$  * sin(angle_autour_Z_RUD) + m1$  * cos(angle_autour_Z_RUD)
        m2_RUDA = m2$  * cos(angle_autour_Z_RUD) - m1$  * sin(angle_autour_Z_RUD)

        #tourne X autour Y :
        m3_RUDA = m1_RUDA * sin(angle_autour_Y_RUD) + m3$ * cos(angle_autour_Y_RUD)
        m1_RUDB = m1_RUDA * cos(angle_autour_Y_RUD) - m3$  * sin(angle_autour_Y_RUD)

        #tourne X autour X :
        m2_RUDB = m3_RUDA * sin(angle_autour_X_RUD) + m2_RUDA  * cos(angle_autour_X_RUD)
        m3_RUDB = m3_RUDA * cos(angle_autour_X_RUD) - m2_RUDA  * sin(angle_autour_X_RUD)

        #tourne Y autour Z :
        m4_RUDA = m5$  * sin(angle_autour_Z_RUD) + m4$  * cos(angle_autour_Z_RUD)
        m5_RUDA = m5$  * cos(angle_autour_Z_RUD) - m4$  * sin(angle_autour_Z_RUD)

        #tourne Y autour Y :
        m6_RUDA = m4_RUDA * sin(angle_autour_Y_RUD) + m6$ * cos(angle_autour_Y_RUD)
        m4_RUDB = m4_RUDA * cos(angle_autour_Y_RUD) - m6$  * sin(angle_autour_Y_RUD)

        #tourne Y autour X :
        m5_RUDB = m6_RUDA * sin(angle_autour_X_RUD) + m5_RUDA  * cos(angle_autour_X_RUD)
        m6_RUDB = m6_RUDA * cos(angle_autour_X_RUD) - m5_RUDA  * sin(angle_autour_X_RUD)

        #tourne Z autour Z :
        m7_RUDA = m8$  * sin(angle_autour_Z_RUD) + m7$  * cos(angle_autour_Z_RUD)
        m8_RUDA = m8$  * cos(angle_autour_Z_RUD) - m7$  * sin(angle_autour_Z_RUD)

        #tourne Z autour Y :
        m9_RUDA = m7_RUDA * sin(angle_autour_Y_RUD) + m9$ * cos(angle_autour_Y_RUD)
        m7_RUDB = m7_RUDA * cos(angle_autour_Y_RUD) - m9$  * sin(angle_autour_Y_RUD)

        #tourne Z autour X :
        m8_RUDB = m9_RUDA * sin(angle_autour_X_RUD) + m8_RUDA  * cos(angle_autour_X_RUD)
        m9_RUDB = m9_RUDA * cos(angle_autour_X_RUD) - m8_RUDA  * sin(angle_autour_X_RUD)

        Lg_X = sqrt(m1_RUDB^2+m2_RUDB^2+m3_RUDB^2)
        m1$ = m1_RUDB / Lg_X
        m2$ = m2_RUDB / Lg_X
        m3$ = m3_RUDB / Lg_X
        Lg_Y = sqrt(m4_RUDB^2+m5_RUDB^2+m6_RUDB^2)
        m4$ = m4_RUDB / Lg_Y
        m5$ = m5_RUDB / Lg_Y
        m6$ = m6_RUDB / Lg_Y
        Lg_Z = sqrt(m7_RUDB^2+m8_RUDB^2+m9_RUDB^2)
        m7$ = m7_RUDB / Lg_Z
        m8$ = m8_RUDB / Lg_Z
        m9$ = m9_RUDB / Lg_Z
        # calcul de dec abs
        x1 = toy4$  * sin(angle_autour_Z_RUD) + tox4$ * cos(angle_autour_Z_RUD)
        y1 = toy4$  * cos(angle_autour_Z_RUD) - tox4$ * sin(angle_autour_Z_RUD)

        z1 = x1 * sin(angle_autour_Y_RUD) + toz4$ * cos(angle_autour_Y_RUD)
        xplan = x1 * cos(angle_autour_Y_RUD) - toz4$  * sin(angle_autour_Y_RUD)

        yplan = z1 * sin(angle_autour_X_RUD) + y1 * cos(angle_autour_X_RUD)
        zplan = z1 * cos(angle_autour_X_RUD) - y1 * sin(angle_autour_X_RUD)

        tox4$ = (xplan - t_orgin_x$)
        toy4$ = (yplan - t_orgin_y$)
        toz4$ = (zplan - t_orgin_z$)
    ]
ppost$       # traitement apres post pro pour effacer le fichier OPS et renommer le fichier NC
    spath_dir = spathnc$ + "Temp\" 
	return = directory(0,spath_dir)
	if simu = 1,
    [
        result = dll(sdllMachSim,spathnc$)
    ]
#endregion

#region DECLARATION STRING
sfreinOn : "M10 M110"
sfreinOFF : "M11 M111"
scom1008_apres : ""
sext$ : ".nc"
smachine : ""
slettrea : "A"
slettreb : "B"
slettrec : "C"
sori : "G54.1 P"
srot : "ROT"
sluboff: ""
sarret_optionnel : "M1"
sannul_Dec :"TRANS"
sm99 : "MCALL"
smode_deg : "SUPA D0"
sc00 : "G40"
sc01 : "G41"
sc02 : "G42"
splane_spacial : "AROT"
splane_reset_stay : "CYCLE800()"
serreur_visu : ""
serreuraxeab_1 : " -  ATTENTION ARRET POST-PRO : L'axe B sort de ses limites de "
serreur4axe :" -  ATTENTION ARRET POST-PRO : le plan de l'Operation n° "
serreur4axebis :" n'est pas accessible en 4 axes !!!!!!! "
serreuraxeab_2 : ", aucune solution trouvee, veuillez modifier le parcours Operation n°"
schange_polar : "ATTENTION Changement de polarite suite butee axe B "
serreurori :" -  ATTENTION ARRET POST-PRO : Origine inacceptable a l'Operation n° "
serreurori1 :" - Exemple => 55 pour G55 ... "
serreurdegagement : ""
serreurdegage : "ATTENTION PAS DE DEGAGEMENT OPERATION N°"
sg00 : "G0"
sg01 : "G1"
sg02 : "G2"
sg03 : "G3"
sq04 : "G4"
sg05 : "G80"
sgcode : ""
fstrsel sg00 gcode$ sgcode 6 -1

sm00 : "M4"
sm01 : "M5"
sm02 : "M3"
spdlon : ""
spdlsel = fsg3(spdir$)
fstrsel  sm00 spdlsel spdlon 3 -1

sp00 : ""
sp01 : ""
spolar : ""
fstrsel sp00 mi1_2 spolar 2 -1

sr00 : "TRAFOOF"
sr01 : "TRAORI"
srtcp : ""
fstrsel sr00 rtcp srtcp 2 -1

smode00 : "G90"
smode01 : "G91"
smode : ""
fstrsel smode00 mode_inc smode 2 -1		

pcorrection
    if cc$ = 41, sc01 "D1"
    if cc$ = 42, sc02 "D1"
    if cc$ = 140, sc00

#endregion

#region CALCUL
pcalcul_tourne
	!x$,!y$
	angle_autour_Zp = atan2(-m4$,-m1$) + 180
	if simu = 1 | (m7$ = 1 & m8$ = 1 & m9$ = 1) , angle_autour_Zp = 0
	if angle_autour_Zp  <> 0,
	[
    	X_tourne = ydep  * sin(angle_autour_Zp) + xdep  * cos(angle_autour_Zp)
    	Y_tourne = ydep  * cos(angle_autour_Zp) - xdep * sin(angle_autour_Zp)
		i_tourne = Jdep  * sin(angle_autour_Zp) + Idep  * cos(angle_autour_Zp)
    	j_tourne = Jdep  * cos(angle_autour_Zp) - Idep * sin(angle_autour_Zp)
	]
	else ,
	[
		X_tourne = xdep
		Y_tourne = ydep
		i_tourne = Idep
		j_tourne = Jdep
	]
	@x$ ,@y$
pcalcul_block_form
    if stck_crnr$ = 0,
    [
        xmin = stck_x$ - (stck_ht$ / 2)
        ymin = stck_y$ - (stck_wdth$ / 2)
        xmax = stck_x$ + (stck_ht$ / 2)
        ymax = stck_y$ + (stck_wdth$ / 2)
    ]
    if stck_crnr$ = 1 | stck_crnr$ = 5,
    [
        xmin = stck_x$
        ymin = stck_y$ - stck_wdth$
        xmax = stck_x$ + stck_ht$
        ymax = stck_y$
    ]
    if stck_crnr$ = 2 | stck_crnr$ = 6,
    [
        xmin = stck_x$ - stck_ht$
        ymin = stck_y$ - stck_wdth$
        xmax = stck_x$
        ymax = stck_y$
    ]
    if stck_crnr$ = 3 | stck_crnr$ = 7,
    [
        xmin = stck_x$ - stck_ht$
        ymin = stck_y$
        xmax = stck_x$
        ymax = stck_y$ + stck_wdth$
    ]
    if stck_crnr$ = 4 | stck_crnr$ = 8,
    [
        xmin = stck_x$
        ymin = stck_y$
        xmax = stck_x$ + stck_ht$
        ymax = stck_y$ + stck_wdth$
    ]
    if stck_crnr$ < 5,
    [
        zmin = stck_z$ - stck_thck$
        zmax = stck_z$
    ]
    else,
    [
        zmin = stck_z$
        zmax = stck_z$ + stck_thck$
    ]
pnumop      # numerotation des operations post-processees
    !old_op_id
	old_numop = numop
    if op_id$ <> old_op_id,
    [
        numop = numop + 1
        debut_5X = 0
    ]
pcalcul_plan
    old_angle_autour_X = angle_autour_X
    old_angle_autour_Y = angle_autour_Y
    old_angle_autour_Z = angle_autour_Z
    angle_autour_Y = asin (m3$)
    cos_angleY = cos (angle_autour_Y)
    angle_autour_Y = angle_autour_Y *-1
    if cos_angleY > 0.005 , #convention XYZ toujours calcule
    [
        #3 angle autour de X
        tr_x = m9$ / cos_angleY
        tr_y = -m6$ / cos_angleY
         angle_autour_X  = atan2 (tr_y,tr_x)
        if angle_autour_X > 180 , angle_autour_X = angle_autour_X - 360
        angle_autour_X = angle_autour_X * -1
        #4 angle autour de Z
         tr_x = m1$ / cos_angleY
        tr_y = -m2$ / cos_angleY
        angle_autour_Z  = atan2 (tr_y,tr_x)
        if angle_autour_Z > 180 , angle_autour_Z = angle_autour_Z - 360
        angle_autour_Z = angle_autour_Z * -1
    ]
    else,
    [
        # angle autour de X
        angle_autour_X  = 0
        # angle autour de Z
        angle_autour_Z  = atan2 (m4$,m5$)
        if angle_autour_Z > 180 , angle_autour_Z = angle_autour_Z - 360
        angle_autour_Z = angle_autour_Z * -1
    ]
	if m9$ < 1,
	[
		if m9$ > -1,
		[
			angle_autour_Zp = atan2(m2$,m5$) 
			angle_autour_X2 = acos(m9$)
			angle_autour_Z2 = atan2(m7$,-m8$)
		]
		else,
		[
			angle_autour_X2 = 180
			angle_autour_Z2 = (atan2(-m2$,m1$)) *-1
			angle_autour_Zp = 0
		]
	]
	else,
	[
		angle_autour_Zp = 0
		angle_autour_X2 = 0
		angle_autour_Z2 = 0
	]

pcalcul_axe_reels
	if mode_4axe, combinaison_axes = 2
    if usinage_5x = 0,  
	[
		tx=m7$
		ty=m8$
		tz=m9$
		old_m7 = m7$
		old_m8 = m8$
		old_m9 = m9$
		old_axec_reel = axec_reel
		old_axeab_reel = axeab_reel
	]
    else,   
	[
		pcalcul_vecteur_5x
		tx=vx
		ty=vy
		tz=vz
		old_m7 = m7$
		old_m8 = m8$
		old_m9 = m9$
	]
	if tz <> 1,
	[
		if combinaison_axes = 1, axec_reel = (atan2(tx,ty) * -1) + 180
		if combinaison_axes = 2, axec_reel = (atan2(ty,-tx) * -1)
		if combinaison_axes = 3, 
		[
			#axec_reel = atan2(tz,ty)
			#"voir 1 :" , *axec_reel  ,e$
			#			axec_reel = atan2(-tz,ty)
			#"voir 2 :" , *axec_reel  ,e$
			#			axec_reel = atan2(tz,-ty)
			#"voir 3 :" , *axec_reel  ,e$
			#			axec_reel = atan2(-tz,-ty)
			#"voir 4 :" , *axec_reel  ,e$
			#			axec_reel = atan2(ty,tz)
			#"voir 5 :" , *axec_reel  ,e$
			#			axec_reel = atan2(ty,-tz)
			#"voir 6 :" , *axec_reel  ,e$
						axec_reel = atan2(-ty,tz) * -1
			#"voir 7 end_gcode$ cour:" , *axec_reel  ,e$
			#			axec_reel = atan2(-ty,-tz)
			#"voir 8 :" , *axec_reel  ,e$
			axeab_reel = asin(tx)
		]
		if combinaison_axes < 3,
		[
			axeab_reel = acos(tz) *-1			
		]
		if  mode_4axe = 1 & abs(axec_reel) = 180 , axeab_reel = axeab_reel * -1
	]
	else,
	[
		if combinaison_axes <> 3,
		[
			axec_reel = angle_autour_Z #+ 180
			axeab_reel = 0
		]
	]
    if mode_4axe = 1 & axec_reel <> 0 & abs(axec_reel) <> 180 & combinaison_axes < 3,
    [
        serreur_visu = serreur4axe  + no2str(numop) + serreur4axebis
        result = mprint(serreur_visu)
        *serreur_visu, e$
        erreur = 1
        exitpost$
    ]
    if mi1$ = 1 & mode_4axe = 0 & combinaison_axes <> 3,
    [
        axec_reel = axec_reel + 180
        axeab_reel = axeab_reel * -1
    ]
    if mode_4axe = 1 , # on est en 4axes ....
    [
        axec_reel = 0
        axeab_reel = axeab_reel
    ]
    if change_polar = 1 & mode_4axe = 0 & combinaison_axes <> 3,
    [
        axec_reel = axec_reel + 180
        axeab_reel = axeab_reel * -1
    ]
    !old_axec_reel
    delta_axeC = axec_reel - old_axec_reel
    if abs(delta_axeC) > 180 ,
    [
    	if delta_axeC > 0, axec_reel = axec_reel - 360
    	if delta_axeC < 0, axec_reel = axec_reel + 360
    ]
    if axec_reel > 180, axec_reel = axec_reel - 360
    if axec_reel < -180, axec_reel = axec_reel + 360
    if angle_autour_X=0 & angle_autour_Y=0 & angle_autour_Z=0 & usinage_5x = 0,
    [
        axec_reel = 0
        axeab_reel = 0
    ]
p_filtre
    !tx
    !ty
    !tz
    !old_tx
    !old_ty
    !old_ty
    #"voir", *old_tx, *tx, *old_ty, *ty, e$
    if axeab_reel <> 0,    
	[
		if tx <> 0 | ty <> 0,    
		[
			if (old_tx <= 0 & tx > 0 & old_ty = 0 & ty = 0)
			| (old_tx >= 0 & tx < 0 & old_ty = 0 & ty = 0)
			| (old_tx = 0 & tx = 0 & old_ty >= 0 & ty < 0)
			| (old_tx = 0 & tx = 0 & old_ty <= 0 & ty > 0)
			| (old_tx < 0 & tx > 0 & old_ty < 0 & ty > 0)
			| (old_tx > 0 & tx < 0 & old_ty > 0 & ty < 0)
			| (old_tx = 0 & tx > 0 & old_ty = 0 & ty < 0)
			| (old_tx = 0 & tx < 0 & old_ty = 0 & ty > 0)
			| autre_solution = 1,    
			[
				if autre_solution = 1, pchange_polar
				#else, " ; Changement de polarite", e$
				change_polar = change_polar * -1
				pcalcul_axe_reels
			]
		]
                        ]
pcalcul_degage_vecteur
    xdegage_butee = old_x + (vecteur_degage * old_tx)
    ydegage_butee = old_y + (vecteur_degage * old_ty)
    zdegage_butee = old_z + (vecteur_degage * old_tz)
pcalcul_degage_axe
    axec_degage_butee = old_axec_reel + 180
    axeab_degage_butee = old_axeab_reel * -1
    if axec_degage_butee > 360, axec_degage_butee = axec_degage_butee - 360
    if axec_degage_butee < -360, axec_degage_butee = axec_degage_butee + 360
    old_axec_reel = axec_degage_butee
    pcalcul_axe_reels
fmt "" 2 dist_precage
pcalcul_percage_5X
    #"voir fond percage abs", *drl_depth_x$ ,*drl_depth_y$ ,*drl_depth_z$,e$
    dist_precage = abs (depth$ - drl_sel_tos$)
    vec_perc_X = u$ - drl_depth_x$
    vec_perc_Y = v$ - drl_depth_y$
    vec_perc_Z = w$ - drl_depth_z$
    Lg_vec_per = sqrt(vec_perc_X^2 + vec_perc_Y^2 + vec_perc_Z^2)
    vec_perc_X = vec_perc_X / Lg_vec_per
    vec_perc_Y = vec_perc_Y / Lg_vec_per
    vec_perc_Z = vec_perc_Z / Lg_vec_per
    surf_piece_X = drl_depth_x$ + (dist_precage  * vec_perc_X)
    surf_piece_Y = drl_depth_y$ + (dist_precage  * vec_perc_Y)
    surf_piece_Z = drl_depth_z$ + (dist_precage  * vec_perc_Z)
    #"voir surf_piece abs" , *surf_piece_X, *surf_piece_Y, *surf_piece_Z ,e$
    plan_secu_X = drl_init_x$
    plan_secu_Y = drl_init_y$
    plan_secu_Z = drl_init_z$
    #"voir plan secu abs" ,*drl_init_x$ , *drl_init_y$ , *drl_init_z$ ,e$
    plan_retract_X = surf_piece_X + ((retract_plane + garde_plane) * vec_perc_X)
    plan_retract_Y = surf_piece_Y + ((retract_plane + garde_plane) * vec_perc_Y)
    plan_retract_Z = surf_piece_Z + ((retract_plane + garde_plane) * vec_perc_Z)
    #"voir retract abs" , *plan_retract_X, *plan_retract_Y, *plan_retract_Z ,e$
    plan_garde_X = surf_piece_X + (garde_plane * vec_perc_X)
    plan_garde_Y = surf_piece_Y + (garde_plane * vec_perc_Y)
    plan_garde_Z = surf_piece_Z + (garde_plane * vec_perc_Z)
    #"voir garde abs" , *plan_garde_X, *plan_garde_Y, *plan_garde_Z ,e$
    # "recalcul dans le plan" ,e$
    xdep = surf_piece_X
    ydep = surf_piece_Y
    zdep = surf_piece_Z
    pcalcul_xyz_plan
    surf_piece_X = xplan
    surf_piece_Y = yplan
    surf_piece_Z = zplan
    #"voir surf_piece plan" , *surf_piece_X, *surf_piece_Y, *surf_piece_Z ,e$
    xdep = plan_secu_X
    ydep = plan_secu_Y
    zdep = plan_secu_Z
    pcalcul_xyz_plan
    plan_secu_X = xplan
    plan_secu_Y = yplan
    plan_secu_Z = zplan
    #"voir plan secu plan", *plan_secu_X, *plan_secu_Y, *plan_secu_Z ,e$
    xdep = plan_retract_X
    ydep = plan_retract_Y
    zdep = plan_retract_Z
    pcalcul_xyz_plan
    plan_retract_X = xplan
    plan_retract_Y = yplan
    plan_retract_Z = zplan
    #"voir retract plan" , *plan_retract_X, *plan_retract_Y, *plan_retract_Z ,e$
    xdep = plan_garde_X
    ydep = plan_garde_Y
    zdep = plan_garde_Z
    pcalcul_xyz_plan
    plan_garde_X = xplan
    plan_garde_Y = yplan
    plan_garde_Z = zplan
    #"voir garde abs" , *plan_garde_X, *plan_garde_Y, *plan_garde_Z ,e$
    xdep = drl_depth_x$
    ydep = drl_depth_y$
    zdep = drl_depth_z$
    pcalcul_xyz_plan
    drl_depth_xplan = xplan
    drl_depth_yplan = yplan
    drl_depth_zplan = zplan
    #"voir fond percage plan" , *drl_depth_xplan, *drl_depth_yplan, *drl_depth_zplan ,e$
    plan_secu_end_Z = plan_secu_Z
    if use_secu_plane = 0 ,
    [
        plan_secu_end_Z = plan_retract_Z
        plan_secu_Z = plan_retract_Z
    ]
    if use_secu_start_end = 1,
    [
        plan_secu_Z = plan_retract_Z
    ]
pcalcul_percage
    pcalcul_percage_5X
    bq200 = abs(refht$ - tosz$)
    if percage_5x = 1, bq200 = refht$ - drl_sel_tos$
    bq201 = abs(depth$ - tosz$)
    if percage_5x = 1, bq201 = abs (depth$ - drl_sel_tos$)
    if drillcyc$ = 0 | drillcyc$ = 3, bq202 = abs(bq201)
    else, bq202 = abs(peck1$)
    bq203 = tosz$
    if percage_5x = 1, bq203 = surf_piece_Z
    bq204 = initht$ #- bq203
    if percage_5x = 1, bq204 = plan_secu_Z
    if drillcyc$ = 1 , bq205 = abs(shftdrl$)
    bq206 = frplunge$
    if drillcyc$ = 4, bq208 = frplunge$
    else, bq208 = 9999
    bq210 = 0
    bq211 = dwell$
    if drillcyc$ = 1, bq212 = abs(retr$)
    if drillcyc$ = 2, bq213 = abs(bq201/bq202)
    else, bq213 = 0
    bq214 = abs(shftdrl$)
    if tool_typ$ = 5, bq239 = n_tap_thds$ * -1
    if tool_typ$ = 4, bq239 = n_tap_thds$
    if drillcyc$ = 6 , bq256 = abs(retr$)
    else, bq256 = 0.2
    if drillcyc$ = 6, bq257 = bq202
    if drillcyc$ = 2, bq257 = abs(peck2$)
    if drillcyc$ = 2, bq258 = 0.2
    if drillcyc$ = 2, bq259 = 0.2
    if drillcyc$ = 5, bq336 = abs(peckclr$)
    else, bq336 = 0
pcalcul_op
    if tool_op$ = 28 | tool_op$ = 29 | tool_op$ = 45 | tool_op$ = 46 | tool_op$ = 48 |
    tool_op$ = 49 | tool_op$ = 110 | tool_op$ = 111 | tool_op$ = 112 | tool_op$ = 113|
    tool_op$ = 154 | tool_op$ = 441 | tool_op$ = 442 | tool_op$ = 443 | tool_op$ = 444 |
    tool_op$ = 445 | tool_op$ = 446 | tool_op$ = 447 | tool_op$ = 448 | tool_op$ = 449 |
    tool_op$ = 450 | tool_op$ = 451 | nextop$ = 11,
    [
         usinage_5x = 1
         if opcode$ = 16, percage_5x = 1
    ]
    else, usinage_5x = 0, percage_5x = 0
pcalcul_matrice_5x
    longvec = sqrt(vx*vx+vy*vy+vz*vz)
    if longvec = 0, longvec = 1
    vx = vx/longvec
    vy = vy/longvec
    vz = vz/longvec
    angle_X = acos(vz)
    angle_Z0 = 0
    angle_Z1 = atan2(vx,vy)
    if (vx=0 & vy=0) , angle_Z1 = 0
    m1 = m1$
    m2 = m2$
    m3 = m3$
    m4 = m4$
    m5 = m5$
    m6 = m6$
    m7 = m7$
    m8 = m8$
    m9 = m9$
    m1$ = (cos(angle_Z0) * cos(angle_Z1)) - (cos(angle_X) * sin(angle_Z0) * sin(angle_Z1))
    m2$ = -(cos(angle_X) * cos(angle_Z1) * sin(angle_Z0)) - (cos(angle_Z0) * sin(angle_Z1))
    m3$ = (sin(angle_X) * sin(angle_Z0))
    m4$ = (cos(angle_Z1) * sin(angle_Z0)) + (cos(angle_X) * cos(angle_Z0) * sin(angle_Z1))
    m5$ = (cos(angle_X) * cos(angle_Z0) * cos(angle_Z1)) - (sin(angle_Z0) * sin(angle_Z1))
    m6$ = -sin(angle_X) * cos(angle_Z0)
    m7$ = sin(angle_X) * sin(angle_Z1)
    m8$ = sin(angle_X) * cos(angle_Z1)
    m9$ = cos(angle_X)
pcalcul_vecteur_5x
    vx = u$ - x$
    vy = v$ - y$
    vz = w$ - z$
    longvec = sqrt(vx*vx+vy*vy+vz*vz)
    if longvec = 0, longvec = 1
    vx = vx/longvec
    vy = vy/longvec
    vz = vz/longvec
pcalcul_xyz_plan
    # tourne le point autour de Z
    xplan_inter = ydep  * sin(angle_autour_Z) + xdep  * cos(angle_autour_Z)
    yplan_inter = ydep  * cos(angle_autour_Z) - xdep  * sin(angle_autour_Z)
    #  tourne le point autour Y
    zplan_inter = xplan_inter * sin(angle_autour_Y) + zdep * cos(angle_autour_Y)
    xplan = xplan_inter * cos(angle_autour_Y) - zdep  * sin(angle_autour_Y)
    # tourne le point autour de X
    yplan = zplan_inter * sin(angle_autour_X) + yplan_inter * cos(angle_autour_X)
    zplan = zplan_inter * cos(angle_autour_X) - yplan_inter * sin(angle_autour_X)
pcalcul_xyz_absolu
    !angle_autour_X, !angle_autour_Y, !angle_autour_Z
    angle_autour_X_2 = angle_autour_X * -1
    angle_autour_Z_2 = angle_autour_Z * -1
    angle_autour_Y_2 = angle_autour_Y * -1
    #   tourne le point autour X
    y1 = zdep * sin(angle_autour_X_2) + ydep * cos(angle_autour_X_2)
    z1 = zdep * cos(angle_autour_X_2) - ydep * sin(angle_autour_X_2)
    #   tourne le point autour Y
    zabs = xdep * sin(angle_autour_Y_2) + z1  * cos(angle_autour_Y_2)
    x1 = xdep * cos(angle_autour_Y_2) - z1  * sin(angle_autour_Y_2)
    # tourne le point autour de Z
    xabs = y1  * sin(angle_autour_Z_2) + x1  * cos(angle_autour_Z_2)
    yabs = y1  * cos(angle_autour_Z_2) - x1  * sin(angle_autour_Z_2)
pavance
    if (fr_pos$ = av_travail | fr_pos$ = av_plonge) & mr7$ = 1,    
	[
		if (av_travail = fr_pos$) & (av_plonge = fr_pos$), avance_param = 1, savance
		else,    
		[
			if av_travail = fr_pos$, avance_param = 1, savance
			if av_plonge = fr_pos$, avance_param = 0, savance
		]
	]
    else, fr_pos$
pavance_force
    if (fr_pos$ = av_travail | fr_pos$ = av_plonge) & mr7$ = 1,    
	[
		if (av_travail = fr_pos$) & (av_plonge = fr_pos$), avance_param = 1, *savance
		else,    
		[
			if av_travail = fr_pos$, avance_param = 1, *savance
			if av_plonge = fr_pos$, avance_param = 0, *savance
		]
	]
    else, *fr_pos$
pCalPlanA
	if percage_5x <> 1, Acal = atan2(-m8$,m9$)
	else ,  Acal = atan2(-vy,vz)
	tox4A = tox4$
	toy4A = toz4$ * sin(Acal) + toy4$ * cos(Acal)
	toz4A = toz4$ * cos(Acal) - toy4$ * sin(Acal)
	AppX = xabs
	AppY = zabs * sin(Acal) + yabs * cos(Acal)
	AppZ = zabs * cos(Acal) - yabs * sin(Acal)
	if simu = 1,
	[
		tox4A = tox4$
		toy4A = toy4$
		toz4A = toz4$ 
		AppX = xabs
		AppY = yabs 
		AppZ = zabs	
	]
pcalPmxA
	Acal = atan2(-vy,vz) 
	x5x = x$
	y5x = z$ * sin(Acal) + y$ * cos(Acal)
	z5x = z$ * cos(Acal) - y$ * sin(Acal)
	if simu = 1,
	[
		x5x = x$
		y5x = y$
		z5x = z$ 
	]
#endregion

#region CORPS DU PP

pori_usi
	if ori_usi < 1 , ori_usi = 54,
	if ori_usi > 54 & ori_usi < 58,
	[
		ori_usi = ori_usi 
	]
   if  ori_usi > 499  & ori_usi < 599,
	[
		ori_usi = ori_usi
	]
  	if (ori_usi > 0 & ori_usi < 54) | (ori_usi > 58 & ori_usi < 500) | ori_usi > 598,
	[
		serreur_visu = serreurori + no2str(numop) + serreurori1 
		result = mprint(serreur_visu)
		*serreur_visu, e$
		erreur = 1
		exitpost$
	]	
    if ori_usi <> old_workof,
    [
        *ori_usi
    ]
    old_workof = ori_usi
pdec_ori
    !tox4$
    !old_tox4
    !toy4$
    !old_toy4
    !toz4$
    !old_toz4
    if tox4$ <> old_tox4 | toy4$ <> old_toy4 | toz4$ <> old_toz4,
    [
        #pplan
    ]
    old_tox4 = tox4$
    old_toy4 = toy4$
    old_toz4 = toz4$
pannulplan
    rtcp = 0
    n$, srtcp, e$
    if mi2$ < 1, pdegage
    spaces$ = 0
	n$, *splane_reset_stay ,e$
    spaces$ = 1
    n$, sannul_Dec, e$
    old_tox4 = 0
    old_toy4 = 0
    old_toz4 = 0
pcycle32_on
    if mr8$ = 1,  #ebauche
    [
        n$ ,"CFTCP", e$
    ]
        if mr8$ = 2,  # 1/2 finition
    [
        n$ ,"CYCLE832(0.05,112101)", e$
    ]
    if mr8$ = 3,  #finition
    [
        n$ ,"CFIN", e$
    ]
pcycle32_off
    if mr8$ = 0,
    [
        #n$, "CYCLE832 ()",e$
        cycl32 = 0
    ]
pdecfin
    n$, "ATRANS X0 Y0 Z0", e$
pplan
    comment$
    mi1_2 = mi1$
    pcalcul_plan
    pcalcul_axe_reels
    pbutee
    !mi1_2
    if percage_5x <> 1,
    [
        xdep = xr$ + tox$
        ydep = yr$ + toy$
        zdep = zr$ + toz$
        pcalcul_xyz_absolu
    ]
    n$, *ori_usi, e$
    if degage_butee = 0,
    [
        if mode_4axe = 1, n$, sg00, *axeab_reel, e$
        else ,n$, sg00, *axeab_reel, *axec_reel, e$
    ]
    if cinematique = 2,
    [
        rtcp = 1
        n$ , srtcp ,e$
		pCalPlanA
        n$, sg00, *AppX, *AppY, e$
        n$, sg00, *AppZ, e$
        rtcp = 0
        n$ , srtcp ,e$
        n$, *ori_usi, e$
    ]
    if mr8$ > 0, pcycle32_on
    else, pcycle32_off
    if usinage_5x = 0, pdec_ori
    pecriture_plan
    spaces$ = 1
    if mr9$ = 1, pdecfin
pecriture_plan
    spaces$ = 0
    if gestion_rotation = 2,
    [
		angle_autour_X4C = 0#angle_autour_X
		angle_autour_Y4C = axeab_reel #angle_autour_Y
		angle_autour_Z4C = 0#angle_autour_Z
		if simu = 1, 
		[
			angle_autour_X4C = angle_autour_X
			angle_autour_Y4C = angle_autour_Y
			angle_autour_Z4C = angle_autour_Z
		]
		if axeab_reel < 0 ,
		[
			n$, "CYCLE800(0,",34,"DMG",34 ,",10000,57,",*tox4A,",",*toy4A,",",*toz4A,",",*angle_autour_Z4C ,",",*angle_autour_Y4C,",",*angle_autour_X4C,",0,0,0,0)", e$
		]
		else ,
		[
			n$, "CYCLE800(0,",34,"DMG",34 ,",20000,57,",*tox4A,",",*toy4A,",",*toz4A,",",*angle_autour_Z4C ,",",*angle_autour_Y4C,",",*angle_autour_X4C,",0,0,0,0)", e$
		]
    ]
	spaces$ = 1
ptransi5x
	pcalcul_op
	pnumop
	if old_usinage_5x = 0 & (tool_op$ = 154 & old_ToolOp <> 154),
	[
		n$, splane_reset_stay, e$
		if old_numop <> numop, n$, ";", *numop, e$
		debut_5X = 1
		rtcp = 1
		n$, sg00, *axeab_reel, [if mode_4axe = 0, *axec_reel], e$
		n$, *srtcp, e$
	]
	if old_ToolOp  = 154 & usinage_5x = 0,
	[
		if old_usinage_5x = 1 , 
		[
			n$, ";", *numop, e$
		]
		if old_numop <> numop, n$, ";", *numop, e$
		pcalcul_plan
    	pcalcul_axe_reels
		n$, sg00, *axeab_reel, [if mode_4axe = 0, *axec_reel], e$
    	rtcp = 0
		n$, *srtcp, e$
		pdec_ori	
		pecriture_plan
		gcode$ = 0
		n$, sg00, *xr$ , *yr$ , *nextz$ ,e$
    	old_m7 = m7$
    	old_m8 = m8$
    	old_m9 = m9$	
	]
	if old_ToolOp  = 154 & usinage_5x = 1,
	[
		if old_numop <> numop, n$, ";", *numop, e$
		debut_5X = 1
	]

   	old_ss = ss$
    old_op_id = op_id$
	old_xform_opId = xform_op_id$
	old_ToolOp = tool_op$
pheader$
    start = 1
	q7
    rd_md$
    pstart_header
    psimulation
    pend_header
	pcreer_buffer
psof$   
	return = fclose(ssynced_buffer)   
	" ", e$ 
	pworkpiece
    pstart_posf
    old_op_id = op_id$
    pend_psof
	#n$, "M140", e$ 
    ptlchg$
ptlchg$
    i$ = 99999.99
    j$ = 99999.99
    percage_5x = 0
    change_polar = -1
    old_axec_reel = 0
    old_axeab_reel = 0
    pstart_ptlchg
    if op_id$ <> old_op_id, plub_off
    old_spdir = spdir$
    spdir$ = 0
    @spdir$
    n$, *spdlon, e$
    spdir$ = old_spdir
    @spdir$
    pcalcul_op
    pannulplan
    pnumop 
    n$, sarret_optionnel, e$
    pstart_outil_ptlchg
	" ", e$	
	if simu <> 1 ,
	[
		out_demande = t$
		plis_tab
		spaces$ = 0
		n$, "T=", 34, soutil, 34, " M6" ,e$
		spaces$ = 1
	]
    else , n$, *t$, ";", spaces$ = 0, *strtool$, e$
	comment$
	spaces$ = 1
    if bldnxtool$ = 1 & simu <> 1, 
	[
		spaces$ = 0
		out_demande = next_tool$
		plis_tab
		n$, n$, "T=", 34, soutil, 34, e$
		spaces$ = 1
		
	]
	n$, "MSG(", 34, scom1008_apres, 34, ")", e$
    pdegage
	n$ , pori_usi ,e$
    pend_outil_ptlchg
    n$, *spdlon, *ss$, e$
    n$, tloffno$, e$
	spaces$ = 0
    "MSG(", 34, *numop, 34, ")", e$ 
	spaces$ = 1
    if usinage_5x <> 1,
    [
        pplan
		!x$, !y$
		xdep = xr$
		ydep = yr$
		pcalcul_tourne
        n$, sg00, *X_tourne, *Y_tourne, e$
		n$, sg00, *zr$, e$
		@xr$,@yr$
		plub_on
    ]
    start = 0
    old_op_id = op_id$
    pend_ptlchg
	old_ss = ss$
	old_xform_opid = xform_op_id$
	old_usinage_5x = usinage_5x
	old_ss = ss$
ptlchg0$
    pstart_between_path_ptlchg0
    !old_op_id
	if old_ToolOp = 154 | tool_op$ = 154, 
    [
		ptransi5x 
        ex$
    ]
	pcalcul_op
	if old_usinage_5x <> usinage_5x ,debut_5X = 0
    if op_id$ <> old_op_id | (old_m7 <> m7$ | old_m8 <> m8$ | old_m9 <> m9$) & debut_5X = 0,
    [
        i$ = 99999.99
        j$ = 99999.99
		plub_off
        pstart_between_op_ptlchg0
        percage_5x = 0
        if usinage_5x = 1, pannulplan
        pnumop
        change_polar = -1
        pcalcul_plan
        !old_angle_autour_X
        !angle_autour_X
        !old_angle_autour_Y
        !angle_autour_Y
        !old_angle_autour_Z
        !angle_autour_Z
        #"voir angle autour", *old_angle_autour_X, *angle_autour_X, *old_angle_autour_Y, *angle_autour_Y, *old_angle_autour_Z, *angle_autour_Z, e$
        if old_angle_autour_X <> angle_autour_X | old_angle_autour_Y <> angle_autour_Y | old_angle_autour_Z <> angle_autour_Z | old_usinage_5x = 1,
        [
            pannulplanTlchg0
            n$, sarret_optionnel, e$ 
			n$ , " ", e$ 
			comment$
			spaces$ = 0
            if op_id$ <> old_op_id | old_xform_opid <> xform_op_id$, "MSG(", 34,, *numop, 34, ")", e$  			
			spaces$ = 1
			n$, "MSG(", 34, scom1008_apres, 34, ")", e$
            pori_usi
            if usinage_5x <> 1,
            [
				pplan
				!x$, !y$
				xdep = xr$
				ydep = yr$
				pcalcul_tourne
        		n$, sg00, *X_tourne, *Y_tourne, e$
				n$, sg00, *zr$, e$
				@xr$,@yr$
				plub_on
            ]
        ]
        else,
        [
			spaces$ = 0
			comment$
            if op_id$ <> old_op_id | old_xform_opid <> xform_op_id$, "MSG(", 34, *numop, 34, ")", e$ 
			spaces$ = 1
			n$, "MSG(", 34, scom1008_apres, 34, ")", e$
            if ori_usi <> old_workof,
            [
                n$ , pori_usi ,e$
            ]
            else,
            [
                if usinage_5x = 0, pdec_ori
            ]
			spaces$ = 1
        ]
    ]
	if op_id$ <> old_op_id & debut_5X = 1, numop = numop + 1, "MSG(", 34,, *numop, 34, ")", e$  
	if ss$ <> old_ss, n$, *spdlon, *ss$, e$
	old_ss = ss$
    old_op_id = op_id$
    pend_ptlchg0
	old_ss = ss$
	old_xform_opid = xform_op_id$
	old_usinage_5x = usinage_5x
pdwl_spd$
	if simu <> 1,
	[
    	if old_ss <> ss$ & ss$ <> 0,
    	[
			n$, *ss$, spdlon,e$
        	old_ss = ss$
    	]
		if dwell$ <> 0,
		[
			n$, sgcode, dwell$ ,e$ 
		]	
	]
	plub_on
plin$
	plub_on	
	!x$, !y$
	xdep = x$
	ydep = y$
	pcalcul_tourne
    n$, sgcode, pcorrection, X_tourne, Y_tourne, z$, pavance, e$
 	@x$,@y$
	old_x = x$
    old_y = y$
    old_z = z$	
pcir$
	plub_on
	!x$, !y$, !j$, !i$
	xdep = x$
	ydep = y$
	Jdep = j$
	Idep = i$
	pcalcul_tourne
	n$, sgcode, *X_tourne, *Y_tourne, z$, *i_tourne, *j_tourne, pavance, e$
    @x$,@y$,@j$, @i$
	old_x = x$
    old_y = y$
    old_z = z$
pz$
	plub_on
    n$, *sgcode, z$, pavance, e$
    old_z = z$
prapid$
	plub_on
	!x$, !y$
	xdep = x$
	ydep = y$
	pcalcul_tourne
    n$, *sgcode, X_tourne, Y_tourne, z$, e$
	@x$,@y$
    old_x = x$
    old_y = y$
    old_z = z$
pzrapid$ 
    plub_on
	n$, *sgcode, z$, e$
    old_z = z$
	
pmx0$
pmx$
    if percage_5x = 0,
    [
        pcalcul_plan
        xdep = x$ + tox$
        ydep = y$ + toy$
        zdep = z$ + toz$
        pcalcul_xyz_absolu
        x$ = xabs
        y$ = yabs
        z$ = zabs
        xdep = u$ + tox$
        ydep = v$ + toy$
        zdep = w$ + toz$
        pcalcul_xyz_absolu
        u$ = xabs
        v$ = yabs
        w$ = zabs
        pcalcul_axe_reels
        if debut_5X = 1, p_filtre
        pbutee
		pcalPmxA
    ]
    if debut_5X = 0,
    [
        if percage_5x = 1,
        [
            vx = u$ - x$
            vy = v$ - y$
            vz = w$ - z$
            pcalcul_matrice_5x
            xabs = x$
            yabs = y$
            zabs = z$
            pplan
            xdep = x$
            ydep = y$
            zdep = z$
            pcalcul_xyz_plan
            xdep = xplan
            ydep = yplan
            zdep = z$
			pcalcul_tourne
            n$, sg00, *X_tourne, *Y_tourne, e$
            n$, sg00, *zplan, e$
			plub_on
        ]
        else,
        [
            if cinematique = 1,
            [
                vx = u$ - x$
                vy = v$ - y$
                vz = w$ - z$
                pcalcul_matrice_5x
                pplan
                xdep = x$
                ydep = y$
                zdep = z$
                pcalcul_xyz_plan
                n$, sg00, *xplan, *yplan, e$
                n$, sg00, *zplan, e$
				plub_on
                n$, *splane_reset_stay ,e$
                n$, sannul_Dec, e$
                rtcp = 1
                n$, srtcp, e$
                m1$=m1
                m2$=m2
                m3$=m3
                m4$=m4
                m5$=m5
                m6$=m6
                m7$=m7
                m8$=m8
                m9$=m9
            ]
            else,
            [
                if mode_4axe = 1, n$, sg00, *axeab_reel, e$
                else ,  n$, sg00, *axeab_reel, *axec_reel,e$
                n$, sfreinOn, e$
				rtcp = 1
                n$, srtcp, e$
                n$, sg00, *ori_usi, *x5x, *y5x, e$
                n$, sg00, *z5x, e$
            ]
        ]
    ]
    debut_5X = 1
    old_tx = tx
    old_ty = ty
    old_tz = tz
    old_x = x$
    old_y = y$
    old_z = z$
    if percage_5x = 1,  ex$
    rtcp = 1
    n$, srtcp, e$
    if fr$ = -2,
    [
        if mode_4axe = 1, n$, `sg00, x5x, y5x, z5x, axeab_reel, e$
        else , n$, `sg00, x5x, y5x, z5x, axeab_reel , axec_reel, e$
    ]
    else,
    [
		plub_on
        if mode_4axe = 1, n$, `sg01, x5x, y5x, z5x, axeab_reel, pcorrection, pavance, e$
        else ,n$, `sg01, x5x, y5x, z5x, axeab_reel , axec_reel, pcorrection, pavance, e$
    ]
	@x$, @y$, @z$
	
pbutee
    if axeab_reel > maxiab | axeab_reel < miniab,
    [
        autre_solution = 1
        p_filtre
        if mi1$ = 0, mi1_2 = 1
        else, mi1_2 = 0
        autre_solution = 0
        if usinage_5x = 1 & fr$ <> -2, pdegage_butee
        if axeab_reel > maxiab | axeab_reel < miniab, psortie_axeab
    ]
pdegage_butee
    vecteur_degage = feed_plane
    pcalcul_degage_vecteur
    !xdegage_butee
    !ydegage_butee
    !zdegage_butee
    n$, sg01, *xdegage_butee, *ydegage_butee, *zdegage_butee, pcorrection, pavance, e$
    if use_secu_plane = 1, vecteur_degage = secu_plane
    if use_retract_plane = 1, vecteur_degage = retract_plane
    if use_retract_plane = 1 & use_secu_start_end = 0, vecteur_degage = secu_plane
    if use_secu_plane = 0 & use_retract_plane = 0, vecteur_degage = feed_plane
    if vecteur_degage <> feed_plane,
    [
        pcalcul_degage_vecteur
        !xdegage_butee
        !ydegage_butee
        !zdegage_butee
        n$, `sg00, *xdegage_butee, *ydegage_butee, *zdegage_butee, e$
    ]
    pcalcul_degage_axe
    !axeab_degage_butee
    !axec_degage_butee
    if degagezbutee = 1,
    [
        rtcp = 0
        n$ , srtcp ,e$
        n$, sg00, smode_deg, *degagez, e$
    ]
    n$, `sg00, *axeab_degage_butee, *axec_degage_butee, e$
    if vecteur_degage <> feed_plane,
    [
        vecteur_degage = feed_plane
        pcalcul_degage_vecteur
        !xdegage_butee
        !ydegage_butee
        !zdegage_butee
        if degagezbutee = 1,
        [
            vx = old_tx
            vy = old_ty
            vz = old_tz
            pcalcul_matrice_5x
            xabs = xdegage_butee
            yabs = ydegage_butee
            zabs = zdegage_butee
            degage_butee = 1
            pplan
            degage_butee = 0
            xdep = xdegage_butee
            ydep = ydegage_butee
            zdep = zdegage_butee
            pcalcul_xyz_plan
            n$, sg00, *xplan, *yplan, e$
            n$, sg00, *zplan, e$
			n$, *splane_reset_stay ,e$
            n$, sannul_Dec, e$
            rtcp = 1
            n$ , srtcp ,e$
            n$, `sg00, *xdegage_butee, *ydegage_butee, *zdegage_butee, e$
            m1$=m1
            m2$=m2
            m3$=m3
            m4$=m4
            m5$=m5
            m6$=m6
            m7$=m7
            m8$=m8
            m9$=m9
        ]
        else, n$, `sg00, *xdegage_butee, *ydegage_butee, *zdegage_butee, e$
    ]
    n$, sg01, *old_x, *old_y, *old_z, *axeab_degage_butee, *axec_degage_butee, pcorrection, pavance_force, e$
psortie_axeab
    if erreur = 0,
    [
        serreur_visu = serreuraxeab_1 + no2str(miniab) + " et " + no2str(maxiab) + serreuraxeab_2 + no2str(numop)
        result = mprint(serreur_visu)
        *serreur_visu, e$
        erreur = 1
        exitpost$
    ]
pchange_polar
    serreur_visu = schange_polar + "Operation n°" + no2str(numop)
    result = mprint(serreur_visu)
    n$, "MSG(", 34, schange_polar, 34, ")", e$
pperc_5X
    xdep = x$
    ydep = y$
    zdep = z$
    pcalcul_xyz_plan
    x$ = xplan
    y$ = yplan
    z$ = zplan
pperc_5X_2
    pcalcul_vecteur_5x
    pcalcul_axe_reels
    vx = u$ - x$
    vy = v$ - y$
    vz = w$ - z$
    pcalcul_matrice_5x
    xabs = drl_init_x$
    yabs = drl_init_y$
    zabs = drl_init_z$
	n$, *splane_reset_stay ,e$
    n$, sannul_Dec, e$
    old_tox4 = 0
    old_toy4 = 0
    old_toz4 = 0
    ptransi_perc_5X
    xdep = x$
    ydep = y$
    zdep = z$
    pcalcul_xyz_plan
    x$ = xplan
    y$ = yplan
    z$ = zplan
ptransi_perc_5X
    rtcp = 1
    pcalcul_plan
    pcalcul_axe_reels
	Acal = atan2(-vy,vz) 
	x5x = xabs
	y5x = zabs * sin(Acal) + yabs * cos(Acal)
	z5x = zabs * cos(Acal) - yabs * sin(Acal)
	if simu = 1, 
	[
		y5x = yabs
		z5x = zabs
	]
    n$, srtcp,e$
    if mode_4axe = 1, n$, sg00,*ori_usi, *xabs, *yabs, *zabs,*axeab_reel, e$
    else , n$, sg00, *ori_usi, *xabs, *y5x, *z5x,*axeab_reel, *axec_reel, e$
    rtcp = 0
    n$ , srtcp ,e$
    n$ ,*ori_usi ,e$
    pecriture_plan
pdrill$
	if op_id$ = old_op_id, lub = 0
    if percage_5x = 1,  pperc_5X
    pcalcul_percage
    !z$
    n$, *bq206, e$ 
    n$, sm99, "CYCLE82(",*bq204, ",", *bq203, ",", *bq200, ",,", *bq201, ",", *bq211, ")",e$
	spaces$ = 1
	gcode$ = 0
	xdep = x$
	ydep = y$
	pcalcul_tourne
    n$, *sgcode, *X_tourne, *Y_tourne, e$
	@x$,@y$
    if percage_5x = 1, n$, sm99, e$	
pdrill_2$
    old_bq200 = bq200
    old_bq201 = bq201
    pcalcul_percage
    if percage_5x = 1,
    [
        pperc_5X_2
        pcalcul_percage
		spaces$ = 1
		xdep = x$
		ydep = y$
		pcalcul_tourne
        n$, sg00, *X_tourne, *Y_tourne, plan_secu_Z ,e$
		spaces$ = 0
        n$, sm99, " CYCLE82(",*bq204, ",", *bq203, ",", *bq200, ",,", *bq201, ",", *bq211, ")",e$
		spaces$ = 1
    	n$, *X_tourne, *Y_tourne, e$
        n$, sm99, e$
    ]
	else,
	[
    	!old_bq200
    	!old_bq201
		!bq200
		!bq201
    	if (bq200 <> old_bq200) | (bq201 <> old_bq201), pdrill$
    	else,
    	[
			spaces$ = 1
			xdep = x$
			ydep = y$
			pcalcul_tourne
			gcode$ = 0
    		n$, *sgcode, *X_tourne, *Y_tourne, e$
			@x$,@y$
    	]
	]
ppeck$
	if op_id$ = old_op_id, lub = 0
    if percage_5x = 1,  pperc_5X
    pcalcul_percage
    !z$
    n$, *bq206, e$
    n$, sm99, "CYCLE83(",*bq204, ",", *bq203, ",", *bq200, ",,", *bq201, ",", ",", *bq202, ",", *bq202, ",0,0,1,1,0,,,0,", *bq211,")",e$
	spaces$ = 1
	gcode$ = 0
	xdep = x$
	ydep = y$
	pcalcul_tourne
    n$, *sgcode, *X_tourne, *Y_tourne, e$
	@x$,@y$
    if percage_5x = 1, n$, sm99, e$
ppeck_2$
    old_bq200 = bq200
    old_bq201 = bq201
    pcalcul_percage
    if percage_5x = 1 ,
    [
        pperc_5X_2
        pcalcul_percage
		spaces$ = 1
		xdep = x$
		ydep = y$
		pcalcul_tourne
        n$, sg00, *X_tourne, *Y_tourne, plan_secu_Z ,e$
		spaces$ = 0
        n$, sm99, "CYCLE83(",*bq204, ",", *bq203, ",", *bq200, ",,", *bq201, ",", ",", *bq202, ",", *bq202, ",0,0,1,1,0,,,0,", *bq211,")",e$
    	spaces$ = 1
    	n$, *X_tourne, *Y_tourne, e$
        n$, sm99, e$
	]
	else,
	[
    	!old_bq200
    	!old_bq201
    	!bq200
    	!bq201		
    	if bq200 <> old_bq200 | bq201 <> old_bq201, ppeck$
    	else,
    	[
			spaces$ = 1
			xdep = x$
			ydep = y$
			pcalcul_tourne
			gcode$ = 0
    		n$, *sgcode, *X_tourne, *Y_tourne, e$
			@x$,@y$
    	]
	]
pchpbrk$
	if op_id$ = old_op_id, lub = 0
    if percage_5x = 1,  pperc_5X
    pcalcul_percage
    !z$
    n$, *bq206, e$
    n$, sm99, "CYCLE83(",*bq204, ",", *bq203, ",", *bq200, ",,", *bq201, ",", ",", *bq202, ",", *bq202, ",0,0,1,   0,0,,,", *bq211, ",0.)",e$
	spaces$ =1
	gcode$ = 0 
	xdep = x$
	ydep = y$
	pcalcul_tourne
    n$, *sgcode, *X_tourne, *Y_tourne, e$
	@x$,@y$
    if percage_5x = 1, n$, sm99, e$
pchpbrk_2$
    old_bq200 = bq200
    old_bq201 = bq201
    pcalcul_percage
    if percage_5x = 1 ,
    [
        pperc_5X_2
        pcalcul_percage
		spaces$ = 1
		xdep = x$
		ydep = y$
		pcalcul_tourne
        n$, sg00, *X_tourne, *Y_tourne, plan_secu_Z ,e$
		spaces$ = 0
        n$, sm99, "CYCLE83(",*bq204, ",", *bq203, ",", *bq200, ",,", *bq201, ",", ",", *bq202, ",", *bq202, ",0,0,1,   0,0,,,", *bq211, ",0.)",e$
    	spaces$ = 1
    	n$, *X_tourne, *Y_tourne, e$
        n$, sm99, e$
	]
	else,
	[
    	!old_bq200
    	!old_bq201
    	!bq200
    	!bq201
    	if bq200 <> old_bq200 | bq201 <> old_bq201, pchpbrk$
    	else,
    	[
			spaces$ = 1
			xdep = x$
			ydep = y$
			pcalcul_tourne
			gcode$ = 0
    		n$, *sgcode, *X_tourne, *Y_tourne, e$
			@x$,@y$
    	]
	]
ptap$
	if op_id$ = old_op_id, lub = 0
    if percage_5x = 1,  pperc_5X
    pcalcul_percage
    !z$
    n$, sm02, e$
    if spdir$ = -1 , dir_tar = 4
    if spdir$ = 0 , dir_tar = 5
    if spdir$ = 1 , dir_tar = 3
    speed_tar = ss$
    n$,sm99,spaces$ =0,"CYCLE84(",*bq204, ",", *bq203, ",", *bq200, ",,", *bq201, ",", *bq211,",", *dir_tar,",,", *bq239,",0,"*speed_tar,",",speed_tar,",3,,0,,,)",e$
	spaces$ = 1
	gcode$ = 0
	xdep = x$
	ydep = y$
	pcalcul_tourne
    n$, *sgcode, *X_tourne, *Y_tourne, e$
	@x$,@y$
    if percage_5x = 1, n$, sm99, e$
ptap_2$
    old_bq200 = bq200
    old_bq201 = bq201
    pcalcul_percage
    if percage_5x = 1 ,
    [
        pperc_5X_2
        pcalcul_percage
		spaces$ = 1
		xdep = x$
		ydep = y$
		pcalcul_tourne
        n$, sg00, *X_tourne, *Y_tourne, plan_secu_Z ,e$
		spaces$ = 0
        n$, "CYCLE84(",*bq204, ",", *bq203, ",", *bq200, ",,", *bq201, ",", *bq211,",", *dir_tar,",,", *bq239,",0,"*speed_tar,",",speed_tar,",3,,0,,,)",e$
    	spaces$ = 1
    	n$, *X_tourne, *Y_tourne, e$
        n$, sm99, e$
	]
	else,
	[
    	!old_bq200
    	!old_bq201
    	!bq200
    	!bq201
    	if bq200 <> old_bq200 | bq201 <> old_bq201, ptap$
    	else,
    	[
			spaces$ = 1
			xdep = x$
			ydep = y$
			pcalcul_tourne
    		n$, *sgcode, *X_tourne, *Y_tourne, e$
			@x$,@y$
    	]
	]
pbore1$
	if op_id$ = old_op_id, lub = 0
    if percage_5x = 1,  pperc_5X
    pcalcul_percage
    !z$
    n$, sm02, e$
    n$, *bq206,e$
    avance_al = bq206
    n$,sm99, "CYCLE85(",*bq204, ",", *bq203, ",", *bq200, ",,", *bq201, ",", *bq211, ",", *avance_al , "," , *avance_al ,")",e$
	spaces$ = 1
	gcode$ = 0
	xdep = x$
	ydep = y$
	pcalcul_tourne
    n$, *sgcode, *X_tourne, *Y_tourne, e$
	@x$,@y$
    if percage_5x = 1, n$, sm99, e$
pbore1_2$
    old_bq200 = bq200
    old_bq201 = bq201
    pcalcul_percage
    !z$
    if percage_5x = 1 ,
    [
        pperc_5X_2
        pcalcul_percage
		spaces$ = 1
		xdep = x$
		ydep = y$
		pcalcul_tourne
        n$, sg00, *X_tourne, *Y_tourne, plan_secu_Z ,e$
		spaces$ = 0
        n$, "CYCLE85(",*bq204, ",", *bq203, ",", *bq200, ",,", *bq201, ",", *bq211, ",", *avance_al , "," , *avance_al ,")",e$
    	spaces$ = 1
    	n$, *X_tourne, *Y_tourne, e$
        n$, sm99, e$
	]
	else,
	[
    	!old_bq200
    	!old_bq201
		!bq200
    	!bq201
    	if bq200 <> old_bq200 | bq201 <> old_bq201, pbore1$
    	else,
    	[
			spaces$ = 1
			xdep = x$
			ydep = y$
			pcalcul_tourne
    		n$, *sgcode, *X_tourne, *Y_tourne, e$
			@x$,@y$
    	]
	]
pbore2$
	if op_id$ = old_op_id, lub = 0
    if percage_5x = 1,  pperc_5X
    pcalcul_percage
    !z$
    n$, sm02, e$
    n$, *bq206, e$
    n$,sm99, "CYCLE86(",*bq204, ",", *bq203, ",", *bq200, ",,", *bq201, ",", *bq211, ",3," ,*bq214 ,",0,,", *bq336, ")",e$
	spaces$ = 1
	gcode$ = 0
	xdep = x$
	ydep = y$
	pcalcul_tourne
    n$, *sgcode, *X_tourne, *Y_tourne, e$
	@x$,@y$
    if percage_5x = 1, n$, sm99, e$
pbore2_2$
    old_bq200 = bq200
    old_bq201 = bq201
    pcalcul_percage
    if percage_5x = 1 ,
    [
        pperc_5X_2
        pcalcul_percage
		spaces$ = 1
		xdep = x$
		ydep = y$
		pcalcul_tourne
        n$, sg00, *X_tourne, *Y_tourne, plan_secu_Z ,e$
		spaces$ = 0
        n$, "CYCLE86(",*bq204, ",", *bq203, ",", *bq200, ",,", *bq201, ",", *bq211, ",3," ,*bq214 ,",0,,", *bq336, ")",e$
    	spaces$ = 1		
    	n$, *X_tourne, *Y_tourne, e$
        n$, sm99, e$
	]
	else,
	[
    	!old_bq200
    	!old_bq201
		!bq200
    	!bq201
    	if bq200 <> old_bq200 | bq201 <> old_bq201, pbore2$
    	else,
    	[
			spaces$ =1
			xdep = x$
			ydep = y$
			pcalcul_tourne
    		n$, *sgcode, *X_tourne, *Y_tourne, e$
			@x$,@y$
    	]
	]
pmisc1$

pmisc1_2$

pcanceldc$
    if percage_5x = 1,
    [
        n$, sg00, *plan_secu_end_Z, e$
    ]
    else,
    [
        n$, sm99, e$
        n$, sg00, *initht$, e$

    ]
pmisc2$
pmisc2_2$
pdrlcst$
pdrlcst_2$
pdrill0$
pdrl_end$
pcancelcc$
peof$
    rtcp = 0
    n$, srtcp, e$
    pstart_peof
    #pdegage
	n$, "FIN" ,e$
    pend_peof
    n$, "M30", e$
pmiscint$
pmiscparam$
pmiscreal$
pq$
ptoolend$
ptooltable$
ptransint$
ptransreal$
puid_list$
psof0$
psof00$
psof_end$
ptlchg00$
ptlchg0_end$
ptlchg_end$
peof0$
peof00$
plin0$
plin_end$
pcir0$
pcir_end$
pmachineinfo$
    #~prmcode$, "=", sparameter$, e$
    if prmcode$ = 17012, snom_ini = sparameter$
    smachine = ucase (snom_ini)
psub_call_s$
psub_st_s$
psub_end_s$
psub_call_mm$
psub_call_m$
psub_end_m_r$
psub_st_m$
psub_end_m$
pcomment0$
pcomment_end$
pmx_end$
prot0$
prot$

#endregion

#region Definition du brut
fmt  ""  2  bottomz      #Bottom of stock
fmt  ""  2  topz         #Top of stock
fmt  ""  2  stck_ll_x    #Stock lower left corner X value
fmt  ""  2  stck_ll_y    #Stock lower left corner Y value
fmt  ""  2  stck_ur_x    #Stock upper right corner X value
fmt  ""  2  stck_ur_y    #Stock upper right corner Y value
fmt  ""  2  stck_cyl_dia #Stock diameter for Cylindrical stock

stock_cyl_axis_err : "ERROR - Stock setup - Cylindrical stock axis about X or about Y are not supported." + no2asc(13) + no2asc(13) + "WORKPIECE line will not be written to NC output."
stock_shape_err    : "ERROR - Stock setup - Only stock shape Rectangular and Cylindrical are supported." + no2asc(13) + no2asc(13) + "WORKPIECE line will not be written to NC output."

pworkpiece       # Define the stock for Siemens graphics / simulation on control
	if stock_shape <> 0 & stock_shape <> 1, result = mprint(stock_shape_err)  #Only Rectangular and Cylindrical are supported
	if stock_shape = 0,  #Box / Block
	[
		if stck_crnr$ = 0,  # Top of stock, Center
		[
			stck_ll_x = stck_x$ - (stck_ht$ / 2)
			stck_ll_y = stck_y$ - (stck_wdth$ / 2)
			stck_ur_x = stck_x$ + (stck_ht$ / 2)
			stck_ur_y = stck_y$ + (stck_wdth$ / 2)
			topz = stck_z$
			bottomz = stck_z$ - stck_thck$
		]
		if stck_crnr$ = 1,  # Top of stock, Upper Left corner
		[
			stck_ll_x = stck_x$
			stck_ll_y = stck_y$ - stck_wdth$
			stck_ur_x = stck_x$ + stck_ht$
			stck_ur_y = stck_y$
			topz = stck_z$
			bottomz = stck_z$ - stck_thck$
		]
		if stck_crnr$ = 2,  # Bottom of stock, Upper Right corner
		[
			stck_ll_x = stck_x$ - stck_ht$
			stck_ll_y = stck_y$ - stck_wdth$
			stck_ur_x = stck_x$
			stck_ur_y = stck_y$
			topz = stck_z$
			bottomz = stck_z$ - stck_thck$
		]
		if stck_crnr$ = 3,  # Top of stock, Lower Right corner
		[
			stck_ll_x = stck_x$ - stck_ht$
			stck_ll_y = stck_y$
			stck_ur_x = stck_x$
			stck_ur_y = stck_y$ + stck_wdth$
			topz = stck_z$
			bottomz = stck_z$ - stck_thck$
		]
		if stck_crnr$ = 4,  # Top of stock, Lower Left corner
		[
			stck_ll_x = stck_x$
			stck_ll_y = stck_y$
			stck_ur_x = stck_x$ + stck_ht$
			stck_ur_y = stck_y$ + stck_wdth$
			topz = stck_z$
			bottomz = stck_z$ - stck_thck$
		]
		if stck_crnr$ = 5,  # Bottom of stock, Upper Left corner
		[
			stck_ll_x = stck_x$
			stck_ll_y = stck_y$ - stck_wdth$
			stck_ur_x = stck_x$ + stck_ht$
			stck_ur_y = stck_y$
			topz = stck_z$ + stck_thck$
			bottomz = stck_z$
		]
		if stck_crnr$ = 6,  # Bottom of stock, Upper Right corner
		[
			stck_ll_x = stck_x$ - stck_ht$
			stck_ll_y = stck_y$ - stck_wdth$
			stck_ur_x = stck_x$
			stck_ur_y = stck_y$
			topz = stck_z$ + stck_thck$
			bottomz = stck_z$
		]
		if stck_crnr$ = 7,  # Bottom of stock, Lower Right corner
		[
			stck_ll_x = stck_x$ - stck_ht$
			stck_ll_y = stck_y$
			stck_ur_x = stck_x$
			stck_ur_y = stck_y$ + stck_wdth$
			topz = stck_z$ + stck_thck$
			bottomz = stck_z$
		]
		if stck_crnr$ = 8,  # Bottom of stock, Lower Left corner
		[
			stck_ll_x = stck_x$
			stck_ll_y = stck_y$
			stck_ur_x = stck_x$ + stck_ht$
			stck_ur_y = stck_y$ + stck_wdth$
			topz = stck_z$ + stck_thck$
			bottomz = stck_z$
		]
		# Output WORKPIECE line using values determined above
		n$, 'WORKPIECE(,"",,"BOX",112,', no_spc$, *topz, no_spc$, ',', no_spc$, *bottomz, no_spc$, ',-80,', no_spc$, *stck_ll_x, no_spc$, ',', no_spc$, *stck_ll_y,
			no_spc$, ',', no_spc$, *stck_ur_x, no_spc$, ',', no_spc$, *stck_ur_y, no_spc$, ')', e$  # Define the stock for graphics - Block / Box
	]
	if stock_shape = 1,  # Cylinder
	[
		if stock_cyl_axis = 2,  #Cylinder about Z axis
		[
			# Build & output the WORKPIECE line - "WORKPIECE(,"",,"CYLINDER", par2, ztop, zbottom, -80, diameter)"
			# Absolute stock length dim in Siemens
			topz = stck_z$ + stck_wdth$
			bottomz = stck_z$
			stck_cyl_dia = stck_ht$
			if stock_shape = 1, n$, 'WORKPIECE(,"",,"CYLINDER",64,', no_spc$, *topz, no_spc$, ',', no_spc$, *bottomz, no_spc$, ',-80,', no_spc$, *stck_cyl_dia, no_spc$, ')', e$  # Define the stock for graphics - Cylinder
		]
		else, result = mprint(stock_cyl_axis_err)  # Cylindrical stock can only be about Z for 3-axis milling.
	]
#endregion

mode_4axe : 0
fq 7 mode_4axe "Choix du mode 4 ou 5 axes => 0: mode 5 axes / 1: mode 4 axes " 

#region parametrage specifique du pp
pprep$
    spathnc_original = spathnc$
    conteur_string = scan(sous_chaine,spathnc_original)
    if st_str_ix$, simu = 1
    rotaxtyp$ = 3
    tooltable$ = 1 #0=non 1=oui liste des outils
sf00 : "FQ1"
sf01 : "FQ11"
savance : ""
fstrsel sf00 avance_param savance 2 -1

fmt 1 type_lub
fmt 1 old_type_lub
fmt 1 coolantx
old_type_lub : 0
type_lub : 0
plub_on
    !coolant$	
	coolantx = cantext$ - 50
	if coolant$ = 0 | coolantx < 0 ,type_lub = 0
	if coolant$ = 1 | (coolantx >= 0 & coolantx <=2 ), type_lub = 1
	if coolant$ = 2 | (coolantx >= 2 & coolantx <=3), type_lub = 2
	if coolant$ = 3 | coolantx > 3 ,type_lub = 3
	!old_type_lub
	if old_type_lub <> type_lub, 
    [
		lub = 1
		plub_off
	]
	if lub = 0 | (old_type_lub <> type_lub),
	[
		if type_lub = 1, n$, "M8", e$ 
		if type_lub = 2, 
		[
			n$, "M8 M7" , e$ 
		]
		if type_lub = 3,n$, "M25", e$ 
	]
	old_type_lub = type_lub
    lub = 1
plub_off
    !coolant$
    if lub = 1 & old_type_lub <> 0, "M9" ,e$
	if lub = 1 & old_type_lub =  3, "M26" ,e$
	old_type_lub = 0
#endregion
pstart_header
    if smachine = "DMG_DMF260", type_machine = 1
    if type_machine = 1,
    [
        combinaison_axes = 3 #1=AC 2=BC 3= AB
        cinematique = 2 #1=tout porte sur table 2=au moins un axe sur la tete
        gestion_rotation = 2 #2=  conventionZXZ  / 3=  conventionXYZ / 4=  conventionZYX 4 / 5= conventionZYZ
        bldnxtool$ = 1 #0=pas d'outil suivant 1=preparation outil suivant
        mode_deg = 2 #1=Z 2=ZetY 3=ZetXY
        maxiab = 100.01
        miniab = -100.01
        maxic = 9999999999
        minic =  -9999999999
        Vect_porteur_x = 0
        Vect_porteur_y = 1
        Vect_porteur_z = 0
        sens_de_B = 1
        sens_de_C = 1
        use_fmax_plane = 1
        degagex = 0
        degagey = -1
        degagez = -1
    ]
    if combinaison_axes = 1,
    [
        result = nwadrs(slettrea, axeab_reel)
        result = nwadrs(slettrea, axeab_degage_butee)
    ]
    if combinaison_axes = 2,
    [
        result = nwadrs(slettreb, axeab_reel)
        result = nwadrs(slettreb, axeab_degage_butee)
    ]
	if combinaison_axes = 3,
    [
        result = nwadrs(slettrea, axec_reel)
        result = nwadrs(slettrea, axec_degage_butee)
    ]
pend_header	 
	#omitseq$ = 1      
	snamenc$ = ucase(snamenc$)
	spaces$ = 0
	n$, ";", snamenc$, e$
	n$, ";", smachine, e$
	n$, ";EDITE LE ", date$, " A ",time$ , e$ 
	spaces$ = 1
    #"coucou fin debut", e$
pstart_posf
    #"debut du debut", e$
pend_psof
    #"fin du debut", e$
pstart_ptlchg
    #"je commence le changement d'outil", e$
pstart_outil_ptlchg
    tloffno$ = 1
    tlngno$ = 1
pend_outil_ptlchg                  
    n$, "STOPRE", e$
pend_ptlchg
    #"je fini mon changement d'outil", e$
pstart_between_path_ptlchg0
    #"je change de passe" e$
pstart_between_op_ptlchg0
    #"je change d'op sans changer d'outil", e$
pend_ptlchg0
    #"j'ai fini mon ptlchg0", e$
pstart_peof
    #"debut de la fin", e$

pend_peof
    #"fin de la fin", e$
pannulplanTlchg0
    rtcp = 0
    n$, srtcp, e$
	pcalcul_axe_reels
	if old_axeab_reel <> axeab_reel ,
	[
    	if mode_deg > 0,
    	[
    		n$, sg00, smode_deg, *degagez,e$
		]
    	if mode_deg = 2, n$, sg00, smode_deg,*degagey,  e$
    	if mode_deg = 3, n$, sg00, smode_deg,*degagex, *degagey,e$
		n$, "D1" ,e$
	]
	else ,
	[
		n$, sg00, smode_deg, *degagez,e$
		n$, "D1" ,e$
	]
	n$, *splane_reset_stay ,e$
    spaces$ = 1
    n$, sannul_Dec, e$
    old_tox4 = 0
    old_toy4 = 0
    old_toz4 = 0
pdegage
    if mode_deg > 0,
    [
    n$, sg00, smode_deg, *degagez,e$
    ]
    if mode_deg = 2, n$, sg00, smode_deg,*degagey,  e$
    if mode_deg = 3, n$, sg00, smode_deg,*degagex, *degagey,e$
	n$, "D1" ,e$
pparameter$
    #~prmcode$, "=", sparameter$, e$                # pour afficher tous les parametres
    if prmcode$ = 10030, av_travail = rpar(sparameter$, 1)
    if prmcode$ = 10031, av_plonge = rpar(sparameter$, 1)
    if prmcode$ = 15140, av_retract = rpar(sparameter$, 1)
    if prmcode$ = 15101, use_retract_plane = rpar(sparameter$, 1)
    if prmcode$ = 15100, use_secu_plane = rpar(sparameter$, 1)
    if prmcode$ = 15339, use_secu_start_end = rpar(sparameter$, 1)
    if prmcode$ = 10024, feed_plane = rpar(sparameter$, 1)
    if prmcode$ = 15374, retract_plane = rpar(sparameter$, 1)
    if prmcode$ = 10020, secu_plane = rpar(sparameter$, 1)
    if prmcode$ = 10027, garde_plane = rpar(sparameter$, 1)
    if prmcode$ = 20004, paramT1  = rpar(sparameter$, 16)
    if prmcode$ = 20007, paramT20 = rpar(sparameter$, 11)
    #if prmcode$ = 20601, mode_4axe = rpar(sparameter$, 1)
    if prmcode$ = 15181, ori_usi = rpar(sparameter$, 1)
	
fprmtbl 19000   2    #Table Number, Size	
#       Param   Variable to load value into
        19133   stock_shape     #Stock shape from toolpath group parameters 0=Rect, 1=Cyl
        19135   stock_cyl_axis  #Stock cylinder axis 0=X,1=Y,2=Z
stock_cyl_axis : 0      #Stock cylinder axis 0=X,1=Y,2=Z
stock_shape    : 0      #Stock shape from toolpath group parameters. 0=Rectangular/Box, 1=Cylinder	
		
pwrttparam$ # lire les parametres des outils
    if prmcode$ = 20004, paramT1  = rpar(sparameter$, 16)
    if prmcode$ = 20007, paramT20 = rpar(sparameter$, 11)
    if prmcode$ = 15346, type_comp = rpar(sparameter$, 1)
	
fmt 1 last_opid	
last_opid : 0

ssynced_buffer : ""

fmt "QS" 4 compt_out
fmt 1 numpas
fmt "T" 5 num_out	
fmt 1 out_demande
fbuf 1 0 80 1
fmt 2 cont
fmt 2 loop
buffer_1_size : 0
rc1 : 1
snom_toolA : ""
sblanc : " "
sdesioutil : ""
sdefoutil : ""
soutil : ""
spath_dir : ""
snomoutil : ""
snum_out : ""
out_demande : 0
plis_tab
	cont = 0
	sbufname1$ = ssynced_buffer
    buffer_1_size = rbuf(1, 0)
	rc1 = 1
    while rc1 <= buffer_1_size,
	[
		snom_toolA = rbuf(1,rc1)
		num_out = rpar(snom_toolA,1)
		if num_out = out_demande,
		[
			numpas = strstr(sblanc,snom_toolA) +1 # on vois a partir d'ou il y a un blanc
			if numpas > 0, sdefoutil = brksps(numpas,snom_toolA) # on coupe a partir du blanc
			soutil = sdefoutil	
			rc1 = buffer_1_size + 1	
		]								
	]	
	#"voir l'outil le plus grand ", *num_outil_max, e$
pcreer_buffer
	spath_dir = spathnc$ + "Temp"
	return = directory(1,spath_dir)
	spathsub$ = spathnc$ + "Temp\"
	snamesub$ = smachine + "buffer" 
	sextsub$ = ".txt"
	ssynced_buffer  = spathsub$ + snamesub$ + ".txt"	

pwrtt$      # Lite des outil
	spaces$ = 0
    strtool$ = ucase(strtool$)
	snomoutil = ucase(strtool$)
    if t$ > 0,
    [
		";", *paramT1 ," ", *strtool$, e$
		subout$ = 1
		snum_out = no2str(t$)
		sdesioutil = snomoutil 
		*snum_out ," ", *sdesioutil ,e$
		subout$ = 0
    ]
	spaces$ = 1


strtool_v7$ : 2
fmt "T" 5 paramT1     # N° outil
fmt   10 paramT2      # Type d'outil
fmt   10 paramT3      # Matiere de l'outil 1=Rapide 2=carbure 3=carbure revetu 4=cermet 5=borzon
fmt   10 paramT4      # Type de rayon de bout 0=aucun 1=torique 2=spherique
fmt "D=" 10 paramT5   # Diametre
fmt "R=" 10 paramT6   # Rayon de bout
fmt   10 paramT7      # Nombre de filet par mm
fmt "A=" 10 paramT8   # Angle de bout
fmt   10 paramT9      # N° de correcteur de rayon
fmt   10 paramT10     # N° de correcteur de longeur
fmt   10 paramT11     # Avance travail
fmt   10 paramT12     # Avance plongee
fmt   10 paramT13     # Avance retraction
fmt   10 paramT14     # Vitesse de broche
fmt   10 paramT15     # Type de lubrification 0=arret 1=eau 2=air 3=broche 4=les 2
fmt   8 paramT16      # Nombre de dents
fmt   10 paramT20     # Diamètre pilote
fmt   "EP=" 10 paramT21     # Hauteur de coupe
fmt   10 paramT22     # Hauteur de sortie totale
fmt   10 paramT23     # Hauteur helice
fmt   10 paramT24     # Diametre de queue
fmt   10 paramT25     # Diametre porte-outil
fmt   10 paramT26     # Hauteur porte-outil
fmt   10 paramT27     # 0=sens horaire 1=sens horaire
fmt   10 paramT28     # % de la vitesse de coupe
fmt   10 paramT29     # % de l'avance par dent
fmt   4 paramT30     # 0=pouces 1=metrique
stypT00 : "OUTIL SPECIAL"
stypT01 : "FORET A CENTRER"
stypT02 : "FORET A NOYER"
stypT03 : "FORET"
stypT04 : "TARAUD A DROITE"
stypT05 : "TARAUD A GAUCHE"
stypT06 : "ALESOIR"
stypT07 : "BARRE D'ALESAGE"
stypT08 : "FRAISE A LAMER"
stypT09 : ""
stypT10 : "FRAISE 2 TAILLES"
stypT11 : "FRAISE BOULE"
stypT12 : "FRAISE A CHANFREINER"
stypT13 : "TOURTEAU"
stypT14 : "FRAISE 3 TAILLES"
stypT15 : "FRAISE A RAYON"
stypT16 : "FRAISE QUEUE D'ARONDE"
stypT17 : "FRAISE CONIQUE"
stypT18 : "FRAISE SPHERIQUE"
stypT19 : "FRAISE TORIQUE"
stypeT : ""
fstrsel stypT00 paramT2 stypeT 20 -1
smatT1  : "ACIER RAPIDE"
smatT2  : "CARBURE"
smatT3  : "CARBURE REVETU"
smatT4  : "CERMET"
smatT5  : "BORZON"
smatT6  : "BORZON"
smatT7  : "BORZON"
smatT8  : "BORZON"
smatT9  : "BORZON"
smatT10 : "INCONNU"
smatT : ""
fstrsel smatT1 paramT3 smatT 10 -1

ptypeBoutT # afficher on non le rayon de bout
    if paramT4 <> 0, paramT6
pangleT    # afficher on non l'angle de l'outil
    if paramT2 = 3 | paramT2 = 12 | paramT2 = 17, paramT8
phauteurT  # afficher la hauteur de dent pour une fraise 3 tailles
    if paramT2 = 14, paramT21
pcomment$
    scomm$ = ucase(scomm$)
	spaces$ = 0
	#"voir le gcode ", *gcode$, scomm$, e$
    #if gcode$ = 1005, "MSG(", 34, scomm$, 34, ")", e$
	if gcode$ = 1005, "; ", scomm$, e$
    if gcode$ = 1006,  scomm$,e$
    #if gcode$ = 1007, "MSG(", 34, scomm$, 34, ")", e$
	if gcode$ = 1007, "; ", 34, scomm$, e$
	if gcode$ = 1008, scom1008_apres = scomm$
    #if gcode$ = 1008,  "MSG(", 34, scomm$, 34, ")", e$
	
	
	
	spaces$ = 1

#region MI et MR de BASE
#[misc integers]
#1. "MI1: POLARITE AXE SECONDAIRE 0=SEQ+ 1=SEQ-  "//0.//0.
#2. ""
#3. ""
#4. ""
#5. ""
#6. ""
#7. ""
#8. ""
#9. ""
#10. ""
#[misc reals]
#1. ""
#2. ""
#3. ""
#4. ""
#5. ""
#6. ""
#7. "MR7: UTILISEZ LES AVANCES PARAMETRIQUES 0=NON 1=OUI "//1.//1.
#8. "MR8: UTILISEZ LE CYCLE DE LISSAGE 32 0=NON 1=OUI "//0.//0."
#9. "MR9: UTILISEZ LES DECALAGES FINS 0=NON 1=OUI "//0.//0."
#10. ""
#endregion

[CTRL_TEXT_XML_BEGIN]  # Post text edits MUST be made with Control Definition Manager.
<?xml version="1.0" encoding="UTF-8"?>
<mp_xml_post_text xml:space="preserve">
	<control>
		<control_label>CTRL_MILL|DMF_260_11</control_label>
		<language>fr-FR</language>
		<misc_integers>
			<misc_1>
				<text>MI1: POLARITE AXE SECONDAIRE 0=B- 1=B+</text>
			</misc_1>
			<misc_2>
				<text>MI2 : DEGAGEMENT ENTRE OPERATIONS 0=oui 1=non</text>
			</misc_2>
			<misc_3>
				<text>""</text>
			</misc_3>
			<misc_4>
				<text>""</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>""</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>""</text>
			</misc_10>
		</misc_integers>
		<misc_reals>
			<misc_1>
				<text>""</text>
			</misc_1>
			<misc_2>
				<text>""</text>
			</misc_2>
			<misc_3>
				<text>""</text>
			</misc_3>
			<misc_4>
				<text>""</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>MR8: CYCLE DE LISSAGE 0=NO/1=EB/2=1/2 FIN/3=FIN</text>
				<metric_value>1.</metric_value>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>""</text>
			</misc_10>
		</misc_reals>
		<simple_drill>
			<description>
				<text>POINTAGE/PERCAGE/LAMAGE</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de securite</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</simple_drill>
		<peck_drill>
			<description>
				<text>DEBOURAGE</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de securite</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Increment</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>Remontee</text>
			</retract_amount>
			<shift>
				<text>Prof de passe mini</text>
			</shift>
		</peck_drill>
		<chip_break>
			<description>
				<text>CYCLE BRISE COPEAUX</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de securite</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Increment</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</chip_break>
		<tap>
			<description>
				<text>CYCLE TARAUDAGE</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de securite</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</tap>
		<bore1>
			<description>
				<text>CYCLE ALESAGE A L'ALESOIR</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de securite</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</bore1>
		<bore2>
			<description>
				<text>CYCLE ALESAGE A LA BARRE</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de securite</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>Orientation</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>Degagement</text>
			</shift>
		</bore2>
		<misc1>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</misc1>
		<misc2>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</misc2>
		<drill_cycle_9>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_9>
		<drill_cycle_10>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_10>
		<drill_cycle_11>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_11>
		<drill_cycle_12>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_12>
		<drill_cycle_13>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_13>
		<drill_cycle_14>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_14>
		<drill_cycle_15>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_15>
		<drill_cycle_16>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_16>
		<drill_cycle_17>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_17>
		<drill_cycle_18>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_18>
		<drill_cycle_19>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_19>
		<drill_cycle_20>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_20>
		<simple_drill_custom_parameters>
			<description>
				<text>Parametres de cycle special 1</text>
			</description>
		</simple_drill_custom_parameters>
		<peck_drill_custom_parameters>
			<description>
				<text>Parametres de cycle special 2</text>
			</description>
		</peck_drill_custom_parameters>
		<chip_break_drill_custom_parameters>
			<description>
				<text>Parametres de cycle special 3</text>
			</description>
		</chip_break_drill_custom_parameters>
		<tap_custom_parameters>
			<description>
				<text>Parametres de cycle special 4</text>
			</description>
		</tap_custom_parameters>
		<bore1_custom_parameters>
			<description>
				<text>Parametres de cycle special 5</text>
			</description>
		</bore1_custom_parameters>
		<bore2_custom_parameters>
			<description>
				<text>Parametres de cycle special 6</text>
			</description>
		</bore2_custom_parameters>
		<misc1_custom_parameters>
			<description>
				<text>Parametres de cycle special 7</text>
			</description>
		</misc1_custom_parameters>
		<misc2_custom_parameters>
			<description>
				<text>Parametres de cycle special 8</text>
			</description>
		</misc2_custom_parameters>
		<drill_cycle_9_custom_parameters>
			<description>
				<text>Parametres de cycle special 9</text>
			</description>
		</drill_cycle_9_custom_parameters>
		<drill_cycle_10_custom_parameters>
			<description>
				<text>Parametres de cycle special 10</text>
			</description>
		</drill_cycle_10_custom_parameters>
		<drill_cycle_11_custom_parameters>
			<description>
				<text>Parametres de cycle special 11</text>
			</description>
		</drill_cycle_11_custom_parameters>
		<drill_cycle_12_custom_parameters>
			<description>
				<text>Parametres de cycle special 12</text>
			</description>
		</drill_cycle_12_custom_parameters>
		<drill_cycle_13_custom_parameters>
			<description>
				<text>Parametres de cycle special 13</text>
			</description>
		</drill_cycle_13_custom_parameters>
		<drill_cycle_14_custom_parameters>
			<description>
				<text>Parametres de cycle special 14</text>
			</description>
		</drill_cycle_14_custom_parameters>
		<drill_cycle_15_custom_parameters>
			<description>
				<text>Parametres de cycle special 15</text>
			</description>
		</drill_cycle_15_custom_parameters>
		<drill_cycle_16_custom_parameters>
			<description>
				<text>Parametres de cycle special 16</text>
			</description>
		</drill_cycle_16_custom_parameters>
		<drill_cycle_17_custom_parameters>
			<description>
				<text>Parametres de cycle special 17</text>
			</description>
		</drill_cycle_17_custom_parameters>
		<drill_cycle_18_custom_parameters>
			<description>
				<text>Parametres de cycle special 18</text>
			</description>
		</drill_cycle_18_custom_parameters>
		<drill_cycle_19_custom_parameters>
			<description>
				<text>Parametres de cycle special 19</text>
			</description>
		</drill_cycle_19_custom_parameters>
		<drill_cycle_20_custom_parameters>
			<description>
				<text>Parametres de cycle special 20</text>
			</description>
		</drill_cycle_20_custom_parameters>
		<drill_cycle_descriptions>
			<simple_drill>
				<text>Percage</text>
			</simple_drill>
			<peck_drill>
				<text>Debourrage</text>
			</peck_drill>
			<chip_break>
				<text>Brise copeaux</text>
			</chip_break>
			<tapping>
				<text>Taraudage</text>
			</tapping>
			<boring_1>
				<text>Alesage alesoir</text>
			</boring_1>
			<boring_2>
				<text>Alesage bare</text>
			</boring_2>
			<misc_drill_1>
				<text>Taraudage brise-cop</text>
			</misc_drill_1>
			<misc_drill_2>
				<text>""</text>
			</misc_drill_2>
			<custom_drill_9>
				<text>""</text>
			</custom_drill_9>
			<custom_drill_10>
				<text>""</text>
			</custom_drill_10>
			<custom_drill_11>
				<text>""</text>
			</custom_drill_11>
			<custom_drill_12>
				<text>""</text>
			</custom_drill_12>
			<custom_drill_13>
				<text>""</text>
			</custom_drill_13>
			<custom_drill_14>
				<text>""</text>
			</custom_drill_14>
			<custom_drill_15>
				<text>""</text>
			</custom_drill_15>
			<custom_drill_16>
				<text>""</text>
			</custom_drill_16>
			<custom_drill_17>
				<text>""</text>
			</custom_drill_17>
			<custom_drill_18>
				<text>""</text>
			</custom_drill_18>
			<custom_drill_19>
				<text>""</text>
			</custom_drill_19>
			<custom_drill_20>
				<text>""</text>
			</custom_drill_20>
		</drill_cycle_descriptions>
		<canned_text>
			<canned_text_1>
				<text>""</text>
			</canned_text_1>
			<canned_text_2>
				<text>""</text>
			</canned_text_2>
			<canned_text_3>
				<text>""</text>
			</canned_text_3>
			<canned_text_4>
				<text>""</text>
			</canned_text_4>
			<canned_text_5>
				<text>""</text>
			</canned_text_5>
			<canned_text_6>
				<text>""</text>
			</canned_text_6>
			<canned_text_7>
				<text>""</text>
			</canned_text_7>
			<canned_text_8>
				<text>""</text>
			</canned_text_8>
			<canned_text_9>
				<text>""</text>
			</canned_text_9>
			<canned_text_10>
				<text>""</text>
			</canned_text_10>
		</canned_text>
		<tool_parameters>
			<head_number>
				<text>""</text>
			</head_number>
			<length_offset>
				<text>""</text>
			</length_offset>
			<diameter_offset>
				<text>""</text>
			</diameter_offset>
			<canned_text>
				<text>""</text>
			</canned_text>
		</tool_parameters>
	</control>
</mp_xml_post_text>
[CTRL_TEXT_XML_END]
