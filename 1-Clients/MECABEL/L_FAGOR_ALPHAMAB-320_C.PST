[POST_VERSION] #DO NOT MOVE OR ALTER THIS LINE# V23.00 P4 E1 W23.00 T1603893019 M23.00 I0 O0
# +-----------------------------------------------------------------------------+
# |         Post pro TOURNAGE MONO TOURELLE                                     |
# |         MONO BROCHE  avec AXE C et axe Y                                    |
# |             Version 1.0                                                     |
# +-----------------------------------------------------------------------------+
# |             MASTERCAM VX4                                                 |
# +-----------------------------------------------------------------------------+
# |                 F.I.Cam                                                     |
# |    Immeuble oceane 1 rue joseph fourier parc d'Archevillier 28000 Chatres   |
# +-----------------------------------------------------------------------------+
# | R�alis� le      : 28/06/10  Par : SYLVAIN RAYOT     non test�               |
# | Pour la soci�t� : renault cleon                                             |              
# | Armoire CN      : fagor                                                     |       
# +-----------------------------------------------------------------------------+
# | Variable mi1    :                                                           |
# +-----------------------------------------------------------------------------+
# | DESCRIPTION DES MODIFICATIONS                                               |
# +-----------------------------------------------------------------------------+

bug1$      : 2         # 1 = Output post to screen - 2 = output leader to screen
bug2$      : 60        # Add postline label to each line at column 'bug2'
bug3$      : 0         # Add whatline to each line 
bug4$      : 0         # Add -.nci line no. to each line? yes/no
whatno$    : yes$       # Ignore whatline branches to plin1 etc.?
linktolvar$    : 1     #Associer les variables de tol�rance X aux variables V9-
linkplnvar$    : 1     #Associer les variables sp�cifiques plan X aux variables V9-?
linklvar$      : 1     #Associer les variables sp�cifiques X Tournage aux variables V9-
tlchng_aft$    : 0  # 0
rpd_typ_v7$    : 0  #Use Version 7 style contour flags?
cant_tlchng$   : 1  #Ignorer entr�e de texte programm� au changement avec tlchng_aft?
newglobal$     : 1  #Activer la v�rification d'erreur pour les variables globales?

#-------------------------- DECLARATION DES FORMATS -----------------------
fs  1  1.9lt
fs  2  1.3l
fs  3  1.3ln
fs  4  1 0
fs  5  1 0n
fs  6  4 0ln
fs  7  0 2t
fs  8  1.5t
fs  9  6 0ln
fs 10  4 0ln
fs 11  2 0ln
fs 12  0 3tn
fs 13  1 3tn
fs 14  1^3
fs 15  1 3t
#--------------------------- AFFECTATION FORMATS ----------------------------

fmt  T  4 t$            # numero outil
fmt  T  4 outil_broche      # numero outil en broche
fmt  T  4 old_outil_broche  # memo numero outil en broche
fmt  T  4 next_tool$        # outil suivant
fmt  T  4 outil_suivant     # numero outil suivant machine
fmt      2 ntools$      # nombre d'outil

fmt  D  2 pos_insert        # position de l'inset dans le cycle G361 d'appel outil
fmt  D  2 old_pos_insert    # memo de pos_insert

fmt  X  2 Xmch          # positon X de la machine
fmt  Y  2 Ymch          # positon Y de la machine
fmt  Z  2 Zmch          # positon Z de la machine

fmt  X  2 old_Xmch          # memo positon X de la machine
fmt  Y  2 old_Ymch          # memo positon Y de la machine
fmt  Z  2 old_Zmch          # memo positon Z de la machine

fmt  B  2 Bmch          # positon B de la machine
fmt  B  2 old_Bmch      # memo positon B de la machine
fmt  C  2 Cmch          # positon C de la machine
fmt  C  2 old_Cmch      # memo positon C de la machine

fmt  X  2 Xpinc         # origine X plan incline G68.1
fmt  Y  2 Ypinc         # origine Y plan incline G68.1
fmt  Z  2 Zpinc         # origine Z plan incline G68.1
fmt  I  2 Ipinc         # I plan incline G68.1
fmt  J  2 Jpinc         # J plan incline G68.1
fmt  K  2 Kpinc         # K plan incline G68.1
fmt  R  2 Rpinc         # R plan incline G68.1
fmt  X  2 old_Xpinc         # origine X plan incline G68.1
fmt  Y  2 old_Ypinc         # origine Y plan incline G68.1
fmt  Z  2 old_Zpinc         # origine Z plan incline G68.1
fmt  I  2 old_Ipinc         # I plan incline G68.1
fmt  J  2 old_Jpinc         # J plan incline G68.1
fmt  K  2 old_Kpinc         # K plan incline G68.1
fmt  R  2 old_Rpinc         # R plan incline G68.1


fmt  R  3 arcrad$       # rayon
fmt     1 bloque        # flag pour gestion du blocage axe C
bloque : 3


fmt     1 result    # pour calcul
fmt     1 result2   # pour calcul
fmt     1 result3   # pour calcul
fmt     1 result4   # pour calcul

fmt     2 g112          # flag activation desactivationdu mode de substitution


fmt  I  3 i$
fmt  K  3 j$


fmt  N  4 n$
fmt  N  5 num
num : 0
num = num + 1


fmt "G4X" 13 tempo
fmt  G  5 cc$
fmt  G  5 old_cc
fmt  G  4 correc
fmt  G  5 old_correc

fmt     4 gcode$
fmt     4 old_gcode
fmt  C  5 coolant$
fmt     4 lubrif
fmt     4 lubrif2
lubrif :  -1
fmt  "%"  3 progno$


fmt  F  2 fr_tour
fmt  F  4 fr_fraisage


fmt  F  4 frmax     # avance rapide pour G112
frmax : 1500


fmt  G  4 avtr
fmt     5 ss$
fmt     5 old_ss
fmt     5 old_spdir
fmt     5 chgoutil  # flag pour dire que c'est un  changement d'outil
fmt     5 decomposer    # flag pour dire de decompozer XYZ
fmt     5 cgh_force # flag pour dire que c'est un changement d'outil nul forc� en changement d'outil
fmt  S  4 ssa
fmt  "S="  4 ssaf

fmt  "G192 S"  4 maxss$
fmt  S  5 oldmaxss



#---  pour lecture parametre 20111
fmt     3 paramL1   # shape index ascii code
fmt     3 paramL2   # qualified length
fmt     3 paramL3   # maximum width
fmt     3 paramL4   # shank width
fmt     3 paramL5   # shank height
fmt     3 paramL6   # 'head' length
fmt     3 paramL7   # 'head' width
fmt     3 paramL8   # corner chamfer width
fmt     3 paramL9   # corner chamfer height
fmt     3 paramL10  # end cutting edge angle
fmt     3 paramL11  # side cutting edge angle
fmt     3 paramL12  # True = round shank
fmt     3 paramL13  # left hand tool?
fmt "OV"  3 paramL14    # vertically mounted tool?
fmt     3 paramL15  # is holder defined in mm or inches?

fmt     3 paramP1
fmt     3 paramP2
fmt     3 paramP3
fmt     3 paramP4
fmt     3 paramP5
fmt     3 paramP6
fmt     3 paramP7
fmt     3 paramP8
fmt     3 paramP9
fmt     3 paramP10
fmt     3 paramP11
fmt     3 paramP12
fmt     3 paramP13
fmt     3 paramP14
fmt     3 paramP15
fmt     3 paramP16

#Tool definition - tool holder name
#g string g = 20110 string = tool holder name

fmt  "M252 D=" 4 correcteurf     # correteur d'outil tournant   
fmt  "M252 D=-" 4 correcteurf_annul  # correteur d'outil tournant   

fmt  "D" 4 correcteur    # correteur d'outil
correcteur = tloffno$
fmt     10 tloffno$
fmt     2 old_tloffno


fmt  "R " 3 tcr$
fmt "DIAM " 3 tldia$

fmt  Op  5 opcode$

fmt     2 usi           # type d'usinage
usi : -9999
fmt     2 old_usi

fmt     2 broche        # broche active
fmt     2 old_broche        # memo broche active


fmt     2 old_op_id

old_op_id :  -9999
fmt     2 old_op_listid
#------- FILETAGES -----------
fmt K 14 K  # pas du filetage
fmt EA 14 EA    # angle pour filetage conique
fmt EB 14 EB    # angle d'entree
fmt P 14 P  # profondeur de filet
fmt Q 14 Q  # Profondeur derniere passe
fmt R 14 R  # long de degagement anticipe
fmt F 5 F   # nombre de filets
fmt S 11 S  # nombre de passes en meme aire (valeur degressives)
fmt ES 11 ES    # nombre de passes en meme PROF (valeur constante) nombre de penetration constante en debourrage pour l'increment suivant

#------- CYCLES MACHINES --------

fmt P  3 peck1$     # premiere penetration  en debourrage
fmt H   5 peck2$
fmt F   3 peckclr$
fmt R   3 retr$
fmt EF  4 dwell$
fmt Q  2 increment  # increment de percage
increment = peck1$ * 1000
fmt F   2 pas
fmt ER   2 garde
fmt EH   2 psecu

garde :  -9999



#--------- BRICOLAGE -------------------

fmt TXT 2 texte           # flag pour ecrire des commentaire
fmt REVERS 2 reverse      # 0 pour broche gauche -1 pour droite
fmt INVERSER 2 inverser   # 1 SI XCP + Z       -1 si xcp = -z

fmt     1 pi$

fmt     2 recul
fmt     2 contrepointe
fmt  Z  2 debcontrepointe
fmt  Z  2 fincontrepointe

fmt  Z  2 stck_final_z$
fmt  Z  2 stck_init_z$
fmt  Z  2 tlstck_on$

fmt     2 avancebrut

fmt     2  transfertbroche
fmt  B  2  stck_chuk_end_dz$

fmt     2 m10

fmt  G  5 workofs$
fmt  G  5 oldworkofs






#--------------- Questions ----------------------
fmt Z 3 Zdeg
Zdeg : 600
#Zdeg = (abs(Zdeg)) *-1

fq 1 Zdeg "Position Z de deganement en G53"#, e$
#CNC<<ORIGINAL>>fq 1 Zdeg "Position Z de deganement en G52", e$
#CNC<<MSG-ERREUR(285)>> Mauvais modificateur type/contexte de label

fq 10 vtol$ "TOLERANCE CORDALE POUR LES ARCS AVEC //t$//"


#------------------------------ FORMULES ------------------------------------
rotaxtyp$  : 3

texte     : 1        # autorise les comentaires


get_1004$   : 1     #Find gcode 1004 with getnextop?
skp_lead_flgs$ : 1   #Do not use v9 style contour flags

lathe      : 1
spaces$    : 1
old_spaces : 1
seqmax$    : 9999   # Max. sequence no.
seqout    : yes$    # Output sequence no.?


maxss$       : 4500   # Maximum spindle speed? 3000


ncldr$     : 20     # No. of leader characters
ldrcode$   : 65     # Leader character dec. equiv.

tooltable$ : 0     # Build tool table
strtool_v7$: 2



subprg$    : 1
auxprg$    : 1
extprg$    : 1

mergesub$  : 1
mergeaux$  : 1
mergext   : 1

progname$  : 1

vtol$      : 0.01
old_ss    : 0     # variable de test de changement de vitesse pour chg outil nul TT


oldmaxss  : 0



svide : ""           # string vide
snone   : "NONE"        # string none

#---------------------------- CYCLES UTILISES -------------------------------
sgam0 : ""
sgam1   : "M41"  # gamme de vitesse 1 (jusqu'a 900 tr/min)
sgam2   : "M41"  # gamme de vitesse 2 (a partir de 900 tr/min)
gamme : 0
sgamme : ""
fstrsel sgam0 gamme sgamme 3 -1

smb0 : "G97"      # Vitesse de broche en tour/minute
smb1 : "G96"      # Vitesse de broche en Vcc
smb2 : ""            # pour init
mode_broche : 2
old_mode_broche : 2
smode_broche : ""
fstrsel smb0 mode_broche smode_broche 3 -1



slub00  : "M9"    # arret arrosage seul
slub01  : "M8"    # arrosage buses seul basse pression
slub02  : "M7"    # marche arrosage buses seul haute pression
slub03  : "M7"    # marche arrosage centre outil
slub04  : "M7"    # arret arrosage centre outil

slubrif : ""
fstrsel slub00 lubrif slubrif 5 -1


sg00       : "G0"        # Rapide
sg01       : "G1"        # travail
sg02       : "G2"        # Arc -
sg03       : "G3"        # Arc +
sg04       : "G80"       # annulation cycle de percage
sg05       : "G81"       # percage axial
sg06       : "G82"       # percage axial tempo
sg07       : "G81"       # percage radial
sg08       : "G82"       # percage radial tempo
sg09       : "G83"       # debourrage axial
sg10       : "G83"       # debourrage radial
sg11       : "G87"       # brise copeaux axial
sg12       : "G87"       # brise copeaux radial
sg13       : "G84"       # taraudage a droite axial
sg14       : "G84"       # taraudage a gauche axial
sg15       : "G84"       # taraudage a droite radial
sg16       : "G84"       # taraudage a gauche radial
sg17       : "G89"       # alesage axial
sg18       : "G89"       # alesage radial
sg19 : ""                # alesage indexe axial
sg20 : ""                # alesage indexe radial
sg21 : ""            # divers 1 axial    
sg22 : ""            # divers 1 radial
sg23 : ""            # divers 2 axial    
sg24 : ""            # divers 2 radial
sg25 : ""            #   
sg26 : ""            # 
sg27      : "G33"       # filletage

sgcode : ""

fstrsel sg00 gcode$ sgcode 28 -1



#          M3 M4 TOURNAGE
sm01    : "M4"
sm02    : "M5"
sm03    : "M3"
spdlon : ""

spdlsel = fsg3(spdir$)
fstrsel  sm01 spdlsel spdlon 3 -1

#    M3 M4 FRAISAGE
sm11       : "M204"
sm12       : "M205"
sm13       : "M203"
spdlon_f : ""

spdlsel_f = fsg3(spdir$)
fstrsel  sm11 spdlsel_f spdlon_f 3 -1


# TYPES D4USINAGE
sty0    : "(FRAISAGE AXIAL AXE Y)"
sty1    : "(FRAISAGE AXIAL AXE C)"
sty2    : "(FRAISAGE RADIAL POSITION)"
sty3    : "(FRAISAGE RADIAL DEVELOPPE)"
sty4    : "(FRAISAGE EN PLAN INCLINE)"
sty5    : "(FRAISAGE EN 5 AXES CONTINUE)"
sty6    : "(TOURNAGE)"
stypeusi : ""

fstrsel  sty0 usi stypeusi 7 -1


# Type d'operation
stoolop0    : "(NON DEFINIT)"
stoolop1    : "(CONTOUR)"
stoolop2    : "(PERCAGE)"
stoolop3    : "(POCHE)"
stoolop4    : "(VERSION 7 LINEAR ARRAY - VERSION 8 MIRROR ROTATE TRANSLATE)"
stoolop5    : "(MULTI-SURFACE EBAUCHE PARALLELLE)"
stoolop6    : "(MULTI-SURFACE EBAUCHE RADIALE)"
stoolop7    : "(MULTI-SURFACE EBAUCHE PROJECTION)"
stoolop8    : "(MULTI-SURFACE EBAUCHE ISOPARAM)"
stoolop9    : "(MULTI-SURFACE EBAUCHE CONTOUR)"
stoolop10   : "(MULTI-SURFACE EBAUCHE POCHE)"
stoolop11   : "(MULTI-SURFACE FINITION PARALLELLE)"
stoolop12   : "(MULTI-SURFACE FINITION RADIALE)"
stoolop13   : "(MULTI-SURFACE FINITION PROJECTION)"
stoolop14   : "(MULTI-SURFACE FINITION ISOPARAM)"
stoolop15   : "(MULTI-SURFACE FINITION CONTOUR)"
stoolop16   : "(OPERATION PAR C-HOOK)"
stoolop17   : "(ENTREE MANUELLE)"
stoolop18   : "(VERSION 8)"
stoolop19   : "(POINT)"
stoolop20   : "(LIMITATION)"
stoolop21   : "(REGLE)"
stoolop22   : "(REVOLUTION)"
stoolop23   : "(LETTRE)"
stoolop24   : "(BALAYEE 2D)"
stoolop25   : "(BALAYEE 3D)"
stoolop26   : "(CARREAU)"
stoolop27   : "(SECTION)"
stoolop28   : "(PERCAGE 5-AXES)"
stoolop29   : "(COURBE 5-AXES)"
stoolop30   : "(PROJECTION SUR UN PLAN)"
stoolop31   : "(PROJECTION SUR UN CYLINDRE)"
stoolop32   : "(PROJECTION SUR UNE SPHERE)"
stoolop33   : "(PROJECTION SUR UN CONE)"
stoolop34   : "(PROJECTION SUR UNE SECTION)"
stoolop35   : "(PROJECTION SUR UNE SURFACE)"
stoolop36   : "(NON-ASSOCIATIF CONTOUR)"
stoolop37   : "(NON-ASSOCIATIF PERCAGE)"
stoolop38   : "(NON-ASSOCIATIF POCHE)"
stoolop39   : "(MULTI-SURFACE FINITION PENCIL TRACE)"
stoolop40   : "(MULTI-SURFACE FINITION LEFTOVER STOCK)"
stoolop41   : "(MULTI-SURFACE FINITION STEEP)"
stoolop42   : "(MULTI-SURFACE FINITION SHALLOW)"
stoolop43   : "(MULTI-SURFACE FINITION CONSTANT SCALLOP)"
stoolop44   : "(MULTI-SURFACE EBAUCHE PLUNGE)"
stoolop45   : "(MULTI-SURFACE FINITION 5-AXE ISOPARAM)"
stoolop46   : "(MULTI-SURFACE FINITION 4-AXE)"
stoolop47   : "(MERGED IN ASCII NCI)"
stoolop48   : "(5-AXE SWARF)"
stoolop49   : "(5-AXE ROLL DIE)"
stoolop50   : "(NON DEFINIT)"
stoolop51   : "(CONTOURNAGE AXIAL)"
stoolop52   : "(CONTOURNAGE RADIAL)"
stoolop53   : "(CONTOURNAGE AXE C)"
stoolop54   : "(VE PERCAGE, NOT USED NON-ASSOCIATI)"
stoolop55   : "(PERCAGE AXIAL)"
stoolop56   : "(PERCAGE RADIAL)"
stoolop57   : "(PERCAGE AXE C)"
stoolop58   : "(NON DEFINIT)"
stoolop59   : "(NON DEFINIT)"
stoolop60   : "(EBAUCHE)"
stoolop61   : "(FINITION)"
stoolop62   : "(GORGE)"
stoolop63   : "(FILETAGE)"
stoolop64   : "(PERCAGE)"
stoolop65   : "(POINT)"
stoolop66   : "(DRESSAGE)"
stoolop67   : "(TRONCONNAGE)"
stoolop68   : "(GORGE)"
stoolop69   : "(ENTREE MANUELLE)"
stoolop70   : "(MERGED ASCII)"
stoolop71   : "(NON DEFINIT)"
stoolop72   : "(NON DEFINIT)"
stoolop73   : "(NON DEFINIT)"
stoolop74   : "(CONTOUR FIL)"
stoolop75   : "(CYCLE FIL)"
stoolop76   : "(POCHE FIL)"
stoolop77   : "(ENTREE MANUELLE FIL)"
stoolop78   : "(POINT FIL)"
stoolop79   : "(4-AXES FIL)"
stoolop80   : "(TRANSFORMATION FIL)"
stoolop81   : "(ASSOCIATIVE TRIMMED FIL)"
stoolop82   : "(MERGED IN ASCII NCI FIL)"
stoolop83   : "(NON DEFINIT)"
stoolop84   : "(NON DEFINIT)"
stoolop85   : "(NON DEFINIT)"
stoolop86   : "(NON DEFINIT)"
stoolop87   : "(NON DEFINIT)"
stoolop88   : "(NON DEFINIT)"
stoolop89   : "(NON DEFINIT)"
stoolop90   : "(NON DEFINIT)"
stoolop91   : "(NON DEFINIT)"
stoolop92   : "(NON DEFINIT)"
stoolop93   : "(NON DEFINIT)"
stoolop94   : "(NON DEFINIT)"
stoolop95   : "(NON DEFINIT)"
stoolop96   : "(NON DEFINIT)"
stoolop97   : "(NON DEFINIT)"
stoolop98   : "(NON DEFINIT)"
stoolop99   : "(NON DEFINIT)"
stoolop100  : "(FILETAGE A LA FRAISE)"
stoolop101  : "(EDIT COMMON OPERATION PARAMETERS)"
stoolop102  : "(SURFACAGE)"
stoolop103  : "(ASSOCIATIF LIMITATION)"
stoolop104  : "(CONTROL OPERATION SOLID PERCAGE)"
stoolop105  : "(SLOT MILL)"
stoolop106  : "(HELIX BORE)"
stoolop107  : "(MULTI-SURFACE EBAUCHE REPRISE)"
stoolop108  : "(ASSOCIATIF NESTING CONTAINER OPERATION)"
stoolop109  : "(NON DEFINIT)"
stoolop110  : "(NON DEFINIT)"
stoolop111  : "(NON DEFINIT)"
stoolop112  : "(NON DEFINIT)"
stoolop113  : "(NON DEFINIT)"
stoolop114  : "(NON DEFINIT)"
stoolop115  : "(NON DEFINIT)"
stoolop116  : "(NON DEFINIT)"
stoolop117  : "(NON DEFINIT)"
stoolop118  : "(NON DEFINIT)"
stoolop119  : "(NON DEFINIT)"
stoolop120  : "(NON DEFINIT)"
stoolop121  : "(NON DEFINIT)"
stoolop122  : "(NON DEFINIT)"
stoolop123  : "(NON DEFINIT)"
stoolop124  : "(NON DEFINIT)"
stoolop125  : "(NON DEFINIT)"
stoolop126  : "(NON DEFINIT)"
stoolop127  : "(NON DEFINIT)"
stoolop128  : "(NON DEFINIT)"
stoolop129  : "(NON DEFINIT)"
stoolop130  : "(NON DEFINIT)"
stoolop131  : "(NON DEFINIT)"
stoolop132  : "(NON DEFINIT)"
stoolop133  : "(NON DEFINIT)"
stoolop134  : "(NON DEFINIT)"
stoolop135  : "(NON DEFINIT)"
stoolop136  : "(NON DEFINIT)"
stoolop137  : "(NON DEFINIT)"
stoolop138  : "(NON DEFINIT)"
stoolop139  : "(NON DEFINIT)"
stoolop140  : "(NON DEFINIT)"
stoolop141  : "(NON DEFINIT)"
stoolop142  : "(NON DEFINIT)"
stoolop143  : "(NON DEFINIT)"
stoolop144  : "(NON DEFINIT)"
stoolop145  : "(NON DEFINIT)"
stoolop146  : "(NON DEFINIT)"
stoolop147  : "(NON DEFINIT)"
stoolop148  : "(NON DEFINIT)"
stoolop149  : "(NON DEFINIT)"
stoolop150  : "(NON DEFINIT)"
stoolop151  : "(NON DEFINIT)"
stoolop152  : "(NON DEFINIT)"
stoolop153  : "(NON DEFINIT)"
stoolop154  : "(NON DEFINIT)"
stoolop155  : "(NON DEFINIT)"
stoolop156  : "(NON DEFINIT)"
stoolop157  : "(NON DEFINIT)"
stoolop158  : "(NON DEFINIT)"
stoolop159  : "(NON DEFINIT)"
stoolop160  : "(NON DEFINIT)"
stoolop161  : "(NON DEFINIT)"
stoolop162  : "(NON DEFINIT)"
stoolop163  : "(NON DEFINIT)"
stoolop164  : "(NON DEFINIT)"
stoolop165  : "(NON DEFINIT)"
stoolop166  : "(NON DEFINIT)"
stoolop167  : "(NON DEFINIT)"
stoolop168  : "(NON DEFINIT)"
stoolop169  : "(NON DEFINIT)"
stoolop170  : "(NON DEFINIT)"
stoolop171  : "(NON DEFINIT)"
stoolop172  : "(NON DEFINIT)"
stoolop173  : "(NON DEFINIT)"
stoolop174  : "(NON DEFINIT)"
stoolop175  : "(NON DEFINIT)"
stoolop176  : "(NON DEFINIT)"
stoolop177  : "(NON DEFINIT)"
stoolop178  : "(NON DEFINIT)"
stoolop179  : "(NON DEFINIT)"
stoolop180  : "(NON DEFINIT)"
stoolop181  : "(NON DEFINIT)"
stoolop182  : "(NON DEFINIT)"
stoolop183  : "(NON DEFINIT)"
stoolop184  : "(NON DEFINIT)"
stoolop185  : "(NON DEFINIT)"
stoolop186  : "(NON DEFINIT)"
stoolop187  : "(NON DEFINIT)"
stoolop188  : "(NON DEFINIT)"
stoolop189  : "(NON DEFINIT)"
stoolop190  : "(NON DEFINIT)"
stoolop191  : "(NON DEFINIT)"
stoolop192  : "(NON DEFINIT)"
stoolop193  : "(NON DEFINIT)"
stoolop194  : "(NON DEFINIT)"
stoolop195  : "(NON DEFINIT)"
stoolop196  : "(NON DEFINIT)"
stoolop197  : "(NON DEFINIT)"
stoolop198  : "(NON DEFINIT)"
stoolop199  : "(NON DEFINIT)"
stoolop200  : "(NON DEFINIT)"
stoolop201  : "(CYCLE FINITION)"
stoolop202  : "(CYCLE EBAUCHE)"
stoolop203  : "(CYCLE EBAUCHE ET FINITION)"
stoolop204  : "(CYCLE EBAUCHE DRESSAGE)"
stoolop205  : "(CYCLE EBAUCHE ET FINITION DRESSAGE)"
stoolop206  : "(CYCLE MODEL REPETITION EBAUCHE)"
stoolop207  : "(CYCLE MODEL REPETITION EBAUCHE ET FINITION)"
stoolop208  : "(CYCLE GORGE EBAUCHE)"
stoolop209  : "(CYCLE GORGE FINITION)"
stoolop210  : "(RAPIDE EBAUCHE)"
stoolop211  : "(RAPIDE FINITION)"
stoolop212  : "(RAPIDE GORGE)"
stoolop213  : "(OPERATION GENEREE PAR C-HOOK)"
stoolop214  : "(TRANSFER BRUT)"
stoolop215  : "(RETOURNE BRUT)"
stoolop216  : "(AVANCE BARRE)"
stoolop217  : "(SERRAGE - DESSERAGE MORS)"
stoolop218  : "(NON DEFINIT)"
stoolop219  : "(NON DEFINIT)"
stoolop220  : "(NON DEFINIT)"
stoolop221  : "(NON DEFINIT)"
stoolop222  : "(NON DEFINIT)"
stoolop223  : "(NON DEFINIT)"
stoolop224  : "(NON DEFINIT)"
stoolop225  : "(NON DEFINIT)"
stoolop226  : "(NON DEFINIT)"
stoolop227  : "(NON DEFINIT)"
stoolop228  : "(NON DEFINIT)"
stoolop229  : "(NON DEFINIT)"
stoolop230  : "(NON DEFINIT)"
stoolop231  : "(NON DEFINIT)"
stoolop232  : "(NON DEFINIT)"
stoolop233  : "(NON DEFINIT)"
stoolop234  : "(NON DEFINIT)"
stoolop235  : "(NON DEFINIT)"
stoolop236  : "(NON DEFINIT)"
stoolop237  : "(NON DEFINIT)"
stoolop238  : "(NON DEFINIT)"
stoolop239  : "(NON DEFINIT)"
stoolop240  : "(NON DEFINIT)"
stoolop241  : "(NON DEFINIT)"
stoolop242  : "(NON DEFINIT)"
stoolop243  : "(NON DEFINIT)"
stoolop244  : "(NON DEFINIT)"
stoolop245  : "(NON DEFINIT)"
stoolop246  : "(NON DEFINIT)"
stoolop247  : "(NON DEFINIT)"
stoolop248  : "(NON DEFINIT)"
stoolop249  : "(NON DEFINIT)"
stoolop250  : "(NON DEFINIT)"
stoolop251  : "(NON DEFINIT)"
stoolop252  : "(NON DEFINIT)"
stoolop253  : "(NON DEFINIT)"
stoolop254  : "(NON DEFINIT)"
stoolop255  : "(NON DEFINIT)"
stoolop256  : "(NON DEFINIT)"
stoolop257  : "(NON DEFINIT)"
stoolop258  : "(NON DEFINIT)"
stoolop259  : "(NON DEFINIT)"
stoolop260  : "(NON DEFINIT)"
stoolop261  : "(NON DEFINIT)"
stoolop262  : "(NON DEFINIT)"
stoolop263  : "(NON DEFINIT)"
stoolop264  : "(NON DEFINIT)"
stoolop265  : "(NON DEFINIT)"
stoolop266  : "(NON DEFINIT)"
stoolop267  : "(NON DEFINIT)"
stoolop268  : "(NON DEFINIT)"
stoolop269  : "(NON DEFINIT)"
stoolop270  : "(NON DEFINIT)"
stoolop271  : "(NON DEFINIT)"
stoolop272  : "(NON DEFINIT)"
stoolop273  : "(NON DEFINIT)"
stoolop274  : "(NON DEFINIT)"
stoolop275  : "(NON DEFINIT)"
stoolop276  : "(NON DEFINIT)"
stoolop277  : "(NON DEFINIT)"
stoolop278  : "(NON DEFINIT)"
stoolop279  : "(NON DEFINIT)"
stoolop280  : "(NON DEFINIT)"
stoolop281  : "(NON DEFINIT)"
stoolop282  : "(NON DEFINIT)"
stoolop283  : "(NON DEFINIT)"
stoolop284  : "(NON DEFINIT)"
stoolop285  : "(NON DEFINIT)"
stoolop286  : "(NON DEFINIT)"
stoolop287  : "(NON DEFINIT)"
stoolop288  : "(NON DEFINIT)"
stoolop289  : "(NON DEFINIT)"
stoolop290  : "(NON DEFINIT)"
stoolop291  : "(NON DEFINIT)"
stoolop292  : "(NON DEFINIT)"
stoolop293  : "(NON DEFINIT)"
stoolop294  : "(NON DEFINIT)"
stoolop295  : "(NON DEFINIT)"
stoolop296  : "(NON DEFINIT)"
stoolop297  : "(NON DEFINIT)"
stoolop298  : "(NON DEFINIT)"
stoolop299  : "(NON DEFINIT)"
stoolop300  : "(NON DEFINIT)"
stoolop301  : "(ROUTER CONTOUR)"
stoolop302  : "(ROUTER POCHE)"
stoolop303  : "(ROUTER CIRCMILL)"
stoolop304  : "(ROUTER CUTOFF)"
stoolop305  : "(ROUTER SURFACE EBAUCHE POCHE)"
stoolop306  : "(ROUTER MULTI PERCAGE)"

stoolop : ""
fstrsel stoolop0 tool_op$ stoolop 307 -1

# mode de sbstitution
sub0 : ""
sub1       : "G21"
sub2       : "G20"

sg112 : ""

fstrsel sub0 g112 sg112 3 -1

# Blocage axe C
sb0 : "" #"M11 (DEBLOCAGE AXE C)"    # DEBLOCAGE AXE C
sb1 : "" #"M10 (BLOCAGE AXE C)"
sb2 : ""     #(FREIN AXE C)"
sb3 : ""

sbloque : ""

fstrsel sb0 bloque sbloque 4 -1

#   Affectation de cot� de correction outil G41 G42
sc00    : "G40"
sc01    : "G41"
sc02    : "G42"
scord : ""
fstrsel  sc00 cc_pos$ scord 3 -1

# -------------- DIVRES ---------------------
stinsert2 : ""
stinsert : ""
stsupport : ""
scomment : ""
nbroutil : 12
smachine : ""        # STRING du nom de la machine


# Lathe canned cycle variables
gcodecc     : 0     #Canned turning cycle gcode
lathecc     : 0     #Flag for canned turning cycle type
                    #1 = G71/G72 rough cycle
                    #2 = G73 pattern repeating cycle
                    #3 = G74/G75 groove cycle
                    #4 = Finish pass for types 1 and 2
                    #Neg.=rough and finish, Pos.=rough only
y_axis      : 0     #Flag for Y axis machining (implies over center)
directcc    : 0     #Direction from parameters
dopeckcc    : 0     #Do peck from groove parameters
foundcc     : 0     #Return found from G70 read
cc_stop_fcc : 0     #Stop output with rough only
lcc_cc_pos  : 0     #Position for lathe canned cycle cutter comp. enable
lccdirx     : 0     #Canned cycle X vector direction
lccdirz     : 0     #Canned cycle Z vector direction
lcc_xcst    : 0     #Lathe canned cycle contour start position
lcc_ycst    : 0     #Lathe canned cycle contour start position
lcc_zcst    : 0     #Lathe canned cycle contour start position
lcc_xcend   : 0     #Lathe canned cycle contour end position
lcc_ycend   : 0     #Lathe canned cycle contour end position
lcc_zcend   : 0     #Lathe canned cycle contour end position

copy_x      : 0     #X value copy, prevent compound operations
copy_y      : 0     #Y value copy, prevent compound operations
copy_z      : 0     #Z value copy, prevent compound operations

# --------------------------------------------------------------------------
# Canned cycle output format (do not change order, used by buffer 3)
# --------------------------------------------------------------------------
fmt  U  2   depthcc
fmt  R  2   clearcc
fmt  U  2   xstckcc
fmt  W  2   zstckcc
fmt  R  4   ncutscc
fmt     2   stepcc
fmt  P  4   ng70s       #P line number in canned cycle
fmt  Q  4   ng70e       #Q line number in canned cycle
fmt  U  2   g73x        #Stored offset of canned cycle rough cut G73
fmt  V  2   g73y        #Stored offset of canned cycle rough cut G73
fmt  W  2   g73z        #Stored offset of canned cycle rough cut G73
fmt  P  2   grvspcc
fmt  Q  2   grvdpcc




fprmtbl 1 5 #Rough cut parameters
        13343 depthcc
        10407 clearcc
        10202 xstckcc
        10203 zstckcc
        10214 directcc

fprmtbl 2 4 #Finish cut parameters
        13341 ncutscc
        10101 depthcc
        10102 xstckcc
        10103 zstckcc

fprmtbl 3 5 #Groove cut parameters
        13358 stepcc
        13138 directcc
        13352 dopeckcc
        10316 depthcc
        13364 clearcc


prcc_setup$     # pour cycle de tournage 
        # Lathe canned turning cycle postblock call to capture roughing tool information.
        # This postblock is called at the command variable c_rcc_setup.

        "prcc_setup$", e$

prcc_call_st$   # pour cycle de tournage 
        # Lathe canned turning cycle postblock call to output NC code for start of finish path
        "prcc_call_st$", e$

prcc_call_end$  # pour cycle de tournage 
        # Lathe canned turning cycle postblock call to output NC code for end of finish path
        "prcc_call_end$", e$
pfcc_call$  # pour cycle de tournage 
        # Lathe canned turning cycle postblock call to output NC code for finish path recall.
        "pfcc_call$", e$





pcc_capture     #Capture ends of canned turning path, stop output w/rough
      #Stop output in rough only lathe canned cycles
      #between rough and finish paths
      *lathecc, *rcc_flg$, e$
      if cc_stop_fcc & rcc_flg$ = 6, "arreter", no_nc_out$ = 1          # 05/28/04
      #Capture vector for G73 cycle
      if rpd_typ$ = 6 & abs(lathecc) = 2,
        [
        if rcc_flg$ = 1, lcc_xcst = vequ (copy_x)
        if rcc_flg$ = 3, lcc_xcend = vequ (copy_x)
        ]


pmachin_bidul       # trouver le cycle
      gcodecc = 0
      lathecc = 0
      if tool_op$ > 201, [

        if tool_op$ = 202 | tool_op$ = 203, [
          gcodecc = 1
          lathecc = 1
          if tool_op$ = 203, lathecc = -1
                        ]
        else, [
          if tool_op$ = 204 | tool_op$ = 205, [
            gcodecc = 2
            lathecc = 1
            if tool_op$ = 205, lathecc = -1
            ]
          else,
            [
            if tool_op$ = 206 | tool_op$ = 207,
              [
              gcodecc = 3
              lathecc = 2
              if tool_op$ = 207, lathecc =  -2
              ]
            else, [
              if tool_op$ = 208, [
                gcodecc = 4
                lathecc = 3
                        ]
                    ]
              ]
        ]
        ]

    *lathecc, *rcc_flg$, e$


pmachineinfo$
    #~prmcode$, "=", sparameter$, e$        # pour afficher tous les parametres

    #if prmcode$ = 19958, *prmcode$, "type de composant", "=", sparameter$, e$  # type de composant 5 = axe rotatif


      if prmcode$ = 17611,      [               # nombre d'outils du changeur de la def machine
        #nbroutil = rpar(sparameter$, 1)    
                #*nbroutil, e$
                        ]

    if prmcode$ = 17012, smachine = sparameter$             # Nom de la machine



pparameter$ # parametre de l'operation

    #"------------------------------------------------pparameter$", e$
    #~prmcode$, "=", sparameter$, e$                # pour afficher tous les parametres

    #if prmcode$ = 20100, sparameter$, e$
    if prmcode$ = 20100, paramP1 = rpar(sparameter$, 9) # lecture des parametres - tool programming parameters
    if prmcode$ = 20103, stinsert2 = sparameter$        # nom de plaquette
    if prmcode$ = 20110, stsupport = sparameter$        # nom de support
    if prmcode$ = 20111, paramL1 = rpar(sparameter$, 15)    # lecture des parametres de porte outil

    if prmcode$ = 15552, paramP16 = rpar(sparameter$, 1)    # angle d'outil

    result = fprm (abs(lathecc))
pmatrice

            "(", *m1$, *m2$, *m3$, ")", e$
            "(", *m4$, *m5$, *m6$, ")", e$
            "(", *m7$, *m8$, *m9$, ")", e$

p_calcul_B_D    # calcul du B et D pour macro appel outil

        #"p_calcul_B_D", *chgoutil, e$

        # B angle otientation outil
        # B0 = vertical
        # B-90 vers la broche gauche 
        # B + 90 vers la broche droite
        # D position de linsert
        # D0 = libre pour fraisage
        # D1 = insert vers la broche gauche ou vers le haut
        # D2 = insert vers la broche droite out vers le bas

        # paramL14 = 1 pour outil vertical
        # paramL14 = 0 pour outil horizontal

        # orient$ 
        #1 Vertical tool - insert down, left 
        #2 Vertical tool - insert down, right 
        #3 Vertical tool - insert up, right 
        #4 Vertical tool - insert up, left 
        #5 Horizontal tool - insert down, left
        #6 Horizontal tool - insert down, right
        #7 Horizontal tool - insert up, right 
        #8 Horizontal tool - insert up, left        

        @chgoutil
        if chgoutil = 1, [      # si changement outil, casser la modalite des ancienne position     
        old_Bmch =  -88888
        old_pos_insert =  -88888
                ]



    if usi = 6, [ # CAS DU TOURNAGE
    # 1 determiner si outil vertical ou horizontal

    if paramL14 = 1, [      # si outil vertical
        Bmch = 0
        if orient$ = 3, Bmch = 180
        if orient$ = 4, Bmch = 180
              ]
        else, [         # si outil horizontal
        Bmch =  -90
        if orient$ = 6, Bmch = 90
        if orient$ = 7, Bmch = 90

            ]


    # 2 calculer l'angle B avec la position de montage et d'usinage
     Bmch = Bmch + paramP5 + paramP16

    # 3 calculer D position de linsert
    if orient$ = 1, pos_insert = 1
    if orient$ = 2, pos_insert = 2
    if orient$ = 3, pos_insert = 2
    if orient$ = 4, pos_insert = 1
    if orient$ = 5, pos_insert = 2
    if orient$ = 6, pos_insert = 2
    if orient$ = 7, pos_insert = 1
    if orient$ = 8, pos_insert = 1

        ]

    else, [



    # 1 determiner l'angle B


        Bmch = -a$

    # 2 calculer D position de linsert
    pos_insert = 0
    ]


pplan_inc_calc  # calcul du G68.1

        #pmatrice               # AFFICHAGE DE LA MATRICE 

        result = atan2(m9$,m8$)         # position angulaire du plan d'usinage par rapport a l'axe fraise
        #"(position angulaire du plan d'usinage par rapport a l'axe fraise", *result, ")", e$
        result2 =  atan2(m3$,m2$)       # position angulaire du plan d'usinage par rapport a la vue de cot�
        #"(position angulaire du plan d'usinage par rapport a la vue de cot�", *result2, ")", e$

        result3 = (result - result2)



        result = atan2(m9$,m8$)         # position angulaire du plan d'usinage par rapport a l'axe fraise
        #*result

        Xpinc =  ((toy4$ * cos(result)) + (toz4$ * sin (result))) * 2
        Ypinc = ((toz4$ * cos(result)) - (toy4$ * sin(result)))         # calcul des XY en absolue avec le plan rederss�
        #Xpinc =  ((toy4$ * cos(result)) - (toz4$ * sin (result))) 
        #Ypinc = ((toz4$ * cos(result)) + (toy4$ * sin(result)))        # calcul des XY en absolue avec le plan rederss�

        Zpinc = tox4$

        Ipinc = 0
        Jpinc = 1
        Kpinc = 0

        Rpinc = 90+Bmch

pplan_inc_affiche   # conversion 3D

        n$, "(ACTIVE PLAN 3D)", e$
        n$, "G49", e$
        n$, "G68.1", *Xpinc, *Ypinc, *Zpinc, *Ipinc, *Jpinc, *Kpinc, *Rpinc, e$
        n$, *correcteur, e$         # forcer l'appel du correcteur outil
        n$, "G17", e$
        ppos_C
        n$, "(-------------)", e$


        #MEMO DU PLAN INCLINE
        old_Xpinc = Xpinc
        old_Ypinc = Ypinc
        old_Zpinc = Zpinc
        old_Ipinc = Ipinc
        old_Jpinc = Jpinc
        old_Kpinc = Kpinc
        old_Rpinc = Rpinc
        old_Bmch = Bmch

pplan_inc_annul     # annulation conversion 3D
        n$, "(ANNUL PLAN 3D)", e$
        n$, "G49", e$
        n$, "G69.1", e$
        n$, "(-------------)", e$


p_macro_appel_old   # macro appel outil 
        # G361 cycle de positionnement de broche au chg outil
        # B angle otientation outil
        # B0 = vertical
        # B-90 vers la broche gauche 
        # B90  vers la broche droite
        # D position de linsert
        # D0 = libre pour fraisage
        # D1 = insert vers la broche gauche ou vers le haut
        # D2 = insert vers la broche droite out vers le bas

        #"----------", end_op_id$, op_id$, e$

        p_calcul_B_D                        # FAIRE LES CALCUL

        if Bmch <> old_Bmch | pos_insert <> old_pos_insert, [

            if chgoutil = 1 , n$, "G361", *Bmch, *pos_insert, e$            # macro appel outil
        else, n$, "G28", "U0", e$, n$, "G28", "V0", "W0", e$, n$, *sgcode, Bmch, pos_insert, e$

                                    ]


        old_Bmch = Bmch             # memoriser les positions pour cgh outil nul et les forcer si besoin
        old_pos_insert = pos_insert



p_appel_outil
        outil_broche = t$


        if usi = 6 | usi = 1 | usi = 0, n$, *outil_broche, "D1", e$

        else, n$, *outil_broche, !correcteur, "M6", e$
		n$ "G54" , e$





pchgt_outil
    if old_usi = 6, [                   # si on est en tournage passer en vitesse de broche constante a 200 tr/min
    mode_broche = 0                     # Tr/minute
    if mode_broche <> old_mode_broche, ssa = -9999
    !ssa
    ssa = 200                       # demarrer a 200 tour

    n$, smode_broche, ssa, e$   # demarrer a 200 tour
    old_mode_broche = mode_broche
        ]


        n$, "(POINT DE CHG OUTIL)", e$
        gcode$ = 0
        #n$, sgcode, "G53", "X", "Y", e$ # retour au origine en X puis Z 
        n$, sgcode, "G53", *Zdeg, e$

               Xmch =  -888888
               Ymch =  -888888
               Zmch =  -888888

        !Xmch, !Ymch, !Zmch # pour mettre en position  apres




pscomm0$     # pre commentaire

pcomment0$


pcomment$     # Commentaires

    pcomment2

pcomment2       #Affichage des commentaire des usinages

            scomm$ = ucase (scomm$)
        #*gcode$


             if gcode$ = 1005 & texte = 1, n$, "(", spaces$ = 0, scomm$, ")", spaces$ = old_spaces, e$      # Usinage commentaire - en commentaire 
             if gcode$ = 1006 & texte = 1, n$, scomm$, e$                           # Usinage commentaire - en code
             if gcode$ = 1007 & texte = 1, n$,  "(", spaces$ = 0, scomm$, ")", spaces$ = old_spaces, e$, "  ", e$   # commentaire d'operation
             if gcode$ = 1008 & texte = 1, n$, "(", spaces$ = 0, scomm$, ")", spaces$ = old_spaces, e$, "  ", e$       # commentaire d'operation


pfr_tournage # Ecriture avances tournage

             fr_tour = fr_pos$
             pavtr, fr_tour


pfr_fraisage # Ecriture avances fraisage
        #"****", *gcode$, *g112, "***"
        fr_fraisage = fr_pos$
        #if gcode$ = 0 & g112 = 1, fr_fraisage = frmax   # si G0 en G122, avance maxi
                if gcode$ = 1 | g112 = 1, pavtr, fr_fraisage

pfr_percage # Ecriture avances percage

        fr_fraisage = fr_pos$
        pavtr, fr_fraisage


plubrifon    # Mise en marche lubrifiant


        lubrif = coolant$

        slubrif

plubrifoff   # arret lubrifiant

        if lubrif <> 0, lubrif = 0


        n$, slubrif, e$

pcord_tour     # Correction armoire pour tournage 

        pcord

           if cc$ = 41 , correc = 41
           if cc$ = 42 , correc = 42
           if cc$ = 140, correc = 40

           old_cc = correc

pcord_fraisage
        pcord

           #if cc$ = 41, cc$
           #if cc$ = 42, cc$
           #if cc$ = 140, "G40"

pcord

        @cc_pos$
        correcteur, scord

pcorrecteurf_annul
        if correcteurf_annul <> 0, [
            correcteurf_annul
        correcteurf_annul = 0
            ]



pcorrecteurf

    if correcteurf_annul <> 0, pcorrecteurf_annul

        correcteurf = tloffno$
        correcteurf_annul = correcteurf

        correcteurf
#-------------------------------------------------


ptransfertbrut
           " ", e$
           if stck_spindle$ = 0, n$, "G100 A0 B0 (TRANSFERT BRUT DANS BROCHE DROITE)",e$
           if stck_spindle$ = 1, n$, "G104 A0 B0 (TRANSFERT BRUT DANS BROCHE GAUCHE)",e$
           n$, "M01 ", e$
               transfertbroche = 2

pstck_trans$    #deuxieme broche
               transfertbroche = 1


#-----------------------------------------------------------------------------------
pstck_flip$     # retourner le brut

              n$, "retourner le brut",e$
              stck_spindle$, stck_init_z$, stck_final_z$, stck_chuk_st_z$,e$
              stck_chuk_st_x$, stck_chuk_end_z$, stck_chuk_end_x$,e$

#----------------------------AvanceBrut---------------------------
pstck_bar_fd$   # Avance du brut

             avancebrut = 1

           #   n,  "Avance du brut", e
           # stck_spindle, stck_op, stck_clear, stck_grip, stck_init_z, stck_final_z
           # stck_chuk_st_z, stck_chuk_st_x, stck_chuk_end_z, stck_chuk_end_x

pavancebrut
           " ", e$
           n$, "G103 A0 B0 D0 (TIRE BARRE)", e$
           " ", e$
           avancebrut = 2

#----------------------------Lunette---------------------------
psteadyrest$  # Lunette

            "(PAS DE LUNETTE SUR T21)",e$
       #        n, "Lunette", e
       #        stck_init_z, stck_final_z

#----------------------------Mors---------------------------
pchuck$    # mors

             n$, "mors", e$

              clmp_spindle$, clmp_op$, stck_chuk_st_z$,e$
              stck_chuk_st_x$, stck_chuk_end_z$, stck_chuk_end_x$,e$


#----------------------------Contre pointe---------------------------
ptailstock$ # Contre pointe

            #  n, "contre pointe", e
            #  tlstck_on, stck_init_z, stck_final_z

            contrepointe = 1
            if tlstck_on$ = 0, [recul = 0, e$
                               debcontrepointe = stck_init_z$, e$
                               fincontrepointe = stck_final_z$, e$]


            if tlstck_on$ = 1, [recul = 1, e$
                               debcontrepointe = stck_init_z$, e$
                               fincontrepointe = stck_final_z$, e$]




pcontrepointe_placement

        n$, "M217", "Z=", e$
        n$, "M01", e$

pcontrepointe
        " ", e$
           if recul = 0 , n$, "M18", "(ENTREE FOURREAU)", e$, pcontrepointe_placement
           if recul = 1 , pcontrepointe_placement, n$, "M17", "(SORTIE FOURREAU)", e$
        " ", e$
           contrepointe = 2

# ------------------ VITESSES -------------------------
pgamme      # selection de la gamme de vitesse
        if css_actv$ = 0, [ #si tour/minutes
            @ss$
            if abs(ss$) < 900, gamme = 1
            else, gamme = 2
                ]
        if css_actv$ = 1, [ #si vitesse de coupe constante
            @maxss$
            if abs(ss$) < 900, gamme = 1
            else, gamme = 2
                ]
        sgamme


pvits       # Selection du mode de vitesse de broche

        @css_actv$      # 0 = tr/min 1 = VCC
        @spdir$         # sens de rotation
        mode_broche = css_actv$ # tr/min ou VCC

        if mode_broche <> old_mode_broche, ssa = -9999, !ssa

        ssa = abs(ss$)      # rotation tournage
        ssaf = ssa      # rotation outil tournant

        if usi = 6, smode_broche, ssa, spdlon   # G96 G97 STRUC pour tournage

        else, !smode_broche, ssaf, spdlon_f


        old_spdir = spdir$
        old_ss = ss$
        old_mode_broche = mode_broche




pavtr           # Mode d'avance en tour mm/mn ou mm /tr  G98 G99

                if ipr_actv$ = 0, avtr = 94
                else, avtr = 95

                 avtr


#------------------------Gestion des origines---------------------------------------
poriusi
       if workofs$ < 54, workofs$ = 54
       *workofs$
       oldworkofs = workofs$

poriusinul
       if workofs$ < 54, workofs$ = 54
       if oldworkofs <> workofs$, n$, workofs$
       oldworkofs = workofs$

#======================== APPELS DES DIFFERENTS OUTILS ==============================

ptype_usi     # choix du mode d'usinage courant


    linarc$ = 0

    usi =  -9999

    if m7$ = 1,         usi = 0             # fraisage en axial axe Y

    if m7$ = 1 & rotary_type$ = 2,  usi = 1     # fraisage en axial Axe C 

    if m1$ = 1 & rotaxis$ = 0,  usi = 2     # fraisage radial  en position

    if m1$ = 1 & rotaxis$ = 2,  usi = 3     # fraisage radial en developpe


    if m1$ =  -1& rotaxis$ = 0, usi = 2     # fraisage radial  en position

    if m1$ =  -1& rotaxis$ = 2, usi = 3     # fraisage radial en developpe

    if usi =  -9999,        usi = 4     # fraisage en plan inclin�

                            # fraisage 5 axes continue
        inverser = 1

    if (usi = 2 | usi = 3) & m1$ =  -1,inverser =  -1

    if opcode$ > 99, usi = 6            # tournage

    #if usi = 3, linarc$ = 1

    if (usi = 6),                       pusecanlathe
    else,                           pusecanmill

        #*usi, *old_usi, "--------------------", e$

p_Appel_T_B # Appel outil de fraisage en bout axe Y (usi = 0)  

    gcode$ = 25
    !gcode$
    gcode$ = 0

    fr_tour =  -9999                        # pour forcer l'affichage de l'avance
    !fr_tour



    " ", e$
        comment$                    # commentaire d'operation

        if texte = 1, n$, stypeusi, e$          # Type d'usinage
        if texte = 1, n$, stoolop, e$           # Type d'operation









    p_appel_outil                   # macro d'appel outil 
    plist_fraisage                  # outil utilis�
    maxss$ = 3000                   # 3000 tour pour fraisage 
    n$, maxss$, e$                  # limitation de la broche        
    mode_broche = 0                 # passer en Tr/minute
    if mode_broche <> old_mode_broche, ssa = -9999  # casser la modalit� de S si changement de mode
    !ssa                        # mettre a jour S pour casser la modalit�
    n$, pvits, e$


    Ymch = -99999                # mise a zero  de laxe Y machine  
    !Ymch

        bloque = 0
        n$, sbloque, e$             # desserage du frein de broche axe C broche libre pour tournage



    gcode$ = 0
    old_Cmch =  -99999          # pour forcer l'affichage de C 

    ppos_C                  # position C
    g112 = 0                # PAS DE MODE DE SUBSTITUTION



                  old_ss = ss$
                  old_broche = broche
                  old_tloffno = tloffno$
                  oldmaxss = maxss$




p_Appel_T_B_C # Appel outil de fraisage en bout axe C (USI = 1)  

    gcode$ = 25
    !gcode$
    gcode$ = 0

    fr_tour =  -9999                        # pour forcer l'affichage de l'avance
    !fr_tour



    " ", e$
        comment$                    # commentaire d'operation

        if texte = 1, n$, stypeusi, e$          # Type d'usinage
        if texte = 1, n$, stoolop, e$           # Type d'operation









    p_appel_outil                   # macro d'appel outil 
    plist_fraisage                  # outil utilis�
    maxss$ = 3000                   # 3000 tour pour fraisage 
    n$, maxss$, e$                  # limitation de la broche        
    mode_broche = 0                 # passer en Tr/minute
    if mode_broche <> old_mode_broche, ssa = -9999  # casser la modalit� de S si changement de mode
    !ssa                        # mettre a jour S pour casser la modalit�
    n$, pvits, e$


    #Ymch = 0                # mise a zero  de laxe Y machine  
    #!Ymch

        bloque = 0
        n$, sbloque, e$             # desserage du frein de broche axe C broche libre pour tournage



    old_Cmch =  -99999          # pour forcer l'affichage de C 
    gcode$ = 0
    n$, `sgcode, Ymch, e$          # position Y0

    g112 = 1        # MODE DE SUBSTITUTION pour fraisage en bout



                  old_ss = ss$
                  old_broche = broche
                  old_tloffno = tloffno$
                  oldmaxss = maxss$

p_Appel_T_D # Appel outil de fraisage vertical (usi = 2)

    gcode$ = 25
    !gcode$
    gcode$ = 0

    fr_tour =  -9999                        # pour forcer l'affichage de l'avance
    !fr_tour



    " ", e$
        comment$                    # commentaire d'operation

        if texte = 1, n$, stypeusi, e$          # Type d'usinage
        if texte = 1, n$, stoolop, e$           # Type d'operation




        n$, pcorrecteurf, e$

        n$, "G19", "G16", "P+", e$


    p_appel_outil                   # macro d'appel outil 
    plist_fraisage                  # outil utilis�
    maxss$ = 3000                   # 3000 tour pour fraisage 
    n$, maxss$, e$                  # limitation de la broche        
    mode_broche = 0                 # passer en Tr/minute
    if mode_broche <> old_mode_broche, ssa = -9999  # casser la modalit� de S si changement de mode
    !ssa                        # mettre a jour S pour casser la modalit�
    n$, pvits, e$




        bloque = 0
        n$, sbloque, e$             # desserage du frein de broche axe C broche libre pour tournage


    old_Cmch =  -99999          # pour forcer l'affichage de C 

        g112 = 0
    ppos_C                 # position C si chg outil




                  old_ss = ss$
                  old_broche = broche
                  old_tloffno = tloffno$
                  oldmaxss = maxss$



p_Appel_T_Dev # Appel outil de fraisage en developp� (usi = 3)

    gcode$ = 25
    !gcode$
    gcode$ = 0

    fr_tour =  -9999                        # pour forcer l'affichage de l'avance
    !fr_tour



    " ", e$
        comment$                    # commentaire d'operation

        if texte = 1, n$, stypeusi, e$          # Type d'usinage
        if texte = 1, n$, stoolop, e$           # Type d'operation




        n$, pcorrecteurf, e$

        n$, "G19", "G16", "P+", e$


    p_appel_outil                   # macro d'appel outil 
    plist_fraisage                  # outil utilis�
    maxss$ = 3000                   # 3000 tour pour fraisage 
    n$, maxss$, e$                  # limitation de la broche        
    mode_broche = 0                 # passer en Tr/minute
    if mode_broche <> old_mode_broche, ssa = -9999  # casser la modalit� de S si changement de mode
    !ssa                        # mettre a jour S pour casser la modalit�
    n$, pvits, e$




        bloque = 0
        n$, sbloque, e$             # desserage du frein de broche axe C broche libre pour tournage


    old_Cmch =  -99999          # pour forcer l'affichage de C

                        g112 = 0




                  old_ss = ss$
                  old_broche = broche
                  old_tloffno = tloffno$
                  oldmaxss = maxss$


p_Appel_T_INC # Appel outil de fraisage plan INCLINE (usi = 4)

    #pinfo

    gcode$ = 25
    !gcode$
    gcode$ = 0

    strtool$ = ucase(strtool$)
        outil_broche = t$ + 1000        # calcul du numero d'outil a utiliser


        *num, e$                    # numero d'operation
        if texte = 1, n$, *stypeusi, e$     # Type d'usinage
        if texte = 1, n$, *stoolop, e$      # Type d'operation
        comment$                    # commentaire d'operation

    plist_fraisage              # outil utilis�



        n$, "G28", "V0", e$             # retour origine machine pour axe Y
        Ymch = 0                # mise a zero  de laxe Y machine  
        !Ymch
        bloque = 0
        n$, sbloque, e$             # desserage du frein de broche axe C broche libre pour tournage

        n$, "G28", "H0", e$             # retour origine machine pour axe C

        n$, pavtr, "G17", e$            # G99 avace par tour G17 plan des arcs G18ZX G17XY G19YZ 

        n$, poriusi, e$             # Origine piece G54 a G59

        if chgoutil = 1, n$, "G0", *outil_broche, e$        # forcer l'affichage de l'outil en broche que dans le cas d'un chg d'outil

                                # Afficher les TEXTE DU NOM D'OUTIL etc
         if strtool$ <> svide & texte = 1, [

            if strtool$ <> svide, n$, "(", strtool$, ")", e$


            ]

    if chgoutil = 1, [          # dans le cas d'un changement d'outil : 
    lubrif = 1
        plubrifoff, e$          # forcer l'arret arrosage                      
        n$, "M5", e$                # forcer arret broche 
                ]

        p_appel_outil               # macro d'appel outil avec la position de l'insert et de l'axe B
        n$, *correcteur, e$         # forcer l'appel du correcteur outil
        pvits                   # G96 Vitesse de coupe constante G95 Vitesse de broche fixe
    old_Cmch =  -99999          # pour forcer l'affichage de C 

                        g112 = 0
                        # position C
    pplan_inc_calc              # Calcul le plan inclin�
    pplan_inc_affiche           # affiche le G68.1


                  old_ss = ss$
                  old_broche = broche
                  old_tloffno = tloffno$
                  oldmaxss = maxss$






p_Appel_T_T  # Appel outil de tournage (usi = 6)




    gcode$ = 25
    !gcode$
    gcode$ = 0

    fr_tour =  -9999                        # pour forcer l'affichage de l'avance
    !fr_tour



    " ", e$
        comment$                    # commentaire d'operation

        if texte = 1, n$, stypeusi, e$          # Type d'usinage
        if texte = 1, n$, stoolop, e$           # Type d'operation

    p_appel_outil                   # macro d'appel outil 
    #n$, plist_tournage             # info sur l'outil
    n$, maxss$, e$                  # limitation de la broche

    mode_broche = 0                 # passer en Tr/minute
    if mode_broche <> old_mode_broche, ssa = -9999  # casser la modalit� de S si changement de mode
    !ssa                        # mettre a jour S pour casser la modalit�
    ssa = 200                   # demande 200 Tr/minute

    n$, smode_broche, ssa, spdlon, pgamme, e$   # demarrer a 200 tour
    old_mode_broche = mode_broche


        Ymch = 0                            # mise a zero  de laxe Y machine  
        !Ymch

        bloque = 0
        n$, sbloque, e$     # desserage du frein de broche axe C broche libre pour tournage




    old_broche = broche
        old_tloffno = tloffno$
        oldmaxss = maxss$
        old_op_id = op_id$





#========== TRANSITIONS ENTRE TYPES D'USINAGES POUR CHGT D'OUTILS ==============

pBB     # Fraisage Axial en Y vers Fraisage Axial en Y

        plubrifoff
        bloque = 0      # Deblocage AXE C
        n$, sbloque, e$
        parret_broche_Fraisage      # arret broche de fraisage

        gcode$ = 0
        pchgt_outil             # Position de changement outil
        n$, "M01", e$

pBBC     # Fraisage Axial en Y vers Fraisage Axial en C

        pBB

PBT     # Fraisage Axial en Y vers Tournage 

        plubrifoff
        bloque = 0      # Deblocage AXE C
        n$, sbloque, e$
        parret_broche_Fraisage      # arret broche de fraisage
        n$, "M150", e$      # mode tournage et annul G19 G16 P+
        gcode$ = 0
        pchgt_outil             # Position de changement outil
        n$, "M01", e$

pBD     # Fraisage Axial en Y vers Fraisage Radial

        pBB

pBDev   # Fraisage Axial en Y vers Fraisage Radial developp�

        pBB

pBInc   # Fraisage Axial en Y vers Fraisage plan INC

        pBB

#-------------------------------------------------------------------------------------
pBCBC   # Fraisage Axial en C vers Fraisage Axial en C

    if g112 <> 0, [
            g112 = 2            # annuler le mode de substitution
            n$, sg112, e$           # afficher le mode de substitution
            ]

            g112 = 0

        plubrifoff
        bloque = 0      # Deblocage AXE C
        n$, sbloque, e$
        parret_broche_Fraisage      # arret broche de fraisage

        gcode$ = 0
        pchgt_outil             # Position de changement outil
        n$, "M01", e$



pBCB    # Fraisage Axial en C vers Fraisage Axial en Y

    pBCBC

pBCT    # Fraisage Axial en C vers Tournage


    if g112 <> 0, [
            g112 = 2            # annuler le mode de substitution
            n$, sg112, e$           # afficher le mode de substitution
            ]

            g112 = 0

        plubrifoff
        bloque = 0      # Deblocage AXE C
        n$, sbloque, e$
        parret_broche_Fraisage      # arret broche de fraisage
        n$, "M150", e$      # mode tournage et annul G19 G16 P+
        gcode$ = 0
        pchgt_outil             # Position de changement outil
        n$, "M01", e$




pBCD    # Fraisage Axial en C vers Fraisage Radial


        pBCBC


pBCDev  # Fraisage Axial en C vers Fraisage Radial developp�


        pBCBC

pBCInc  # Fraisage Axial en C vers Fraisage plan INC

        pBCBC

#-------------------------------------------------------------------------------------
parret_broche_Fraisage  # arret broche de fraisage

        old_spdir = spdir$
    spdir$ = 0
    n$, spdlon_f, e$
    spdir$ = old_spdir
    ssaf = 0, !ssaf



pDD     # Fraisage Radial vers Fraisage Radial

        plubrifoff, e$
        n$, pcorrecteurf_annul, e$

        bloque = 0      # Deblocage AXE C
        n$, sbloque, e$
        parret_broche_Fraisage      # arret broche de fraisage
        gcode$ = 0
        pchgt_outil             # Position de changement outil
        n$, "M01", e$

pDT     # Fraisage Radial vers Tournage

        plubrifoff, e$
        n$, pcorrecteurf_annul, e$

        bloque = 0      # Deblocage AXE C
        n$, sbloque, e$
        parret_broche_Fraisage      # arret broche de fraisage
        n$, "M150", e$      # mode tournage et annul G19 G16 P+
        gcode$ = 0
        pchgt_outil             # Position de changement outil
        n$, "M01", e$

pDB     # Fraisage Radial vers Fraisage Axial

        pDD

pDBC     # Fraisage Radial vers Fraisage Axial en C

        pDD

pDDev   # Fraisage Radial vers Fraisage Radial en developp�

        pDD

pDInc   # Fraisage Radial vers Fraisage plan INC

        pDD

#-------------------------------------------------------------------------------------
pDevD   # Fraisage Radial Developpe vers Fraisage Radial

        plubrifoff, e$              # arret arrosage
        n$, pcorrecteurf_annul, e$
        bloque = 0      # Deblocage AXE C
        n$, sbloque, e$
        parret_broche_Fraisage      # arret broche de fraisage
        gcode$ = 0
        pchgt_outil             # Position de changement outil
        n$, "M01", e$

pDevT   # Fraisage Radial Developpe vers Tournage

        plubrifoff, e$              # arret arrosage
        n$, pcorrecteurf_annul, e$
        bloque = 0      # Deblocage AXE C
        n$, sbloque, e$
        parret_broche_Fraisage      # arret broche de fraisage
        n$, "M150", e$      # mode tournage et annul G19 G16 P+
        gcode$ = 0
        pchgt_outil             # Position de changement outil
        n$, "M01", e$

pDevB   # Fraisage Radial Developpe vers Fraisage Axial en Y

        pDevD


pDevBC   # Fraisage Radial Developpe vers Fraisage Axial en C

        pDevD

pDevDev # Fraisage Radial Developpe vers Fraisage Radial developpe

        pDevD

pDevInc # Fraisage Radial Developp� vers Fraisage plan INC

        pDevD


#-------------------------------------------------------------------------------------
pTB     # Tournage vers Fraisage Axial en Y

        plubrifoff, e$              # arret arrosage
        gcode$ = 0
        pchgt_outil             # Position de changement outil
        n$, "M5", e$                # arret broche tournage
        n$, "M01", e$               # stop optionnel        

pTBC     # Tournage vers Fraisage Axial en C

        pTB

pTD     # Tournage vers Fraisage Radial

        pTB

pTDev   # Tournage vers Fraisage Radial developp�

        pTB

pTT     # Tournage vers Tournage


        plubrifoff, e$              # arret arrosage
        gcode$ = 0
        pchgt_outil             # Position de changement outil
        if old_spdir <> spdir$, n$, "M5", e$    # arret broche tournage si on inverse le sens
        n$, "M01", e$               # stop optionnel

pTInc   # Tournage vers Fraisage plan INC

        pTB


#-------------------------------------------------------------------------------------
pIncInc # Fraisage plan INC vers Fraisage plan INC



pIncB   # Fraisage plan INC vers Fraisage Axial en Y

        pIncInc

pIncC   # Fraisage plan INC vers Fraisage Axial en C

        pIncInc

pIncD   # Fraisage plan INC vers Fraisage Radial

        pIncInc

pIncDev # Fraisage plan INC vers Fraisage Radial Developp�

        pIncInc

pIncT   # Fraisage plan INC vers Tournage

        pIncInc

#======= TRANSITIONS ENTRE TYPES D'USINAGES POUR CHGT D'OUTIL NUL ==========        

pBB_nul     # Fraisage axial en Y vers Fraisage axial en Y meme outil

        gcode$ = 0
        poriusinul
        if tloffno$ <> old_tloffno, n$, correcteur, e$

pBBC_nul    # Fraisage axial en Y vers Fraisage axial en C meme outil

pBT_nul     # Fraisage axial en Y vers Tournage meme outil

pBD_nul     # Fraisage axial en Y vers Fraisage Radial meme outil

pBDev_nul   # Fraisage axial en Y vers Fraisage Radial en developp� meme outil

pBInc_nul   # Fraisage axial en Y vers Plan inclin� meme outil meme outil


#-------------------------------------------------------------------------------------
pDD_nul     # Fraisage Radial vers Fraisage Radial meme outil

        gcode$ = 0
        poriusinul
        if tloffno$ <> old_tloffno, n$, correcteur, e$
        #ppos_C     # position C

pDT_nul     # Fraisage Radial vers Tournage meme outil

pDB_nul     # Fraisage Radial vers Fraisage axial en Y meme outil

pDBC_nul    # Fraisage Radial vers Fraisage axial en C meme outil

pDDev_nul   # Fraisage Radial vers Fraisage Radial en developp� meme outil

pDInc_nul   # Fraisage Radial vers Fraisage Plan inclin� meme outil


#-------------------------------------------------------------------------------------
pDevD_nul   # Fraisage Radial en developp� vers Fraisage Radial meme outil

pDevT_nul   # Fraisage Radial en developp� vers Tournage meme outil

pDevB_nul   # Fraisage Radial en developp� vers Fraisage axial en Y meme outil

pDevBC_nul  # Fraisage Radial en developp� vers Fraisage axial en C meme outil

pDevDev_nul # Fraisage Radial en developp� vers Fraisage Radial en developp� meme outil

        poriusinul
        if tloffno$ <> old_tloffno, n$, correcteur, e$
        #linarc$ = 1

pDevInc_nul # Fraisage Radial en developp� vers plan inclin� meme outil


#-------------------------------------------------------------------------------------
pTT_nul     # Tournage vers Tournage meme outil





pTB_nul     # Tournage vers Fraisage axial en Y meme outil

pTBC_nul    # Tournage vers Fraisage axial en C meme outil

pTD_nul     # Tournage vers Fraisage Radial meme outil

pTDev_nul   # Tournage vers Fraisage Radial en developp� meme outil

pTInc_nul   # Tournage vers plan inclin� meme outil


#-------------------------------------------------------------------------------------
pBCT_nul    # Fraisage axial en C vers Tournage meme outil

pBCB_nul    # Fraisage axial en C vers Fraisage axial en Y meme outil

        #"(Fraisage axial en C vers Fraisage axial en Y)", e$

    if g112 <> 0, [
            g112 = 2            # annuler le mode de substitution
            n$, sg112, e$           # afficher le mode de substitution
            ]
    gcode$ = 0

    ppos_C


pBCBC_nul   # Fraisage axial en C vers Fraisage axial en C meme outil

pBCD_nul    # Fraisage axial en C vers Fraisage Radial meme outil

pBCDev_nul  # Fraisage axial en C vers Fraisage Radial en developp� meme outil

pBCInc_nul  # Fraisage axial en C vers plan inclin� meme outil


#-------------------------------------------------------------------------------------
pIncInc_nul # Fraisage plan inclin� vers Fraisage plan inclin� meme outil
        #"pIncInc_nul-----------------------------------------------", e$
        p_calcul_B_D                        # FAIRE LES CALCUL de B et D
        pplan_inc_calc                      # faire les calcul du plan inc
        # COMPARER LE TOUT

        @Xpinc, @Ypinc, @Zpinc, @Rpinc, @old_Xpinc, @old_Ypinc, @old_Zpinc, @old_Rpinc
        @Bmch, @old_Bmch, @pos_insert, @old_pos_insert

        if Bmch <> old_Bmch | pos_insert <> old_pos_insert, [

            n$, "G28", "U0", e$, n$, "G28", "V0", "W0", e$, n$, *sgcode, Bmch, pos_insert, e$   # macro appel position outil
                                    ]

    if Xpinc <> old_Xpinc | Ypinc <> old_Ypinc | Zpinc <> old_Zpinc | Rpinc <> old_Rpinc, pplan_inc_annul, pplan_inc_affiche

        ppos_C                                          # verif de C                                

        old_Bmch = Bmch             # memoriser les positions pour cgh outil nul et les forcer si besoin
        old_pos_insert = pos_insert



pIncB_nul   # Fraisage plan inclin� vers Fraisage axial en Y meme outil


pIncBC_nul  # Fraisage plan inclin� vers Fraisage axial en C meme outil


pIncD_nul   # Fraisage plan inclin� vers Fraisage Radial meme outil


pIncDev_nul # Fraisage plan inclin� vers Fraisage Radial en developp� meme outil


pIncT_nul   # Fraisage plan inclin� vers Tournage meme outil


#=========== CHOIX DES MODES DE TRANSITION ========================

p_transition  # choix du mode de transition entre deux usinages

              #*old_usi, *usi, "-------------------------", e$

              @old_usi, @usi

              if old_usi = 0 & usi = 0, pBB     # bout vers bout
              if old_usi = 0 & usi = 1, pBBC
              if old_usi = 0 & usi = 6, PBT
              if old_usi = 0 & usi = 2, pBD
              if old_usi = 0 & usi = 3, pBDev
              if old_usi = 0 & usi = 4, pBInc

              if old_usi = 1 & usi = 6, pBCT        # bout en C
              if old_usi = 1 & usi = 0, pBCB
              if old_usi = 1 & usi = 1, pBCBC
              if old_usi = 1 & usi = 2, pBCD
              if old_usi = 1 & usi = 3, pBCDev
              if old_usi = 1 & usi = 4, pBCInc

              if old_usi = 2 & usi = 2, pDD     # Dessus
              if old_usi = 2 & usi = 6, pDT
              if old_usi = 2 & usi = 0, pDB
              if old_usi = 2 & usi = 1, pDBC
              if old_usi = 2 & usi = 3, pDDev
              if old_usi = 2 & usi = 4, pDInc

              if old_usi = 3 & usi = 2, pDevD       # Developpe
              if old_usi = 3 & usi = 6, pDevT
              if old_usi = 3 & usi = 0, pDevB
              if old_usi = 3 & usi = 1, pDevBC
              if old_usi = 3 & usi = 3, pDevDev
              if old_usi = 3 & usi = 4, pDevInc

              if old_usi = 4 & usi = 0, pIncB       # plan INC
              if old_usi = 4 & usi = 1, pIncC
              if old_usi = 4 & usi = 2, pIncD
              if old_usi = 4 & usi = 3, pIncDev
              if old_usi = 4 & usi = 4, pIncInc
              if old_usi = 4 & usi = 6, pIncT

              if old_usi = 6 & usi = 6, pTT     # tour
              if old_usi = 6 & usi = 0, pTB
              if old_usi = 6 & usi = 1, pTBC
              if old_usi = 6 & usi = 2, pTD
              if old_usi = 6 & usi = 3, pTDev
              if old_usi = 6 & usi = 4, pTInc






p_transition_nul  # choix du mode de transition en chgt outil nul

              #"(OLD", *old_usi, "  NEW", *usi, ")", e$
              @old_usi, @usi


              if old_usi = 0 & usi = 0, pBB_nul
              if old_usi = 0 & usi = 1, pBBC_nul
              if old_usi = 0 & usi = 2, pBD_nul
              if old_usi = 0 & usi = 3, pBDev_nul
              if old_usi = 0 & usi = 4, pBInc_nul
              if old_usi = 0 & usi = 6, pBT_nul

              if old_usi = 1 & usi = 0, pBCB_nul
              if old_usi = 1 & usi = 1, pBCBC_nul
              if old_usi = 1 & usi = 2, pBCD_nul
              if old_usi = 1 & usi = 3, pBCDev_nul
              if old_usi = 1 & usi = 4, pBCInc_nul
              if old_usi = 1 & usi = 6, pBCT_nul

              if old_usi = 2 & usi = 0, pDB_nul
              if old_usi = 2 & usi = 1, pDBC_nul
              if old_usi = 2 & usi = 2, pDD_nul
              if old_usi = 2 & usi = 3, pDDev_nul
              if old_usi = 2 & usi = 4, pDInc_nul
              if old_usi = 2 & usi = 6, pDT_nul

              if old_usi = 3 & usi = 0, pDevB_nul
              if old_usi = 3 & usi = 1, pDevBC_nul
              if old_usi = 3 & usi = 2, pDevD_nul
              if old_usi = 3 & usi = 3, pDevDev_nul
              if old_usi = 3 & usi = 4, pDevInc_nul
              if old_usi = 3 & usi = 6, pDevT_nul

              if old_usi = 4 & usi = 0, pIncB_nul
              if old_usi = 4 & usi = 1, pIncBC_nul
              if old_usi = 4 & usi = 2, pIncD_nul
              if old_usi = 4 & usi = 3, pIncDev_nul
              if old_usi = 4 & usi = 4, pIncInc_nul
              if old_usi = 4 & usi = 6, pIncT_nul

              if old_usi = 6 & usi = 0, pTB_nul
              if old_usi = 6 & usi = 1, pTBC_nul
              if old_usi = 6 & usi = 2, pTD_nul
              if old_usi = 6 & usi = 3, pTDev_nul
              if old_usi = 6 & usi = 4, pTInc_nul
              if old_usi = 6 & usi = 6, pTT_nul
#============ DEBUT CODE ISO ===================
pdebug
        fastmode$ = 1
    err_file$ = 4
    bug2$ = 60

pprep$


        nobrk$ = 1

pheader$       # Entete de programme

    old_spaces = spaces$    # memo des espaces

    rd_mch_ent_no$ = -1         # forcer la lecture de toute la def machine -1 que la combinaison d'axe -2 que la base machine 0
    rd_md$                  # lecture de la def machine

        @spindle_no$

        if progno$ = 0, progno$ = 150
        progno$ = progno$ + 0.1

    smachine = ucase (smachine)
    sprogname$ = ucase (sprogname$)
    smcname$ = ucase (smcname$)

        *progno$, e$
        spaces$ = 0
         "(", *sprogname$, ")", e$              # mon du fichier iso
        "(", "PROG-CN DU   ", date$, " A ", time$, ")", e$  # date et heure de traitement post pro 
        "(", "FICHIER CAO  ", smcname$, ")", e$     # nom du fichier CAO
        "(", "MACHINE      ", smachine, ")", e$     # nom du fichier CAO

    if tooltable$ <> 0, " ", e$
    if tooltable$ <> 0, "(LISTE DES OUTILS UTILISES)", e$



    spaces$ = old_spaces


plit_liste_op   # liste des operations

        " ", e$
        "(LISTE DES OPERATIONS)", e$

                size1 = rbuf(1,0)

                while rc1 <= size1, [
                stringop = rbuf(1,rc1)
                stringop, e$
                ]

pinit_cn    # initialisation machine




    #plit_liste_op          
    " ", e$
    ipr_actv$ = 1
    q1
    n$, "G0", "G40", pavtr, "G53", "X200", *Zdeg, e$

       bloque = 0
        !bloque

               Xmch =  -888888
               Ymch =  -888888
               Zmch =  -888888

psof0$

        "psof0$", e$


lsof$          # Premier outil tournage

        num = 0


        Xmch =  -88888
        Ymch =  -88888
        Zmch =  -88888
        !Xmch , !Ymch, !Zmch

        broche = spindle_no$        # broche qui travaille
        old_broche = broche

    pinit_cn            # initialisation machine
        ptype_usi           # type d'usinage

    if transfertbroche = 1, ptransfertbrut
    if avancebrut = 1, pavancebrut

        if contrepointe = 1, pcontrepointe

    ptest_num_cor       # Gestion des outils > nbroutil

        chgoutil = 1                # flag pour dire que c'est un  changement d'outil
        decomposer = 1              # flag pour dire de d�copmoser XYZ

        p_Appel_T_T

        old_op_id = op_id$
        old_outil_broche = outil_broche
        old_usi = usi               # memo du type d'usinage


    #copy_x = vequ(x$)
    #pcc_capture #Capture LCC ends, stop output RLCC 
    c_rcc_setup$   #Save original in sav_xa and shift copy_x for LCC comp.

pinfo
        "----- pinfo ------", e$
        #"gcode", *gcode$, e$
        #*nobrk$, e$
        *tlchng_aft$, e$
        *rpd_typ_v7$, e$
        *usi, e$
        "-----------------", e$

msof$          # Premier outil fraisage

        num = 0

        #pinfo  
        Xmch =  -88888
        Ymch =  -88888
        Zmch =  -88888
        !Xmch , !Ymch, !Zmch

        if tool_typ$ = 5, spdir$ = spdir$ *  -1     # si tataud � gauche inverser le sens de broche




        broche = spindle_no$        # broche qui travaille
        old_broche = broche

    pinit_cn            # initialisation machine
    ptype_usi           # type d'usinage


        if contrepointe = 1, pcontrepointe

        if transfertbroche = 1, ptransfertbrut
        if avancebrut = 1, pavancebrut

    ptest_num_cor       # Gestion des outils > nbroutil

        chgoutil = 1            # flag pour dire que c'est un  changement d'outil
        decomposer = 1          # flag pour dire de d�copmoser XYZ


        if usi = 0, p_Appel_T_B
        if usi = 1, p_Appel_T_B_C
        if usi = 2, p_Appel_T_D
        if usi = 3, p_Appel_T_Dev
        if usi = 4, p_Appel_T_INC

        old_op_id = op_id$
        old_outil_broche = outil_broche
        old_usi = usi           # memo du type d'usinage

ltlchg0$       # Changement d'outil nul tournage


    if cc_stop_fcc & rcc_flg$ = 6, no_nc_out$ = 1

        cgh_force = 0
        broche = spindle_no$




        linarc$ = 0
        ptype_usi
        p_transition_nul

    if op_id$ <> old_op_id, [
    " ", e$
            if contrepointe = 1, pcontrepointe
        if texte = 1, comment$
            ]

        if texte = 1, n$, stypeusi, e$
        #if texte = 1, n$, stoolop, e$

        if transfertbroche = 1, ptransfertbrut
        if avancebrut = 1, pavancebrut

            if tloffno$ <> old_tloffno, n$, correcteur, e$



            if old_spdir <> spdir$, spdlsel = 0, n$, spdlon, e$, old_ss = -9999, ssa = old_ss, !ssa


            n$, maxss$, e$
            n$, pvits, pgamme, e$
            oldmaxss = maxss$

        old_usi = usi
        old_op_id = op_id$

mtlchg0$       # Changement d'outil nul fraisage


        linarc$ = 0
        ptype_usi           # TYPE D'USINAGE




        p_transition_nul        # TRANSITION ENTRE USINAGE


        if op_id$ <> old_op_id, [
    " ", e$
            if contrepointe = 1, pcontrepointe
        if texte = 1, comment$
            ]

        if texte = 1, n$, stypeusi, e$
        #if texte = 1, n$, stoolop, e$

    n$, pvits, pgamme, e$

        if transfertbroche = 1, ptransfertbrut
        if avancebrut = 1, pavancebrut

        old_usi = usi
        old_op_id = op_id$
        if texte = 1, comment$


ltlchg$        # Changement d'outil tournage

        #*gcode$,"---------------------------", e$

    #copy_x = vequ(x$)
    #pcc_capture #Capture LCC ends, stop output RLCC 
    #c_rcc_setup$   #Save original in sav_xa and shift copy_x for LCC comp.


        broche = spindle_no$

        linarc$ = 0
        ptype_usi

        decomposer = 1          # flag pour dire de d�copmoser XYZ

        p_transition
        old_usi = usi

        if contrepointe = 1, pcontrepointe
        if transfertbroche = 1, ptransfertbrut
        if avancebrut = 1, pavancebrut

    ptest_num_cor       # Gestion des outils > nbroutil

        p_Appel_T_T

        cgh_force = 0
        old_outil_broche = outil_broche
        old_op_id = op_id$

pmonter_outil_manuel
        strtool$ = ucase(strtool$)
        " ", e$
        outil_broche = t$
        n$, *outil_broche, "M6", e$
        if usi <> 6, n$, "M107", e$ # indexe position de demontage pour outil rotatif
        outil_broche = tloffno$
        n$, "M00", "$", "MONTER OUTIL", *outil_broche

        if usi <> 6, strtool$, stypeT, paramT5,
        else, [

            stinsert2 = ucase(stinsert2)
            stsupport = ucase(stsupport)

            strtool$, "PLAQUETTE", stinsert2,"SUPPORT", stsupport
                ]
        outil_broche = t$
        "DANS", *outil_broche, e$

ptest_num_cor       # Gestion des outils > nbroutil

        @tloffno$
        @nbroutil



        if tloffno$ > nbroutil, [
            pot = 0
            num_outil = 0
                size2 = rbuf(2,0)
            if size2 >= t$, [
                rc2 = t$
                pot = rbuf(2,rc2)
                #"Lit", *pot ,*num_outil, e$
                    ]
            if num_outil <> tloffno$, pmonter_outil_manuel
        ]

        wc2 = t$
        pot = t$
        num_outil = tloffno$
        pot = wbuf(2,wc2)
        #"Ecrit", *pot ,*num_outil, e$

mtlchg$        # Changement d'outil fraisage    

    if tool_typ$ = 5, spdir$ = spdir$ *  -1     # si tataud � gauche inverser le sens de broche



        broche = spindle_no$

        linarc$ = 0
        ptype_usi

        decomposer = 1          # flag pour dire de d�copmoser XYZ

        p_transition
        old_usi = usi

        if contrepointe = 1, pcontrepointe
        if transfertbroche = 1, ptransfertbrut
        if avancebrut = 1, pavancebrut

    ptest_num_cor       # Gestion des outils > nbroutil


    ssaf = 0
    !ssaf

        if usi = 0, p_Appel_T_B
        if usi = 2, p_Appel_T_D
        if usi = 3, p_Appel_T_Dev
        if usi = 1, p_Appel_T_B_C
        if usi = 4, p_Appel_T_INC

        old_outil_broche = outil_broche
        cgh_force = 0
        old_op_id = op_id$

leof0$         # Fin de programme tournage outil zero
        leof$

meof0$         # Fin de programme fraisage outil zero
        meof$

leof$          # Fin de programme tournage

        linarc$ = 0





        gcode$ = 0
        plubrifoff, e$

        pchgt_outil

        if contrepointe = 1, pcontrepointe
        if transfertbroche = 1, ptransfertbrut
        if avancebrut = 1, pavancebrut

        n$, "M5", e$
        n$, "M30",e$
       


meof$          # Fin de programme fraisage
        linarc$ = 0
        plubrifoff, e$
        if usi = 4, pplan_inc_annul

        if g112 = 1, n$, "G20", e$

        bloque = 0          # Deblocage AXE C
        n$, sbloque, e$

        n$, pcorrecteurf_annul, e$
        parret_broche_Fraisage
    n$, "M150", e$      # mode tournage et annul G19 G16 P+  
        pchgt_outil

        if contrepointe = 1, pcontrepointe
        if transfertbroche = 1, ptransfertbrut
        if avancebrut = 1, pavancebrut



        n$, "M2",e$


# ---------------- ROTATIONS ---------------------

prot0$

prot$

#============================================ POSITIONS MACHINE ================================================



ppos_B      # calcul et affichage position B Machine 

        Bmch = 0

ppos_C      # calcul et affichage position C Machine 
        #"ppos_c", *old_Cmch, e$ 

    if usi = 0, [           # calcul C fraisage AXIAL en Y
        Cmch = atan2(m3$,m2$)   # position angulaire du plan d'usinage
        @old_Cmch, @Cmch
        if Cmch <> old_Cmch,    [
        bloque = 0      # Deblocage AXE C
        n$, sbloque, e$
        n$, *sgcode, *Cmch, e$  # affichage du C
        bloque = 1      # Blocage AXE C
        n$, sbloque, e$
        decomposer = 1
        old_Cmch = Cmch
                    ]
        ]

    if usi = 2, [           # calcul C fraisage RADIAL
        Cmch = atan2(m9$,m8$)   # position angulaire du plan d'usinage par rapport a la vue de cot�
        @old_Cmch, @Cmch
        if Cmch <> old_Cmch,    [
        bloque = 0      # Deblocage AXE C
        n$, sbloque, e$
        n$, *sgcode, *Cmch, e$
        bloque = 1      # Blocage AXE C
        n$, sbloque, e$
        #decomposer = 1
        old_Cmch = Cmch
                    ]
        ]

    if usi = 1, [           # calcul C fraisage AXIAL en C
        Cmch = atan2(m3$,m2$)   # position angulaire du plan d'usinage
        @old_Cmch, @Cmch
        if Cmch <> old_Cmch,    [
        bloque = 0      # Deblocage AXE C
        n$, sbloque, e$
        n$, *sgcode, *Cmch, e$
        decomposer = 1
        old_Cmch = Cmch
                    ]
        ]

    if usi = 4, [           # calcul C fraisage plan inclin�
        Cmch = atan2(m9$,m8$)   # position angulaire du plan d'usinage 
        #"(", *Cmch, ")", e$
        @old_Cmch, @Cmch
        if Cmch <> old_Cmch,    [
        bloque = 0      # Deblocage AXE C
        n$, sbloque, e$
        n$, *sgcode, *Cmch, e$
        bloque = 1
        n$, sbloque, e$
        decomposer = 1
        old_Cmch = Cmch
                    ]
        ]



ppos_XYZ    # calcul des coordonn�es Machine XYZ


    #"usi", *usi

    if usi = 0, [       # calcul fraisage en bout en Y
        @x$, @y$, @z$
        Xmch = x$ * 2
        Ymch = y$
        Cmch = atan2(m3$,m2$) # position angulaire du plan d'usinage
        Zmch = z$
                ]


    if usi = 1, [       # calcul fraisage en bout en C
        @x$, @y$, @z$
        if opcode$ = 3, g112 = 0                    # desctiver la substitution G112 si percage
        result = atan2(m3$,m2$)                                 # trouver la  rotation du plan d'usinage
        Xmch = ((x$ * cos(result)) - (y$ * sin(result)))        # calcul des XY en absolue avec le plan rederss�
        Ymch =  (y$ * cos(result)) + (x$ * sin (result))

        Cmch = atan2 ((y$ * cos(result)) + (x$ * sin (result)),(x$ * cos(result)) - (y$ * sin(result)))  # calcul du C Machine      # memo de la position C actuel
        #if Cmch > 180 , Cmch = Cmch - 360
        if opcode$ <> 3, old_Cmch = Cmch                            # memo du C Machine

        if g112 = 0, Xmch = (sqrt ((abs(x$)^2)+(abs(y$)^2)))* 2     # calcul du X pour G112 = 0

        Zmch = z$
                ]



    if usi = 2, [       # calcul fraisage Radial en position

        @x$, @y$, @z$, @inverser
        #*inverser, "-----"
        Xmch = z$ * 2
        Ymch = y$ * -inverser
        Zmch = x$ * inverser


        Cmch = atan2(m9$,m8$)   # position angulaire du plan d'usinage par rapport a la vue de cot�

                ]

    if usi = 3, [       # calcul fraisage Radial en substitution



        @x$, @y$, @z$, @xs$, @ys$, @inverser, @rotdia$, @rotaxis_dir$

        Zmch = x$
        Ymch = 0
        Xmch = z$ * 2 + rotdia$
        if rotaxis_dir$ = 1,  Cmch = (y$ * 360 / (pi$ * rotdia$))
        if rotaxis_dir$ = 0,  Cmch = (-y$ * 360 / (pi$ * rotdia$))
                ]

    if usi = 4, [       # calcul fraisage plan inclin�
        @x$
        @y$
        @z$

        Xmch =  ((x$ * cos(result3)) + (y$ * sin (result3))) *2
        Ymch = ((y$ * cos(result3)) - (x$ * sin(result3)))      # calcul des XY en absolue avec le plan rederss�


        #*x$, *y$, *z$
        Zmch = z$
        #Ymch = y$
        #Xmch = x$ 

                ]


    if usi = 6, [       # calcul en tournage

        @x$
        @y$
        @z$
        Xmch = x$ * 2
        Ymch = 0
        Zmch = z$

            ]




pncout  # ecriture iso G0 G1 G2 G3
        #*usi, *decomposer, "---------"

        #if decomposer = 1 , "(---DECOMPOSER------)", e$



    if usi = 0 , [  # code ISO en fraisage AXIAL en bout avec axe Y

       if decomposer = 0,   [           #si c'est pas le 1er mouvement apres chg outil
        ppos_XYZ
        n$ , sgcode
        if gcode$ <> 0, pcord_fraisage
         Xmch, Ymch, Zmch
        if gcode$ = 2 | gcode$ = 3, arcrad$
        if gcode$ <> 0, pfr_fraisage
        e$
        n$, plubrifon, e$

                ]
       if decomposer = 1,   [           #si c'est le 1er mouvement apres chg outil faire ZY puis X
        ppos_XYZ
        n$ , sgcode
        if gcode$ <> 0, pcord_fraisage
         *Ymch, *Zmch, e$
        n$ , sgcode
        if gcode$ <> 0, pcord_fraisage
        *Xmch
        if gcode$ <> 0, pfr_fraisage
        e$
        n$, plubrifon, e$
                ]
            ]


    if usi = 1 , [  # code ISO en fraisage AXIAL en bout avec axe C EN G112

       if decomposer = 0,   [           #si c'est pas le 1er mouvement apres chg outil
        g112 = 1            # activer le mode de substitution
        old_gcode = gcode$      # memo du Gcode    
        ppos_XYZ            # calcul des position


        n$, sg112, sgcode
        if gcode$ <> 0, pcord_fraisage      # G41 G42 pas sur du G0

        if g112 = 1, Xmch, Ymch, !Cmch, Zmch                # si g112
        if g112 = 0, Xmch, !Ymch, Cmch, Zmch                # si pas G112

        if gcode$ = 2 | gcode$ = 3, arcrad$ # valeur du rayon pour arc
        if gcode$ <> 0,pfr_fraisage     # avance
    plubrifon, e$               # lubrif  
                ]

       if decomposer = 1,   [           #si c'est le 1er mouvement apres chg outil faire ZY puis X

        old_gcode = gcode$      # memo du Gcode 
    if g112 = 1, g112 = 0       # pas de substitution en approche
        ppos_XYZ            # calcul des positions
        bloque = 0          # Deblocage AXE C
        n$, sbloque, e$
        #if g112 = 1, gcode$ = 0    # focer le G0 sur le C avant le G112        
        n$, sg112, sgcode, *Cmch, *Zmch
        gcode$ = old_gcode      # rappel du gcode d'origine
        if gcode$ <> 0, pfr_fraisage    # Avance pas sur G0
        e$

        n$, sgcode, *Xmch               # Position X
        if gcode$ <> 0, pfr_fraisage
        plubrifon, e$


       # g112 = 1                    # activation du G112
    #ppos_XYZ           # recalcul des meme position en G112
    #!Xmch, !Ymch, !Zmch        # mide a jour des position en G112 pour pas avaoir le XY
        ]
            ]


    if usi = 2 , [  # code ISO en fraisage RADIAL

       if decomposer = 0,   [           #si c'est pas le 1er mouvement apres chg outil
        ppos_XYZ                # CALCUL XYZC
        @old_Cmch
        @Cmch
        if Cmch = old_Cmch, [           #si on on bouge pas en C
             n$ , sgcode
            if gcode$ <> 0, pcord_fraisage
             Xmch, Ymch, Zmch
            if gcode$ = 2 | gcode$ = 3, arcrad$
            if gcode$ <> 0, pfr_fraisage
            e$
            n$, plubrifon, e$
                ]
        else, [                 # SI ON BOUGE SUR C FAIRE LE Z AVANT
            n$ , `sgcode, Zmch, e$
            ppos_C, e$
             n$ , `sgcode
            if gcode$ <> 0, pcord_fraisage
             Xmch, Ymch, Zmch
            if gcode$ = 2 | gcode$ = 3, arcrad$
            if gcode$ <> 0, pfr_fraisage
            e$
            n$, plubrifon, e$
            ]
                ]
       if decomposer = 1,   [           #si c'est le 1er mouvement apres chg outil faire ZY puis X
        ppos_XYZ
        @old_Cmch
        @Cmch
        n$ , *sgcode
        if gcode$ <> 0, pcord_fraisage
         *Ymch, *Zmch, e$
        ppos_C  # TOTO
        n$ , sgcode
        if gcode$ <> 0, pcord_fraisage
        *Xmch
        if gcode$ <> 0, pfr_fraisage
        e$
        n$, plubrifon, e$

                ]

            ]


    if usi = 3 , [  # code ISO en FRAISAGE RADIAL DEVELOPPE

       if decomposer = 0,   [           #si c'est pas le 1er mouvement apres chg outil

        ppos_XYZ
        n$ , sgcode
        if gcode$ <> 0, pcord_fraisage
         Xmch, Ymch, Zmch, Cmch
        if gcode$ = 2 | gcode$ = 3, arcrad$
        if gcode$ <> 0, pfr_fraisage
        e$
        #n$, plubrifon, e$

                ]

       if decomposer = 1,   [           #si c'est le 1er mouvement apres chg outil faire ZY puis X
        ppos_XYZ
        n$ , sgcode
        if gcode$ <> 0, pcord_fraisage
         *Ymch, *Zmch, *Cmch, e$
        n$ , sgcode
        if gcode$ <> 0, pcord_fraisage
        *Xmch
        if gcode$ <> 0, pfr_fraisage
        e$
        n$, plubrifon, e$

                ]


            ]


    if usi = 4 , [  # code ISO en fraisage plan inclin�

       if decomposer = 0,   [           #si c'est pas le 1er mouvement apres chg outil

        ppos_XYZ
        n$ , sgcode
        if gcode$ <> 0, pcord_fraisage
         Xmch, Ymch, Zmch
        if gcode$ = 2 | gcode$ = 3, arcrad$
        if gcode$ <> 0, pfr_fraisage
        e$
        n$, plubrifon, e$

                ]

       if decomposer = 1,   [           #si c'est le 1er mouvement apres chg outil faire xY puis z
        ppos_XYZ
        n$ , sgcode
        if gcode$ <> 0, pcord_fraisage
        *Xmch, *Ymch, *Zmch

        if gcode$ <> 0, pfr_fraisage
        e$
        n$, plubrifon, e$

                ]


            ]




    if usi = 6, [   # code ISO en tournage  

       if decomposer = 0,   [           #si c'est pas le 1er mouvement apres chg outil


        ppos_XYZ
        n$, pvits, e$               # appel des vitesse de broche
        n$, sgcode
        if gcode$ <> 0, pcord
         Xmch, Ymch, Zmch
        if gcode$ = 2 | gcode$ = 3, arcrad$
        if gcode$ <> 0, pfr_tournage
        e$
        n$, plubrifon, e$
                ]

       if decomposer = 1,   [           #si c'est le 1er mouvement apres chg outil


        ppos_XYZ
        n$, sgcode
        if gcode$ <> 0, pcord
        if gcode$ <=1, [
                Ymch, *Zmch
                if gcode$ <> 0, pfr_tournage
                e$
                n$, sgcode, *Xmch
                if gcode$ <> 0, pfr_tournage
                plubrifon, e$
                ]
        else, *Xmch, Ymch, *Zmch

        if gcode$ = 2 | gcode$ = 3, arcrad$
        if gcode$ <> 0, pfr_tournage
        e$
        n$, plubrifon, e$
            ]

        ]












             chgoutil = 0           # annul le flag de changement outil
             decomposer = 0         # annul le flag de decomposer XYZ
        !x$, !y$, !z$





#--------------- TOURNAGE --------------------
llin$          # Mouvement travail lineaire tournage
        pncout
lrapid$        # Mouvement rapide lineaire tournage
        pncout
lcir$          # Interpolation circulaire tournage
        pncout
pdwl_spd$     # Tempo

        tempo = dwell$
        n$, *tempo, e$

#--------------- FRAISAGE --------------------
pzrapid$       # Mouvement rapide Z fraisage
        pncout
mrapid$        # Mouvement rapide lineaire fraisage
        pncout
mlin$          # Mouvement travail lineaire fraisage
        pncout
pz$            # Mouvement  Z fraisage
        pncout
mcir$          # Interpolation circulaire fraisage
        pncout



#============================================ CYCLES ====================================================
pusecanmill

 usecandrill$ = 1
 usecanpeck$  = 1
 usecanchip$  = 1
 usecantap$   = 1
 usecanbore1$ = 1
 usecanbore2$ = 0
 usecanmisc1$ = 0
 usecanmisc2$ = 0

pusecanlathe
 usecandrill$ = 1
 usecanpeck$  = 1
 usecanchip$  = 1
 usecantap$   = 1
 usecanbore1$ = 1
 usecanbore2$ = 0
 usecanmisc1$ = 0
 usecanmisc2$ = 0

#----------------------- PERCAGES EN TOURNAGE ---------------------------------------------


ldrill$        # Cycle de pointage en tournage
        gcode$ = 0
        z$ = refht$
        pncout      # point d'approche

        garde = initht$
        Zmch = depth$

        if dwell$ = 0, gcode$ = 5
        else, gcode$ = 6

        if dwell$ = 0, n$, sgcode, Xmch, *Zmch,  pfr_tournage, e$
        else, n$, sgcode, Xmch, *Zmch, *dwell$,  pfr_tournage, e$

        gcode$ = 4

        n$, sgcode, e$
        Zmch = initht$
        gcode$ = 0
        n$, sgcode, Zmch, e$
        garde =  -9999
        !garde


lpeck$     # Cycle de debourrage en tournage
        gcode$ = 0
        z$ = refht$
        pncout      # point d'approche

        garde = initht$
        Zmch = depth$

        gcode$ = 9
    ES = (refht$ - depth$ - peck1$) / peck2$
        if dwell$ = 0, n$, sgcode, Xmch, *Zmch, *peck1$, *ES, pfr_tournage, e$
        else, n$, sgcode, Xmch, *Zmch, *peck1$, *ES, *dwell$, pfr_tournage, e$

        gcode$ = 4

        n$, sgcode, e$
        Zmch = initht$
        gcode$ = 0
        n$, sgcode, Zmch, e$
        garde =  -9999
        !garde



lchpbrk$  # Cycle de brise-copeaux en tournage

        gcode$ = 0
        z$ = refht$
        pncout      # point d'approche

        garde = initht$
        Zmch = depth$

        gcode$ = 11
    ES = (refht$ - depth$ - peck1$) / peck2$
        if dwell$ = 0, n$, sgcode, Xmch, *Zmch, *peck1$, *ES, pfr_tournage, e$
        else, n$, sgcode, Xmch, *Zmch, *peck1$, *ES, *dwell$, pfr_tournage, e$

        gcode$ = 4

        n$, sgcode, e$
        Zmch = initht$
        gcode$ = 0
        n$, sgcode, Zmch, e$
        garde =  -9999
        !garde

ltap$      # Cycle de taraudage en tournage
        gcode$ = 0
        z$ = refht$
        pncout      # point d'approche

        garde = initht$
        Zmch = depth$


        if spdir$ >=0, gcode$ = 13
        else, gcode$ = 15

        if dwell$ = 0, n$, sgcode, Xmch, *Zmch, pfr_tournage, e$
        else, n$, sgcode, Xmch, *Zmch, pfr_tournage, e$

        gcode$ = 4

        n$, sgcode, e$
        Zmch = initht$
        gcode$ = 0
        n$, sgcode, Zmch, e$
        garde =  -9999
        !garde




lbore1$    # Cycle d'al�sage en tournage
        gcode$ = 0
        z$ = refht$
        pncout      # point d'approche

        garde = initht$
        Zmch = depth$

        gcode$ = 15

        if dwell$ = 0, n$, sgcode, Xmch, *Zmch, pfr_tournage, e$
        else, n$, sgcode, Xmch, *Zmch, *dwell$, pfr_tournage, e$

        gcode$ = 4

        n$, sgcode, e$
        Zmch = initht$
        gcode$ = 0
        n$, sgcode, Zmch, e$
        garde =  -9999
        !garde


lbore2$

lmisk1$

lmisc2$


#--------------------PERCAGE EN FRAISAGE ---------------------------------


mdrill$        # Cycle de pointage en fraisage
        #"mdrill", e$

              if usi = 0, pdrillB   # Axial en Y
              if usi = 1, pdrillC   # Axial en C
              if usi = 2, pdrillD   # Radial
              if usi = 3, pdrillDev # Developp�
              if usi = 4, pdrillInc # plan inclin�


              !x$, !y$, !z$

mdrill_2$  # Canned Drill Cycle

        #"mdrill2", e$

              if usi = 0, pdrillB_2
              if usi = 2, pdrillD_2
              if usi = 3, pdrillDev_2
              if usi = 1, pdrillC_2
              if usi = 4, pdrillInc_2   # plan inclin�

              !x$, !y$, !z$


mpeck$     # Cycle de debourrage en fraisage

              if usi = 0, ppeckB    # axial en Y
              if usi = 1, ppeckC    # axial en C                
              if usi = 2, ppeckD    # radial
              if usi = 3, ppeckDev  # Developpe
              if usi = 4, ppeckInc  # INC

              !x$, !y$, !z$

mpeck_2$   # Canned Peck Drill Cycle

              if usi = 0, ppeckB_2
              if usi = 1, ppeckC_2
              if usi = 2, ppeckD_2
              if usi = 3, ppeckDev_2
              if usi = 4, ppeckInc_2    # INC

              !x$, !y$, !z$


mchpbrk$    # Cycle de brise copeaux EN FRAISAGE

              if usi = 0, pchpbrkB   # Bout en Y
              if usi = 1, pchpbrkC   # Bout en C  
              if usi = 2, pchpbrkD   # Dessus
              if usi = 3, pchpbrkDev # Developpe
              if usi = 4, pchpbrkInc # INC

              !x$, !y$, !z$

mchpbrk_2$    # Cycle de brise copeaux EN FRAISAGE

              if usi = 0, pchpbrkB_2
              if usi = 1, pchpbrkC_2
              if usi = 2, pchpbrkD_2
              if usi = 3, pchpbrkDev_2
              if usi = 4, pchpbrkInc_2 # INC

              !x$, !y$, !z$



mtap$      # Cycle de taraudage en fraisage
        pas = 0
        !pas

           if tldia$ = 3, pas = 0.5
           if tldia$ = 4, pas = 0.7
           if tldia$ = 5, pas = 0.8
           if tldia$ = 6, pas = 1
           if tldia$ = 8, pas = 1.25
           if tldia$ = 10, pas = 1.5
           if tldia$ = 12, pas = 1.75
           if tldia$ = 14, pas = 2
           if tldia$ = 16, pas = 2

    if n_tap_thds$ <> 0, pas = n_tap_thds$
        if pas = 0, pas = 0.5
           pas = pas * abs(ss$)

              if usi = 0, ptapB
              if usi = 1, ptapC
              if usi = 2, ptapD
              if usi = 3, ptapDev
              if usi = 4, ptapInc

              !x$, !y$, !z$

mtap_2$    # Taraudages suivants en fraisage


              if usi = 0, ptapB_2
              if usi = 1, ptapC_2
              if usi = 2, ptapD_2
              if usi = 3, ptapDev_2
              if usi = 4, ptapInc_2

              !x$, !y$, !z$


mbore1$        # Cycle d'al�sage en fraisage

              if usi = 0, pbore1B
              if usi = 1, pbore1C
              if usi = 2, pbore1D
              if usi = 3, pbore1Dev
              if usi = 4, pbore1Inc


          !x$, !y$, !z$

mbore1_2$      # Cycle d'al�sage en fraisage

              if usi = 0, pbore1B_2
              if usi = 1, pbore1C_2
              if usi = 2, pbore1D_2
              if usi = 3, pbore1Dev_2
              if usi = 4, pbore1Inc_2


          !x$, !y$, !z$


mbore2$     # Cycle d'al�sage bare en fraisage
mbore2_2$   # Cycle d'al�sage bare en fraisage

mmisc1$    # Canned Misc #1 Cycle
mmisc1_2$  # Canned Misc #1 Cycle

mmisc2$    # Canned Misc #2 Cycle
mmisc2_2$  # Canned Misc #2 Cycle

#------------------------- PERCAGE EN FRAISAGE ----------------------------------------

pdrillB       # Cycle de percage en fraisage en bout en Axe Y

        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ

        bloque = 1
        n$, sbloque, e$

        garde = refht$
    psecu = initht$

        if dwell$ = 0, gcode$ = 5
        else, gcode$ = 6

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, pfr_percage, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, dwell$, pfr_percage, e$


pdrillB_2     # Cycle de percage en fraisage en bout en Axe Y

        z$ = depth$
        ppos_XYZ

        bloque = 1
        n$, sbloque, e$

        garde = refht$
    psecu = initht$

        if dwell$ = 0, gcode$ = 5
        else, gcode$ = 6

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, pfr_percage, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, dwell$, pfr_percage, e$



pdrillC       # Cycle de percage en fraisage en bout en Axe C

        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch

        garde = refht$
    psecu = initht$

        if dwell$ = 0, gcode$ = 5
        else, gcode$ = 6

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, dwell$, pfr_percage, sbloque, e$

            old_Cmch = Cmch


pdrillC_2      # Cycle de percage en fraisage en bout en Axe C

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch
        garde = refht$
    psecu = initht$

        if dwell$ = 0, gcode$ = 5
        else, gcode$ = 6

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Cmch, Zmch, garde, garde, psecu, pfr_percage, sbloque, e$

            old_Cmch = Cmch

pdrillD       # Cycle de percage en fraisage radial

        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch

        garde = refht$ * 2
    psecu = initht$ * 2

        if dwell$ = 0, gcode$ = 7
        else, gcode$ = 8

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$

        bloque = 1


        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, dwell$, pfr_percage, sbloque, e$

            old_Cmch = Cmch

pdrillD_2       # Cycle de percage en fraisage radial

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch

        garde = refht$ * 2
    psecu = initht$ * 2

        if dwell$ = 0, gcode$ = 7
        else, gcode$ = 8

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1


        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, dwell$, pfr_percage, sbloque, e$

            old_Cmch = Cmch


pdrillDev
        pdrillD

pdrillDev_2
                pdrillD_2


pdrillInc   # plan inclin�

        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ

        garde = refht$
    psecu = initht$

        if dwell$ = 0, gcode$ = 5
        else, gcode$ = 6

        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, garde, psecu, pfr_percage, sbloque, e$




pdrillInc_2 # plan inclin�

        z$ = depth$
        ppos_XYZ


        garde = refht$
    psecu = initht$

        if dwell$ = 0, gcode$ = 5
        else, gcode$ = 6

        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, dwell$, pfr_percage, sbloque, e$



#--------------------DEBOURRAGE EN FRAISAGE ---------------------------------

ppeckB      # Cycle de debourrage en fraisage axial en Y 



        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ

        bloque = 1
        n$, sbloque, e$

        garde = refht$
    psecu = initht$

        gcode$ = 9

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *peck1$, pfr_percage, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, dwell$, *peck1$, pfr_percage, e$


ppeckB_2     # Cycle de debourrage en fraisage axial en Axe Y

        z$ = depth$
        ppos_XYZ

        bloque = 1
        n$, sbloque, e$

        garde = refht$
    psecu = initht$

        gcode$ = 9

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *peck1$, pfr_percage, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, dwell$, *peck1$, pfr_percage, e$



ppeckC       # Cycle de debourrage en fraisage axial en Axe C


        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch
        garde = refht$
    psecu = initht$

        gcode$ = 9

        #if Cmch <> old_Cmch, bloque = 0
        #n$, sbloque, e$
        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, *peck1$, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, dwell$, *peck1$, pfr_percage, sbloque, e$

            old_Cmch = Cmch


ppeckC_2      # Cycle de debourrage en fraisage axial en Axe C

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch
        garde = refht$ - initht$

        garde = refht$
    psecu = initht$

        #if Cmch <> old_Cmch, bloque = 0
        #n$, sbloque, e$
        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, *peck1$, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, dwell$, *peck1$, pfr_percage, sbloque, e$

            old_Cmch = Cmch


ppeckD       # Cycle de debourrage en fraisage radial


        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch

        garde = refht$
    psecu = initht$

        gcode$ = 10

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, *peck1$, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, dwell$, *peck1$, pfr_percage, sbloque, e$

            old_Cmch = Cmch

ppeckD_2       # Cycle de debourrage en fraisage radial

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch

        garde = refht$ * 2
    psecu = initht$ * 2

        gcode$ = 10

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, *peck1$, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, dwell$, *peck1$, pfr_percage, sbloque, e$

            old_Cmch = Cmch


ppeckDev    # Cycle de debourrage en fraisage en developpe
        ppeckD

ppeckDev_2  # Cycle de debourrage en fraisage en developpe
        ppeckD_2

ppeckInc       # Cycle de debourrage en fraisage Incline

        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ

        garde = refht$
    psecu = initht$

        gcode$ = 9

        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *peck1$, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *peck1$, dwell$, pfr_percage, sbloque, e$




ppeckInc_2       # Cycle de debourrage en fraisage Incline

        z$ = depth$
        ppos_XYZ

        garde = refht$
    psecu = initht$

        gcode$ = 5

        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *peck1$, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *peck1$, dwell$, pfr_percage, sbloque, e$





#--------------------BRISE COPEAUX EN FRAISAGE ---------------------------------

pchpbrkB    # Cycle de brise copeaux en fraisage Axial en Y 


        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ

        bloque = 1
        n$, sbloque, e$

        garde = refht$
    psecu = initht$

        gcode$ = 11

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *peck1$, pfr_percage, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, dwell$, *peck1$, pfr_percage, e$


pchpbrkB_2  # Cycle de brise copeaux en fraisage Axial en Y      

        z$ = depth$
        ppos_XYZ

        bloque = 1
        n$, sbloque, e$

        garde = refht$
    psecu = initht$

        gcode$ = 11

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *peck1$, pfr_percage, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, dwell$, *peck1$, pfr_percage, e$



pchpbrkC    # Cycle de brise copeaux en fraisage Axial en C

        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch
        garde = refht$
    psecu = initht$

        gcode$ = 11

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, *peck1$, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, dwell$, *peck1$, pfr_percage, sbloque, e$

            old_Cmch = Cmch


pchpbrkC_2  # Cycle de brise copeaux en fraisage Axial en C

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch
        garde = refht$
    psecu = initht$

        gcode$ = 11

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, *peck1$, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, dwell$, *peck1$, pfr_percage, sbloque, e$

            old_Cmch = Cmch


pchpbrkD    # Cycle de brise copeaux en fraisage Radial

        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch

        garde = refht$ * 2
    psecu = initht$ * 2

        gcode$ = 12

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, *peck1$, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, dwell$, *peck1$, pfr_percage, sbloque, e$

            old_Cmch = Cmch

pchpbrkD_2      # Cycle de brise copeaux en fraisage Radial

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch

        garde = refht$ * 2
    psecu = initht$ * 2

        gcode$ = 12

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, *peck1$, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, dwell$, *peck1$, pfr_percage, sbloque, e$

            old_Cmch = Cmch


pchpbrkDev      # Cycle de brise copeaux en fraisage Radial en Developpe
        pchpbrkD

pchpbrkDev_2    # Cycle de brise copeaux en fraisage Radial en Developpe

                pchpbrkD_2

pchpbrkInc       # Cycle de brise copeaux en fraisage Incline

        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ

        garde = refht$
    psecu = initht$

        gcode$ = 11

        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *peck1$, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *peck1$, dwell$, pfr_percage, sbloque, e$




pchpbrkInc_2       # Cycle de brise copeaux en fraisage Incline

        z$ = depth$
        ppos_XYZ

        garde = refht$
    psecu = initht$

        gcode$ = 11

        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *peck1$, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *peck1$, dwell$, pfr_percage, sbloque, e$

#--------------------- TARAUDAGE EN FRAISAGE -----------------------------------


ptapB   # Cycle de Taraudage en fraisage Axial en Y 


        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ

        bloque = 1
        n$, sbloque, e$

        garde = refht$
    psecu = initht$

        gcode$ = 13
        if tool_typ$ = 5, gcode$ = 14

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *pas, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *pas, e$ # dwell$,


ptapB_2 # Cycle de Taraudage en fraisage Axial en Y      

        z$ = depth$
        ppos_XYZ

        bloque = 1
        n$, sbloque, e$

        garde = refht$
    psecu = initht$

        gcode$ = 13
        if tool_typ$ = 5, gcode$ = 14

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, pas, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, pas, e$ # dwell$,



ptapC   # Cycle de Taraudage en fraisage Axial en C

        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch
        garde = refht$
    psecu = initht$

        gcode$ = 13
        if tool_typ$ = 5, gcode$ = 14

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, *pas, sbloque, e$
        else, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, *pas, sbloque, e$

            old_Cmch = Cmch


ptapC_2 # Cycle de Taraudage en fraisage Axial en C

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch
        garde = refht$
    psecu = initht$

        gcode$ = 13
        if tool_typ$ = 5, gcode$ = 14

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, pas, sbloque, e$
        else, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, pas, sbloque, e$

            old_Cmch = Cmch



ptapD   # Cycle de Taraudage en fraisage Radial

        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch

        garde = refht$ * 2
    psecu = initht$ * 2

        gcode$ = 15
        if tool_typ$ = 5, gcode$ = 16

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, *pas, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, *pas, sbloque, e$

            old_Cmch = Cmch

ptapD_2      # Cycle de Taraudage en fraisage Radial

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch

        garde = refht$ * 2
    psecu = initht$ * 2

        gcode$ = 15
        if tool_typ$ = 5, gcode$ = 16

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, pas, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, pas, sbloque, e$

            old_Cmch = Cmch


ptapDev      # Cycle de Taraudage en fraisage Radial en Developpe
        ptapD

ptapDev_2   # Cycle de Taraudage en fraisage Radial en Developpe

                ptapD_2

ptapInc # Cycle de Taraudage en fraisage Axial en Y 


        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ

        bloque = 1

        garde = refht$
    psecu = initht$

        gcode$ = 13
        if tool_typ$ = 5, gcode$ = 14

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *pas, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, *pas, sbloque, e$ # dwell$,


ptapInc_2   # Cycle de Taraudage en fraisage Axial en Y      

        z$ = depth$
        ppos_XYZ

        bloque = 1

        garde = refht$
    psecu = initht$

        gcode$ = 13
        if tool_typ$ = 5, gcode$ = 14

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, pas, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, pas, sbloque, e$ # dwell$,


#--------------------------ALESAGE EN FRAISAGE ------------------------------------------


pbore1B       # Cycle de percage en fraisage en bout en Axe Y


        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ

        bloque = 1
        n$, sbloque, e$

        garde = refht$
    psecu = initht$

        gcode$ = 17

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, pfr_percage, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, dwell$, pfr_percage, e$


pbore1B_2     # Cycle de percage en fraisage en bout en Axe Y

        z$ = depth$
        ppos_XYZ

        bloque = 1
        n$, sbloque, e$

        garde = refht$
    psecu = initht$

        gcode$ = 17

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, pfr_percage, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, dwell$, pfr_percage, e$



pbore1C       # Cycle de percage en fraisage en bout en Axe C

        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch
        garde = refht$
    psecu = initht$

        gcode$ = 17

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, dwell$, pfr_percage, sbloque, e$

            old_Cmch = Cmch


pbore1C_2      # Cycle de percage en fraisage en bout en Axe C

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch
        garde = refht$
    psecu = initht$

        gcode$ = 17

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1
        if dwell$ = 0, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Cmch, Zmch, garde, psecu, dwell$, pfr_percage, sbloque, e$

            old_Cmch = Cmch


pbore1D       # Cycle de percage en fraisage radial

        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch

        garde = refht$ * 2
    psecu = initht$ * 2

        gcode$ = 18

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, dwell$, pfr_percage, sbloque, e$

            old_Cmch = Cmch

pbore1D_2       # Cycle de percage en fraisage radial

        z$ = depth$
        ppos_XYZ
        @Cmch, @old_Cmch

        garde = refht$ * 2
    psecu = initht$ * 2

        gcode$ = 18

        if Cmch <> old_Cmch, bloque = 0
        n$, sbloque, e$
        bloque = 1

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, Cmch, garde, psecu, dwell$, pfr_percage, sbloque, e$

            old_Cmch = Cmch


pbore1Dev
        pbore1D

pbore1Dev_2
                pbore1D_2

pbore1Inc       # Cycle de percage en fraisage INC


        z$ = initht$
        ppos_XYZ
        gcode$ = 0
        n$, `sgcode, Zmch, e$

        z$ = depth$
        ppos_XYZ

        bloque = 1

        garde = refht$
    psecu = initht$

        gcode$ = 17

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, dwell$, pfr_percage, sbloque, e$


pbore1Inc_2     # Cycle de percage en fraisage Inc

        z$ = depth$
        ppos_XYZ

        bloque = 1

        garde = refht$
    psecu = initht$

        gcode$ = 17

        if dwell$ = 0, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, pfr_percage, sbloque, e$
        else, n$, sgcode, Xmch, Ymch, Zmch, garde, psecu, dwell$, pfr_percage, sbloque, e$




#------------------------ANNULATION CYLE DE PERCAGE EN FRAISAGE----------------------------------------------
pcanceldc$ # Cancel canned drill cycle

        garde =  -9999
        !garde

        z$ = initht$

        ppos_XYZ

        gcode$ = 4
        if usi = 0, n$, sgcode, Xmch, Ymch, Zmch, Cmch, e$

        if usi = 1, [
            bloque = 0
            n$, sbloque, e$
            n$, sgcode, Xmch, Cmch, Zmch, e$
                ]
        if usi = 2, [
            bloque = 0
            n$, sbloque, e$
            n$, sgcode, Xmch, Ymch, Zmch, Cmch, e$
                ]

        if usi = 3, [
            bloque = 0
            n$, sbloque, e$
            n$, sgcode, Xmch, Ymch, Zmch, Cmch, e$
                ]

        if usi = 4, n$, sgcode, Xmch, Ymch, Zmch, e$


#----------------- FILETAGE ------------------------------------------          
ptoto

             "type de filetage  0Simple (long cycle, G32) 1Canned thread (G76) 2Box thread (G92) 3Alternating (long cycle, G32)", thdtype$, e$
             "hauteur de filet", *thddepth$, e$
             "angle de filetage conique",thdtaper$,e$
             "nbr de filets", nstarts$,e$
             "angle d'entree", thdangle$,e$
             "angle de depat du filet", thda1$,e$
             "angle d'ouverture du filet", thda2$,e$
             "nbr de passes a vide", *nspring$,e$
             "tol de finition", thdfinish$,e$
             "degagenemt anticipe", thdpulloff$,e$
             "1ere passe", thdfirst$,e$
             "derniere passe", thdlast$,e$
             "passes egales(meme prof)", thdequcut$,e$
             "garde sur brut en x", thdxclr$,e$
             "garde d'approche en Z", thdzclr$,e$
             "nombre de passes",thdncuts$,e$
             "ray majeur au z accostage", thdx1$,e$
             "ray mineur au z accostage", thdx2$,e$
             "ray mineur au z de fin", thdx3$,e$
             "z de debut filet", thdz1$,e$
             "z de fin filet (avec surusinage)", thdz2$,e$
             "Pas (positif si mm/tour)", thdlead$, e$




pthread0$   # pre calcule

        old_Xmch = vequ(Xmch) # memo du point d'aproche
        n$, pvits, e$

pthdext$    # filetage exter
        #ptoto
        Xmch = (thdx3$ + thddepth$) * 2
        Zmch = thdz2$
        EA = thdtaper$  # angle pour filetage conique
        EA = atan((thdx3$-thdx2$)/(thdz2$-thdz1$))

        if EA <> 0, EA = 180 + EA

pthdint$    # filetage inter

        Xmch = (thdx3$ - thddepth$) * 2
        Zmch = thdz2$
        #EA = thdtaper$     # angle pour filetage conique

        EA = atan((thdx3$-thdx2$)/(thdz2$-thdz1$))


        if EA <> 0, EA = 180 + EA

pthdface$   # filetage de face

        Xmch = (thdz2$) * 2
        Zmch = thdx3$ + thddepth$

        EA = atan((thdx3$-thdx2$)/(thdz2$-thdz1$))
        EA = 90 - EA
pg76$      # G76 threading (complex)


        #ptoto




        K = abs(thdlead$)       # pas du filetage

        EB = thdangle$ * (180 / pi$)    # angle d'entree
        P = thddepth$           # profondeur de filet
        Q = thdlast$            # profondeur derniere passe
        R = thdpulloff$         # long de degagement anticipe
        F = nstarts$            # nombre de filets
        S = thdncuts$           # nombre de passes en meme aire (valeur degressives)
        ES = thddepth$ / thdfirst$  # nombre de passes en meme prof (valeur constante)

        gcode$ = 27

        n$, *sgcode, Xmch, Zmch, K, EA, EB, P, Q, R, F,
        if thdequcut$, ES
        else, S
        e$

        gcode$ = 0
        Xmch = vequ(old_Xmch) # rappel du point d'aproche
        llin$

pthrg32_1$


pthrg32_2$


pthrg32_3$


pthrg32_4$



pg32e$     # End G32 threading




pg92$         # ecriture du G92 (bloc ajouter en fonction de thdtype = 2)


pthrg92_1$    # retour au diam du brut point de d�but


pthrg92_2$    # prise de passe d�but



pthrg92_3$   # mouvement en Z 



pthrg92_4$   # degagemnt en fin de filet



#------------------Liste des OUTILS---------------------------------------------------

fmt T 5 paramT1      # N� outil
fmt   3 paramT2      # Type d'outil
fmt   3 paramT3      # Matiere de l'outil 1=Rapide 2=carbure 3=carbure revetu 4=cermet 5=borzon
fmt   3 paramT4      # Type de rayon de bout 0=aucun 1=torique 2=spherique
fmt "DIAM " 3 paramT5   # Diametre
fmt "R " 3 paramT6   # Rayon de bout
fmt   3 paramT7      # Nombre de filet par mm
fmt "A " 3 paramT8   # Angle de bout
fmt   3 paramT9      # N� de correcteur de rayon
fmt   3 paramT10     # N� de correcteur de longeur
fmt   3 paramT11     # Avance travail
fmt   3 paramT12     # Avance plongee
fmt   3 paramT13     # Avance retraction
fmt   3 paramT14     # Vitesse de broche
fmt   3 paramT15     # Type de lubrification 0=arret 1=eau 2=air 3=broche 4=les 2
fmt  "- " 5 paramT16    " DENTS" # Nombre de dents

stypT00 : "RIEN"
stypT01 : "FORET A CENTRER"
stypT02 : "FORET A NOYER"
stypT03 : "FORET"
stypT04 : "TARAUD A DROITE"
stypT05 : "TARAUD A GAUCHE"
stypT06 : "ALESOIR"
stypT07 : "BARRE D'ALESAGE"
stypT08 : "FRAISE A LAMER"
stypT09 : "FRAISE A EBAVURER"
stypT10 : "FRAISE 2 TAILLES"
stypT11 : "FRAISE BOULE"
stypT12 : "FRAISE A CHANFREINER"
stypT13 : "TOURTEAU"
stypT14 : "FRAISE 3 TAILLES"
stypT15 : "FRAISE A RAYON"
stypT16 : "FRAISE QUEUE D'ARONDE"
stypT17 : "FRAISE CONIQUE"
stypT18 : "FRAISE SPHERIQUE"
stypT19 : "FRAISE TORIQUE"

stypeT : ""
fstrsel stypT00 paramT2 stypeT 20 -1


smatT0  : "ARS"
smatT1  : "ARS"
smatT2  : "CARBURE"
smatT3  : "CARBURE PLAQUETTES"
smatT4  : "CERAMIQUE"
smatT5  : "BORZON"
smatT6  : "BORZON"
smatT7  : "BORZON"
smatT8  : "BORZON"
smatT9  : "BORZON"
smatT10 : "INCONNU"
smatT : ""
fstrsel smatT0 paramT3 smatT 11 -1


fmt   1 size1 # taille du buffer 1
rc1 : 1 #Buffer 1
wc1 : 1 #Buffer 1
size1   : 0 #Buffer 1
fbuf 1 0 80 0 1  # buffer 1                       
stringop : ""
rc2 : 1 #Buffer 2
wc2 : 1 #Buffer 2
size2 : 0 #Buffer 2
fbuf 2 0 2 0 0  # buffer 2                       

pot : 0
num_outil : 0


ptypeBoutT # afficher on non le rayon de bout
           if paramT4 <> 0, paramT6

pangleT    # afficher on non l'angle de l'outil
           if paramT2 = 3 | paramT2 = 12 | paramT2 = 2 | paramT2 = 17 | paramT2 = 9, paramT8

pwrttparam$
    #~prmcode$, "=", sparameter$, e$
    #if prmcode$ = 20100, sparameter$, e$
    #if prmcode$ = 20108, sparameter$, e$

    if prmcode$ = 1008, scomment = sparameter$      # nom de plaquette

        if prmcode$ = 20004,  paramT1 = rpar(sparameter$, 16)
    if prmcode$ = 20100, paramP1 = rpar(sparameter$, 9) # lecture des parametres - tool programming parameters
    if prmcode$ = 20103, stinsert2 = sparameter$        # nom de plaquette
    if prmcode$ = 20110, stsupport = sparameter$        # nom de support
    if prmcode$ = 20111, paramL1 = rpar(sparameter$, 15)    # lecture des parametres de porte outil



pwrtt$      # Lite des outil     
    #pmachin_bidul


    strtool$ = ucase(strtool$)
    outil_broche = t$

        if texte = 1, [


             if t$ > 0 & opcode$ <= 99 , plist_fraisage
             if t$ > 0 & opcode$ > 99 , plist_tournage

        pliste_op


                ]




pliste_op   # liste des operations



    if op_id$ <> old_op_listid, [


            spaces$ = 0
        scomment = ucase(scomment)
        if scomment <>  svide, [
            stringop = "(OPERATION " + scomment +  ")"
            stringop = wbuf(1,wc1)

                    ]
        scomment = svide
            old_op_listid = op_id$
        spaces$ = old_spaces

                ]



plist_fraisage

    n$, "(", *outil_broche, strtool$, stypeT, paramT5, paramT16, ptypeBoutT, pangleT, smatT, ")" ,e$

plist_tournage

    if tool_typ$ = 4, tldia$ = tcr$*2
    strtool$ = ucase(strtool$)
    stinsert2 = ucase(stinsert2)
    stsupport = ucase(stsupport)

    spaces$ = 0

            if tool_typ$ <> 4, "(", *outil_broche, " ", *tcr$
            if tool_typ$ = 4, "(", *outil_broche, " ", *tldia$

            if strtool$ <> svide, " ", strtool$


            if tool_typ$ <> 4, [
        if stinsert2 <> svide & stinsert2 <> snone, " PLAQUETTE ", stinsert2
        if stsupport <> svide & stsupport <> snone, " SUPPORT ", stsupport
                    ]
            ")", e$

        strtool$ = svide
        stinsert = svide
        stsupport = svide
        spaces$ = old_spaces



[CTRL_MT_MILL|DEFAULT]
[misc integers]
1. "Entier [1]"
2. "Entier [2]"
3. "Entier [3]"
4. "Entier [4]"
5. "Entier [5]"
6. "Entier [6]"
7. "Entier [7]"
8. "Entier [8]"
9. "Entier [9]"
10. "Entier [10]"
[misc reals]
1. "R�el [1]"
2. "R�el [2]"
3. "R�el [3]"
4. "R�el [4]"
5. "R�el [5]"
6. "R�el [6]"
7. "R�el [7]"
8. "R�el [8]"
9. "R�el [9]"
10. "R�el [10]"
[simple drill]
1. "Per�age Lamage"
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. ""
8. ""
9. ""
10. ""
11. ""
[peck drill]
1. "D�bourrage"
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er Incr�ment (en mm)"
8. "Incr�ments Suivants"
9. ""
10. ""
11. ""
[chip break]
1. "Brise copeaux"
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "Incr�ment (en mm)"
8. ""
9. ""
10. ""
11. ""
[tap]
1. "Taraudage"
2. ""
3. ""
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. ""
8. ""
9. ""
10. ""
11. ""
[bore1]
1. "Al�sage"
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. ""
8. ""
9. ""
10. ""
11. ""
[bore2]
1. ""
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. ""
8. ""
9. ""
10. ""
[misc1]
1. ""
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[misc2]
1. ""
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 9]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 10]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 11]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 12]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 13]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 14]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 15]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 16]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 17]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 18]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 19]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 20]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
6. "Profondeur"
7. "1er D�bour."
8. "D�b. suivant"
[simple drill custom parameters]
1. "Param�tres de cycle sp�cial 1"
[peck drill custom parameters]
1. "Param�tres de cycle sp�cial 2"
[chip break drill custom parameters]
1. "Param�tres de cycle sp�cial 3"
[tap custom parameters]
1. "Param�tres de cycle sp�cial 4"
[bore1 custom parameters]
1. "Param�tres de cycle sp�cial 5"
[bore2 custom parameters]
1. "Param�tres de cycle sp�cial 6"
[misc1 custom parameters]
1. "Param�tres de cycle sp�cial 7"
[misc2 custom parameters]
1. "Param�tres de cycle sp�cial 8"
[drill cycle 9 custom parameters]
1. "Param�tres de cycle sp�cial 9"
[drill cycle 10 custom parameters]
1. "Param�tres de cycle sp�cial 10"
[drill cycle 11 custom parameters]
1. "Param�tres de cycle sp�cial 11"
[drill cycle 12 custom parameters]
1. "Param�tres de cycle sp�cial 12"
[drill cycle 13 custom parameters]
1. "Param�tres de cycle sp�cial 13"
[drill cycle 14 custom parameters]
1. "Param�tres de cycle sp�cial 14"
[drill cycle 15 custom parameters]
1. "Param�tres de cycle sp�cial 15"
[drill cycle 16 custom parameters]
1. "Param�tres de cycle sp�cial 16"
[drill cycle 17 custom parameters]
1. "Param�tres de cycle sp�cial 17"
[drill cycle 18 custom parameters]
1. "Param�tres de cycle sp�cial 18"
[drill cycle 19 custom parameters]
1. "Param�tres de cycle sp�cial 19"
[drill cycle 20 custom parameters]
1. "Param�tres de cycle sp�cial 20"
[drill cycle descriptions]
1. "Per�age Lamage"
2. "D�bourrage"
3. "Brise copeaux"
4. "Taraudage"
5. "Al�sage"
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
12. ""
13. ""
14. ""
15. ""
16. ""
17. ""
18. ""
19. ""
20. ""
[canned text]
1. "Texte 1"
2. "Texte 2"
3. "Texte 3"
4. "Texte 4"
5. "Texte 5"
6. "Texte 6"
7. "Texte 7"
8. "Texte 8"
9. "Texte 9"
10. "Texte 10"

[CTRL_MT_LATHE|DEFAULT]
[misc integers]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
[misc reals]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
[simple drill]
1. "Per�age Lamage"
2. "Point de per�age"
3. "Tempo."
4. "Plan de s�curit�"
5. "Garde"
7. ""
8. ""
9. ""
10. ""
11. ""
[peck drill]
1. "D�bourrage"
2. "Point de per�age"
3. "Tempo."
4. "Plan de s�curit�"
5. "Garde"
7. "1er Incr�ment"
8. "Incr�ments Suivants"
9. ""
10. ""
11. ""
[chip break]
1. "Brise Copeaux"
2. "Point de per�age"
3. "Tempo."
4. "Plan de s�curit�"
5. "Garde"
7. "Incr�ment"
8. ""
9. ""
10. ""
11. ""
[tap]
1. "Taraudage"
2. "Point de per�age"
3. "Tempo."
4. "Plan de s�curit�"
5. "Garde"
7. ""
8. ""
9. ""
10. ""
11. ""
[bore1]
1. "Al�sage"
2. "Point de per�age"
3. "Tempo."
4. "Plan de s�curit�"
5. "Garde"
7. ""
8. ""
9. ""
10. ""
11. ""
[bore2]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[misc1]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[misc2]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 9]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 10]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 11]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 12]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 13]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 14]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 15]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 16]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 17]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 18]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 19]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 20]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[simple drill custom parameters]
1. "Param�tres de per�age divers 1"
2. "1-Param�tre de per�age N�1"
3. "1-Param�tre de per�age N�2"
4. "1-Param�tre de per�age N�3"
5. "1-Param�tre de per�age N�4"
6. "1-Param�tre de per�age N�5"
7. "1-Param�tre de per�age N�6"
8. "1-Param�tre de per�age N�7"
9. "1-Param�tre de per�age N�8"
10. "1-Param�tre de per�age N�9"
11. "1-Param�tre de per�age N�10"
[peck drill custom parameters]
1. "Param�tres de per�age divers 2"
2. "2-Param�tre de per�age N�1"
3. "2-Param�tre de per�age N�2"
4. "2-Param�tre de per�age N�3"
5. "2-Param�tre de per�age N�4"
6. "2-Param�tre de per�age N�5"
7. "2-Param�tre de per�age N�6"
8. "2-Param�tre de per�age N�7"
9. "2-Param�tre de per�age N�8"
10. "2-Param�tre de per�age N�9"
11. "2-Param�tre de per�age N�10"
[chip break drill custom parameters]
1. "Param�tres de per�age divers 3"
2. "3-Param�tre de per�age N�1"
3. "3-Param�tre de per�age N�2"
4. "3-Param�tre de per�age N�3"
5. "3-Param�tre de per�age N�4"
6. "3-Param�tre de per�age N�5"
7. "3-Param�tre de per�age N�6"
8. "3-Param�tre de per�age N�7"
9. "3-Param�tre de per�age N�8"
10. "3-Param�tre de per�age N�9"
11. "3-Param�tre de per�age N�10"
[tap custom parameters]
1. "Param�tres de per�age divers 4"
2. "4-Param�tre de per�age N�1"
3. "4-Param�tre de per�age N�2"
4. "4-Param�tre de per�age N�3"
5. "4-Param�tre de per�age N�4"
6. "4-Param�tre de per�age N�5"
7. "4-Param�tre de per�age N�6"
8. "4-Param�tre de per�age N�7"
9. "4-Param�tre de per�age N�8"
10. "4-Param�tre de per�age N�9"
11. "4-Param�tre de per�age N�10"
[bore1 custom parameters]
1. "Param�tres de per�age divers 5"
2. "5-Param�tre de per�age N�1"
3. "5-Param�tre de per�age N�2"
4. "5-Param�tre de per�age N�3"
5. "5-Param�tre de per�age N�4"
6. "5-Param�tre de per�age N�5"
7. "5-Param�tre de per�age N�6"
8. "5-Param�tre de per�age N�7"
9. "5-Param�tre de per�age N�8"
10. "5-Param�tre de per�age N�9"
11. "5-Param�tre de per�age N�10"
[bore2 custom parameters]
1. "Param�tres de per�age divers 6"
2. "6-Param�tre de per�age N�1"
3. "6-Param�tre de per�age N�2"
4. "6-Param�tre de per�age N�3"
5. "6-Param�tre de per�age N�4"
6. "6-Param�tre de per�age N�5"
7. "6-Pa"
8. "6-Param�tre de per�age N�7"
9. "6-Param�tre de per�age N�8"
10. "6-Param�tre de per�age N�9"
11. "6-Param�tre de per�age N�10"
[misc1 custom parameters]
1. "Param�tres de per�age divers 7"
2. "7-Param�tre de per�age N�1"
3. "7-Param�tre de per�age N�2"
4. "7-Param�tre de per�age N�3"
5. "7-Param�tre de per�age N�4"
6. "7-Param�tre de per�age N�5"
7. "7-Param�tre de per�age N�6"
8. "7-Param�tre de per�age N�7"
9. "7-Param�tre de per�age N�8"
10. "7-Param�tre de per�age N�9"
11. "7-Param�tre de per�age N�10"
[misc2 custom parameters]
1. "Param�tres de per�age divers 8"
2. "8-Param�tre de per�age N�1"
3. "8-Param�tre de per�age N�2"
4. "8-Param�tre de per�age N�3"
5. "8-Param�tre de per�age N�4"
6. "8-Param�tre de per�age N�5"
7. "8-Param�tre de per�age N�6"
8. "8-Param�tre de per�age N�7"
9. "8-Param�tre de per�age N�8"
10. "8-Param�tre de per�age N�9"
11. "8-Param�tre de per�age N�10"
[drill cycle 9 custom parameters]
1. "Param�tres de per�age divers 9"
2. "9-Param�tre de per�age N�1"
3. "9-Param�tre de per�age N�2"
4. "9-Param�tre de per�age N�3"
5. "9-Param�tre de per�age N�4"
6. "9-Param�tre de per�age N�5"
7. "9-Param�tre de per�age N�6"
8. "9-Param�tre de per�age N�7"
9. "9-Param�tre de per�age N�8"
10. "9-Param�tre de per�age N�9"
11. "9-Param�tre de per�age N�10"
[drill cycle 10 custom parameters]
1. "Param�tres de per�age divers 10"
2. "10-Param�tre de per�age N�1"
3. "10-Param�tre de per�age N�2"
4. "10-Param�tre de per�age N�3"
5. "10-Param�tre de per�age N�4"
6. "10-Param�tre de per�age N�5"
7. "10-Param�tre de per�age N�6"
8. "10-Param�tre de per�age N�7"
9. "10-Param�tre de per�age N�8"
10. "10-Param�tre de per�age N�9"
11. "10-Param�tre de per�age N�10"
[drill cycle 11 custom parameters]
1. "Param�tres de per�age divers 11"
2. "11-Param�tre de per�age N�1"
3. "11-Param�tre de per�age N�2"
4. "11-Param�tre de per�age N�3"
5. "11-Param�tre de per�age N�4"
6. "11-Param�tre de per�age N�5"
7. "11-Param�tre de per�age N�6"
8. "11-Param�tre de"
9. "11-Param�tre de per�age N�8"
10. "11-Param�tre de per�age N�9"
11. "11-Param�tre de per�age N�10"
[drill cycle 12 custom parameters]
1. "Param�tres de per�age divers 12"
2. "12-Param�tre de per�age N�1"
3. "12-Param�tre de per�age N�2"
4. "12-Param�tre de per�age N�3"
5. "12-Param�tre de per�age N�4"
6. "12-Param�tre de per�age N�5"
7. "12-Param�tre de per�age N�6"
8. "12-Param�tre de per�age N�7"
9. "12-Param�tre de per�age N�8"
10. "12-Param�tre de per�age N�9"
11. "12-Param�tre de per�age N�10"
[drill cycle 13 custom parameters]
1. "Param�tres de per�age divers 13"
2. "13-Param�tre de per�age N�1"
3. "13-Param�tre de per�age N�2"
4. "13-Param�tre de per�age N�3"
5. "13-Param�tre de per�age N�4"
6. "13-Param�tre de per�age N�5"
7. "13-Param�tre de per�age N�6"
8. "13-Param�tre de per�age N�7"
9. "13-Param�tre de per�age N�8"
10. "13-Param�tre de per�age N�9"
11. "13-Param�tre de per�age N�10"
[drill cycle 14 custom parameters]
1. "Param�tres de per�age divers 14"
2. "14-Param�tre de"
3. "14-Param�tre de per�age N�2"
4. "14-Param�tre de per�age N�3"
5. "14-Param�tre de per�age N�4"
6. "14-Param�tre de per�age N�5"
7. "14-Param�tre de per�age N�6"
8. "14-Param�tre de per�age N�7"
9. "14-Param�tre de per�age N�8"
10. "14-Param�tre de per�age N�9"
11. "14-Param�tre de per�age N�10"
[drill cycle 15 custom parameters]
1. "Param�tres de per�age divers 15"
2. "15-Param�tre de per�age N�1"
3. "15-Param�tre de per�age N�2"
4. "15-Param�tre de per�age N�3"
5. "15-Param�tre de per�age N�4"
6. "15-Param�tre de per�age N�5"
7. "15-Param�tre de per�age N�6"
8. "15-Param�tre de per�age N�7"
9. "15-Param�tre de per�age N�8"
10. "15-Param�tre de per�age N�9"
11. "15-Param�tre de per�age N�10"
[drill cycle 16 custom parameters]
1. "Param�tres de per�age divers 16"
2. "16-Param�tre de per�age N�1"
3. "16-Param�tre de per�age N�2"
4. "16-Param�tre de per�age N�3"
5. "16-Param�tre de per�age N�4"
6. "16-Param�tre de per�age N�5"
7. "16-Param�tre de per�age N�6"
8. "16-Param�tre de pe"
9. "16-Param�tre de per�age N�8"
10. "16-Param�tre de per�age N�9"
11. "16-Param�tre de per�age N�10"
[drill cycle 17 custom parameters]
1. "Param�tres de per�age divers 17"
2. "17-Param�tre de per�age N�1"
3. "17-Param�tre de per�age N�2"
4. "17-Param�tre de per�age N�3"
5. "17-Param�tre de per�age N�4"
6. "17-Param�tre de per�age N�5"
7. "17-Param�tre de per�age N�6"
8. "17-Param�tre de per�age N�7"
9. "17-Param�tre de per�age N�8"
10. "17-Param�tre de per�age N�9"
11. "17-Param�tre de per�age N�10"
[drill cycle 18 custom parameters]
1. "Param�tres de per�age divers 18"
2. "18-Param�tre de per�age N�1"
3. "18-Param�tre de per�age N�2"
4. "18-Param�tre de per�age N�3"
5. "18-Param�tre de per�age N�4"
6. "18-Param�tre de per�age N�5"
7. "18-Param�tre de per�age N�6"
8. "18-Param�tre de per�age N�7"
9. "18-Param�tre de per�age N�8"
10. "18-Param�tre de per�age N�9"
11. "18-Param�tre de per�age N�10"
[drill cycle 19 custom parameters]
1. "Param�tres de per�age divers 19"
2. "19-Param�tre de per"
3. "19-Param�tre de per�age N�2"
4. "19-Param�tre de per�age N�3"
5. "19-Param�tre de per�age N�4"
6. "19-Param�tre de per�age N�5"
7. "19-Param�tre de per�age N�6"
8. "19-Param�tre de per�age N�7"
9. "19-Param�tre de per�age N�8"
10. "19-Param�tre de per�age N�9"
11. "19-Param�tre de per�age N�10"
[drill cycle 20 custom parameters]
1. "Param�tres de per�age divers 20"
2. "20-Param�tre de per�age N�1"
3. "20-Param�tre de per�age N�2"
4. "20-Param�tre de per�age N�3"
5. "20-Param�tre de per�age N�4"
6. "20-Param�tre de per�age N�5"
7. "20-Param�tre de per�age N�6"
8. "20-Param�tre de per�age N�7"
9. "20-Param�tre de per�age N�8"
10. "20-Param�tre de per�age N�9"
11. "20-Param�tre de per�age N�10"
[drill cycle descriptions]
1. "Per�age Lamage"
2. "D�bourrage"
3. "Brise Copeaux"
4. "Taraudage"
5. "Al�sage"
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
12. ""
13. ""
14. ""
15. ""

[CTRL_MT_MILL|SOMAB]
[misc integers]
1. "Entier [1]"
2. "Entier [2]"
3. "Entier [3]"
4. "Entier [4]"
5. "Entier [5]"
6. "Entier [6]"
7. "Entier [7]"
8. "Entier [8]"
9. "Entier [9]"
10. "Entier [10]"
[misc reals]
1. "R�el [1]"
2. "R�el [2]"
3. "R�el [3]"
4. "R�el [4]"
5. "R�el [5]"
6. "R�el [6]"
7. "R�el [7]"
8. "R�el [8]"
9. "R�el [9]"
10. "R�el [10]"
[simple drill]
1. "Per�age Lamage"
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. ""
8. ""
9. ""
10. ""
11. ""
[peck drill]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er Incr�ment (en mm)"
8. "Incr�ments Suivants"
9. ""
10. ""
11. ""
[chip break]
1. "Brise copeaux"
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "Incr�ment (en mm)"
8. ""
9. ""
10. ""
11. ""
[tap]
2. ""
3. ""
4. "Plan de S�curit�"
5. "Garde"
7. ""
8. ""
9. ""
10. ""
11. ""
[bore1]
1. "Al�sage"
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. ""
8. ""
9. ""
10. ""
11. ""
[bore2]
1. ""
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. ""
8. ""
9. ""
10. ""
[misc1]
1. ""
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[misc2]
1. ""
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 9]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 10]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 11]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 12]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 13]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 14]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 15]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 16]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 17]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 18]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 19]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[drill cycle 20]
2. "Avance"
3. "Tempo."
4. "Plan de S�curit�"
5. "Garde"
7. "1er D�bour."
8. "D�b. suivant"
[simple drill custom parameters]
1. "Param�tres de cycle sp�cial 1"
[peck drill custom parameters]
1. "Param�tres de cycle sp�cial 2"
[chip break drill custom parameters]
1. "Param�tres de cycle sp�cial 3"
[tap custom parameters]
1. "Param�tres de cycle sp�cial 4"
[bore1 custom parameters]
1. "Param�tres de cycle sp�cial 5"
[bore2 custom parameters]
1. "Param�tres de cycle sp�cial 6"
[misc1 custom parameters]
1. "Param�tres de cycle sp�cial 7"
[misc2 custom parameters]
1. "Param�tres de cycle sp�cial 8"
[drill cycle 9 custom parameters]
1. "Param�tres de cycle sp�cial 9"
[drill cycle 10 custom parameters]
1. "Param�tres de cycle sp�cial 10"
[drill cycle 11 custom parameters]
1. "Param�tres de cycle sp�cial 11"
[drill cycle 12 custom parameters]
1. "Param�tres de cycle sp�cial 12"
[drill cycle 13 custom parameters]
1. "Param�tres de cycle sp�cial 13"
[drill cycle 14 custom parameters]
1. "Param�tres de cycle sp�cial 14"
[drill cycle 15 custom parameters]
1. "Param�tres de cycle sp�cial 15"
[drill cycle 16 custom parameters]
1. "Param�tres de cycle sp�cial 16"
[drill cycle 17 custom parameters]
1. "Param�tres de cycle sp�cial 17"
[drill cycle 18 custom parameters]
1. "Param�tres de cycle sp�cial 18"
[drill cycle 19 custom parameters]
1. "Param�tres de cycle sp�cial 19"
[drill cycle 20 custom parameters]
1. "Param�tres de cycle sp�cial 20"
[drill cycle descriptions]
1. "Per�age Lamage"
2. "D�bourrage"
3. "Brise copeaux"
4. "Taraudage"
5. "Al�sage"
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
12. ""
13. ""
14. ""
15. ""
16. ""
17. ""
18. ""
19. ""
20. ""
[canned text]
1. "Texte 1"
2. "Texte 2"
3. "Texte 3"
4. "Texte 4"
5. "Texte 5"
6. "Texte 6"
7. "Texte 7"
8. "Texte 8"
9. "Texte 9"
10. "Texte 10"
[CTRL_MT_LATHE|SOMAB]
[misc integers]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
[misc reals]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
[simple drill]
1. "Per�age Lamage"
2. "Point de per�age"
3. "Tempo."
4. "Plan de s�curit�"
5. "Garde"
7. ""
8. ""
9. ""
10. ""
11. ""
[peck drill]
2. "Point de per�age"
3. "Tempo."
4. "Plan de s�curit�"
5. "Garde"
7. "1er Incr�ment"
8. "Incr�ments Suivants"
9. ""
10. ""
11. ""
[chip break]
1. "Brise Copeaux"
2. "Point de per�age"
3. "Tempo."
4. "Plan de s�curit�"
5. "Garde"
7. "Incr�ment"
8. ""
9. ""
10. ""
11. ""
[tap]
2. "Point de per�age"
3. "Tempo."
4. "Plan de s�curit�"
5. "Garde"
7. ""
8. ""
9. ""
10. ""
11. ""
[bore1]
1. "Al�sage"
2. "Point de per�age"
3. "Tempo."
4. "Plan de s�curit�"
5. "Garde"
7. ""
8. ""
9. ""
10. ""
11. ""
[bore2]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[misc1]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[misc2]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 9]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 10]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 11]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 12]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 13]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 14]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 15]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 16]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 17]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 18]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 19]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[drill cycle 20]
1. ""
2. ""
3. ""
4. ""
5. ""
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
[simple drill custom parameters]
1. "Param�tres de per�age divers 1"
[peck drill custom parameters]
1. "Param�tres de per�age divers 2"
[chip break drill custom parameters]
1. "Param�tres de per�age divers 3"
[tap custom parameters]
1. "Param�tres de per�age divers 4"
[bore1 custom parameters]
1. "Param�tres de per�age divers 5"
[bore2 custom parameters]
1. "Param�tres de per�age divers 6"
7. "6-Pa"
[misc1 custom parameters]
1. "Param�tres de per�age divers 7"
[misc2 custom parameters]
1. "Param�tres de per�age divers 8"
[drill cycle 9 custom parameters]
1. "Param�tres de per�age divers 9"
[drill cycle 10 custom parameters]
1. "Param�tres de per�age divers 10"
[drill cycle 11 custom parameters]
1. "Param�tres de per�age divers 11"
8. "11-Param�tre de"
[drill cycle 12 custom parameters]
1. "Param�tres de per�age divers 12"
[drill cycle 13 custom parameters]
1. "Param�tres de per�age divers 13"
[drill cycle 14 custom parameters]
1. "Param�tres de per�age divers 14"
2. "14-Param�tre de"
[drill cycle 15 custom parameters]
1. "Param�tres de per�age divers 15"
[drill cycle 16 custom parameters]
1. "Param�tres de per�age divers 16"
8. "16-Param�tre de pe"
[drill cycle 17 custom parameters]
1. "Param�tres de per�age divers 17"
[drill cycle 18 custom parameters]
1. "Param�tres de per�age divers 18"
[drill cycle 19 custom parameters]
1. "Param�tres de per�age divers 19"
2. "19-Param�tre de per"
[drill cycle 20 custom parameters]
1. "Param�tres de per�age divers 20"
[drill cycle descriptions]
1. "Per�age Lamage"
2. "D�bourrage"
3. "Brise Copeaux"
4. "Taraudage"
5. "Al�sage"
6. ""
7. ""
8. ""
9. ""
10. ""
11. ""
12. ""
13. ""
14. ""
15. ""
[CTRL_TEXT_END]
