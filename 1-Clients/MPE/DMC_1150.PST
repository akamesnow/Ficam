[POST_VERSION] #DO NOT MOVE OR ALTER THIS LINE# V25.00 P0 E1 W25.00 T1663921589 M25.00 I0 O0
scustpost_revision    : "23.2410"  #= Revision number for use by Resellers or customers.
# ----------------------------------------
# - REALISE PAR                	--> FS
# ---------------------------------------- config PP
# - TYPE PP                 	--> FRAISAGE
# - NOMBRE d'AXES            	--> 4
# - AXES                     	--> A ou B
# - TYPE DE LANGAGE         	--> HEIDENHAIN
#            VERSION            --> 530 ...
# ---------------------------------------- client / infos machine
# - CLIENT                    	--> 
# - NON MACHINE                	-->  
# - AXE ROTATIF(1)            	--> A/B
# ----------------------------------------

[STARTBIN]
#property of FICAM, Eric Dauvilliers, e.dauvilliers@ficam.com, +33 (0)2 37 26 28 10

#region possibilites_PP
# ---------------------------------------- infos complEmentaires
# - RESTRICTIONS            	--> OUI - numéro de clé/en durée/version MC
# - ENTETEs
#                   ANCIENNE    --> OUI
#                   NOUVELLE    --> OUI
#         OP MC COMMENTAIRE     --> OUI
# - LECTURE INFOS ARMOIRE    	--> OUI ou NON --> Suivant config choisie dans le PP
# - LECTURE INFOS MACHINE/AXES  --> OUI ou NON --> Suivant config choisie dans le PP
# - ORIGINES     
# 	               		Def 7	--> valeurs ou TABLEAU POINT ZERO
#			Depuis le palpage   --> OUI
#                CYCL DEF 247   --> OUI - figE A 1 au dEpart
# - INSPECTION D'OUTIL         	--> OUI
# - ARROSAGES VX            	--> OUI
# - AVANCES EN VARIABLES    	--> OUI
# - APPEL OUTILS EN VARIABLES	--> OUI
# - APPEL OUTILS SUIVANT EN NOM --> OUI
# - USURE INVERSE "DR-"			--> OUI / NON 
# - CYCLES PALPAGES            	--> OUI / OPTIONNEL
# - SOUS-PROGRAMMES
#                       en Z    --> OUI
#                translation    --> OUI
#                   Rotation    --> OUI
#                     Miroir    --> OUI
# - SUBSTITUTION D'AXES			--> OUI
# - TEXTES AVANT/AVEC/APRES 	--> OUI / NON a completer
# ---------------------------------------- infos complEmentaires
# - SIMULATION ISO				--> NON
# - PERCAGES AVANCé				--> OUI - ARROSAGES et ROTATIONS BROCHE
# - PERC. TRES PROFOND          --> OUI
# - PERCAGES "5 AXES" A ou B	--> NON --> A DEVELOPPER
#			TRANSITION SECU		--> NON --> A DEVELOPPER
# - MODIFICATION AUTO DU NOM    --> OUI	- F12345.H ou 12345-HERM.H ou F12345-HERM.H
# - OUVERTURE D'UN AUTRE EDITEUR--> OUI
# - AFFICHAGE DU TEMPS D'USINAGE
# 					PAR OUTIL 	--> OUI
#						TOTAL	--> OUI
# - ARRET COMTROLE BRIS D'OUTIL	--> OUI 
# - CYCLE TEST BRIS D'OUTIL		--> OUI --> A VALIDER
# - OPTIMISATION AVANCES ARCS	--> NON/OUI MC
# - RENVOIE D'ANGLE				--> NON --> A DEVELOPPER
# ---------------------------------------- INFOS

#REGLAGE_DEBUG
Mode_reglage_PP = 0        		# 2= Affiche les valeurs en cours de réglage pour info 
								# 1= affiche toutes les valeurs pour info
affiche_prmcodes = 0     		# 1= Affiche les prmcode$

# ----------------------------- Restrictions #0124
# 1=actif    0=inactif
num_clEe_DEALER	: 104632		# Sergio = 104632	--> débloque toutes les restrictions
#
restric_version_MC    	: 0     # 0/1	1=actif    0=inactif
restric_version_num    	: 21    # 21=2019    22=2020
restric_num_clEe    	: 0     # 0/1	1=actif    0=inactif
num_clEe_client        	: 0     # numEro de la clEe atribuEe
#
restric_durEe        	: 0     # 0/1	1=actif    0=inactif
jour_                	: 23    # jour limite
mois_                	: 10    # mois limite
annEe_                	: 19    # annEe limite --> 20= 2020
#
#region Historique_modifs_versions
# le 22 03 04 ajout sous prog.       -
# le 02 06 05 modifs perçage, taraudages... idem C800-
# le 02 06 05 ajout des avances en variables
#0001 le 20 07 05 Pour supprimer les retours inutiles en Z en perçage
#0002 le 03 10 05 avance plongée pour entrée en rampe en usinage de poche.
#0003   paramétrage des avances.
#0013 le 07 10 05 - ajout pour afficher une vitesse de broche differente en cours d'usinage
#0014 le 02 11 05 - ajout pour afficher les cycles de palpages
#0015 le 20 12 05 - pour forcer l'affichage des avances après l'appel de l'outil.
#0016 le 17 02 06 - pour les avances.
#0017 Le 20 03 06 - Ajout pour l'affichage du commentaire "mandrin"
##0018 le 29 05 06 Ajout de l'arret optionnel
#0020 Le 20 05 06 - Mise à jour fonctions PST
#0021 le 10 11 06 - Pour afficher dans la liste "outil à fileter"
#0024 le 15 11 06 - Affichage des commentaires de début d'OP en entete Prog. (Commentaire usinage dans la BIBLI)
#  "    "   " - variable "entete_questions" 0 = pas de questions PST (entete en fichier texte), 1 = questions PST
#0025 le 21 11 06 - Pour afficher entete avec "OP de Modification" (pour morceau de programme)
#0027 le 28 11 06 - Pour afficher dans la liste le texte des fraises de formes ex:"FR A GRAVER"
#0030 le 28 11 06 - Pour Gerer les num. prog. ISO FORMAT: F=Fraisage ou T=Tournage, Num d'article,- Indice plan,-
#           Num d'op,- Initiales Machine    ex: F016230-02-1-HE.H
#           possibilité de revenir à l'ancienne numérotation "change_nom" = 0 ou 1
#0031 le 18 12 06 - Sortie du PST si Q256 = 0
#0034 Le 15 05 06 - Pour activer les "points zero" dans les cycles de palpages et dans le cycle 7 en decalage
#0035 Le 16 05 06 - Pour afficher le cycle def 7 (décallage) uniquement si décallage actif >0 et MR4 = 1
#0040 le 18 06 07 - Modifs suite passage VX
#0042 le 12 09 07 - Gestion de l'arret machine "M0"
#0043 le 24 09 07 - Ajout de l'affichage d'un incrément d'OP pour chaque outil

#0049 Le 21 10 09 - Ajout pour éviter l'affichage des avances avec "FQ155551"

#0070 Le 17 11 09 - Ajout pour afficher le "commentaire" des décallages d'origines.

#0079 Le 03 10 13 - Ajout pour afficher un message si les plans n'ont pas l'origine de base
#0080 Le 24 10 13 - Ajout pour afficher un message s'il y a différents RUD

#0085 Le 28 11 13 - Ajout pour afficher le MINI MAXI "Z" dans chaque outil

#0090 Le 13-03-14 - Ajout pour ne pas faire d'erreur sur LE PAS DU FILETAGE à la fraise"
#0091 Le 17-03-14 - Ajout pour les perçages très profond avec trous d'huile
#0092 LE 19-03-14 - Ajout pour afficher la valeur du vrai filetage à la fraise
#0093 le 21-03-14 - Ajout pour verifier si l'outil et l'opération ont le meme PAS
#0094 le 01-04-14 - Ajout pour afficher un message si le num. d'outil dépasse 60
#0095 le 25-04-14 - Ajout pour afficher l'avance en "micro-remontée"
#0096 le 13-05-14 - Ajout pour afficher UNE ALARME si transformation PLAN à plat
#0097 le 17-07-14 - Ajout pour afficher un message si le num. d'outil est different du num "H" ou "D"
#0098 le 24-07-14 - MODIF pour afficher les num. d'outils en paramètres après 1800
#0099 le 01-12-14 - Ajout pour vérifier si l'avance de filetage à la fraise est TROP importante
#0100 le 03-02-15 - Ajout pour gerer la rotation avec les cycles de perçage profond
#0101 le 09-03-15 - Ajout pour afficher le nom du porte outil
#0102 le 24-03-15 - Ajout pour afficher UN MESSAGE S'IL N'Y A PAS DE VALEUR D'AVANCE
#0103 le 26-03-15 - Ajout pour pouvoir controler l'état des plaquettes/outil

#0120 le 15-04-16 - modif pour supprimer la virgule pour les entetes
#0121 le 28-09-17 - Ajout pour utiliser ou pas les NOMs d'outils en entête à la place des valeurs géométriques d'outils
#0122 le 05-05-20 - Mise en page -Régions-Lecture def-armoire ...
#0123 le 13-05-20 - Validation lecture def machine pour gestion des axes de rotation ...
#0124 le 04-06-20 - Ajout pour des restrictions d'utilisations : durEe, clEe, Version
#0125 le 03-11-21 - Ajout pour gérer les paramètres du "perCage avancE" --> sens de rotation, lubrifiants ...
#0126 le 04-11-21 - Ajout pour pouvoir gérer le 4Eme axe uniquement dans un sens "A+ ou B+" 

#0200 Le 05 03 08 - Ajout pour gerer les erreurs entre MC et le PST ex: G41 dans les cercles, taraudage sans le G84...
#0300 le 13 01 08 - Ajout Pour Gerer les num. prog. ISO FORMAT: F=Fraisage ou T=Tournage, Num d'article,- Indice plan,-
#           			Num d'op,- Initiales Machine    ex: F016230-02-1-HE.H   **en commentaire** et le **PR0000---** en nom de fichier
#	  le 18-02-22 - Modif de la config des rayons
#				  - config numéros de blocs suivant : n$
#	  le 23-02-22 - Affichage du TYPE de brut Box, Cyl, ...
#	  le 25-03-22 - Affichage des temps d'usinages par OUTIL et COMPLET
#	  Le xx-05-22 - Passage en PP STANDARD
#	  Le 24-10-22 - Modif gestion des décalages suivant le prmcode$ et non workofs$  
# ----------------------------------------
#endregion
#endregion

#region reglages_PP switches
s_nom_machine_entete : "MACHINE: DMC 1150 V"

# ----- dEgagements au changement d'outil, rotations d'axes et inspection de plaquettes
smode_deg   : "R0 FMAX M91" 		# Mode de degagement des axes "R0 FMAX M91/M92"
S_macro_deg : "M130 ; RET. PT CHANG. OUTIL"				# NOM de la macro de dégagement si active
# configuration des dEgagements
# --------------------------------  0=SANS  1=Z  2=Z-X  3=Z-Y  4=Z-X-Y  5=Z-XY 6=MACRO_CN
deg_debut   = 3     				# Degagement au debut du prog 
deg_outil	= 3    					# Degagement au changement d'outil          	          	
deg_4_axes 	= 1						# Degagement au changement de position en 4 axes 
									# 0 = VALEURS MC DE L'OPERATION 
deg_inspection_plaq = 3     		# Degagement l'outil lors de l'inspection de l'état de l'outil 
deg_fin     		= 4     		# Degagement en fin de programme
deg_apres_outil		= 0				# >0 = Affichage des dégagements EGALEMENT apres l'appel de l'outil "sécurité" lors du démarrage à X outil 
									# type = idem au "deg_outil" 									 
# en 3 axes
# Exemple : "L Z-1, R0 FMAX M91"
degageX    = -1						# Valeur de degagement en X pour l'appel d'outil 
degageY    = -1  					# "	Y "
degageZ    = -1  					# "	Z "

# en 4 axes	--> ENTRE 2 opérations		SI "deg_4_axes" = 0 valeur X/Y & Z = à la valeur SECURITE de l'opération MASTERCAM
degageX4   = -1 					# Valeur de degagement en X avant rotation
degageY4   = -1  					# "	Y "
degageZ4   = -1 					# "	Z " 

# 	SI "deg_inspection_plaq " = 0 valeur X/Y & Z = à la valeur SECURITE de l'opération MASTERCAM
deg_insp_X = -1 					# Valeur de degagement en X avant inspection de l'état de la plaquette 
deg_insp_Y = -1  					# "	Y " 
deg_insp_Z = -1						# "	Z " 

# ----------------------------------------------
Cycles_palpage_YN	= no$  	# activation ou pas de l'utilisation des cycles de palpages "BASICs" (en perCages)
change_nom  		= 0     # 1 = nomination des programmes avec un préfix "PF" + "numARTICLE" + "INDICE" + "CODE_CN"  = PF15662-A-2-HE.H ////	0 = NOM DANS MC	
fvar        		= 0  	# utiliser les avances F en variables FQ
output_z    		= 1  	# Output Z Min and Z Max des parcours (1 ou 0)
program_stop    	= 1     # Stop au changement d'outil 0=NON, 1=M00, 2=M01
entete_questions	= 2 	# 0 = pas d'entEte
                        	# 1 = entEte suivant OP MC TEXTE
                        	# 2 = Nouvelle entEte questions
                        	# 3 = Ancienne entEte questions
#Outils ----------------------------------------
Type_appel_outil	= 2		# 1 = NUMERO de l'outil 					"TOOL CALL 1...
							# 2 = NOM de l'outil 						"FRAISE D..."
							# 3 = VARIABLE suivie du NUMERO de l'outil 	"FN 0: Q1811 =11 ; FR. CA. D=8. 
							
Type_infos_outil	= 3		# 1 = NOM de l'outil "texte NOM" --> strtool$
							# 2 = Infos géométrique réelle de l'outil
							# 3 = NOM MC de l'outil et Infos géométrique réelle de l'outil
							# 4 = NOM de l'outil "texte NOM" & Infos géométrique réelle de l'outil --> = 1 + 2
Position_info_outil = 1		# 1 = Affichage AVANT l'appel de l'outil
							#		Nxx T2 M6
							# 2 = Affichage APRES l'appel de l'outil						
#prEparation de l'outil SUIVANT
bldnxtool$  		= 1     # 0 = n'affiche pas la préparation de l'outil suivant
							# 1 = affiche
type_prep_outil  	= 1    	# 0 = Pas de prEparation du 1er outil
                     		# 1 = PrEparation A chaque outil (ptlchg$)
                     		# 2 = PrEparation A chaque outil et A LA FIN (peof)	
# Déchargement de l'outil en broche							
decharge_outil_fin	= 1		# 1 = affiche un "TOOL CALL 0" à la fin	

# ----						
Use_DR				= 0 	# Utiliser la commande DR-(rayon outil) pour correction "usure inverse"

lire_def_machine 	= yes$   	# yes$ = Lire les valeurs de la def machine / armoire --> AXES/ARCs ... 
								# no$ = suivant les données du PP 
#infos communes AVEC LECTURE DEFINITION de la CN 			et SWITCH sans lecture de la DEFINITION de la CN
useaxe      		: -9999 	# -9999 = mode AUTO (DEF MACHINE) -- (utiliser l'axe A/B 1=oui 0=non)
sens_A_B        	: 1     	# pour inverser les calculs de l'axe A/B -1
diviseur    		: -1    	# diviseur tourne autour de X=1-->A autour de Y=2-->B // DEF MACHINE=-1
#
rot_AB_un_sens  	= 0			# 0126 sens AB 	0 = libre (en +/-) 	1 = SEULEMENT dans le sens + pour certaines CNs
#bloque      		= 0     	# 1 pour Ecrire M10 M11 (blocage/dEblocage du diviseur)    : 0 pour ne pas ecrire M10 M11		

See_tool_time 		: no$  		# affiche le temps pour chaque outil
See_total_time 		: no$   	# affiche le temps pour le programme complet
#F_max_rapide		: 0			# utilisé si > 0 pour calcul des temps ou utilise def armoire si = 0 --> fr_rapid_mach

affiche_groupe 		: no$   	# 0/no$ = pas d'affichage des groupes d'usinage, 1/yes$ = affichage

Nom_porte_outil_entete 	= 3		# Affiche le nom du porte outil avec la liste des outils en entête, s'il y en a un
									# 1 = porte outil & longueur de sortie
									# 2 = assemblage & longueur de sortie
									# 3 = porte outil & assemblage & longueur de sortie								
compteur_opErations    	= 0  	# Affiche le compteur d'opérations --> * - OP.: 1 - 1/3
								#	num OP de l'outil sur ses OPs	X - 1/3
								#	num OP total de cet outil		1 - X/3
								#	num OP total 					1 - 1/X
groupe_descripteur		= 0		# Affiche en ENTETE 0 = NON
									# 1 Nom de la Machine
									# 2 Nom du groupe PRINCIPAL d'opErations
									# 3 Nom du groupe 1
									# 4 Descripteur de fichier
									# 5 Les 4 						
#REGLAGE ARCS FORCES POUR PASSER OUTRE LA DEFINITION "ARMOIRE" ICI--> p_force_config_pp
# The following three initializations are used for full arc and helix arc output when the CD
# is set to output R or signed R for arcs
#arctype$     	: 5    #Arc center type XY plane 1=abs(IJ), 2=Début-Ctr(IJ), 3=Ctr-Début(IJ), 4=unsigned inc., 5=rayon, 6=rayon non signé
#arctypexz$   	: 5    #Arc center type XZ plane 1=abs(IK), 2=Début-Ctr(IK), 3=Ctr-Début(IK), 4=unsigned inc., 5=rayon, 6=rayon non signé
#arctypeyz$   	: 5    #Arc center type YZ plane 1=abs(JK), 2=Début-Ctr(JK), 3=Ctr-Début(JK), 4=unsigned inc., 5=rayon, 6=rayon non signé

#breakarcs$     : 1    # Break arcs, 0 = no, 1 = quadrants, 2 = 180deg. max arcs
#do_full_arc$ 	: 1    # Allow full circle output? 0=no, 1=yes; 1 POUR LE FILETAGE A LA FRAISE (SUR 360DEG)
#helix_arc$   	: 1    # Support helix arc output, 0=no, 1=all planes, 2=XY plane only
#arccheck$      : 1
#Blocs
seqmax$        	: 99999
omitseq$       	: no$  			# yes$ = pas de numerotation de blocs
seqno$ 			: 1
seqinc$ 		: 1 
force_n0     	: no$   		#Force le "0" au 1er N
#fichier-prog
sextnc$     	: "h"   		# extension des fichiers nc
progname$      	: 1
#Sous-prog
sub_level$  	: 2     		# Enable automatic subprogram support
subprg$        	: yes$
mergesub$      	: no$
#outils
affiche_M6		: no$ 			# Affichage ou pas du "M6"
Liste_outils	: yes$  		# A préviligier pour activer la liste d'outils au "tooltable$"  			
tooltable$     	: yes$  		# creation de la liste d'outil en entete -
								# Toujours ACTIVE pour lire d'autres infos depuis le PWRTT$
								# Output tool table  0=no, 1=before header, 2=after header 
                    			# 3= Pre-read, call the pwrtt postblock
strtool_v7$    	: 2     		# autorise la lecture des commentaires de la bibiotheque outil
appel_param_outils : 1			# Affiche un LBL 999 et LBL 0 au debut et fin appel outil pour rafraichissement
block_form     	: yes$  		# Sortie du 'BLK FORM" 
#cc_1013$    	: 1     		# pour connaitre cc dans l'appel d'outil
nobrk$         	: no$   		# ne pas dEcomposer en xy puis z les mouvements en rapide
								
#divers
opcode$        	: 1
ncldr$         	: 20    # nbr de zero de queue utilisEs pour la fonction "fleader"
ldrcode$       	: 65
ltol$          	: 0.05
#tlchng_aft$    : 2     # Delay the tool change call until the first motion is read on all the NCI Gcode 1000, 1001, 1002 tool changes.
#get_1004$      : 1     # Find gcode 1004 with getnextop?
#rpd_typ_v7$    : 0     # Use Version 7 style contour flags?
#skp_lead_flgs$ : 0 	# Do NOT use v9 style contour flags
getnextop$     	: 1     # Access to nextop, nextccomp, nextdc
spaces$        	: 1
no$            	= 0
vtol$          	: 0.01  #plus actif depuis la V9.16
texte 			= 1   	# Autorise les commentaires texte
# POUR INFOS
type_test_bris_outils   : 0 # test de bris outil --> mi5$
								# 0 = non 
								# 1 = ecriture en cycle "TCH PROBE 481", 
								# 2 = appel sous programme qui est dans "sbris_outil" a configurer plus bas
								# 3 = "TCH PROB 586"
Test_bris_outils		: 0	# Valeur depuis 	--> mi6$
								# 1 = A la fin de chaque outil  --> ptlchg 
								#     A chaque opération --> ptlchg0 								
#endregion

#region debug
fastmode$  		: yes$     	# YES/NO    IDEM LIGNE DU DESSOUS
#fastmode$ 		: 0      	# mode execution rapide du pst 0 pour utiliser les bug 1 2 3
bug1$   		: 1         # 1 = Output post to screen - 2 = output leader to screen
bug2$   		: 60        # Add postline label to each line at column 'bug2'
bug4$   		: no$    	# Add nci no
whatno$ 		: yes$   	# Ignore whatline branches to plin1 etc.?
linktolvar$    	: 1         # Associer les variables de tolérance X aux variables V9-
linkplnvar$    	: 1         # Associer les variables spécifiques plan X aux variables V9-?
linklvar$      	: 1         # Associer les variables spécifiques X Tournage aux variables V9-
cant_tlchng$   	: 1         # Ignorer entrée de texte programmé au changement avec tlchng_aft?
newglobal$     	: 0         # Activer la vérification d'erreur pour les variables globales?
#endregion

#region valeurs_initiales
axeA1_dep     	: -999999
axeA          	: 999
nbrtour     	: 0
old_axeA     	: 0

#0085
z_min$     		: 999
z_tmin     		: 999
z_max$     		: -999
z_tmax     		: -999

m7$       		: 999
m8$       		: 999
longTexte     	: 0        #0025
old_lubrif     	: -1
old_coolantx 	: -1
increment_op_outil 	: 1
debut_out     	: 1       # 0015 pour forcer l'affichage des avances après l'appel de l'outil.
_scycle         : 0
#axes pwrtt$
rotation_axe 	: -9999
rotation_A     	: -9999
rotation_B     	: -9999
write_ops    	: 0     #Write NC operation information (True/False)

Z_dir        	: 0     #Z Axis direction flag
rot_on_x     	: 1     #SET_BY_MD Default Rotary Axis Orientation
                     	#0 = Off (no rotary), 1 = About X, 2 = About Y, 3 = About Z
axis_label   	: 0     #Axis label - 1=X,2=Y,3=Z
rot_zero 		: 0    	#Rotary zero degree position
rot_dir			: 0  	#Rotary direction
rot_index    	: 0 	#Index or continuous
rot_angle    	: 0 	#Index step
rot_type     	: 0		#Rotary type
min_speed    	: 50 	#Minimum spindle speed
maxfrinv_m   	: 0		#Maximum feedrate - inverse time - metric - Minimum value from MD as this is inverse time
maxfrdeg     	: 0		#Maximum feedrate deg/min
maxfeedpm_m  	: 0		#Limit for feed in mm/min

spdir2        	: 1     #Copy for safe spindle direction calculation

#Sous-prog
incremental 	: 0     # init en Absolue
decalage 		: 0
sav_absinc   	: 0     # Absolute/Incremental Saved Value
scomentsprog 	: ""    # STRING du commentaire pour le titre du sous prog
mr_rt_actv   	: 0     #Flag to indicate if G51/G68 is active
                     	#0=Off, 1=Toolchange, 2=Subprogram call/start, G68
                     	#3=Absolute start, both
end_sub_mny  	: 0     #Many tool setting captured at transform sub end
# WORKPIECE variables - used to define the stock for Siemens graphics / simulation on control
stock_cyl_axis 	: 0     #Stock cylinder axis 0=X,1=Y,2=Z
stock_shape    	: 0     #Stock shape from toolpath group parameters. 0=Rectangular/Box, 1=Cylinder

srot_label 		: ""  	#Rotary Axis label (Generally A, B or C) - Not yet available.
s_axe_brut_cyl	: ""	#Axe du brut cylindrique

#temps
fr_rapid_mach   : 12000 # Machine Rapid feedrate
tlchg_time  	: 0  	# Tool Change Time (Minutes) OK VALEUR DANS LA CN
time_factor 	: 100  	# Cycle time percentage factor CORRECTION en %
tol       		: 0.5   # Tolerance for feed rates set to zero
Feed_time    	: 0     # Feed time
Rapide_time    	: 0     # Rapid time
Long       		: 0     # Length for calculation
Delta_X        	: 0     # Delta x
Delta_Y        	: 0     # Delta y
Delta_Z        	: 0     # Delta z
temps_4_axes	: 0		# Usin à plat =0, dégagements position = 1, usinages continus = 2
old_cc 			: -1
#endregion

#region affectations_calculs
axeA1_depi = axeA1_dep
zdev = z$ +(rotdia$ /2)
zdevi = zdev
A_posi = A_pos      # A incremental
#endregion

#region formats
# - FORMATS DES VARIABLES
# --------------------------------------------------------------------------
# Format statements - n=non modale, l=leading(devant), t=trailing(derriEre), i=inc, d=delta
# --------------------------------------------------------------------------
fs  1   +1.3     	# signe "+", Decimal, absolute, 2/3 place
fs  2   +1.3n    	# signe "+", Decimal, absolute, 2/3 place, NON MODALE
fs  3   1 0      	# 1 chiffre mini avant virgule, pas de virgule, pas de chiffre apres
fs  4   1 0n     	# 1 chiffre mini avant virgule, pas de virgule, pas de chiffre apres --> non modale
fs  5   +1.4n
fs  6   1.3ln		# 1 chiffre avant la vigule met . 3 chiffres apres la virgule non modal force 0 de tete
fs  7   +1.3ln		# signe "+", 1 chiffre avant la vigule met . 3 chiffres apres la virgule non modal force 0 de tete
fs  8   0.1n
fs  9   1.3n
fs  10  2 0ln
fs  11  1.3     	# force 1 chiffre avant virgule met . 3 chiffres après la virgule
fs  12  1 3ln
fs  13  1.3l
fs  14  +1.0     
fs  15  +1,9l    
fs  16  +1 0     
fs  17  +1%3li   	# force 1 chiffre avant virgule met . 3 chiffres apres virgule en incremental
fs  18  +1%3lni
fs  19  1^3n     	# pour liste outil
fs  20  1^3l
fs  21  1.5ln
fs  22  +1^4ln
fs  23  1%3ln
fs  24  0.3n  		#Decimal, absolute, 3 place
#endregion

#region formats_assignements
fmt      4 	Mode_reglage_PP
fmt      4 	affiche_prmcodes
fmt      4 	lire_def_machine
fmt      4 	Cycles_palpage_YN
#brut
# --------------------------------------------------------------------------
fmt     	3  stck_crnr$  #Origin corner of stock (0 - 8)
fmt "X" 	2  stck_x$     #X origin of block
fmt "Y" 	2  stck_y$     #Y origin of block
fmt "Z" 	2  stck_z$     #Z origin of block
fmt "LX" 	2  stck_ht$    #X - Stock Height
fmt "LY" 	2  stck_wdth$  #Y - Stock Width
fmt "LZ" 	2  stck_thck$  #Z - Stock Thickness
fmt "X" 	2  stck_x_min  #Minimum stock block position (X)
fmt "Y" 	2  stck_y_min  #Minimum stock block position (Y)
fmt "Z" 	2  stck_z_min  #Minimum stock block position (Z)
fmt "X" 	2  stck_x_max  #Maximum stock block position (X)
fmt "Y" 	2  stck_y_max  #Maximum stock block position (Y)
fmt "Z" 	2  stck_z_max  #Maximum stock block position (Z)

fmt  "DIST"	2  bottomz      		#Bottom of stock
fmt  "L"  	2  topz         		#Top of stock
fmt  ""   	2  stck_ll_x    		#Stock lower left corner X value
fmt  ""   	2  stck_ll_y    		#Stock lower left corner Y value
fmt  ""   	2  stck_ur_x   			#Stock upper right corner X value
fmt  ""   	2  stck_ur_y    		#Stock upper right corner Y value
fmt  "R"  	2  stck_cyl_dia 		#Stock diameter for Cylindrical stock
fmt  "R0"	2  stck_cyl_dia_inter 	#Stock diameter for Cylindrical stock
# --------------------------------------------------------------------------
fmt  "X" 	2 xr$
fmt  "Y" 	2 yr$
fmt  "Z" 	2 zr$
fmt  "X" 	1 x$
fmt  "Y" 	1 y$
fmt  "Z" 	1 z$
fmt  "X" 	2 i$
fmt  "Y" 	2 j$
fmt  "Z" 	2 k$
fmt  "R" 	1 arcrad$
fmt  "X" 	1 xc$
fmt  "Y" 	1 yc$

fmt "tosz"  7 tosz$
fmt         7 oldtosz

fmt  "IPA"  5 sweep$
fmt      	4 n$
fmt         4 gcode$
fmt         4 coolant$
fmt         4 lubrif
#outils
fmt         4 t$
fmt         4 next_tool$
fmt  "Q"    4 next_tool_      	#0098
fmt         2 nom_outil     	#0121
fmt  "D"    6 tldia$
fmt     	3 type_comp     	# type de correction
fmt "DR" 	2 DR           		# decalage de rayon de fraise pour correction usure
fmt      	2 old_DR
fmt      	2 Type_Comp_OP	
fmt         4 outils_param      #0053
fmt         4 Type_infos_outil
fmt         4 Type_appel_outil
fmt         4 outil_paramT1     #0053
fmt  "Q"    4 outil_paramT2     #0053
fmt      	4 deg_debut
fmt      	4 deg_outil
fmt      	4 deg_4_axes
fmt      	4 deg_fin
fmt      	4 deg_inspection_plaq
fmt  "X"    4 degageX
fmt  "Y"    4 degageY
fmt  "Z"    4 degageZ
fmt  "X"    4 degageX4
fmt  "Y"    4 degageY4
fmt  "Z"    4 degageZ4
fmt  "X"    4 deg_insp_X
fmt  "Y"    4 deg_insp_Y
fmt  "Z"    4 deg_insp_Z
fmt      	4 deg_apres_outil
fmt			4 old_type_deg	#memo old_deg
#donnees de coupe
fmt  "F"    3 fr$
fmt  "F"    3 fr_pos$
fmt  "S"    4 ss$
fmt  "S"    4 ssa
fmt  "S"    4 _ssa 			#0091
fmt         4 old_ssa
fmt  "G"    4 cc$
fmt  ""     4 old_cc
#perCages
fmt  "Z"    2 depth$
fmt  "Z"    2 refht$
fmt         4 dwell$
fmt  "Z"    2 initht$
fmt  "Y"    2 initht_h
fmt  "G"    4 peckclr$
fmt         2 peck1$
fmt  "F"    4 frplunge$
fmt  "Q"    2 peck2$
fmt         2 passe
fmt         2 pas
fmt         4 perc_prof     #100
#variables pour les cycles de percages
fmt  "Q200 = " 	7 bq200
fmt  "Q201 = " 	7 bq201
fmt  "Q202 = " 	7 bq202
fmt  "Q203 = " 	7 bq203
fmt  "Q204 = " 	7 bq204
fmt  "Q205 = " 	7 bq205
fmt  "Q206 = " 	4 bq206
fmt  "Q208 = " 	4 bq208
fmt  "Q210 = " 	6 bq210
fmt  "Q211 = " 	6 bq211
fmt  "Q212 = " 	7 bq212
fmt  "Q213 = " 	7 bq213
fmt  "Q239 = " 11 bq239
fmt  "Q214 = " 	6 bq214
fmt  "Q256 = " 	7 bq256
fmt  "Q257 = " 	7 bq257
fmt  "Q334 = " 	7 bq334
fmt  "Q335 = " 	7 bq335
fmt  "Q336 = " 	7 bq336
fmt  "Q342 = " 	7 bq342

fmt  "Q260 = " 	7 bq260  #0014
fmt  "Q261 = " 	7 bq261  #
fmt  "Q262 = " 	7 bq262  #
fmt  "Q263 = " 	7 bq263  #
fmt  "Q264 = " 	7 bq264  #
fmt  "Q294 = " 	7 bq294  #
fmt  "Q301 = " 	7 bq301  #
fmt  "Q321 = " 	7 bq321  #
fmt  "Q322 = " 	7 bq322  #
fmt  "Q323 = " 	7 bq323  #
fmt  "Q324 = " 	7 bq324  #
fmt  "Q333 = " 	7 bq333  #
fmt  "Q311 = " 	2 bq311  #
fmt            	7 drl_prm3$ #
fmt            	7 drl_prm4$ #
fmt            	7 drl_prm5$ #
fmt            	9 drl_prm6$ #
fmt            	9 drl_prm7$ #
fmt            	4 drl_prm8$ #
fmt            	9 drl_prm9$ #
fmt            	9 drl_prm10$ #0034
fmt         	7 x_pt_zero #0034
fmt         	7 y_pt_zero
fmt         	7 z_pt_zero
fmt "X"			2 x1   
fmt "Y"			2 y2   
fmt     		7 oldbq201
fmt "F" 		9 f_p_profond   #0091
fmt "Z" 		2 z_dep_p_prof  #0091
fmt     		2 drlcst7       #0091

fmt  "LBL "         4 sub_prg_no$       # Numéro de sous-programe
fmt  "CALL LBL "    4 sub_op_id$        # appell sous-programe
fmt                 4 sub_sec_no$       # numero de passe de sous prog
fmt                 4 sub_totl_no$      # nombre total de passes
fmt "inc" 			1 incremental     	# mode incremental ou Absolue
fmt     			1 memo_incremental  # memeo du mode incremental ou Absolue
fmt     			1 inc_degage        # degagement machine en INCREMENTAL ou en ABSOLUE
fmt "O" 			6 debsousprog      	# Numéro du premier sous programe
fmt "CALL LBL " 	4 subprognum       	# numero du sous-programe pour l'appel
fmt "LBL " 			4 numsubprog       	# Numéro entete de sous-programe
fmt     			5 nomsubprog        # Numéro entete de sous-programe
fmt "DEC" 			2 decalage       	# flag pour savoir si on a ecrit un G52
fmt  "X" 			4 xrp
fmt  "Y" 			4 yrp
fmt  "Z" 			4 zrp
fmt 				5 end_sub_mny 
fmt  "X" 			4 sub_trnsx$
fmt  "Y" 			4 sub_trnsy$
fmt  "Z" 			4 sub_trnsz$
fmt 				4 Rot_ABS_SP
fmt 				4 Rot_INC_SP

fmt         3 entete_             
fmt         3 entete_questions
fmt         2 change_nom 
fmt 		2 affiche_groupe 	#0045       
fmt " "     2 mi4$               
fmt         1 texte         	# flag pour textes
fmt         4 liste_textes
fmt     	4 old_comm_cnt  	# nombre d'enregistrement dans buffeur commentaires

#compteurs ops
fmt  "- " 	4 increment_op
fmt  "/" 	4 nbr_opErations
fmt         4 increment_op_outil         
fmt         4 num_op_outil            
fmt         4 old_op_id

# Axes A/B
fmt 		4 use_axeA
fmt  "S"    2 sens_A_B          # pour inverser le sens de l'axe
fmt  "A"    2 axeA             	# POSITION pour rotation plateau en ABS
fmt  "B"    2 axeB             	# POSITION pour rotation plateau en ABS
fmt  "A"   	11 axeAi           	# POSITION pour rotation plateau en INCREMENTAL
fmt  "D"    2 rotdia$       	# diam de sbstitution
fmt  "A"    2 A_pos            	# rotation pour continue substitutuion en ABS
fmt  "A"   	11 A_posi          	# rotation pour continue substitutuion en INCREMENTAL
fmt  "Z"    2 zdev             	# Z pour continue substitution
fmt  "Z"   	11 zdevi
fmt  "R"    2 rotaxis$
fmt         2 old_rotaxis
fmt  "A"    2 old_axeA      	# memo de l ancien A
fmt  "memo_old_axeA" 2 memo_old_axeA    # memo du memo de l ancien A
fmt  "Sens" 2 sensA
fmt  "A"    2 epsi
fmt  "Ntour" 2 nbrtour      	# nombre de tour realise
fmt  "v"    1 v$
fmt  "w"    1 w$
fmt  "vx"   1 vx
fmt  "vy"   1 vy
fmt  "vz"   1 vz
fmt  "A"    1 axeA_cont
fmt  "A"    1 axeA1
fmt  "A"    1 axeA2
fmt  "X"    1 new_x
fmt  "Y"    1 new_y
fmt  "Z"    1 new_z
fmt  "A"    1 delta_axeA1
fmt  "A"    1 axeA1_dep
fmt  "A"   	11 axeA1_depi
fmt  "A"    1 old_axeA1
fmt         1 debutpmx      # flag debut prog pmx
fmt         1 bloque        # pour gestion M10 M11
#---------------------------------------------------
fmt  "X"    2 xabs         # XYZ en Absolue pour NC
fmt  "Y"    2 yabs
fmt  "Z"    2 zabs
fmt "px"    2 old_x        # ancien XYZ du NC
fmt "py"    2 old_y
fmt "pz"    2 old_z
fmt "pXC"   2 old_xc       # ancien XC/YC/ZC du NC
fmt "pYC"   2 old_yc
fmt "pZC"   2 old_zc

#0035 Cycle def 7 (décallages d'origine); avec plan C/U cocher décallage...
fmt    		3 workofs$
fmt    		3 workofs_
fmt    		3 oldworkofs
#0079
fmt 		4   Val_origine_Z
fmt 		4   Val_origine_Y
fmt 		4   Val_origine_X
fmt 		4   Old_Val_origine_Z
fmt 		4   Old_Val_origine_Y
fmt 		4   Old_Val_origine_X
fmt 		2   pas_filetage        #0090
#0085 MINI/MAXI USINAGEs-------------------------------
fmt  "X" 	2 x_tmin           # Total x_min
fmt  "X" 	2 x_tmax           # Total x_max
fmt  "Y" 	2 y_tmin           # Total y_min
fmt  "Y" 	2 y_tmax           # Total y_max
fmt  "Z" 	2 z_tmin           # Total z_min
fmt  "Z" 	2 z_tmax           # Total z_max
fmt  "Z" 	2 min_depth        # Tool z_min
fmt  "Z" 	2 max_depth        # Tool z_max
#-------------------------------------------------------
fmt   		3 posi_M_zero
fmt   		3 M_zero
fmt   		2 long_smanu
fmt   		1 debut         # flag pour debut de programme
# PARAMETRES, surep
fmt "SUREP. XY = " 	11 surepxy
fmt "SUREP. Z = " 	11 surepz
fmt "R" 			11 result
fmt 				11 old_surepxy
fmt 				11 old_surepz
fmt "SUREP.XY 3D= " 13 surep_OP3D_XY
fmt "SUREP.Z 3D= "  13 surep_OP3D_Z
# Parametres de DEF MACHINE-------------------------------
fmt    1 type_composant     # type de composant
fmt    1 compt_axes_rot     # compteur d'axes rotatif
fmt    3 erreur             # numero d'erreur
fmt    3 testerreur4        # flag pour erreur 4
fmt    1 diviseur           # Axe de l'axe rotatif
fmt    1 old_syncaxis       # memo du numero de combinaison d'axes
fmt    1 nbr_combi          # Nombre de combinaison d'axes
fmt    1 palette            # flag pour machine avec palette
fmt    1 fmaxi              # avance maxi de la machine
fmt    1 fmini              # avance mini de la machine
fmt    1 nbr_outil          # nombre d'outils maxi
# Axes Pwrtt$ --> lecture avant traitement parcours
fmt    1 rotation_axe
fmt    1 rotation_A
fmt    1 rotation_B
# time
fmt   15 long_feed        			# Feed cut length
fmt   15 long_rapide    			# Rapid length
fmt   15 total_part_time    		# Total part time
fmt "time_OP :" 	15 Tot_time_op 	# Total operation time
fmt "total_time :"  15 time_total	# Total time programme
fmt "OPs_time :"  	15 time_OPs		# Time operations
fmt    4 Time_hrs        			# Time in hours
fmt    4 Time_min        			# Time in minutes
fmt    4 Time_sec        			# Time in seconds
fmt    8 avance_t      				# Feedrate
fmt   13 pas_time					# taraudage
#time
fmt "périmètre"    	15 perimetre
fmt "Delta_X"  		15 Delta_X
fmt "Delta_Y"  		15 Delta_Y
fmt "Delta_Z"  		15 Delta_Z
fmt    	  			3 division 
#endregion

#region Buffer
# --------------------------------------------------------------------------
#0085 Buffer 5 - Min / Max
# --------------------------------------------------------------------------
b5_gcode : 0
b5_zmin  : 0
b5_zmax  : 0
rc5     : 2
wc5     : 1
size5   : 0

fbuf 5 0 3 0 0          #Min / Max
# --------------------------------------------------------------------------
#endregion

#region strings
s_m0            : "M0" 
Sold_snom_RUD   : ""       	
snom_RUD        : ""
sguillemet      : ""  		
sinfo_origine   : "" 
snomgroupe_op 		: ""   		# STRING du nom du groupe d'opération
snomgroupe_op_old 	: ""   		# STRING de l'ancien nom du groupe d'opération
s_machine 			: ""   		# STRING du nom de la machine ****VALEUR DANS MC****       
spalette        : "PALETTE"  	# STRING du nom de la palette
s_axe_rot_label : ""         	# Nom de l'axe rotatif (ABC)
s_axe_rot_A     : "A"
s_axe_rot_B     : "B"
s_CC 			: "CC"
s_CR 			: "CR"
s_CP 			: "CP"
sguillemet 		= no2asc(34) #0040
#endregion

#region questions_NOUVEAU_ANCIEN
#region NOUVEAU
# QUESTIONS ENTETE ----------------------------------------------------
svide2 : ""
# A modifier si besoin
s_com_open : ";"    # Caractere de DEBUT de commentaire
s_com_close : ""    # Caractere de FIN de commentaire

# Questions UNIQUEMENT des STRINGS NON VIDES !!
s_text_question_1 : "CLIENT"
s_text_question_2 : "DESIGNATION PIECE"
s_text_question_3 : "NUMERO DU PLAN"
s_text_question_4 : "INDICE DU PLAN"
s_text_question_5 : "NUMERO D'OPERATION"
s_text_question_6 : "ORIGINE PIECE"
s_text_question_7 : "PHASE"
s_text_question_8 : "COMMENTAIRE"
s_text_question_9 : "X :"
s_text_question_10 : "TOTO"
s_text_question_11 : ""
s_text_question_12 : ""
s_text_question_13 : ""
s_text_question_14 : ""
s_text_question_15 : ""
s_text_question_16 : ""
s_text_question_17 : ""
s_text_question_18 : ""
s_text_question_19 : ""
s_text_question_20 : "Numero de programme //snouv_nom// existant, ENTREZ UN NOUVEAU NUMERO"
#----
s_question_1 : s_text_question_1
s_question_2 : s_text_question_2
s_question_3 : s_text_question_3
s_question_4 : s_text_question_4
s_question_5 : s_text_question_5
s_question_6 : s_text_question_6
s_question_7 : s_text_question_7
s_question_8 : s_text_question_8
s_question_9 : s_text_question_9
s_question_10 : s_text_question_10
s_question_11 : s_text_question_11
s_question_12 : s_text_question_12
s_question_13 : s_text_question_13
s_question_14 : s_text_question_14
s_question_15 : s_text_question_15
s_question_16 : s_text_question_16
s_question_17 : s_text_question_17
s_question_18 : s_text_question_18
s_question_19 : s_text_question_19
s_question_20 : s_text_question_20

#----
fq 1 s_question_1 "//s_text_question_1//"
fq 2 s_question_2 "//s_text_question_2//"
fq 3 s_question_3 "//s_text_question_3//"
fq 4 s_question_4 "//s_text_question_4//"
fq 5 s_question_5 "//s_text_question_5//"
fq 6 s_question_6 "//s_text_question_6//"
fq 7 s_question_7 "//s_text_question_7//"
fq 8 s_question_8 "//s_text_question_8//"
fq 9 s_question_9 "//s_text_question_9//"
fq 10 s_question_10 "//s_text_question_10//"
fq 11 s_question_11 "//s_text_question_11//"
fq 12 s_question_12 "//s_text_question_12//"
fq 13 s_question_13 "//s_text_question_13//"
fq 14 s_question_14 "//s_text_question_14//"
fq 15 s_question_15 "//s_text_question_15//"
fq 16 s_question_16 "//s_text_question_16//"
fq 17 s_question_17 "//s_text_question_17//"
fq 18 s_question_18 "//s_text_question_18//"
fq 19 s_question_19 "//s_text_question_19//"
fq 20 s_question_20 "//s_text_question_20//"
# Nombre de questions jusqu'a  25 maxi

# ICI Questions avec valeurs numériques
fmt 2 Var_1_question
Var_1_question : 1
#...

p_questions_entete
    # A enrichir si besoin --> apres Q13
    if s_text_question_1 <> svide2, q1
    if s_text_question_2 <> svide2, q2
    if s_text_question_3 <> svide2, q3
    if s_text_question_4 <> svide2, q4
    if s_text_question_5 <> svide2, q5
    if s_text_question_6 <> svide2, q6
    if s_text_question_7 <> svide2, q7
    if s_text_question_8 <> svide2, q8
    if s_text_question_9 <> svide2, q9
    if s_text_question_10 <> svide2, q10
    if s_text_question_11 <> svide2, q11
    if s_text_question_12 <> svide2, q12
    if s_text_question_13 <> svide2, q13

    s_question_1 = ucase(s_question_1)
    s_question_2 = ucase(s_question_2)
    s_question_3 = ucase(s_question_3)
    s_question_4 = ucase(s_question_4)
    s_question_5 = ucase(s_question_5)
    s_question_6 = ucase(s_question_6)
    s_question_7 = ucase(s_question_7)
    s_question_8 = ucase(s_question_8)
    s_question_9 = ucase(s_question_9)
    s_question_10 = ucase(s_question_10)
    s_question_11 = ucase(s_question_11)
    s_question_12 = ucase(s_question_12)
    s_question_13 = ucase(s_question_13)

    # Pour toute string a convertir en valeur numerique --> faire la meme chose pour d'autres si besoin
    Var_1_question = rpar(s_question_20, 1)    # convertir la valeur texte en valeur numerique

    schange_nom_fichier = s_question_20    # dans le "Pbloc" --> "pnom_nc" peut-etre modifier le nom de la string --> test si fichier existant

    spathnc$ = ucase(spathnc$)
    stck_matl$ = ucase(stck_matl$)
    snamenc$ = ucase(snamenc$)

    spaces$ = 0
    #s_com_open, "DATE LE ", date$," A ", time$, s_com_close, e$
    #s_com_open, "DESSIN MASTERCAM - ", smcname$, s_com_close, e$
    #s_com_open, "NC FILE - ", *spathnc$, *snamenc$, *sextnc$, s_com_close, e$
    #s_com_open, "MATIERE - ", *stck_matl$, s_com_close, e$
    #s_com_open, "NOM DU PROGRAMME - ", sprogname$, s_com_close, e$
    #n$, " ", e$
    spaces$ = 1
    if s_text_question_1 <> s_question_1, n$, s_com_open, s_text_question_1, "-", s_question_1, s_com_close, e$, longTexte = 1
    if s_text_question_2 <> s_question_2, n$, s_com_open, s_text_question_2, "-", s_question_2, s_com_close, e$, longTexte = 1
    if s_text_question_3 <> s_question_3, n$, s_com_open, s_text_question_3, "-", s_question_3, s_com_close, e$, longTexte = 1
    if s_text_question_4 <> s_question_4, n$, s_com_open, s_text_question_4, "-", s_question_4, s_com_close, e$, longTexte = 1
    if s_text_question_5 <> s_question_5, n$, s_com_open, s_text_question_5, "-", s_question_5, s_com_close, e$, longTexte = 1
    if s_text_question_6 <> s_question_6, n$, s_com_open, s_text_question_6, "-", s_question_6, s_com_close, e$, longTexte = 1
    if s_text_question_7 <> s_question_7, n$, s_com_open, s_text_question_7, "-", s_question_7, s_com_close, e$, longTexte = 1
    if s_text_question_8 <> s_question_8, n$, s_com_open, s_text_question_8, "-", s_question_8, s_com_close, e$, longTexte = 1
    if s_text_question_9 <> s_question_9, n$, s_com_open, s_text_question_9, "-", s_question_9, s_com_close, e$, longTexte = 1
    if s_text_question_10 <> s_question_10, n$, s_com_open, s_text_question_10, "-", s_question_10, s_com_close, e$, longTexte = 1
    if s_text_question_11 <> s_question_11, n$, s_com_open, s_text_question_11, "-", s_question_11, s_com_close, e$, longTexte = 1
    if s_text_question_12 <> s_question_12, n$, s_com_open, s_text_question_12, "-", s_question_12, s_com_close, e$, longTexte = 1
    if s_text_question_13 <> s_question_13, n$, s_com_open, s_text_question_13, "-", s_question_13, s_com_close, e$, longTexte = 1
    #n$, s_com_open, "*****************************", s_com_close, e$

#endregion
#region ANCIEN
#  ----------QUESTIONS------------------
spiece 		: ""
snumplan 	: ""
sindiceplan : ""
squi 		: ""
sclient 	: ""
sorx 		: ""
sory		: ""
sorz 		: ""
sor_A_B 	: ""
sorc 		: ""
remplace 	: 1
use_axeA 	: 0

fmt 2 remplace

# convertir textes en MAJUSCULES
sclient = ucase(sclient)
spiece = ucase(spiece)
snumplan = ucase(snumplan)
sindiceplan = ucase(sindiceplan)
sorx = ucase(sorx)
sory = ucase(sory)
sorz = ucase(sorz)
sor_A_B = ucase(sor_A_B)

#fq 1 spiece "Nom de la piece"
#fq 2 snumplan "Numero du plan"
#fq 3 squi "Nom du programmeur"
#fq 4 sclient "Nom du client"
#fq 5 sorx "Origine en X"
#fq 6 sory "Origine en Y"
#fq 7 sorz "Origine en Z"
#fq 8 sor_A_B "Origine en A"
#fq 9 sorc "Origine en C"
#fq 10 schange_nom_fichier "Numéro de programme //snouv_nom// existant, ENTREZ UN NOUVEAU NUMERO"#0030 progno
#fq 11 remplace "Numéro de programme //snouv_nom// existant, LE REMPLACER ?      0 pour NON - 1 pour OUI"#0030
#fq 12 use_axeA "UTILISER L'AXE A (0=NON 1=OUI)"
#fq 13 sindiceplan "Indice du plan"
#fq 14 useaxe "(pour OP modif) UTILISER L'AXE A ?  0 pour NON 1 pour OUI"
#fq 15 vtol$    "TOLERANCE CORDALE POUR DEVELOPPE"    #plus utilisé
#endregion
#endregion

#region codes_M
#-------------------------------------------------------
sg00    : "FMAX"
sg01    : "L"
sg02    : "DR-"
sg03    : "DR+"
sgcode 	: ""
fstrsel  sg00 gcode$ sgcode 4 -1
#-------------------------------------------------------
sm_00   : "M4"
sm_01   : "M5"
sm_02   : "M3"
spdlon 	: ""
spdir2 = fsg3(spdir$)
fstrsel  sm_00 spdir2 spdlon 3 -1
# Blocage déblocage 4ieme Axe -------------------------
sblo0 	: ""       	# pour pas de blocage ni deblocage
sblo1	: "M10"   	# blocage axe A
sblo2   : "M11"   	# déblocage axe A
sblo3 	: ""       	# pour Frein axe A
sbloque : ""
fstrsel sblo0 bloque sbloque 4 -1
#endregion

#region commentaires
pcomment$   # pour gcode = 1005-1008
    pcomment2

#pcomment_end$  # post traitement des commentaires
    #if entete = 1, comm_cnt$ = old_comm_cnt            # pour pouvoir relire les commentaires apres appel de comment dans pheader

pcomment2
    scomm$ = ucase(scomm$)
    if debut = 1 & groupe_descripteur > 0, pcomment3
	if gcode$ = 1008,   [    # commentaire d'opération AVEC LE NUMERO D'OPERATION    #0043
        if num_op_outil = 1,	[
            n$, "* - OP.: ", *increment_op_outil, " - ", scomm$, e$ 
            ]
        if num_op_outil = 0, n$, ";", scomm$, e$ 
        num_op_outil = 0
        ] 
	if entete_ =0, [
        p_m_zero
        if gcode$ = 1005, n$, ";", scomm$, e$    # FONCTION MACHINE avec numéro de ligne
        if gcode$ = 1006 & posi_M_zero = 0, n$, scomm$, e$             #0042 Usinage commentaire - FONCTION CN AVEC NUM. BLOC
        if gcode$ = 1006 & posi_M_zero > 0, n$, "M0", ";", scomm$, e$  #0042 Usinage commentaire - FONCTION CN "M0" et "M13"
        if gcode$ = 1007, n$, ";", scomm$ # avec numéro de ligne
        if gcode$ = 1008, scomentsprog = scomm$ 
		#if gcode$ = 1008, n$, ";", scomm$, e$  # commentaire d'opération
        ]
    if entete_questions = 1 & entete_ = 1 & gcode$ = 1006 & scomm$ <> svide, ptextentete      #0024 pour informer l'entete prog.
    #if entete_ = 1 & gcode = 1008 & scomm, n$, "MSG(", 34, scomm, 34, ")"  #0024 sur la ligne "TEXTE DU RUD"

pcomment3   # Affichage des commentaires d'entete de prog /GROUPES/DESCRIPTEUR
    scomm$ = ucase (scomm$)
    if gcode$ = 1051 & (groupe_descripteur = 1 | groupe_descripteur = 5), n$, s_com_open, "MACHINE :", scomm$, s_com_close, e$    	# Nom Machine
	if gcode$ = 1052 & (groupe_descripteur = 2 | groupe_descripteur = 5), n$, s_com_open, scomm$, s_com_close, e$  					# Commentaire de groupe Machine
    if gcode$ = 1053 & (groupe_descripteur = 3 | groupe_descripteur = 5), n$, s_com_open, "GROUPE :", scomm$, s_com_close, e$  	# Nom du Groupe PRINCIPAL Machine	    
    if gcode$ = 1054 & (groupe_descripteur = 4 | groupe_descripteur = 5), n$, s_com_open, scomm$, s_com_close, e$     				# Descripteur de fichier
    old_comm_cnt = comm_cnt$
	
p_m_zero    #0042
    posi_M_zero = strstr(s_m0, scomm$)
    if gcode$ = 1006 & posi_M_zero > 0, M_zero = 1

pnomgroupe  # Affichage du nom du groupe d'operation
    if affiche_groupe = 1,	[
        if snomgroupe_op <> svide & snomgroupe_op <> snomgroupe_op_old,
            [
            n$, s_com_open, "*", snomgroupe_op, "*", s_com_close, e$       # nom du groupe d'operation
            snomgroupe_op_old = snomgroupe_op                   # memo du nom du groupe d'operation
            ]
        ]
#endregion

#region avances_variables
#0003--------- avance variable -------------------
fmt  "FQ" 3 frQ
fmt  "Q50=" 16  varq50  #AVANCE PLONGEE
fmt  "Q51=" 7   varq51  #AVANCE TRAVAIL
fmt  "Q52=" 7   varq52  #AVANCE RETRACTION
fmt  "oldQ" 16  old_q50
fmt  "oldQ" 7   old_q51
fmt  "oldQ" 7   old_q52
fmt  "PRVZ" 2 	prvz
fmt     	7   fvar
fmt     	4   debut_out   #0015
fmt  "Q50=" 14  fplongee
fmt  "Q53=" 14  fmicro_remontee  #0095
fmt  "oldQ" 14  old_fmicro_remontee  #0095

pfr
    @frQ
    #motst$ ="type de mouvement" 1=X 2=Y 3=X&Y 4=Z 5=X&Z 6=Y&Z 7=XY&Z
    #tool_op <> 2 pas au perçage
    #tool_op$ <> 102 pas au surfaçage
    #fvar = 0 POUR LES QUESTIONS "fq1"
    #fr$ = -1 lorsque la valeur n'est pas différente

    #"  ", *fvar, *fr$, *nextop$, *mi2$, *tool_op$, *motst$
    if (fvar = 1) & (nextop$ <> 11) & (mi2$ = 0) & (tool_op$ <> 2) & (tool_op$ <> 102),  #0010
        [
        #if frQ = 50 | tool_op$ = 102, fr$ = 51         
        #"1 ICI", *frQ, *motst$, *nextop$, *tool_op$
        if z$ = prvz & motst$ < 4, fr$ = 51       
        if z$ < prvz & motst$ >= 4, fr$ = 50 
        if z$ > prvz & motst$ = 4, fr$ = 52
        if z$ >= prvz & motst$ > 4, fr$ = 51 # COMBINé SUR PLUSIEURS AXES = USINAGE DE SURFACES -- nouveau remonté avec motst$ 5 et 7
        if tool_op$ = 132 & motst$ = 4 & frQ = 51 & fmicro_remontee > 0, fr$ = 51   #0095 fmicro_remontee
        if tool_op$ = 132 & motst$ = 3 & frQ = 51 & fmicro_remontee > 0, fr$ = 51   #0095 fmicro_remontee
        frQ = fr$
        if fr$ <> -1,
            [
            if debut_out = 1, *frQ
            else, frQ
            ]
        #"2 ICI", *z$, "prvz", *prvz, *motst$
        ]
    if fvar = 1 & tool_op$ = 102 & fr$ <> -1 & (mi2$ = 0),  # surfaçage
        [
        fr$ = 51
        frQ = fr$
        *frQ
        ]
    if fr_pos$ >= 0 & (nextop$ = 11 | mi2$ <> 0), fr_pos$  	# pas de FRQ -- OP 5 AXES
    if fvar = 0 & fr_pos$ <> -1, fr_pos$                	# pas de FRQ	  			
    debut_out = 0   #0015
    p_erreur_avanceS    #0102
    # gestion de l'avance entre 2 passes en surfaçage prmcode = 10116 avec tool_op = 102

pfrvar   # ecriture des avances variables
    if fvar = 1 & nextop$ <> 11 & mi2$ = 0 & (tool_op$ <> 2),   #0010 & (tool_op <> 2) pas au perçage
        [
        varq51 = fr$
        @varq51
        varq52 = fr$*2
        if opcode$ = 4 | opcode$ = 13 | opcode$ = 14, varq50 = fplongee, else, varq50 = varq51  #fr$/sqrt(tldia$*2) OPs de poches = avance MC
        @varq50,@varq51,@varq52,@old_q50,@old_q51,@old_q52
        #*varq50,*varq51,*varq52,*old_q50,*old_q51,*old_q52, e$
        if debut_out = 1,
            [
            n$, *varq50, "; AVANCE PLONGEE", e$
            n$, *varq51, "; AVANCE TRAVAIL", e$
            n$, "Q52=+9999 ; AVANCE RETRACTION", e$    #*varq52,
            if tool_op$ = 132 & fmicro_remontee > 0, n$, *fmicro_remontee, "; AVANCE micro-remontee", e$   #0095
            ]
         if debut_out = 0,
            [
            if old_q50 <> varq50, n$, *varq50, "; AVANCE PLONGEE", e$
            if old_q51 <> varq51, n$, *varq51, "; AVANCE TRAVAIL", e$
            if old_q52 <> varq52, n$, "Q52=+9999 ; AVANCE RETRACTION", e$  #*varq52,
            if tool_op$ = 132 & fmicro_remontee > 0, n$, *fmicro_remontee, "; AVANCE micro-remontee", e$   #0095
            ]
        old_q50 = varq50
        old_q51 = varq51
        old_q52 = varq52
        @old_q50,@old_q51,@old_q52
        #debut_out = 0   #0015
        ]
#endregion

#region restrictions
#0124
#strings
s_coordonnees           : "VEUILLEZ CONTACTER LA SOCIETE FICAM M. Dauvilliers Eric, e.dauvilliers@ficam.com, +33 (0)2 37 26 28 10"
s_erreur_version_MC     : "Ce POST-PROCESSEUR NE PEUT ETRE UTILISE AVEC CETTE VERSION DE MASTERCAM "
s_limite_utilisation    : "ATTENTION **CE POST-PRO n'est valide que jusqu'au :" #0102
s_erreur_num_clee       : "VOTRE NUMERO DE CLEE NE PERMET PAS D'UTILISER CE POST-PROCESSEUR, VEUILLEZ CONTACTER "
s_annEe                 : ""

#pour calculs
Val_annEe_limite		: 0
Val_mois_limite			: 0
Val_Jour_limite			: 0
Val_year_				: 0
Val_month_				: 0
Val_day_				: 0

#formats
fmt     	4    restric_version_MC    	# 0/1
fmt     	4    restric_num_clEe    	# 0/1
fmt     	4    restric_durEe        	# 0/1
fmt "-"    	4    jour_                	# jour limite
fmt "-"    	4    mois_                	# mois limite
fmt "-"    	4    annEe_                	# annEe limite
fmt     	4    num_clEe_client

p_restriction_PP
    if sim_no$ <> num_clEe_DEALER,   # CLEE autorisEe
        [
        #restriction VERSION MASTERCAM
        if restric_version_MC = 1, [    #pour info 21 = version MC2019
            if vers_no$ <> restric_version_num, [
                result = mprint(vers_no$)
                result = mprint(restric_version_num)
                result = mprint(s_erreur_version_MC)
                result = mprint(s_coordonnees)
                exitpost$
                ]
            ]
        #restriction en durEe
        #year$ --> 20= 2020
        if restric_durEe = 1,    [
            # "VOIR: ", *year$, *annEe_, *month$, *mois_, *day$, *jour_, e$
			# calcul en jours "du jour ACTUEL"
			Val_year_ = year$ * 100
			Val_month_ = month$ * 30
			Val_day_ = Val_year_ + Val_month_ + day$ # totaux en jours du jour actuel
			# calcul en jours "du jour LIMITE"
			Val_annEe_limite = annEe_	* 100
			Val_mois_limite	= mois_ * 30
			Val_Jour_limite = Val_annEe_limite + Val_mois_limite + jour_ 	
					  
            if Val_day_ > Val_Jour_limite, [                     	
                result = mprint(s_limite_utilisation)
                result = mprint(jour_)
                result = mprint(mois_)
                annEe_ = annEe_ + 2000
                result = mprint(annEe_)
                result = mprint(s_coordonnees)
                exitpost$
                ]			
            ]
        #restriction en numero de clEe
        #sim_type$
        if sim_no$ = num_clEe_DEALER, ex$   # CLEE autorisEe
        if sim_no$ <> num_clEe_client & restric_num_clEe = 1, [
            result = mprint(s_erreur_num_clee)
            result = mprint(s_coordonnees)
            exitpost$
            ]
        ]
#endregion

#region pprep_ lecture def armoire et traitememt au debut
pprep$      #0040 bloc init post pro en remplacement de la def armoire
    #pdebug
    rd_mch_ent_no$ = -1     		# forcer la lecture de toute la def machine -1 que la combinaison d'axe -2 que la base machine 0
    rd_cd$                  		# lecture de la def armoire
    rd_md$                  		# lecture de la def machine
	rd_tlpathgrp$      				# Lecture des éléments dans "param_read$. outils- BRUT" 
    if write_ops = 0, erreur = 1   	# Write NC Operation information MUST be enabled in CD
    !erreur
    !serreur
    if erreur <> 0, [
        result = mprint(serreur, 2)
        exitpost$
        ]
    if lire_def_machine = no$, p_force_config_pp #0123
	smcpath$ = ucase (smcpath$)
    smcname$ = ucase (smcname$)
    smcext$ = ucase(smcext$)
    snamepst$ = ucase (snamepst$)
	
	#   UTILISER LES CYCLES MACHINE ou DECOMPOSITION en G1 G0
	# ATTENTION !!!!! PRENDS LE DESSSUS SUR LA DEFINITION DE L'ARMOIRE
	usecandrill$ = yes$   	# utiliser cycle percage lamage
	usecanpeck$  = yes$   	# utiliser cycle debourrage
	usecanchip$  = yes$   	# utiliser cycle brise copeaux
	usecantap$   = yes$   	# utiliser cycle taraudage
	usecanbore1$ = yes$   	# utiliser cycle alesage a l'alesoir
	usecanbore2$ = yes$   	# utiliser cycle alesage a la barre
	usecanmisc1$ = yes$		# utiliser cycle divers 1
	usecanmisc2$ = yes$    	# utiliser cycle divers 2
	
pdebug
    err_file$ = 4
    bug2$ = 60
    fastmode$ =0    #1 = Affiche les erreurs du pst dans un fichier .err

psynclath$      #Read NCI Axis-Combination (950) line
	#if lire_def_machine = 1, plireaxes    # axes valeur de la def_machine
	plireaxes   #Set rotary switches by reading machine def parameters
	#Rotaxtyp = 1 sets initial matrix to top
	#Rotaxtyp = -2 sets initial matrix to front
	#rotaxtyp$ = 4 donne les valeurs XYZ par rapport au RUD utilisé QUEL QUE SOIT LE PLAN
	#                    XYZ A plat
	#                    XZY EN FACE...
	#if vmc, rotaxtyp$ = one
	#else, rotaxtyp$ = -2

p_force_config_pp
    #REGLAGE ARCS
    # The following three initializations are used for full arc and helix arc output when the CD
    # is set to output R or signed R for arcs
	# 1 = CC(Centre du Cercle, valeurs en ABSOLU) ou 5 = CR(Rayon du Cercle)
    arctype$     	= 1    #Arc center type XY plane 1=abs(IJ), 2=St-Ctr, 3=Ctr-St, 4=unsigned inc., 5=rayon, 6=rayon non signé
    arctypexz$   	= 1    #Arc center type XZ plane 1=abs(IJ), 2=St-Ctr, 3=Ctr-St, 4=unsigned inc., 5=rayon, 6=rayon non signé
    arctypeyz$   	= 1    #Arc center type YZ plane 1=abs(IJ), 2=St-Ctr, 3=Ctr-St, 4=unsigned inc., 5=rayon, 6=rayon non signé

    breakarcs$  	= 1    # Break arcs, 0 = no, 1 = quadrants, 2 = 180deg. max arcs
    do_full_arc$ 	= 0    # Allow full circle output? 0=no, 1=yes; 1 POUR LE FILETAGE A LA FRAISE (SUR 360DEG)
    helix_arc$   	= 1    # Support helix arc output, 0=no, 1=all planes, 2=XY plane only
    arccheck$       = 1
    #Blocs
    seqmax$        	= 99999
    omitseq$       	= no$    # no$ = forcer la numerotation des blocs de 10 en 10	yes$ = pas de numérotation
#endregion

#region lubrifications
sav_coolant  	: 0 # Coolant saved
sav_coolant_on 	: 0 # XCoolant saved
# --------------------------------------------------------------------------
#0040 Coolant output code selection for X style coolant
# Note: To enable X style coolant, click on the General Machine Parameters icon
#   in the Machine Definition Manager, Coolant tab, disable first check box
#   Output of X style coolant commands in this post is controlled by pcan, pcan1, & pcan2
scool50    : "M8 ; BUSE ON"                		#Coolant 1 on value
scool51    : "M8-9"                				#Coolant 1 off value
scool52    : "M56 ; AIR ON"                		#Coolant 2 on value
scool53    : "M56-9"                 			#Coolant 2 off value
scool54    : "M7 ; ARROSAGE AU CENTRE ON"    	#Coolant 3 on value
scool55    : "M7-9"   							#Coolant 3 off value
scool56    : "M8(Coolant4=ON)"    				#Coolant 4 on value
scool57    : "M9"   							#Coolant 4 off value
scool58    : "M8(Coolant5=ON)"    				#Coolant 5 on value
scool59    : "M9"   							#Coolant 5 off value
scool60    : "M8(Coolant6=ON)"    				#Coolant 6 on value
scool61    : "M9"   							#Coolant 6 off value
scool62    : "M8(Coolant7=ON)"    				#Coolant 7 on value
scool63    : "M9(Coolant7=OFF)"   				#Coolant 7 off value
scool64    : "M8(Coolant8=ON)"    				#Coolant 8 on value
scool65    : "M9(Coolant8=OFF)"   				#Coolant 8 off value
scool66    : "M8(Coolant9=ON)"    				#Coolant 9 on value
scool67    : "M9(Coolant9=OFF)"   				#Coolant 9 off value
scool68    : "M8(Coolant10=ON)"   				#Coolant 10 on value
scool69    : "M9(Coolant10=OFF)"  				#Coolant 10 off value
scoolantx : ""                    				#Target for string

fstrsel scool50 coolantx scoolantx 20 -1

#X coolant has the option - First coolant off command shuts off ALL coolant options
sall_cool_off  : "M09" #Coolant off command output with all_cool_off
# --------------------------------------------------------------------------
#0040 Define coolant binary value for X style coolant
flktbl  2       20      #Lookup table definition - table no. - no. entries
        1       50      #Coolant 1 on value
        2       51      #Coolant 1 off value
        4       52      #Coolant 2 on value
        8       53      #Coolant 2 off value
        16      54      #Coolant 3 on value
        32      55      #Coolant 3 off value
        64      56      #Coolant 4 on value
        128     57      #Coolant 4 off value
        256     58      #Coolant 5 on value
        512     59      #Coolant 5 off value
        1024    60      #Coolant 6 on value
        2048    61      #Coolant 6 off value
        4096    62      #Coolant 7 on value
        8192    63      #Coolant 7 off value
        16384   64      #Coolant 8 on value
        32768   65      #Coolant 8 off value
        65536   66      #Coolant 9 on value
        131072  67      #Coolant 9 off value
        262144  68      #Coolant 10 on value
        524288  69      #Coolant 10 off value

#Lubrification Classique et VX
p_lubrif_ON
    lubrif = coolant$
    if v9_coolant & tool_op$ <> 114, 	[
        if lubrif > 0,	[
            #if old_lubrif = 0, "M8"
            if lubrif = 1 & old_lubrif <> 1, coolantx = 0, scoolantx
			if lubrif = 2 & old_lubrif <> 2, coolantx = 2, scoolantx
            if lubrif = 3 & old_lubrif <> 3, coolantx = 4, scoolantx
			old_lubrif = lubrif
            ]
        else, if old_lubrif = -1, scool50, lubrif = 1, old_lubrif = 1  #FORCE M08 si pas de lubrif d'actif
        ]  
	if v9_coolant = 0, pcan1_cool #X style coolant

pinsp_cool_on   # LUBRIFICATION APRES l' "INSPECTION OUTIL"
      coolant_on = sav_coolant_on
      if v9_coolant, [coolant$ = sav_coolant], e$
      if coolant_on,
        [
        local_int = zero
        coolantx = zero
        while local_int < 20 & coolant_on > 0,
          [
          coolantx = and(2^local_int, coolant_on)
          local_int = local_int + one
          if coolantx > zero,
            [
            coolantx = local_int - one
            p_bloc_O, n$, *scoolantx, e$ #X style coolant on after tool inspection
            ]
          coolantx = zero
          ]
        ]
	
p_lubrif_OFF
    #if lubrif_complex_on = 1 | tool_op$ = 114, p_lubrif_OFF_VX   # on arrete tout les arrosages
    if v9_coolant & tool_op$ <> 114,     [
		if old_lubrif = 1, coolantx = 1, n$, scoolantx, e$
        if old_lubrif = 2, coolantx = 3, n$, scoolantx, e$
		if old_lubrif = 3, coolantx = 5, n$, scoolantx, e$
        old_lubrif = 0
        ]
	if v9_coolant = 0, pcool_off

pcool_off  #All Coolant off
      sav_coolant = coolant$ #Save V9 coolant
      sav_coolant_on = coolant_on #Save X coolant
      coolant$ = zero
#      if nextop$ = 1003, #Uncomment this line to leave coolant on until eof unless
        [                 #  explicitely turned off through a canned text edit
        if all_cool_off, [
          #all coolant off with a single off code here
          if coolant_on, p_bloc_O, n$, sall_cool_off, e$
          coolant_on = zero
          ]
        else, [
          local_int = zero
          coolantx = zero
          while local_int < 20 & coolant_on > 0, [
            coolantx = and(2^local_int, coolant_on)
            local_int = local_int + one
            if coolantx > zero, [
              coolantx = local_int
              p_bloc_O, n$, scoolantx, e$
              ]
            coolantx = zero
            ]
          coolant_on = zero
          ]
        ]
#endregion

#region Motion output components
# --------------------------------------------------------------------------
# Motion output components
# --------------------------------------------------------------------------
bloc_O         : 0     	#Block delete active

p_bloc_O            	#Canned text - bloc OPTIONNEL
      if bloc_O, '/'

p_f_bloc_O           	#Force - le bloc OPTIONNEL
      "/"
#endregion

#region Textes_et_arrosages
#Define Constants
m_one        = -1
zero         = 0
one          = 1
two          = 2
three        = 3
four         = 4
five         = 5
c9k          = 9999

#Coolant variables for X style coolant
cant_pos     : 0     #Read from current canned text (cant_pos1 - cant_pos20)
coolant_bin  : 0     #Binary value for current coolant command
coolant_on   : 0     #Binary value holding the sum of all coolants currently on
coolantx     : 0     #Selector variable for coolant string selector
local_int    : 0     #Local variable for output of coolant off commands
result2      : 0     #Return value for functions
suppress     : 0     #Flag used to suppress redundant coolant on commands
all_cool_off : 0     #SET_BY_MD - First coolant off command shuts off ALL coolant options
v9_coolant   : 0     #SET_BY_MD - Use V9 coolant options - read from General Machine Parameters

# --------------------------------------------------------------------------
#String and string selector definitions for NC output
# --------------------------------------------------------------------------
#Address string definitions
strm         : "M"
strn         : "N"
stro         : "O"
strp         : "P"
srad         : "R"
srminus      : "R-"
sblank       : ""

#Cantext string definitions (spaces must be padded here)
sm00         : "STOP M0"
sm01         : "M01"	
strtextno    : ""
strcantext   : ""

# GESTION DES TEXTES OPTIONNELS
s_texte_0	 : ""
s_texte_1    : "M0" 					#N° 1                 		
s_texte_2    : "M1" 					#N° 2                 				
s_texte_3    : "; BLOC OPTIONNEL ON"                		
s_texte_4    : "; BLOC OPTIONNEL OFF"                 				
s_texte_5    : "; REPRISE"  
s_texte_6    : "; ZONE 1"                		
s_texte_7    : "; ZONE 2"                				
s_texte_8    : "; EBAUCHE"                		
s_texte_9    : "; FINITION"                 				
s_texte_10   : "; AJOUTER LES BRIDEs"
s_texte_11   : "; ENLEVER LES BRIDEs" 	#N° 11            				 	
s_liste_textes : ""                    				

fstrsel s_texte_0 liste_textes s_liste_textes 11 -1

#s_texte_12   : "BLOC OPTIONNEL ON"		#N° 1101  
#s_texte_13   : "BLOC OPTIONNEL OFF"	#N° 1102                  				
#s_texte_14   : "REPRISE"                		
#s_texte_15   : "BLOC OPTIONNEL OFF"                 				
#s_texte_16   : "REPRISE"  
#s_texte_17   : "ZONE 1"                		
#s_texte_18   : "ZONE 2"                				
#s_texte_19   : "EBAUCHE"                		
#s_texte_20   : "FINITION"				#N° 1109
#s_texte_20   : "FINITION"				#N° 1110 ... 1119   

# --------------------------------------------------------------------------
# Insertion des Textes / ARROSAGES
# --------------------------------------------------------------------------
pcan            #Insertion des Textes - LIGNE D'AVANT 
      strcantext = sblank
      if cant_no$ > zero,
        [
        if Mode_reglage_PP = 1, "PCAN : ", *cant_no$, e$
		if cant_pos1$ = zero | cant_pos1$ = three, pcant_1
        if cant_pos2$ = zero | cant_pos2$ = three, pcant_2
        if cant_pos3$ = zero | cant_pos3$ = three, pcant_3
        if cant_pos4$ = zero | cant_pos4$ = three, pcant_4
        if cant_pos5$ = zero | cant_pos5$ = three, pcant_5
        if cant_pos6$ = zero | cant_pos6$ = three, pcant_6
        if cant_pos7$ = zero | cant_pos7$ = three, pcant_7
        if cant_pos8$ = zero | cant_pos8$ = three, pcant_8
        if cant_pos9$ = zero | cant_pos9$ = three, pcant_9
        if cant_pos10$ = zero | cant_pos10$ = three, pcant_10
        if cant_pos11$ = zero | cant_pos11$ = three, pcant_11
        if cant_pos12$ = zero | cant_pos12$ = three, pcant_12
        if cant_pos13$ = zero | cant_pos13$ = three, pcant_13
        if cant_pos14$ = zero | cant_pos14$ = three, pcant_14
        if cant_pos15$ = zero | cant_pos15$ = three, pcant_15
        if cant_pos16$ = zero | cant_pos16$ = three, pcant_16
        if cant_pos17$ = zero | cant_pos17$ = three, pcant_17
        if cant_pos18$ = zero | cant_pos18$ = three, pcant_18
        if cant_pos19$ = zero | cant_pos19$ = three, pcant_19
        if cant_pos20$ = zero | cant_pos20$ = three, pcant_20
		if strcantext <> sblank, p_bloc_O, n$, strcantext, e$
        strcantext = sblank
        ]

pcan1           #Insertion des Textes - AVEC LA LIGNE 
      strcantext = sblank
      if cant_no$ > zero,
        [
        if Mode_reglage_PP = 1, "PCAN1 1: " *cant_no$, ": ",
		if cant_pos1$  = one, pcant_1
        if cant_pos2$  = one, pcant_2
        if cant_pos3$  = one, pcant_3
        if cant_pos4$  = one, pcant_4
        if cant_pos5$  = one, pcant_5
        if cant_pos6$  = one, pcant_6
        if cant_pos7$  = one, pcant_7
        if cant_pos8$  = one, pcant_8
        if cant_pos9$  = one, pcant_9
        if cant_pos10$ = one, pcant_10
        if cant_pos11$ = one, pcant_11
        if cant_pos12$ = one, pcant_12
        if cant_pos13$ = one, pcant_13
        if cant_pos14$ = one, pcant_14
        if cant_pos15$ = one, pcant_15
        if cant_pos16$ = one, pcant_16
        if cant_pos17$ = one, pcant_17
        if cant_pos18$ = one, pcant_18
        if cant_pos19$ = one, pcant_19
        if cant_pos20$ = one, pcant_20
		]
	  if cstop$, strcantext = strcantext + sm00
      if cgstop$, strcantext = strcantext + sm01
      #Output of strcantext occurs at the end of the output line

pcan1_cool      #Insertion des Textes AVEC l'ARROSAGE - ***SUR LA LIGNE***
	  if cant_no$ > zero,
        [
        if Mode_reglage_PP = 1, "pcan1_cool : ", *cant_no$, "--", *cantext$, *tool_op$,    
		if cant_pos1$  = four, pcant_1
        if cant_pos2$  = four, pcant_2
        if cant_pos3$  = four, pcant_3
        if cant_pos4$  = four, pcant_4
        if cant_pos5$  = four, pcant_5
        if cant_pos6$  = four, pcant_6
        if cant_pos7$  = four, pcant_7
        if cant_pos8$  = four, pcant_8
        if cant_pos9$  = four, pcant_9
        if cant_pos10$ = four, pcant_10
        if cant_pos11$ = four, pcant_11
        if cant_pos12$ = four, pcant_12
        if cant_pos13$ = four, pcant_13
        if cant_pos14$ = four, pcant_14
        if cant_pos15$ = four, pcant_15
        if cant_pos16$ = four, pcant_16
        if cant_pos17$ = four, pcant_17
        if cant_pos18$ = four, pcant_18
        if cant_pos19$ = four, pcant_19
        if cant_pos20$ = four, pcant_20
        ]
		
pcan2           #Insertion des Textes - APRES LA LIGNE
      strcantext = sblank
      if cant_no$ > zero,
        [
        if cant_pos1$ = two | cant_pos1$ = five, pcant_1
        if cant_pos2$ = two | cant_pos2$ = five, pcant_2
        if cant_pos3$ = two | cant_pos3$ = five, pcant_3
        if cant_pos4$ = two | cant_pos4$ = five, pcant_4
        if cant_pos5$ = two | cant_pos5$ = five, pcant_5
        if cant_pos6$ = two | cant_pos6$ = five, pcant_6
        if cant_pos7$ = two | cant_pos7$ = five, pcant_7
        if cant_pos8$ = two | cant_pos8$ = five, pcant_8
        if cant_pos9$ = two | cant_pos9$ = five, pcant_9
        if cant_pos10$ = two | cant_pos10$ = five, pcant_10
        if cant_pos11$ = two | cant_pos11$ = five, pcant_11
        if cant_pos12$ = two | cant_pos12$ = five, pcant_12
        if cant_pos13$ = two | cant_pos13$ = five, pcant_13
        if cant_pos14$ = two | cant_pos14$ = five, pcant_14
        if cant_pos15$ = two | cant_pos15$ = five, pcant_15
        if cant_pos16$ = two | cant_pos16$ = five, pcant_16
        if cant_pos17$ = two | cant_pos17$ = five, pcant_17
        if cant_pos18$ = two | cant_pos18$ = five, pcant_18
        if cant_pos19$ = two | cant_pos19$ = five, pcant_19
        if cant_pos20$ = two | cant_pos20$ = five, pcant_20
		if Mode_reglage_PP = 1, "pcan2 ", *cant_no$, e$
        if strcantext <> sblank, p_bloc_O, n$, strcantext, e$
        strcantext = sblank
        ]

pcant_1         #Insertion du Texte
      cant_pos = cant_pos1$
      cantext$ = cant_val1$
      pcant_out

pcant_2         #Insertion du Texte
      cant_pos = cant_pos2$
      cantext$ = cant_val2$
      pcant_out

pcant_3         #Insertion du Texte
      cant_pos = cant_pos3$
      cantext$ = cant_val3$
      pcant_out

pcant_4         #Insertion du Texte
      cant_pos = cant_pos4$
      cantext$ = cant_val4$
      pcant_out

pcant_5         #Insertion du Texte
      cant_pos = cant_pos5$
      cantext$ = cant_val5$
      pcant_out

pcant_6         #Insertion du Texte
      cant_pos = cant_pos6$
      cantext$ = cant_val6$
      pcant_out

pcant_7         #Insertion du Texte
      cant_pos = cant_pos7$
      cantext$ = cant_val7$
      pcant_out

pcant_8         #Insertion du Texte
      cant_pos = cant_pos8$
      cantext$ = cant_val8$
      pcant_out

pcant_9         #Insertion du Texte
      cant_pos = cant_pos9$
      cantext$ = cant_val9$
      pcant_out

pcant_10        #Insertion du Texte
      cant_pos = cant_pos10$
      cantext$ = cant_val10$
      pcant_out

pcant_11        #Insertion du Texte
      cant_pos = cant_pos11$
      cantext$ = cant_val11$
      pcant_out

pcant_12        #Insertion du Texte
      cant_pos = cant_pos12$
      cantext$ = cant_val12$
      pcant_out

pcant_13        #Insertion du Texte
      cant_pos = cant_pos13$
      cantext$ = cant_val13$
      pcant_out

pcant_14        #Insertion du Texte
      cant_pos = cant_pos14$
      cantext$ = cant_val14$
      pcant_out

pcant_15        #Insertion du Texte
      cant_pos = cant_pos15$
      cantext$ = cant_val15$
      pcant_out

pcant_16        #Insertion du Texte
      cant_pos = cant_pos16$
      cantext$ = cant_val16$
      pcant_out

pcant_17        #Insertion du Texte
      cant_pos = cant_pos17$
      cantext$ = cant_val17$
      pcant_out

pcant_18        #Insertion du Texte
      cant_pos = cant_pos18$
      cantext$ = cant_val18$
      pcant_out

pcant_19        #Insertion du Texte
      cant_pos = cant_pos19$
      cantext$ = cant_val19$
      pcant_out

pcant_20        #Insertion du Texte
      cant_pos = cant_pos20$
      cantext$ = cant_val20$
      pcant_out

pcant_out       #Canned text - build the string for output
	#Assign string select type outputs
	if Mode_reglage_PP = 1, "cantext 1 : ", *cantext$, " : ", *cant_pos, e$
	if cant_pos < three, #cant_pos indicates canned text output
        [
        if cantext$ = three, bloc_O = one
        if cantext$ = four, bloc_O = zero
        #Build the cantext string
        if cantext$ = one, strcantext = strcantext + sm00
        if cantext$ = two, strcantext = strcantext + sm01
        if cantext$ > four, [								#-----------LISTE DE TEXTES 
		  strtextno = no2str(cantext$)	  
          #strcantext = strcantext + strm + strtextno 	 
		  liste_textes = cantext$ #strtextno	  
		  strcantext = s_liste_textes #LISTE DE TEXTES
		  #strcantext
		  #*cant_pos, "XXXX",
		  if cant_pos = 1, s_liste_textes										#AVEC
		  if cant_pos = 0 | cant_pos = 2, n$, s_liste_textes, s_com_close, e$	#AVANT et APRES
          ]
        ]
	else, #cant_pos indicates coolant output --> ARROSAGES SI cant_pos > 2
        [
		#"ici1 ", e$
		coolant_bin = flook (two, cantext$) #Create binary value for each coolant using lookup table
        if frac(cantext$/two),  # ARROSAGES **OFF** 
			[
			if all_cool_off, [
				#"ici_2", e$
				if coolant_on, p_bloc_O, n$, sall_cool_off, e$
				coolant_on = zero
				]
			else, [
				#"ici3 ", e$
				if coolant_on > 0, [
					  #"ici4 ", e$
					  coolant_on = coolant_on - coolant_bin/2 #Odd = off command, subtract appropriate binary value.
					  coolantx = cantext$ - 50                #Create a coolantx value for string select
					  p_bloc_O, n$, *scoolantx, e$
					  ]
				]
			]
		else, [                    # ARROSAGES **ON**         #Even = on command
			#Determine if this coolant is already on
			local_int = zero
			coolantx = zero
			suppress = zero
			while local_int < 20 & coolant_on > 0, [
				result2 = and(2^local_int, coolant_on)
				local_int = local_int + one
				if result2 = coolant_bin, suppress = one
				]
			if suppress <> 1, [ #Don't output an on code for a coolant that is already on
				if Mode_reglage_PP = 1, "cantext 2: ", *cantext$, e$
				#"ici4 ", e$
				coolant_on = coolant_on + coolant_bin 	#Maintain binary sum of all coolants currently on
				coolantx = cantext$ - 50              	#Create a coolantx value for string select
				if cant_pos = four, *scoolantx        	#Coolant "AVEC"
				else, p_bloc_O, n$, *scoolantx, e$  	#Coolant "AVANT" ou "APRES"
				]
			]
		]

#endregion

#region valeurs_suivant_NCI
fprmtbl   1    4
    10010	surepxy
    10068	surepz
	12665	surep_OP3D_XY 	
	12666	surep_OP3D_Z 	 

fprmtbl   2    1          # lecture des parametres de surep pour surfacage
	12068  	surepz       	# surep en Z

fprmtbl 19000   2    #Table Number, Size
    19133   stock_shape     #0=RECTANG. 1=CYLIND. 2=SOLIDE 3=FICHIER STL
    19135   stock_cyl_axis  #Stock cylinder axis 0=X,1=Y,2=Z
#endregion

#region Temps
p_Transf_hr_min_sec # Convert minutes to hr/min/sec format
	Time_hrs = int ( Tot_time_op / 60 )
	Time_min = int ( Tot_time_op - Time_hrs * 60 )
	Time_sec = ( Tot_time_op - Time_hrs * 60 - Time_min ) * 60

p_tool_time   # Total tool times and call conversion routine
	Tot_time_op = Feed_time + Rapide_time
	Tot_time_op = Tot_time_op * time_factor / 100
	p_Transf_hr_min_sec
	total_part_time = Tot_time_op + total_part_time + tlchg_time
	p_time_total

p_time_total
	time_OPs = Tot_time_op + time_total
	time_total = time_total + time_OPs
	if Mode_reglage_PP = 1, "	VOIR times:", *Tot_time_op, *time_total, *time_OPs, e$ 
	
p_calc_long_time      # Distance calculations
   	tlrad$ = 0
	if temps_4_axes = 1, [
		if Mode_reglage_PP = 2, "	Voir temps 4 axes DEG:", e$
		if deg_4_axes <> 0, [	# AVEC ROTATIONS/DEGAGEMENTS XYZ HOME ...
			gcode$ = 0
			if degageX = -1, x$ = xh$, else, x$ = degageX 
			if degageY = -1, y$ = yh$, else, y$ = degageY
			if degageZ = -1, z$ = zh$, else, z$ = degageZ
			Delta_X = x$ - old_x
			Delta_Y = y$ - old_y
			Delta_Z = z$ - old_z
			]
		]
	if temps_4_axes = 2, [
		if Mode_reglage_PP = 2, "	Voir 4 axes USI:", e$
		temps_4_axes = 0
		]
	if temps_4_axes = 0, [	# SANS ROTATIONS/DEGAGEMENTS XYZ HOME ... 		
		Delta_X = x$ - old_x
		Delta_Y = y$ - old_y
		Delta_Z = z$ - old_z
		]
   	if gcode$ = 0 | gcode$ = 1, [   
	   Long = sqrt ( Delta_X^2 + Delta_Y^2 + Delta_Z^2 )
	   if sgcode = sg00, ptime_R
	   if sgcode = sg01, ptime_L
	   ]
	if gcode$ = 2 | gcode$ = 3, [
		ptime_C 
		Long = perimetre
		ptime_L
		]
	if Mode_reglage_PP = 2, [
		"	VOIR old XYZ ", *old_x, *old_y, *old_z, e$
		"	VOIR:", *Delta_X, *Delta_Y, *Delta_Z, *Long, "mm", e$
		"	VOIR_cumul_long_feed:", *long_feed, "DELTA : ", *long, "mm", e$
		"	VOIR_cumul_time_feed:", *Feed_time, "DELTA : ", e$
		"	VOIR_cumul_long_rapide:", *long_rapide, "DELTA : ", e$
		"	VOIR_cumul_time_rapide:", *Rapide_time, "DELTA : ",  "val rapide CN :", *fr_rapid_mach, e$
		]
   	
ptime_L     # Feed time and length calc
    avance_t = fr_pos$
    if avance_t < tol, avance_t = tol
    if opcode$ = 3 & drillcyc$ = 3, pfrtap
    long_feed = long_feed + Long
    Feed_time = Feed_time + Long / avance_t
 
ptime_R     # Rapid time and length calc
	long_rapide = long_rapide + Long
	Rapide_time = long_rapide / fr_rapid_mach
	
ptime_C		#calcul du périmètre
	if (x$ <> old_x)  & (y$ <> old_y), [
		perimetre = ((2*pi$*arcrad$)/360) * sweep$ * -1 
		if Mode_reglage_PP = 2, "	VOIR1: ", *perimetre, "ANGLE: ", *sweep$, e$
		]
	else, [
		if breakarcs$ = 0, division = 0
		if breakarcs$ = 1, division = 4
		if breakarcs$ = 2, division = 2
		perimetre = (2*pi$*arcrad$) / division	# OK contour à 360°
		if Mode_reglage_PP = 2, "	VOIR_10: ", *perimetre, e$
		] 
	
pfrtap
	if tldia$ = 2, pas_time = 0.4  
	if tldia$ = 2.5, pas_time = 0.45
	if tldia$ = 3, pas_time = 0.5
	if tldia$ = 4, pas_time = 0.7
	if tldia$ = 5, pas_time = 0.8
	if tldia$ = 6, pas_time = 1
	if tldia$ = 8, pas_time = 1.25
	if tldia$ = 10, pas_time = 1.5
	if tldia$ = 12, pas_time = 1.75
	if tldia$ = 14, pas_time = 2
	if tldia$ = 16, pas_time = 2
	if n_tap_thds$ <> 0, pas_time = n_tap_thds$
	avance_t = (abs(ss$) * pas_time)
	#plunge = (abs(ss$) * pas_time)
#endregion

#region pmachineinfo_ lecture des parametres de def armoire et def machine
# Machine Definition Parameters
fprmtbl 17000   11   #13 Table Number, Size
#   Param   Variable to load value into
	17391   axis_label   #Axis label - 1=X,2=Y,3=Z	
    17397   srot_label   #Rotary Axis label (Generally A, B or C) - Not yet available.
	17401   rot_zero     #Rotary zero degree position	
	17402   rot_dir      #Rotary direction
	17408   rot_index    #Index or continuous
    17409   rot_angle    #Index step
    17410   rot_type     #M3/M4 Rotary type	
    17605   min_speed    #50 tr/min Minimum spindle speed	
    #17066   maxfrinv_m  #Maximum feedrate - inverse time - metric - Minimum value from MD as this is inverse time
    #17992   maxfrdeg     #Maximum feedrate deg/min
	17063   maxfeedpm_m  #Limit for feed in mm/min
    17101   all_cool_off #First coolant off command shuts off ALL coolant options
    17102   v9_coolant   #Use V9 coolant option

fprmtbl 18000   2           # Lecture des Param de def armoire
    18171   write_ops       # Autoriser l'ecriture de l'information CN d'operation
    18458   texte           # Nombre de caracteres pour les commentaires
    #18713   sous_prog_type  # type de merge des sous prog (0 apres prog principal 1 avant)
    #18705   cor_arc         # compensation sur les arcs autorisee

pmachineinfo$    # lecture des parametres de def armoire et def machine
    #rd_md is used to call pmachineinfo postblock and read the parameters of the selected axis
    #combination machine entity set in rd_mch_ent_no
    #rd_cd is used to call pmachineinfo postblock and read the active control definition parameters
    #rd_tlpathgrp is used to call pmachineinfo postblock and read the active toolpath group parameters

    if affiche_prmcodes = 1, "-->pmachineinfo DONNEES MACHINE ", ~prmcode$, "=", sparameter$, e$        # pour afficher tous les parametres

    #if prmcode$ = 18171, *prmcode$, "ecriture ops =", sparameter$, e$
    #if prmcode$ = 18458, "nombre de caracteres de commentaire", sparameter$, e$
    #if prmcode$ = 17401, *prmcode$, "position 0", "=", sparameter$, e$         # Position angle 0 deg  +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9
    #if prmcode$ = 17398, *prmcode$, "=", sparameter$, e$                        # LABEL DE L'AXE
    #if prmcode$ = 17696, *prmcode$, "nom de la combinaison =", sparameter$, e$

    if prmcode$ = 17063, fmaxi = rpar(sparameter$, 1)               # avance maxi en G1
    if prmcode$ = 17062, fmini = rpar(sparameter$, 1)               # avance mini en G1
    if prmcode$ >= 17000 & prmcode$ < 18000, result = fprm(17000)   # Run the parameter table for Machine Definition Parameters
    if prmcode$ >= 18000 & prmcode$ < 19000, result = fprm(18000)   # Lecture de la table de parametre Control Definition
	if prmcode$ >= 19000 & prmcode$ < 19900, result = fprm(19000)   # Run the parameter table for Toolpath Group Parameters
    if prmcode$ = 17012, s_machine = sparameter$                     # Nom de la machine
    if prmcode$ = 17201, [                                   		# nom du composant
        if ucase(sparameter$) = spalette, palette = 1               # si c'est une palette, activer la gestion de palette
        ]
    if prmcode$ = 19958, [                                   		# type de composant pour voir si on a un axes rotatif
        type_composant = rpar(sparameter$, 1)
        if type_composant = 5,  [                                   # si c'est un axe rotatif  5 = axe rotatif
            #useaxe = 1									#--> oui mais pas forcément utilisé
            compt_axes_rot = compt_axes_rot + 1                     # compter le nombre d'axes rotatif
            ]
        ]
    # AXE DE ROTATION UTILISé --> la configuration machine doit Etre dEfinie correctement
	#Direction de l'axe Z - Vers Y = ROTATION AXE A / Vers X = ROTATION AXE B
      if prmcode$ = 17392 & axis_label = 3, [
        Z_dir = rpar(sparameter$, 1)  #Z axis direction - +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9
        if Z_dir <> 3 & Z_dir <> 9, #vmc = 0   #0 = Horizontal Machine, 1 = Vertical Mill
        else, #vmc = 1
        ]
	if prmcode$ = 17399,    [                                       # AXE ROTATIF - +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9
        diviseur = rpar(sparameter$, 1)
        if diviseur > 3, diviseur = diviseur - 6                    # ne garder que x y z
        ]
    if prmcode$ = 17402,    [                                       # sens de l'axe rotatif 0=trigo 1=horaire
        sens_A_B = rpar(sparameter$, 1)
        if sens_A_B = 0, sens_A_B = 1                                       # variable sens pour le post pro
        else, sens_A_B = -1
        ]
    if prmcode$ = 17598, nbr_outil = rpar(sparameter$, 1)           # nombre d'outils du changeur de la def machine
    #if prmcode$ = 17397, s_axe_rot_label = sparameter$             # NOM de l'axe rotatif (ABC)
    if prmcode$ = 17932, s_axe_rot_label = sparameter$              #17391 AXE rotatif (ABC) (NOM DE L'axe -- PAS le LABEL)
	
	if prmcode$ = 17921, fr_rapid_mach = rpar(sparameter$, 1)     # ou 17925 avance rapide de la machine     
	if prmcode$ = 17597, [
        tlchg_time = rpar(sparameter$, 1)    # temps de changement d'outil de la machine
        tlchg_time = tlchg_time / 60
        ]
		
plireaxes   # Lecture des parametres de la combinaison d'axes uniquement
    #"plireaxes", syncaxis$, e$
    if syncaxis$ <> old_syncaxis, [
        compt_axes_rot = 0
        erreur = 0
        ]
    rd_mch_ent_no$ = syncaxis$                  # pour avoir les infos de la conbinaison d'axe utilisE
    #rd_mch_ent_no$ = -2                        # forcer la lecture de toute la def machine -1 que la combinaison d'axe -2 que la base machine 0
    #rd_cd$                                     # lecture de la def armoire
    if lire_def_machine = yes$, rd_md$          # lecture de la def machine
    result = nwadrs(s_axe_rot_label, axeA)      # affectation du nom de l'axe rotatif en ABS
    #s_axe_rot_label = "I" + s_axe_rot_label    # affectation du nom de l'axe rotatif en INC
    #result = nwadrs(s_axe_rot_label, axeAi)    # affectation du nom de l'axe rotatif en INC
    p_test_machine
    old_syncaxis = syncaxis$

p_test_machine    # verif de la def machine
    #*nbr_combi, "---------", e$
    if nbr_combi > 1, erreur = 3                # le pst ne supporte q'une combinaison d'axe par programme
    if compt_axes_rot > 1, erreur = 2           # le pst ne supporte q'un axe rotatif
    #if write_ops = 0, erreur = 1               # Write NC Operation information MUST be enabled in CD
    #p_erreur

p_erreur
    !erreur
    !serreur
    if erreur <> 0, [
        if erreur = 4 & testerreur4 = 0, [
            serreur2 = serreur + no2str(increment_op_outil)
            result = mprint(serreur2, 3)
            if result = 3, serreur2 , e$, exitpost$ 	# abandonner
            if result = 4, serreur2                 	# recommencer
            if result = 5, testerreur4 = 1             	# ignorer
            ]
        if erreur <> 4, [
            result = mprint(s_erreur_nbr_axes_rot, 2)
            exitpost$
            ]
        ]

p_affiche_infos_config_armoire
    #affichage des prmcode$
    if Mode_reglage_PP = 1, [
        "***INFOS DONNEES -CONFIG DE LA MACHINE-***", e$
        "fmaxi: ", *fmaxi, e$
        "fmini: ", *fmini, e$
        "smachine: ", s_machine, e$
        "spalette: ", spalette, e$
        "type_composant ", *type_composant, e$
        "INFOS CONFIG GROUPE MACHINE : diviseur +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9: : ", *diviseur, e$
        "sens de l'axe rotatif 0=trigo 1=horaire: ", *sens_A_B, e$
        "nbr_outil: ", *nbr_outil, e$
        "s_axe_rot_label NOM: ", s_axe_rot_label, e$
        ]
#endregion

#region pparameter_ lecture parametres d'OP
pparameter$
    #rd_params is used to call pparameter postblock and read the parameters of the operation specified in rd_param_op_no
    if affiche_prmcodes = 1, "-->pparameter DONNEES OPERATIONS ", ~prmcode$, "=", ~sparameter$, e$        #0040 pour afficher tous les parametres

    #if prmcode$ = 15545, diviseur = rpar(sparameter$, 1)                        #"COMBINAISON D'AXE ROTATIF -ID:5999= A -ID:6002= B "
    #if prmcode$ = 18171, *prmcode$, "ecriture ops =", sparameter$, e$
    #if prmcode$ = 18458, "nombre de caracteres de commentaire",  sparameter$, e$
    #if prmcode$ = 19958, *prmcode$, "type de composant", "=", sparameter$, e$  # type de composant 5 = axe rotatif
    #if prmcode$ = 17399, *prmcode$, "AXE DE L'AXE ROTATIF", "=", sparameter$, e$   # AXE ROTATIF - +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9
    #if prmcode$ = 17402, *prmcode$, "sens de laxe", "=", sparameter$, e$       # sens de l'axe rotatif 0=trigo 1=horaire
    #if prmcode$ = 17401, *prmcode$, "position 0", "=", sparameter$, e$         # Position angle 0 deg  +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9
    #if prmcode$ = 17398, *prmcode$, "=", sparameter$, e$
    #if prmcode$ = 17201, *prmcode$, "nom de l'element =", sparameter$, e$
	
	if prmcode$ = 10030, avance_t = rpar(sparameter$, 1)
	if prmcode$ = 10031, fplongee = rpar(sparameter$, 1)
	if prmcode$ = 10100, _scycle = rpar(sparameter$, 1)
	#if prmcode$ = 15140, F_retract = rpar(sparameter$, 1)
    #if prmcode$ = 12718, F_G1_ugv   = rpar(sparameter$, 1)
    if prmcode$ = 12194, pas_filetage = rpar(sparameter$, 1)    #0090 "valeur du pas du filetage à la fraise"
	#if prmcode$ = 12662, fg1ugv   = rpar(sparameter$, 1)
    if prmcode$ = 15163, Val_origine_Z = rpar(sparameter$, 1)   #0079 "valeur de l'origine MC en Z"
    if prmcode$ = 15164, Val_origine_Y = rpar(sparameter$, 1)   #0079 "valeur de l'origine MC en Y"
    if prmcode$ = 15165, Val_origine_X = rpar(sparameter$, 1)   #0079 "valeur de l'origine MC en X"
	if prmcode$ = 15166, workofs_ = rpar(sparameter$, 1)    	#15166=Val origine de base 
																#15181=Val Numéro de l'origine actif
																#15333=Val départ incrément, op transformation 
																#15334=Val incrément, op transformation 
	if prmcode$ = 15346, Type_Comp_OP = rpar(sparameter$, 1)    # Type de compensation outil par OP / 0=ORDI 1=ARMOIRE 2=USURE 3=USURE inverse 4=SANS 
	if prmcode$ = 20002, smanu = sparameter$
    if prmcode$ = 20004, paramT1 = rpar(sparameter$, 16)        # lecture des parametres d'outil
    if prmcode$ = 20011, sinfo_origine = sparameter$            #0070
    if prmcode$ = 20014, snom_RUD = sparameter$                 #0080
	if prmcode$ = 20018, snomgroupe_op = ucase (sparameter$)    # Lecture du nom de groupe d'usinage   
    if prmcode$ = 40270, fmicro_remontee = rpar(sparameter$, 1) #0095

	if opcode$ <> 19, result = fprm (1)                         # Surep. pour le surfacage
    if opcode$ = 19, result = fprm (2)                          # Surep. pour 2D 3D
	
    #if Mode_reglage_PP = 1, [
        #"pparameter --> COMBINAISON D'AXE ROTATIF -ID:5999= A -ID:6002= B : ", *diviseur, e$
        #]
#endregion

#region sous_programmes
p_info_sous_prog
	Mode_reglage_PP = 1, [
		#n$,"appel sous prog en Z", e$
		n$, main_prg_no$, sub_prg_no$, sub_trns_id$, sub_chn_no$, sub_inc$, e$
		n$, "(PASSE ", sub_sec_no$, "SUR ", sub_totl_no$, ")", e$
		"Subprogram number ", sub_op_id$, e$
		"Actual operation ID", sub_grp_id$, e$
		"Transform/non-transform indicator", sub_ref_id$, e$
		"Iteration counter", sub_sec_no$, e$
		"Total number of instances", sub_totl_no$, e$
		"0=mirror, 1=rotate, 2=scale, 3=translate", sub_trnstyp$, e$
		"(mirror) - 0=X axis, 1=Y axis, 2=line", sub_trnmthd$, e$
		"(rotate) - 0=tplane, 1=tplane origin only, 2=coordinates", sub_trnmthd$, e$
		sub_trnsx$, sub_trnsy$, sub_trnsz$, sub_nxt_t$, sub_nxt_h$, sub_nxt_tid$, sub_mny_t$, e$
    	wdum3$, "----", rcc_flg$, sub_prg_no$, subout$, sub_level$, absinc$, e$
		] 
		
psub_call_s$       # appel sous prog en Z
	n$, s_com_open, "APPEL SOUS-PROGRAMME", s_com_close, e$
	n$, s_com_open, "PASSES EN Z", s_com_close, e$
	n$, s_com_open, "PASSE ", sub_sec_no$, "SUR ", sub_totl_no$, s_com_close, e$
    n$, sub_op_id$, e$

psub_st_s$    # entete sous prog en Z
    n$, s_com_open, "SOUS-PROGRAMME- PASSES EN Z", s_com_close, e$
    n$, sub_prg_no$, e$
	n$, ";", no_spc$, strtool$, e$

psub_end_s$    # fin sous prog en Z
    n$, "LBL 0", e$
    n$, ";", e$
	
#-------------------------BLOCS DE TRAITEMENT DES SOUS PROG EN TRANSFORMER ---------------------------
ptranslation    # pour usinage transformer en translation
	if sub_trnsx$ = 0 & sub_trnsy$ = 0 & sub_trnsz$ = 0,   [   # si pas de decalage
		#MEMO POINT DE DEPART XYZ
		xrp = xr$
		yrp = yr$
		zrp = zr$
		]
	else, [                         # si decalage, ecriture du G52
		memo_incremental = incremental
		incremental = 0
		n$, " ", e$
		n$, "; ACTIVATION DU CYCLE DEF 7", e$
	    if sub_trnsx$ <> 0 | sub_trnsy$ <> 0 | sub_trnsz$ <> 0, [
	        n$, "; SUIVANT VALEURS MC", e$
	        n$, "CYCL DEF 7.0 POINT ZERO", e$
	        n$, "CYCL DEF 7.1 ", sub_trnsx$, e$
	        n$, "CYCL DEF 7.2 ", sub_trnsy$, e$
	        n$, "CYCL DEF 7.3 ", sub_trnsz$, e$
			]
		n$, "L", *xrp, *yrp, *zrp, *sgcode, e$ #*sinc_abs,		
		#n$, "(FAIRE UN DECALGE G52)", e
		#n$, sinc_abs, "G52", *sub_trnsx$, *sub_trnsy$, *sub_trnsz$, e$   # ecriture des valeur de decalage d'origine
		decalage = 1                            # memo de mise en place de decalage pour l'annuler
		incremental= memo_incremental
		#n$, sinc_abs, e$
		]

psub_mirror     #Mirror start code, user
	n$, "CALL LBL 888 ; ANNUL. ROT", e$
	n$, " ", e$
	n$, "CYCL DEF 8.0 IMAGE MIROIR", e$	
	n$, "CYCL DEF 8.1",  	#"CYCL DEF 8.1 X Y U V W A B C 
		if sub_trnmthd$ = 0, "X", e$
		if sub_trnmthd$ = 1, "Y", e$
		if sub_trnmthd$ = 2, "X Y", e$ 
	
psub_rotate     #Rotate start code, user
	Rot_ABS_SP = atan2(sub_m2$, sub_m1$)
	if sub_sec_no$, [
		Rot_INC_SP = prv_Rot_ABS_SP - Rot_ABS_SP
		while Rot_INC_SP > 180, Rot_INC_SP = Rot_INC_SP- 360
		while Rot_INC_SP < -180, Rot_INC_SP = Rot_INC_SP + 360
		#if rot_ccw_pos = one, Rot_INC_SP = - Rot_INC_SP
		!Rot_ABS_SP
		absinc$ = zero
		]
	else, [
	    !Rot_ABS_SP
	    ]	 
	n$, "CALL LBL 888 ; ANNUL. ROT", e$
	n$, " ", e$
	n$, "CYCL DEF 10.0 ROTATION", e$
	if sub_trnmthd$ = 2, n$, "CYCL DEF 10.1 ROT ", *Rot_ABS_SP, e$	
	n$, "L", *xrp, *yrp, *zrp, *sgcode, e$ #*sinc_abs,	

p_type_sous_prog
	n$, s_com_open, "APPEL SOUS-PROGRAMME ", s_com_close, e$
	if sub_trnstyp$ = 0, n$, s_com_open, "TRANSFORMATION PAR MIRROIR ", s_com_close, e$
	if sub_trnstyp$ = 1, n$, s_com_open, "TRANSFORMATION PAR ROTATION ", s_com_close, e$
	if sub_trnstyp$ = 2, n$, s_com_open, "TRANSFORMATION PAR ECHELLE ", s_com_close, e$
	if sub_trnstyp$ = 3, n$, s_com_open, "TRANSFORMATION PAR TRANSLATION ", s_com_close, e$

psub_call_mm$     # appel sous prog en transformation pour outils multiples
	p_info_sous_prog
	#"appel sous prog en transformation pour outils multiples", e$
	!main_prg_no$                    				# mise a jour du numero interne de sous prog en transformation pour outils multiples
	subprognum = debsousprog + main_prg_no$ +100   	# affectation du numero de sous-programme
	if sub_trnstyp$ = 3, ptranslation       		# si on fait de la translation aller avant dans bloc ecriture decalage origine
	if sub_trnstyp$ = 0, psub_mirror
	if sub_trnstyp$ = 1, psub_rotate
	p_type_sous_prog
	n$, s_com_open, "AVEC OUTILS MULTIPLES ", s_com_close, e$
	n$, subprognum, e$       				# appel du sous prog

psub_call_m$   # appel sous prog en transformation pour outil unique
	p_info_sous_prog
	#"appel sous prog en transformation", e$
	!main_prg_no$              						# mise a jour du numero interne de sous prog en transformation pour outils multiples
	subprognum = debsousprog + main_prg_no$ +100   	# affectation du numero de sous prog
	if sub_trnstyp$ = 3, ptranslation  			# si on fait de la translation aller avant dans bloc ecriture decalage orignie
	if sub_trnstyp$ = 0, psub_mirror
	if sub_trnstyp$ = 1, psub_rotate
	p_type_sous_prog
	n$, s_com_open, "AVEC UN SEUL OUTIL ", s_com_close, e$            	# affecation du parametre CN pour memo du numéro de ligne
	n$, subprognum, e$       				# appel du sous prog

psub_end_m_r$    # bloc system non explique dans doc des PST (a voir)
	n$, "; TEST - psub_end_m_r$", e$

psub_st_m$    # entete sous prog en transformation
    !main_prg_no$                   		# mise a jour du numero interne de sous prog en transformation pour outils multiples
    numsubprog = debsousprog + main_prg_no$ +100    # affectation du numero de sous prog
    nomsubprog = numsubprog                 # affectation du nom de sous prog en Z
    memo_incremental = incremental          # memorisation du mode ABS INC Actuel
    incremental = sub_inc$                  # Sous prog en incremental ou absolue
    #n$ = 10                                 # numero de ligne de sous prog
    #"%", e$
    #if incremental = 1, p_casse_modalite    # casser la modalité pour les sous prog en relatif
    #p_casse_modalite_avance                 # casser la modalité le l'avance pour les sous prog
    #omitseq$ = 1                            # pas du numero de ligne pour les sous prog
    if texte <> 0,   [                      # entete avec commentaires
        #old_spaces = spaces$
        spaces$ = 1
        if scomentsprog <> svide2, n$, *numsubprog, " ", s_com_open, scomentsprog, s_com_close, e$
        else, n$, *numsubprog, e$
        if snomprogentete <> svide2, n$, s_com_open, snomprogentete, s_com_close, e$
        if snom_entete <> svide2, n$, s_com_open, *snom_entete, s_com_close, e$
        n$, s_com_open, "SOUS-PROGRAMME PAR -TRANSFORMATION-", s_com_close, e$
		xrp = xr$
		yrp = yr$
		zrp = zr$
        ]
    else,       [               			# entete sans commentaires
        n$, *numsubprog,  e$
        ]
    n$, s_com_open, strtool$, s_com_close, e$
    #n$, *sinc_abs, e$           			# ecrire si sous prog en ABS ou INC
    gcode$ = 5              				# pour forcer l'ecriture de code G du premier bloc du sous prog
    !gcode$

psub_end_m$   # fin sous-prog en TRANSFORMATION/ROTATION ...
	n$, "LBL 0", e$
	prv_absinc$ = m_one
	#Reset update variables for subs at main level
	#Mirror or Rotate cancel, output is forced
	if (sub_trnstyp$ = zero & esub_sec_no$ > zero)
	| (sub_trnstyp$ = one & esub_sec_no$ = esub_totl_no$-one
	& sub_trnmthd$ = two),[
		subout$ = zero
		no_nc_out$ = m_one
		sav_absinc = absinc$
		#Mirror cancel
		if sub_trnstyp$ = zero,[
			absinc$ = zero
			n$, " A CREER -ANNUL SOUS PROG MIRROIR-", e$
			n$, "DEC", *sub_trnsx$, *sub_trnsy$, e$
			n$, "CYCL DEF 8.0 IMAGE MIROIR", e$	
			n$, "CYCL DEF 8.1 ",  	#"CYCL DEF 8.1 X Y U V W A B C 
				if sub_trnsx$ & sub_trnsy$ = 0, *sub_trnsx$, e$
				if sub_trnsy$ & sub_trnsx$ = 0, *sub_trnsy$, e$ 
				if sub_trnsx$ & sub_trnsy$, *sub_trnsx$, sub_trnsy$, e$
			]
		absinc$ = sav_absinc
		no_nc_out$ = zero
		]
	if sub_trnstyp$ = 1, [ #Rotate cancel
		n$, "LBL 888", e$
		n$, s_com_open, "-ANNULATION SOUS-PROG EN ROTATION-", s_com_close, e$
		n$, "CYCL DEF 10.0 ROTATION", e$
		n$, "CYCL DEF 10.1 ROT 0", e$
		n$, "LBL 0", e$
		]
	if sub_trnstyp$ = 1, [ #Rotate cancel
		n$, "LBL 887", e$
		n$, s_com_open, "-ANNULATION SOUS-PROG EN MIROIR-", s_com_close, e$
		n$, s_com_open, "-A DEFINIR-", s_com_close, e$
		n$, "CYCL DEF 8.0 IMAGE MIROIR", e$	
		n$, "CYCL DEF 8.1 ",  
		n$, "LBL 0", e$
		]
	end_sub_mny = sub_mny_t$

#psub_end_mny    #End in main level for many tools sub, user
	##Check for coming out of xform with stage tool.
	#if end_sub_mny & bldnxtool$ = one, [
	#*t$
	#end_sub_mny = zero
	#]	  
#endregion

#region decallages_origines
#0035   Gestion des décallages d'origine CYCLE DEF 7 POINT ZERO (G54 ...) ou valeur reelle (PLAN de construstion)
poriusi
    @workofs_,@oldworkofs
	if Mode_reglage_PP = 1, [
	    n$, "workofs_", *workofs_, e$
		n$, "workofs$", *workofs$, e$
	    n$, "oldworkofs", *oldworkofs, e$
		]
    if workofs_ >0 & mi4$ = 1, [
        if oldworkofs <> workofs_, [
            poriusi_annul
            n$, "; ACTIVATION DU CYCLE DEF 7", e$
            if tox4$ <> 0 | toy4$ <> 0 | toz4$ <> 0, [
                n$, "; SUIVANT VALEURS MC", e$
                n$, "CYCL DEF 7.0 POINT ZERO", e$
                n$, "CYCL DEF 7.1 ", tox4$, e$
                n$, "CYCL DEF 7.2 ", toy4$, e$
                n$, "CYCL DEF 7.3 ", toz4$, e$
                ]
            else, [
                n$, "; SUIVANT TABLEAU POINT ZERO", e$
                n$, "CYCL DEF 7.0 POINT ZERO", e$
                n$, "CYCL DEF 7.1", 35, *workofs_, e$
                ]
            ]
        oldworkofs = workofs_
        ]
		
poriusi_annul
    n$, "; ANNULATION DU CYCLE DEF 7", e$
    n$, "CYCL DEF 7.0 POINT ZERO", e$
    n$, "CYCL DEF 7.1 X+0,", e$
    n$, "CYCL DEF 7.2 Y+0,", e$
    n$, "CYCL DEF 7.3 Z+0,", e$
#endregion

#region block_form
p_block_form
	if stock_shape <> zero & stock_shape <> one, result = mprint(s_erreur_stock_shape)  #Only Rectangular and Cylindrical are supported
	if block_form & stock_shape = zero,
        [
        if stck_crnr$ = 0,  #Top - Center
          [
          stck_x_min = stck_x$ - stck_ht$/2
          stck_y_min = stck_y$ - stck_wdth$/2
          stck_z_min = stck_z$ - stck_thck$
          stck_x_max = stck_x$ + stck_ht$/2
          stck_y_max = stck_y$ + stck_wdth$/2
          stck_z_max = stck_z$
          ]

        if stck_crnr$ = 1,  #Top - Upper Left
          [
          stck_x_min = stck_x$
          stck_y_min = stck_y$ - stck_wdth$
          stck_z_min = stck_z$ - stck_thck$
          stck_x_max = stck_x$ + stck_ht$
          stck_y_max = stck_y$
          stck_z_max = stck_z$
          ]

        if stck_crnr$ = 2,  #Top - Upper Right
          [
          stck_x_min = stck_x$ - stck_ht$
          stck_y_min = stck_y$ - stck_wdth$
          stck_z_min = stck_z$ - stck_thck$
          stck_x_max = stck_x$
          stck_y_max = stck_y$
          stck_z_max = stck_z$
          ]

        if stck_crnr$ = 3,  #Top - Lower Right
          [
          stck_x_min = stck_x$ - stck_ht$
          stck_y_min = stck_y$
          stck_z_min = stck_z$ - stck_thck$
          stck_x_max = stck_x$
          stck_y_max = stck_y$ + stck_wdth$
          stck_z_max = stck_z$
          ]

        if stck_crnr$ = 4,  #Top - Lower Left
          [
          stck_x_min = stck_x$
          stck_y_min = stck_y$
          stck_z_min = stck_z$ - stck_thck$
          stck_x_max = stck_x$ + stck_ht$
          stck_y_max = stck_y$ + stck_wdth$
          stck_z_max = stck_z$
          ]

        if stck_crnr$ = 5, #Bottom - Upper Left
          [
          stck_x_min = stck_x$
          stck_y_min = stck_y$ - stck_wdth$
          stck_z_min = stck_z$
          stck_x_max = stck_x$
          stck_y_max = stck_y$
          stck_z_max = stck_z$ + stck_thck$
          ]

        if stck_crnr$ = 6,  #Bottom - Upper Right
          [
          stck_x_min = stck_x$ - stck_ht$
          stck_y_min = stck_y$ - stck_wdth$
          stck_z_min = stck_z$
          stck_x_max = stck_x$
          stck_y_max = stck_y$
          stck_z_max = stck_z$ + stck_thck$
          ]

        if stck_crnr$ = 7,  #Bottom Lower Right
          [
          stck_x_min = stck_x$ - stck_ht$
          stck_y_min = stck_y$
          stck_z_min = stck_z$
          stck_x_max = stck_x$
          stck_y_max = stck_y$
          stck_z_max = stck_z$ + stck_thck$
          ]

        if stck_crnr$ = 8,  #Bottom - Lower Left
          [
          stck_x_min = stck_x$
          stck_y_min = stck_y$
          stck_z_min = stck_z$
          stck_x_max = stck_x$ + stck_ht$
          stck_y_max = stck_y$ + stck_wdth$
          stck_z_max = stck_z$ + stck_thck$
          ]
        stck_x_min = vsub(stck_x_min, t_orgin_x$) #(add or) subtract the tool origin from the 1027 line
        stck_x_max = vsub(stck_x_max, t_orgin_x$) #(add or) subtract the tool origin from the 1027 line
        n$, "BLK FORM  0.1 Z", *stck_x_min, *stck_y_min, *stck_z_min, e$
        n$, "BLK FORM  0.2  ", *stck_x_max, *stck_y_max, *stck_z_max, e$
        ]
		
      if block_form & stock_shape = one,  # Cylinder
        [
		rot_on_x = diviseur
		if rot_on_x = zero & stock_cyl_axis = two | rot_on_x & (stock_cyl_axis = diviseur - 1),  # Cylinder about Z or cylinder about same axis as rotary centerline
          [
          # Build & output the WORKPIECE line - "WORKPIECE(,"",,"CYLINDER", par2, ztop, zbottom, -80, diameter)"
          # Absolute stock length dim in Siemens
          if stock_cyl_axis = 0,  # Stock about X-axis
            [
            topz = stck_x$ + stck_wdth$  #Define X+ end of stock
            bottomz = stck_x$            #Define X- end of stock
            stck_cyl_dia = stck_ht$      #Define stock diameter
            ]
          if stock_cyl_axis = 1,  # Stock about Y-axis
            [
            topz = stck_y$ + stck_wdth$  #Define Y+ end of stock
            bottomz = stck_y$            #Define Y- end of stock
            stck_cyl_dia = stck_ht$      #Define stock diameter
            ]
          if stock_cyl_axis = 2,  # Stock about Z-axis
            [
            topz = stck_z$ + stck_wdth$  #Define Z+ end of stock
            bottomz = stck_z$            #Define Z- end of stock
            stck_cyl_dia = stck_ht$      #Define stock diameter
            ]
          # Output WORKPIECE line using values determined above / Define the stock for graphics - Cylinder
		  stck_cyl_dia = stck_cyl_dia / 2 # Ici valeur au rayon
		  if srot_label = "A", s_axe_brut_cyl = "X"
		  if srot_label = "B", s_axe_brut_cyl = "Y" 
		  if srot_label = "C", s_axe_brut_cyl = "Z" 
          p_bloc_O, n$, "BLK FORM CYLINDER", [if rot_on_x, s_axe_brut_cyl, else, '""'], *stck_cyl_dia, *topz, *bottomz, *stck_cyl_dia_inter, e$ # Z R50 L105 DIST+5 R110 = AXE DE BROCHE, RAYON, LONGUEUR, "DIST", RAYON INTER
          ]
        else, result = mprint(s_erreur_stock_cyl_axis)  # Cylindrical stock can only be about Z for 3-axis milling, and can only be about same axis as rotary centerline for 4-axis
        ]
	if block_form & stock_shape = two, p_bloc_O, n$, "; Brut solide-Maillage utilisé dans MasterCam", e$		# Solide-Maillage
    if block_form & stock_shape = three, p_bloc_O, n$, "; Brut depuis fichier STL utilisé dans MasterCam", e$	# Stl					
#endregion

#region corps_Pheader_a_Peof

#region 4_axes

#region rotations_axes_continu
# continu -------------------------------------------------------
p_axeA_pmx
    #*old_axeA1, *axeA1
    delta_axeA1 = axeA1 - old_axeA1
    if delta_axeA1 >  180, delta_axeA1 = delta_axeA1 - 360
    if delta_axeA1 <  -180,delta_axeA1 = delta_axeA1 + 360
    axeA1_dep = axeA1_dep + delta_axeA1
    old_axeA1 = axeA1
    axeA = axeA1_dep
    old_axeA = axeA1_dep
    nbrtour = int (axeA / 360) * sens_A_B
    axeA,   #, !axeAi
    #if incremental = 0, axeA, !axeAi
    #if incremental = 1, !axeA, axeAi

pcalculpmx
    #*x$, *y$, *z$, *u$, *v$, *w$,
    vx = u$ - x$
    vy = v$ - y$
    vz = w$ - z$
    if diviseur = 1, axeA1 = atan2(vy,vz) # on tourne autour de x
    if diviseur = 2, axeA1 = atan2(vx,vz) # on tourne autour de Y
    if axeA1 >  180, axeA2 = 360 - axeA1
    if axeA1 <= 180, axeA2 = axeA1 * -1
    if diviseur = 1, [          # on tourne autour de x
        new_x = x$
        new_y = z$*sin(axeA2) + y$*cos(axeA2)
        new_z = z$*cos(axeA2) - y$*sin(axeA2)
            ]
    if diviseur = 2, [          # on tourne autour de Y
        new_x = z$*sin(axeA2) + x$*cos(axeA2)
        new_y = y$
        new_z = z$*cos(axeA2) - x$*sin(axeA2)
            ]
    xabs = new_x
    yabs = new_y
    zabs = new_z

pmx$
    if opcode$ = 16 & bloque <> 2, [	#percage 5 axes
		n$, "xxxxxxx", e$
		bloque = 2
		n$, sbloque, e$
		]
	if debutpmx = 1, p_debut_pmx
	if debutpmx = 0, [
        if Mode_reglage_PP = 2, "pmx_ : ", e$
		pcalculpmx
        @new_x, @new_y, @new_z, @old_x, @old_y, @old_z
		if m1$ <> 1 & m5$ <> 1, p_erreur_inclinaison_OP_5axes 	# TEST si mauvaise inclinaison
        if fr$ =  -2, gcode$ = 0
            else, gcode$ = 1
        if gcode$ = 1,   [
            #@new_x, @new_y, @new_z, @old_x, @old_y, @old_z
            if new_x <> old_x | new_y <> old_y, n$, sgcode, pxyz, p_axeA_pmx, pfr, e$
                else, n$, sgcode, pxyz, p_axeA_pmx, pfr, e$    
            ]
        else, n$, sgcode, pxyz, p_axeA_pmx, e$ 
        ]
    if debutpmx = 1, pmx_end$

p_debut_pmx
    #if opcode$ = 16,  "percage 5 axes", e$ 
	if debutpmx = 1, [
        if Mode_reglage_PP = 2, "p_debut_pmx : ", e$
		pcalculpmx
        bloque = 2
        n$, sbloque, e$
        gcode$ = 0
        n$, "L", *sgcode, *xabs, *yabs, p_axeA_pmx, ssa, *spdlon, e$    
        n$, "L", sgcode, *zabs, p_lubrif_ON, e$  
        old_x = xabs
        old_y = yabs
        old_z = zabs
        ]
    debutpmx = 0

pmx_end$	#FIN de chaque BLOC pmx$
	if Mode_reglage_PP = 1, "pmx_end_: ", e$
#endregion

#region mouvements pxyz et 4 axes
pxyz        # ecriture des x, y, z en abs ou incremental pour corps ISO
	xabs = x$
    yabs = y$
    zabs = z$
	pxyz_new
    #p_modal     #affectation en format modal
    !x$, !y$, !z$  # mise a jour xyz
    old_x = xabs
    old_y = yabs
    old_z = zabs
	prvz = z$    

pxyz_new 
    if rotaxis$ = 0, [    # XYZ CLASSIQUE 
        if cc$ <> old_cc & cc$ <> 140 & cc$ <> 0, *xabs, *yabs, [if zabs <> prvz, zabs] #0067  | cc$ = 140  !xinc, !yinc, !zinc
        else, x$, y$, z$ 
        ]
 
 	#POUR SUBSTITUTION "incrémental" ?	
    #if incremental = 0, xabs, yabs, axeA, zabs, !xinc, !yinc, !axeAi, !zinc
    #else, !xabs, !yabs, !axeA, !zabs, xinc, yinc, axeAi, zinc   
	
	if rotaxis$ = 2, [    # SUBSTITUTION Y par A (diviseur tourne autour de X)
        p_Apos
		yabs = 0
		xabs = x$
        xabs, [if yabs <> old_y, yabs], zdev, A_pos, !yabs, !zabs     #, !xinc, !yinc, !zinc, !A_posi, !zdevi
        axeA  = A_pos
		old_y = 0
        old_axeA  = A_pos
        nbrtour = int (axeA / 360)
        ]
    if rotaxis$ = 1, [    # SUBSTITUTION X par A (diviseur tourne autour de Y)
        p_Apos
		xabs = 0
		yabs = y$
        [if xabs <> old_x, xabs], yabs, zdev, A_pos, !xabs, !zabs     #, !xinc, !yinc, !zinc, !A_posi, !zdevi
        axeA  = A_pos
		old_x = 0
        old_axeA  = A_pos
        nbrtour = int (axeA / 360)
        ]
#endregion

#region CALCUL & AFFICHAGE EN POSITIONNE
prot0$
prot$

p_rotation_tlchg      				# affichage de l'angle au changemant d'outil
    if Mode_reglage_PP = 1, n$, "--> p_rot_ptlchg", e$
	Perreur_origine_plan    		#0079
    Perreur_nom_RUD         		#0080
    perreur_tranf_plan      		#0096
    if subout$ = 0, [       		# afficher les angles que dans le programme principal
       if useaxe <> 0, [
            @old_axeA, @axeA
            epsi = old_axeA - axeA
            epsi = abs(epsi)
			if Mode_reglage_PP = 1, n$, "--> p_rot_ptlchg", "old:", *old_axeA, "axe:", *axeA, "epsi:", *epsi, e$
            #if epsi <> 0,[
                bloque = 2
                n$, sbloque, e$
                bloque = 1
                n$, "L", *axeA, "R0", sgcode, e$   #sinc_abs, !axeAi,
                n$, sbloque, e$
                #]
            bloque = 1
            ]
        old_axeA = axeA
        ]

p_rotation_tlchg0_nul      			# affichage de l'angle au chg outil nul pour positionné
    Perreur_origine_plan    		#0079
    Perreur_nom_RUD         		#0080
    perreur_tranf_plan      		#0096
    if subout$ = 0, [           	# afficher les angles que dans le prog principal
       if useaxe <> 0, [
            @old_axeA, @axeA
            epsi = old_axeA - axeA
            epsi = abs(epsi)
            if Mode_reglage_PP = 1, n$, "--> p_rotation_tlchg0_nul", "old:", *old_axeA, "axe:", *axeA, "epsi:", *epsi, e$
            if epsi <> 0, [
                p_degage_4_axes
                bloque = 2
                n$, sbloque, e$
                bloque = 1
                #xabs = x$
                #yabs = y$
                #zabs = z$
                n$, "L", *axeA, "R0 ", sgcode, e$  #sinc_abs, poriusinul, !axeAi,
                n$, sbloque, e$
                ]
            ]
            old_axeA = axeA
        ]
#endregion

#region calculs_et_affichage_rotations_en_continu_et_substitution
p_Apos  # calcul de l'axe A/B en substitution
    @x$, @y$
    if diviseur = 1, A_pos = (y$ * 360 / (pi$ * rotdia$)) * sens_A_B  	# pour 4eme axe autour de X (substituer Y)
    if diviseur = 2, A_pos = (x$ * 360 / (pi$ * rotdia$)) * sens_A_B   	# pour 4eme axe autour de Y (substituer X)
	if rot_AB_un_sens = 1, while A_pos < 0, A_pos = A_pos +360			#0126
	p_zdev          # calcul du Z en substitution
	
p_zdev  # calcul du Z en substitution
	@z$, @rotdia$
	zabs  = z$ +(rotdia$ /2)    # Z pour continue substitutuion en ABS

p_calcul_rot_posit      # calcul rotation plateau
	@old_axeA, @nbrtour
    if diviseur = 1, axeA = atan2(m8$,m9$) + (360 * nbrtour)  # pour un diviseur tourne autour de X	
    if diviseur = 2, axeA = atan2(m7$,m9$) + (360 * nbrtour)  # pour un diviseur tourne autour de Y
    axeA = axeA * sens_A_B
    epsi = axeA - old_axeA
    sensA = 0
    if epsi > 0, sensA = 1
    if epsi < 0, sensA = -1
    epsi = abs(epsi)
    if Mode_reglage_PP = 1, n$, "--> p_calcul_rot_posit", "epsi", *epsi, "sensA", *sensA, "nbrtour", *nbrtour, e$
    @epsi, @sensA
    if epsi > 180, [
        axeA = axeA - (360 * sensA)
        epsi = axeA - old_axeA
        sensA = 0
        if epsi > 0, sensA = 1
        if epsi < 0, sensA = -1
        ]
    nbrtour = int (axeA / 360)
	if Mode_reglage_PP = 1,  "--> p_rot_calcul div:", *diviseur, "old:", *old_axeA, "axe:", *axeA, "epsi:", *epsi, "sens:", *sensA, "nbrTour:", *nbrtour, e$

p_rotation_tlchg0_nul_continu   	# affichage de l'angle au chg outil nul pour continue
    Perreur_origine_plan    		#0079
    Perreur_nom_RUD         		#0080
    perreur_tranf_plan      		#0096
    if subout$ = 0, [           	# afficher les angles que dans le prog principal
       if useaxe <> 0, [
            @old_axeA, @axeA
            epsi = old_axeA - axeA
            epsi = abs(epsi)
            if Mode_reglage_PP = 1, n$, "--> p_rotation_tlchg0_nul_continu", "old:", *old_axeA, "axe:", *axeA, "epsi:", *epsi, e$
            if epsi <> 0,    [
                p_degage_4_axes, e$
                bloque = 2
                n$, sbloque, e$
                bloque = 1
                n$, "L", *axeA, "R0", sgcode, e$   #sinc_abs, !axeAi,
                n$, sbloque, e$
                ]
            ]
        old_axeA = axeA
        ]
#endregion

#endregion 

#region Pbloc_appelEs
# Convertir les arcs en lignes si travail en developpe
plinarc	# Convertir les G2 G3 en G1
    linarc$ = 1

param
    if surepxy <> old_surepxy, n$, s_com_open, surepxy, e$ 
    if surepz <> old_surepz, n$, s_com_open, surepz, e$  
	if surep_OP3D_XY <> 0, n$, s_com_open, *surep_OP3D_XY, e$
	if surep_OP3D_Z <> 0, n$, s_com_open, *surep_OP3D_Z, e$
	old_surepxy = surepxy
	old_surepz = surepz

#---------------------------------
P_f_val_origine_depart_idem #0079
    Old_Val_origine_Z = Val_origine_Z
    Old_Val_origine_Y = Val_origine_Y
    Old_Val_origine_X = Val_origine_X
    Sold_snom_RUD = snom_RUD    #0080

#PLUS UTILISé
p_rot_perc_profond  #0100 ROT BROCHE POUR PERCAGE PROFOND
   _ssa = ss$
   ssa = ssa * 0.1
   if ssa > 500, ssa = 500
   
p_Z_mini_maxi_OP
	if output_z = 1, [
		n$, " ; MAX OUTIL ", *max_depth, e$
    	n$, " ; MIN OUTIL ", *min_depth, e$
		]	
#endregion

#region pheader
p_Type_appel_outil
	if Type_appel_outil	= 1, [
		nom_outil    		= 0    	# Affiche le NOM de l'outil
		outils_param 		= 0    	#0053 pour Valider / dévalider l'affichage des outils en parametres
		]
	if Type_appel_outil	= 2, [
		nom_outil    		= 1
		outils_param 		= 0
		]	
	if Type_appel_outil	= 3, [
		nom_outil    		= 0
		outils_param 		= 1
		]	
pheader$
    if Mode_reglage_PP = 1, [
		n$, *axis_label, *srot_label, *rot_zero, *rot_dir, *rot_index, *rot_angle, *rot_type, *min_speed, 
			*maxfrinv_m, *maxfrdeg, *maxfeedpm_m, *all_cool_off, *v9_coolant, e$
		]	
	if force_n0, # Force sequence numbering to START at '0' and increment by '1'
        [
        seqno$ = 0
        n$ = seqno$
        seqinc$ = 1
        ]
	debut = 1               # flag pour le debut de prog
	p_Type_appel_outil 
    entete_ = 1 #0024    --> on passe dans ENTETE 
    p_affiche_infos_config_armoire
    if change_nom = 1,	[
        pnom_nc
        ptest_nom
        spaces$ = 0  
        snomprogentete = ucase(snomprogentete)
        n$, " BEGIN PGM ", snomprogentete," MM", e$ 
        n$, " ; ", *snom_entete, e$    #0300  snom_entete,
        spaces$ = 1 
        ]
    else, n$, " BEGIN PGM ", sprogname$,"MM", e$
    n$, " ; *****************************", e$
    n$, " ; ", s_nom_machine_entete, e$
    n$, " ; CREE LE ", date$, " A ", time$, e$
    if entete_questions = 2, p_questions_entete     # nouvelles questions d'entête
    if entete_questions = 3, [                       #0024 ANCIEN SYSTEME questions
        q4,q1,q2,q13,q5,q6,q7   #,q8,q9
        n$," ; PAR : xxxxx ", e$
        n$," ; CLIENT  :", sclient, e$
        n$," ; PIECE   :", spiece, e$
        n$," ; NUMERO  :", snumplan, e$
        n$," ; INDICE PLAN  :", sindiceplan, e$
        n$," ; ORIGINE :", e$
        n$," ; X :", sorx, e$
        n$," ; Y :", sory, e$
        n$," ; Z :", sorz, e$
		n$," ; A_B :", sor_A_B, e$
        n$," ; ORIENTATION PIECE", e$
        n$," ;                               ", e$
        n$," ; *****************************", e$
        n$," ;                               ", e$
        ]
    else, comment$ 
    if entete_questions = 1,	[
        if entete_ = 1 & longTexte = 0,    [
            n$, "; *****************************", e$
            n$, "; *****OP POUR MODIF*****", e$       
            ]
        ]
    n$, "; *****************************", e$
    if Liste_outils, [
		n$, "; ", e$
    	n$, "; *LISTE D OUTILS*", e$
		]
    if outils_param = 1, [
        n$, "; MODIFIER LES NUMEROS D OUTILS", e$
        n$, "; UNIQUEMENT DANS LA LISTE D OUTILS APRES LE =", e$
        n$, "; NE PAS MODIFIER DANS LES -TOOL CALL- DU PROGRAMME", e$
        n$, "; ", e$
        if appel_param_outils = 1, n$, "LBL 999", e$
        ]
    entete_ = 0 
#endregion

#region prEparation outils en NOM 
# Tool Preselect variables
next_tlchg_gcode   	: 0
is_next_tlchg_phys 	: no$
sinvalid          	 = "-99999"
read_counter 		: 0     #Used as a counter in pstagetool
first_op_id  		: 0     #op_id$ for first operation
#strings
stoolname    		: ""    #Return string for functions
#sblank       		: ""
s_plus_outil 		: "-99999"
stoolname_err      	: "ERREUR - OUTIL APPELE SANS NOM." + no2asc(13) + no2asc(13) +
                       "See tool_as_name in pst to set tool call format and tool definition in operation to set tool name."
#endregion	

#region appel_outils
pstagetool      #Pre-stage tools	#0001 en plus pour afficher le NOM DE L'OUTIL SUIVANT
    if bldnxtool$ = 1, [
        if nom_outil = 1,  #Tool call uses tool name
          [  
          if ttblend$,  #If this is the last toolchange of the program
            [
            if type_prep_outil = 1,  #stage first tool at last toolchange
              [
              first_op_id = streaminfo(1, 1)             #Get the operation ID for the first operation in the sequence
              stoolname = opinfo(10094, first_op_id, 1)  #Get the tool name for the first operation
              if stoolname = sblank, stoolname = "ERROR-BLANK_NAME"
              n$, 'TOOL DEF "', no_spc$, stoolname, no_spc$, '"', e$  #Stage first tool
              ]
            ]        
		  #else,  #stage tool at every toolchange
            #[
			next_tlchg_gcode = opinfo(92, 1)
            if next_tlchg_gcode = 1002, stoolname = opinfo(10094, 1)
            else,	[
            read_counter = 1
              is_next_tlchg_phys = no$
              while is_next_tlchg_phys = no$,
              [
              read_counter = read_counter + 1
                next_tlchg_gcode = opinfo(92, read_counter)
                if next_tlchg_gcode = 1000, is_next_tlchg_phys = no$
                else,
                  [
                  stoolname = opinfo(10094, read_counter)
                  is_next_tlchg_phys = yes$
                  ]
                ]
              ]
            if stoolname = sblank, stoolname = "ERREUR-OUTIL SANS NOM"
            if stoolname <> s_plus_outil, n$, 'TOOL DEF "', no_spc$, stoolname, no_spc$, '"',  e$  #Stage first tool
            #]
          ]
        ]

p_info_outils
	strtool$ = ucase(strtool$)
	if Type_infos_outil	= 1, n$, "* - ", strtool$, e$
	if Type_infos_outil	= 2, n$, "* - ", ptype, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, s_com_close, e$ 
	if Type_infos_outil	= 3, n$, "* - ", ptype, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, s_com_close, e$ 
	if Type_infos_outil	= 4, n$, "* - ", strtool$, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, e$ 

p_affiche_outil
    if test_bris_outils = 1 & (mi6$ = 1 | mi6$ = 3), p_test_bris_outil 
	if nom_outil = 1, [
		n$, "TOOL CALL ", 34, no_spc$, strtool$, no_spc$, 34, "Z", ssa, p_DR, e$
		if rpd_typ$ <> 7, [	
			if affiche_M6, n$, "M6", e$
			if bldnxtool$ = 1, pstagetool
			]
		]
	if outils_param = 0 & nom_outil = 0, [  #0053 sans les parametres
        n$, "TOOL CALL ", t$, "Z", ssa, p_DR, e$		
        if rpd_typ$ <> 7, [	
			if affiche_M6, n$, "M6", e$
        	if bldnxtool$ = 1, n$, "TOOL DEF ", next_tool$, e$
			]
        ]
    if outils_param = 1 & nom_outil = 0, [ #0053 AVEC les parametres
        if appel_param_outils = 1, n$, "CALL LBL 999", e$
        outil_paramT2 = t$ + 1800   
        next_tool_ = next_tool$ + 1800  
        n$, "TOOL CALL", *outil_paramT2, "Z", ssa, p_DR, e$
        if rpd_typ$ <> 7, [	
			if affiche_M6, n$, "M6", e$
        	if bldnxtool$ = 1, n$, "TOOL DEF", next_tool_, e$  #0098
			]
        ]
	old_ssa = ssa        #0013
    perreur_vit_broche
	
p_DR	# Type de compensation outil par OP / 0=ORDI 1=ARMOIRE 2=USURE 3=USURE-INVERSE 4=SANS 
	if use_DR = 1, [
		#if cc_pos$ = 2  & cc_computer$ = 42, type_comp = 5  #USURE DROITE
    	#if cc_pos$ = 1  & cc_computer$ = 41, type_comp = 6  #USURE GAUCHE
    	#if cc_pos$ = 1  & cc_computer$ = 42, type_comp = 7  #USURE INVERSE DROITE
    	#if cc_pos$ = 2  & cc_computer$ = 41, type_comp = 8  #USURE INVERSE GAUCHE
		#*cc_pos$, *cc_computer$, *type_comp, 			
        if Type_Comp_OP = 2 | Type_Comp_OP = 3, [
			DR = 0
			DR = tldia$/-2
        	*DR
        	old_DR = DR
			]
         ]
#endregion

#region psof_debut
psof0$
    psof$

p_compteur_opErations
	if compteur_opErations = 1, [
		if op_id$ <> old_op_id,	[
	        num_op_outil = 1
	        comment$
			increment_op = increment_op + 1
	        if num_op_outil = 1, n$, "* - OP.: ", *increment_op_outil, *increment_op, no_spc$, *nbr_opErations, e$, num_op_outil = 0
	        increment_op_outil = increment_op_outil + 1
	        ]
		]

psof$
    p_restriction_PP
    P_f_val_origine_depart_idem #0079
    perreur_pas_fil  #0090
    p_erreur_dif_T_H_D #0097
    #increment_op_outil = increment_op_outil + 1 #0043
    if rotation_axe = 2, result = mprint(serreur2)
    if Mode_reglage_PP = 1, [
         "************A:", *rotation_A, " B:", *rotation_B, " rotation gEnErale", *rotation_axe, " div:" *diviseur, e$
        " syncax", *syncaxis$, " old_sync", *old_syncaxis, " nbr_combi", *nbr_combi, " compt_axes_rot", *compt_axes_rot, e$
        " M1", *m1$, " M5", *m5$, " M9", *m9$, e$
		]
    if lire_def_machine = no$, [                                    # affecter les valeurs suivant inclinaisons du programme
        if rotation_A = 1, [
            if diviseur = 2, p_erreur_choix_axe
            diviseur = 1, useaxe = 1
            ]
        if rotation_B = 1, [
            if diviseur = 1, p_erreur_choix_axe
            diviseur = 2, useaxe = 1
            result = nwadrs(s_axe_rot_B, axeA)
            ]
        if rotation_A <> 1 & rotation_B <> 1 & rotation_axe < 1, useaxe = 0
        ]
    #0085
    ptravel
    pwritbuf5
    if outils_param = 1 & appel_param_outils = 1, n$, "LBL 0", e$
    spaces$ = 0
    n$, " ; ", e$
    if output_z = 1, n$, " ; TRAVAIL MAX PIECE ", *z_tmax, e$
    if output_z = 1, n$, " ; TRAVAIL MIN PIECE ", *z_tmin, e$
    spaces$ = 1
    n$, "; ", e$
    p_block_form
    n$, "; ", e$
    n$, "CYCL DEF 247 INIT. PT DE REF.~", e$
    "  Q339= +1    ; NUMERO DE PT DE REF.", e$
	n$, "; ", e$
    n$, "CYCL DEF 32.0 TOLERANCE", e$
    n$, "CYCL DEF 32.1 T0.02", e$
    n$, "CYCL DEF 32.2 HSC-MODE:0 TA0.02", e$
    #n$, "CYCL DEF 7.0 POINT ZERO", e$
    #n$, "CYCL DEF 7.1",35, "1", e$
    n$, "; ", e$
	p_degage_debut
    gcode$ = 0
    ssa = abs(ss$)   #100
    #if nextdc$ = 14, p_rot_perc_profond  #0100 ROT BROCHE POUR PERCAGE PROFOND
    pnomgroupe 
	if Position_info_outil = 1, p_info_outils
	p_affiche_outil
	if Position_info_outil = 2, p_info_outils
	#0085
    spaces$=0
    p_Z_mini_maxi_OP
    spaces$ = 1
    n$, "; ", e$  
	p_compteur_opErations	
    #comment$
    param
    poriusi  #0035
    pfrvar
	if tool_op$ = 114, cant_no$ = 0 #tool_op$ 114 = perCage AVANCE #pour ne pas afficher un arrosage erroné au debut
	pcan
    p_placement_apres_chang_outil
    old_rotaxis = rotaxis$
    old_x = xabs
    old_y = yabs
    old_z = zabs
	old_op_id = op_id$
	c_msng$ #Single tool subprogram call
	#time
	old_x = xh$ 
	old_y = yh$
	old_z = zh$
#endregion

#region placement_apres_chang_outil
p_placement_apres_chang_outil
	 @rotaxis$                   		# mise a jour du type de substitution d'axe
	if nextop$ = 11, [   				# si  4 axes avec fonction 5 axes
		gcode$ = 0              		# Force le gcode a 0 pour faire un G0 apres
        x$ = xr$
        y$ = yr$
        z$ = zr$
        axeA = 0
        axeA1_dep = 0
        old_axeA1 = 0
        debutpmx = 1					# flag pour faire l'appel outil
        ]
    if nextop$ <> 11, [  				# utilisation en positionné ou substitution
        gcode$ = 0       				# Force le gcode a 0 pour faire un G0 apres
        x$ = xr$						# prise en compte de XYZ
        y$ = yr$
        z$ = zr$
        xabs = x$
        yabs = y$
        zabs = z$
        !x$, !y$, !z$, !xabs, !yabs, !zabs, e$      	#!xinc, !yinc, !zinc,  mise a jour des position
        if rotaxis$ = 0, [       						# 4 axes positionnés OU à PLAT(dessus)
            if diviseur <> 0 & rotation_axe <> -9999, [
                p_calcul_rot_posit
                old_axeA = memo_old_axeA
                p_rotation_tlchg
                ]
			p_bloc_O, n$, "L", *xabs, *yabs, *sgcode, p_lubrif_ON, strcantext, e$ #sinc_abs,
			pcan2 
            if drillcyc$ <> 14, p_bloc_O, n$, *spdlon, e$   #0091 ROT BROCHE SAUF PERCAGE PROFOND
            p_bloc_O, n$, "L", *zr$, *sgcode, strcantext, e$
            ]
        if rotaxis$ <> 0, [      # 4 axes continues en substitution (mouvement en Z)
            !zdev, #!zdevi
            #zabs = zdev
			if rotaxis$ = 1, [       # 4 axes continues en substitution diviseur tourne autour de Y (X sbstitue)
	            plinarc
	            p_Apos
	            bloque = 2
				p_bloc_O, n$, *sgcode,  *A_pos, sbloque, e$  #sinc_abs, !A_posi,
	            pcan1, p_bloc_O, n$, "L", "X0.", *yabs,  !xr$, sgcode, p_lubrif_ON, strcantext, e$   #sinc_abs,
	            pcan2 
				]
	        if rotaxis$ = 2, [       # 4 axes continues en substitution diviseur tourne autour de X (Y sbstitue)
	            plinarc
	            p_Apos
	            bloque = 2
				p_bloc_O, n$, "L", *sgcode, *A_pos, sbloque, e$  #sinc_abs, !A_posi,
	            pcan1, p_bloc_O, n$, "L", *xabs, "Y0.", !yr$, sgcode, p_lubrif_ON, strcantext, e$    #sinc_abs,
	            pcan2 
				]
			if drillcyc$ <> 14, p_bloc_O, n$, "L", *spdlon, e$   #0091 ROT BROCHE SAUF PERCAGE PROFOND
            p_bloc_O, n$, "L", *zabs, *sgcode, !zr$, strcantext, e$   #*zabs,
            ]
        ]
    if tool_op$ = 100, p_bloc_O, n$, ";PAS DU FILETAGE = ", *pas_filetage, e$ #0092 affichage de la valeur du vrai filetage
#endregion

#region ptlchg0	
ptlchg0$
    @rotaxis$, @old_rotaxis
    gcode$ = 0
    Perreur_nom_RUD  #0080
    p_erreur_dif_T_H_D #0097
    perreur_pas_fil  #0090
    if Mode_reglage_PP = 1, "syncax", *syncaxis$, "old_syn", *old_syncaxis, "nbr_combi", *nbr_combi, "erreur", *erreur, "compt_axes_rot", *compt_axes_rot, e$
	pcan
	if Test_bris_outils = 1, [
		pcool_off 
		n$, "M5", e$
		p_test_bris_outil
		pcan1_cool
		#if coolant$ = 0 | coolant$ = 1 & lub_centre = 0, n$, "M8", e$
		#if coolant$ = 2 , "M88" ,e$
		n$, *spdlon, *ssa, e$
		] 
	p_compteur_opErations
    #comment$
    if M_zero = 1, n$, *spdlon, e$, old_lubrif = -1, M_zero = 0    #0042
    #if coolant$ <> old_lubrif & drlcst7 = 0, n$, p_lubrif_ON, e$ #PAS AVEC PERCAGE TRES PROFOND
	if old_lubrif <> -1, n$, p_lubrif_ON, e$
    param
    pfrvar
    #p_calcul_rot_posit
    if nextop$ <> 11, [      # = positionné    Si pas en 5 axes
        x$ = xr$
        y$ = yr$
        z$ = zr$
        xabs = x$
        yabs = y$
        zabs = z$
        if rotaxis$ = 0, [  # 4 axes position
            if diviseur <> 0 & rotation_axe <> -9999, [
                p_calcul_rot_posit
                old_axeA = memo_old_axeA
                p_rotation_tlchg0_nul
                ]
            ]
        if rotaxis$ <> 0, plinarc
        if rotaxis$ = 1 & old_rotaxis <> 1,  [  # 4 axe continues en substitution diviseur tourne autour de Y (X sbstitue)
            !y$
            !z$
            p_Apos
            axeA = A_pos
            bloque = 2
            n$, sbloque, e$
            p_rotation_tlchg0_nul_continu
            !A_pos
            !A_posi
            n$, "L", sgcode, "X0.", *yr$, e$   #!yinc,
            n$, "L", sgcode, zdev, strcantext, !z$, e$ #!zdevi,  !zinc,
            ]
        if rotaxis$ = 2 & old_rotaxis <> 2,  [  # 4 axes continues en substitution diviseur tourne autour de X (Y sbstitue)
            !y$
            !z$
            p_Apos
            axeA = A_pos
            bloque = 2
            n$, sbloque, e$
            p_rotation_tlchg0_nul_continu
            !A_pos
            !A_posi
            n$, "L", sgcode, *xr$, "Y0.", e$   #!xinc,
            n$, "L", sgcode, zdev, strcantext, !z$, e$ #!zinc, !zdevi,
            ]
        ]
    if nextop$ = 11, [   # si 5 axes
        if op_id$ <> old_op_id, [
        old_axeA1 = 0
        axeA1_dep = 0
        debut = 0
        ]
    ]
    poriusi  
    c_mmlt$      # truc qui doit servir pour usinage transformé
    c_msng$
    old_rotaxis = rotaxis$
#endregion

#region ptlchg
#Toolchange setup
pspindle        #Spindle speed calculations for RPM
	ssa = abs(ss$)
	@old_ssa 
	if ssa, [
		if ssa > maxss$, ssa = maxss$
		if ssa < min_speed, ssa = min_speed
		]
	spdir2 = fsg3(spdir$) 
	
pspindchng      #Spindle speed change
	if prv_spdir2 <> spdir2 & old_ssa <> zero, p_bloc_O, n$, *sm_01, e$
	if old_ssa <> ssa | prv_spdir2 <> spdir2, [
		if ssa <> 0, [
			n$, "; POUR AUTRE ROTATION DE BROCHE", e$
	 		n$, "TOOL CALL ", ssa, e$
			]	
		if spdir2 <> 1, n$, *spdlon, e$
		old_ssa = ssa
		]
	if tool_op$ <> 114, perreur_vit_broche
	!ssa, !spdir2
	
ptoolend$        #End of tool path, before reading new tool data
    #time
	gcode$ = 0
	old_x = xh$ 
	old_y = yh$
	old_z = zh$
	p_calc_long_time
	!ssa, !spdir2
	Test_bris_outils = mi6$

ptlchg$	
    increment_op_outil = 1 #0043  
    pas = 0
    memo_old_axeA = old_axeA
    if nbrtour <> 0, [         # pour remise a zero du diviseur
        old_axeA = 0
        axeA = 0
        nbrtour = 0
        ]
    p_lubrif_OFF
	if Test_bris_outils = 1, p_test_bris_outil 	
	p_degage_ptlchg				
	old_lubrif = -1
	#time
	p_tool_time
	if See_tool_time = yes$, n$, "; TEMPS DE L OUTIL= ", *Time_hrs, no_spc$, "h, ", *Time_min, no_spc$, "min, ", *Time_sec, no_spc$, "s", e$
	long_feed = 0
	long_rapide = 0
	Feed_time = 0
	Rapide_time = 0
	Tot_time_op = 0
	#
    gcode$ = 0
	if program_stop = 1, pcan1, "/", n$, sm00, e$
    if program_stop = 2, pcan1, "/", n$, sm01, e$
    n$, "; ", e$
    comment$
    ssa = abs(ss$)   #100
    #if nextdc$ = 14, p_rot_perc_profond  #0100 ROT BROCHE POUR PERCAGE PROFOND
    pnomgroupe 
	if Position_info_outil = 1, p_info_outils
	p_affiche_outil
	if Position_info_outil = 2, p_info_outils
	if deg_apres_outil > 0, [
		old_type_deg = deg_outil		# Memo Valeur
		deg_outil = deg_apres_outil		# Affectation pour Valeur deg. apres outil
		p_degage_ptlchg					# Retour suivant Valeur deg. apres outil	
		deg_apres_outil = old_type_deg	# Réaffectation de la valeur de base
		]
	#0085
    spaces$=0
    p_Z_mini_maxi_OP
    spaces$ = 1
	pcan
    n$, "; ", e$
    perreur_pas_fil  
    perreur_num_outil   
    p_erreur_dif_T_H_D 
    p_compteur_opErations
    #comment$
    param
    poriusi  
    debut_out = 1    
    pfrvar
	if tool_op$ = 114, cant_no$ = 0 #pour ne pas afficher un arrosage erroné au debut
	pcan
	p_placement_apres_chang_outil
    c_mmlt$      # truc qui doit servir pour usinage transformé
    c_msng$
    old_rotaxis = rotaxis$
    old_x = xabs
    old_y = yabs
    old_z = zabs
	#time
	old_x = xh$ 
	old_y = yh$
	old_z = zh$
#endregion

#region peof_fin
peof0$
    peof$

peof$	 
	if workofs_ >0 & mi4$ = 1, poriusi_annul       #0035
    #if tool_op$ <> 114, p_lubrif_OFF
	p_lubrif_OFF
	if Test_bris_outils = 1, p_test_bris_outil
	p_degage_fin
	if bldnxtool$ = 1 & type_prep_outil = 2,	[	
        if nom_outil = 1, [ 							# Tool call uses tool name
			first_op_id = streaminfo(1, 1)             	# Get the operation ID for the first operation in the sequence
			stoolname = opinfo(20001, first_op_id, 1)  	# Get the tool name for the first operation
			if stoolname = sblank, stoolname = "ERREUR-OUTIL SANS NOM"
			n$, 'TOOL DEF "', stoolname, '"', e$ 
			]
        if outils_param = 0 & nom_outil = 0, n$, "TOOL DEF", next_tool$, e$  #0053 sans les parametres
	    if outils_param = 1 & nom_outil = 0, n$, "TOOL DEF", next_tool_, e$  #0053 AVEC les parametres
        ]	
    # Déchargement de l'outil en broche
	if bldnxtool$ <> 1 & type_prep_outil < 1 & decharge_outil_fin = 1,	[	
		if outils_param = 0 & nom_outil = 0, n$, "TOOL CALL 0", e$ 
	    if outils_param = 1 & nom_outil = 0, next_tool_ = 1800, n$, "TOOL CALL", *next_tool_, e$                  	
		]
	#time
	gcode$ = 0
	old_x = xh$ 
	old_y = yh$
	old_z = zh$
	p_calc_long_time
	p_tool_time
	if See_tool_time = yes$, n$, "; TEMPS DE L OUTIL= ", *Time_hrs, no_spc$, "h, ", *Time_min, no_spc$, "min, ", *Time_sec, no_spc$, "s", e$
	#Tot_time_op = total_part_time * time_factor#/100
	p_Transf_hr_min_sec
	if See_total_time = yes$, [
		Time_hrs = int ( time_OPs / 60 )
		Time_min = int ( time_OPs - Time_hrs * 60 )
		Time_sec = ( time_OPs - Time_hrs * 60 - Time_min ) * 60
		n$, "; TEMPS TOTAL = ", *Time_hrs, no_spc$, "h, ", *Time_min, no_spc$, "min, ", *Time_sec, no_spc$, "s", e$
		]
	#	
	if bldnxtool$ = 1 & affiche_M6, n$, "M6", e$ 
	#n$, "TOOL CALL 0", e$
    n$, "M2", e$
    # Ajout pour les sous-programmes
    n$, "; ", e$
    subout$ = 0   
    mergeext$     
    mergesub$
    mergeaux$
    clearext$
    clearsub$
    clearaux$
    if change_nom = 1, [
        spaces$ = 0  
        n$, " END PGM ", snomprogentete," MM", e$
        spaces$ = 1  
        ]
    else, n$, "END PGM ", sprogname$,"MM", e$
#endregion

#endregion

#region tool_inspection
ptool_insp      #0103   inspection des plaquettes/outil
    p_lubrif_OFF
	pdeg_inspection_plaquette
    if prmcode$ = 29999, [   #seulement le commentaire dans le controle d'outil
        sparameter$ = ucase(sparameter$)
        n$, "M0 ;", sparameter$, e$
        ]
    else, n$, "M0", e$
    n$, "; controle de l etat des plaquettes - outil", e$
    if Position_info_outil = 1, p_info_outils
	p_affiche_outil
	if Position_info_outil = 2, p_info_outils
    n$, *spdlon, e$
    old_lubrif = -1
    n$, p_lubrif_ON, e$
	gcode$ = 0
	pcan1, p_bloc_O, n$, "L", pxyz, sgcode, strcantext, e$
	pcan1, p_bloc_O, n$, "L", *z$, sgcode, strcantext, e$
#endregion

#region test_bris_outil
sbris_outil  : "CALL PGM TNC:\USINAGE\L_BREAK_TEST.H"   # macro appel de sous programme pour test bris_outil  
sbris_outil1 : "CALL PGM TNC:\dmg\BRIS-FORET.H"    		# macro appel de sous programme pour test bris_outil
sbris_outil2 : "CALL PGM TNC:\dmg\BRIS-FRAISE.H"    	# macro appel de sous programme pour test bris_outil

p_test_bris_outil                    # controle bris outil
	type_test_bris_outils = mi5$
	Test_bris_outils = mi6$ 
    if type_test_bris_outils <> 0, 	[
		if type_test_bris_outils = 1,	[
			n$, ";TEST BRIS OUTIL FORET", e$ 
			#n$, sbris_outil1, e$
			n$, "TCH PROBE 481 LONGUEUR D'OUTIL ~", e$
			"    Q340=+1    ;CONTROLE ~", e$
			"    Q260=+100  ;HAUTEUR DE SECURITE ~", e$
			"    Q341=+0    ;ETALONNAGE DENTS", e$
			#n$, "FN 9: IF +Q199 EQU +2 GOTO LBL 249", e$
			#n$, "FN 9: IF +Q199 EQU +1 GOTO LBL 249", e$
			]
		if type_test_bris_outils = 2,	[
			n$, ";TEST BRIS OUTIL FRAISE", e$ 
			n$, sbris_outil2, e$
			]
		if type_test_bris_outils = 3,	[
			n$, "TCH PROBE 586 CONTROLE DE BRIS ~", e$
			"    Q356=+1    ;DIRECTION DE MESURE ~", e$
			"    Q357=+0    ;DECALAGE RADIAL", e$		  									
			#n$, "FN 9: IF +Q199 EQU +2 GOTO LBL 69", e$
			#n$, "FN 9: IF +Q199 EQU +1 GOTO LBL 249", e$
			]		
		type_test_bris_outils = 0
		Test_bris_outils = 0
		]
#endregion

#region deplacements
p_temporisation
	n$, "CYCL DEF 9.0 TEMPORISATION", e$
	n$, "CYCL DEF 9.1 TEMPO ", *dwell$, e$

pdwl_spd$        #Call from NCI gcode 4	*** ROTATION BROCHE / TEMPO / ARROSAGES
	pspindle
	comment$
	pspindchng	#p_chang_S_broche
	pcan
	if fmtrnd(dwell$), pcan1, p_bloc_O, p_temporisation, e$
	else, pcan1, p_bloc_O, #n$, strcantext, e$
	pcan2

prapid$     # Ligne rapide	
	#"ICI AAA", e$
	p_calc_long_time 
	if workofs_ >0 & mi4$ = 1, [         #si décallages actif : force l'affichage des positions X ET Y
		pcan1, p_bloc_O, n$, "L", *x$, *y$, z$, sgcode, p_lubrif_ON, strcantext, e$	
		]
	else, pcan1, p_bloc_O, n$, "L", pxyz, sgcode, p_lubrif_ON, strcantext, e$
	prvz = z$   
	
pzrapid$    # Ligne Z rapide
	#"ICI BBB", e$
	p_calc_long_time 
	pcan1, p_bloc_O, n$, "L", pxyz, sgcode, p_lubrif_ON, strcantext, e$
	prvz = z$  
	
plin$       # Ligne travail	
	#"ICI CCC", e$
	p_calc_long_time 
	pcan
	pcan1, p_bloc_O, n$, sgcode, pxyz, pcord, pfr, p_lubrif_ON, strcantext, e$
	prvz = z$
	if rpd_typ$ = 7, ptool_insp      #0103   inspection des plaquettes/outil
	
pz$         # z en avance rapide
	#"ICI DDD", e$
	p_calc_long_time 
	pcan1, p_bloc_O, n$, sgcode, pxyz, pfr, p_lubrif_ON, strcantext, e$
	prvz = z$  

pcir$      # Circulaire
	#"ICI EEE", e$
	p_calc_long_time 
    perreurCC_COR   #0200 "ATTENTION PRISE DE CORRECTION OU ANNULATION SUR UN CERCLE"
    if plane$ = 0,[
        @z$
        if arctype$ = 1, n$, s_CC, i$, j$, e$
		#if arctype$ = 5 & z$ <> prvz & (xc$ <> old_xc | yc$ <> old_yc), n$, `s_CC, *xc$, *yc$, e$
		if arctype$ = 5 & z$ <> prvz, n$, `s_CC, *xc$, *yc$, e$
        if z$ <> prvz, n$, s_CP, sweep$, *z$, sgcode, pcord, strcantext, e$   
        else, [
			if arctype$ = 1, n$, "C", pxyz, sgcode, pcord, pfr, strcantext, e$
			if arctype$ = 5, n$, s_CR, *x$, *y$, z$, arcrad$, sgcode, pcord, pfr, strcantext, e$
			]
        if arctype$ = 1 & z$ <> prvz & z$ = nextz$ & (nextop$ = 2 | nextop$ = 3), n$, "L" , pxyz, strcantext, e$ #"; EN +", e$	
        !i$, !x$,!y$
        ]
    if plane$ = 1,[
        if arctypexz$ = 1, [
			n$, s_CC, j$, k$, e$
        	n$, "C", pxyz, sgcode, pcord, pfr, strcantext, e$
			]
		if arctypexz$ = 5, n$, s_CR, *x$, y$, *z$, arcrad$, sgcode, pcord, pfr, strcantext, e$	 
        !i$, !z$,!y$
        ]
    if plane$ = 2,[
        if arctypeyz$ = 1, [
			n$, s_CC, i$, k$, e$
        	n$, "C", pxyz, sgcode, pcord, pfr, strcantext, e$
			]
		if arctypeyz$ = 5, n$, s_CR, x$, *y$, *z$, arcrad$, sgcode, pcord, pfr, strcantext, e$		
        !i$, !x$,!z$
        ]
   prvz = z$ 
   old_xc = xc$ 
   old_yc = yc$ 
   old_zc = zc$

pcord
    if cc$ = 41, "RL"
    if cc$ = 42, "RR"
    if cc$ = 140, "R0"
	old_cc = cc$
#endregion

#region approches_degagements	
#   Gestion du degagement de la machine au debut de prog
p_degage_debut       #   Gestion du degagement de la machine au debut de prog
    if deg_debut <> 0, [
	    gcode$ = 0              			# Degagement en Rapide
    	if deg_debut >= 1 & deg_debut < 6, n$, "L", degageZ, smode_deg, e$            		# si degager en Z		# degager en Z
	    if deg_debut = 2 | deg_debut = 4, n$, "L", degageX, smode_deg, e$  	# si degager en Z et X	# degager en X
	    if deg_debut = 3 | deg_debut = 4, n$, "L", degageY, smode_deg, e$  	# si degager en Z et Y	# degager en Y
	    if deg_debut = 5, n$, "L", degageX, degageY, smode_deg, e$         	# si degager en Z et XY	# degager en X Y
		if deg_debut = 6, n$, S_macro_deg, e$, #n$, "autres fonctions apres MACRO", e$ 	# si Mode degagement uniquement en MACRO
        ]
		
#   Gestion du degagement de la machine avant appel outil
p_degage_ptlchg     #   Gestion du degagement de la machine avant appel outil
    if deg_outil <> 0, [
	    gcode$ = 0              			# Degagement en Rapide
	    if deg_outil >= 1 & deg_outil < 6, n$, "L", degageZ, smode_deg, e$            			# si degager en Z		# degager en Z
	    if deg_outil = 2 | deg_outil = 4, n$, "L", degageX, smode_deg, e$ 		# si degager en Z et X	# degager en X
	    if deg_outil = 3 | deg_outil = 4, n$, "L", degageY, smode_deg, e$ 		# si degager en Z et Y	# degager en Y
	    if deg_outil = 5, n$, "L", degageX, degageY, smode_deg, e$             	# si degager en Z et XY	# degager en X Y
		if deg_outil = 6, n$, S_macro_deg, e$, #n$, "autres fonctions apres MACRO", e$ 	# si Mode degagement uniquement en MACRO
        ]

#   Gestion du degagement de la machine fin de prog
p_degage_fin #   Gestion du degagement de la machine fin de prog
   	if deg_fin <> 0, [
		gcode$ = 0              			# Degagement en Rapide
	    if deg_fin >= 1 & deg_fin < 6, n$, "L", degageZ, smode_deg, e$ 					# si degager en Z		# degager en Z
	    if deg_fin = 2 | deg_fin = 4, n$, "L", degageX, smode_deg, e$    				# si degager en Z et X	# degager en X
	    if deg_fin = 3 | deg_fin = 4 | deg_fin = 5, n$, "L", degageY, smode_deg, e$  	# si degager en Z et Y 	# degager en Y
	    if deg_fin = 5, n$, "L", degageX, degageY, smode_deg, e$              			# si degager en Z et XY # degager en X Y
		if deg_fin = 6, n$, S_macro_deg, e$, #n$, "autres fonctions apres MACRO", e$ 	# si Mode degagement uniquement en MACRO
        ]

#   Gestion du degagement de la machine avant rotation plateau
p_degage_4_axes        #   Gestion du degagement de la machine avant rotation plateau
	if deg_4_axes <> 0, [
	    if mr1$ = 0, [
		    gcode$ = 0              		# Degagement en Rapide
		    #p_casse_modalite            	# casser la modalite pour rappel des XYZ
		    if deg_4_axes >= 1 & deg_4_axes < 6, n$, "L", degageZ4, smode_deg, e$             		# si degager en Z		# degager en Z
		    if deg_4_axes = 2 | deg_4_axes = 4, n$, "L", degageX4, smode_deg, e$   	# si degager en Z et X 	# degager en X
		    if deg_4_axes = 3 | deg_4_axes = 4, n$, "L", degageY4, smode_deg, e$  	# si degager en Z et Y	# degager en Y
		    if deg_4_axes = 5, n$, "L", degageX4, degageY4, smode_deg, e$          	# si degager en Z et XY	# degager en X Y
			if deg_4_axes = 6, n$, S_macro_deg, e$, #n$, "autres fonctions apres MACRO", e$ 	# si Mode degagement uniquement en MACRO
		    ]
	    if mi2$ = 0 & mr1$ > 0, n$, "L Z", no_spc$, *mr1$, e$ 		#DEGAGEMENT ABSOLU Z de la VALEUR DANS mr1$ 
		if mi2$ = 1 & mr1$ > 0, n$, "L IZ", no_spc$, *mr1$, e$ 	#DEGAGEMENT INCREMENTAL Z de la VALEUR DANS mr1$  
		]
	else, gcode$ = 0, n$, "L", *zr$, *sgcode, strcantext, e$	#Sinon valeur de sécu de la valeur de l'opération MC
	#time de dégagement au pt de sécu
	temps_4_axes = 1
	p_calc_long_time
	#time retour à la nouvelle position après la rotation
	if deg_4_axes <> 0, [	
		if degageX = -1, Delta_X = nextx$ - xh$, else, Delta_X = nextx$ - degageX 
		if degageY = -1, Delta_Y = nexty$ - yh$, else, Delta_Y = nexty$ - degageX 
		if degageZ = -1, Delta_Z = nextz$ - zh$, else, Delta_Z = nextz$ - degageX 
		p_calc_long_time
		]
	temps_4_axes = 0

#   Gestion du degagement de l'outil lors de l'inspection de l'état de la plaquette 
pdeg_inspection_plaquette
	if deg_inspection_plaq <> 0, [
	    gcode$ = 0              		# Degagement en Rapide
	    #p_casse_modalite            	# casser la modalite pour rappel des XYZ
	    if deg_inspection_plaq = 1, n$, "L", deg_insp_Z, smode_deg, e$             				# si degager en Z		# degager en Z
	    if deg_inspection_plaq = 2 | deg_inspection_plaq = 4, n$, "L", deg_insp_X, smode_deg, e$    # si degager en Z et X 	# degager en X
	    if deg_inspection_plaq = 3 | deg_inspection_plaq = 4, n$, "L", deg_insp_Y, smode_deg, e$  	# si degager en Z et Y	# degager en Y
	    if deg_inspection_plaq = 5, n$, "L", deg_insp_X, deg_insp_Y, smode_deg, e$          		# si degager en Z et XY	# degager en X Y
		if deg_inspection_plaq = 6, n$, S_macro_deg, e$, #n$, "autres fonctions apres MACRO", e$ 	# si Mode degagement uniquement en MACRO
	    ]
	else, gcode$ = 0, n$, "L", *zr$, *sgcode, strcantext, e$	#Sinon valeur de sécu dans l'opération MC	
#endregion

#region percages
ppercage_1 # Positions de percages
    pcan1, p_bloc_O, n$, "L", *x$, *y$, sgcode, "M99", strcantext, e$   #0001
	pcan2
    !x$,!y$,!z$,!xr$,!yr$,!zr$

pdrill$     # Cycle de percage G81
    gcode$ = 0
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq202 = abs (depth$ - tosz$)    #peck1
    bq203 = tosz$
    bq204 = initht$ - tosz$
    bq206 = frplunge$
    bq211 = dwell$

    n$, "CYCL DEF 200 PERCAGE~", e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~", e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "    ", bq206, "  ; AVANCE PLONGEE PROF.~", e$
    "    ", bq202, "  ; PROFONDEUR DE PASSE~", e$
    "     Q210 = 0 ", "  ; TEMPO. EN HAUT~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; SAUT DE BRIDE~", e$
    "    ", bq211, "  ; TEMPO. AU FOND", e$
    #bq204 valeur relative
    ppercage_1
    oldtosz = tosz$
    oldbq201 = bq201
    #perreurTaraud  #0200

pdrill_2$   # Canned Drill Cycle
    gcode$ = 0
    bq201 = depth$ - tosz$
    !bq201
    @bq201 ,@oldbq201 , @oldtosz , @tosz$
    if bq201 <> oldbq201 | oldtosz <> tosz$, pdrill_3
    ppercage_1

pdrill_3
    gcode$ = 0
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq202 = abs (depth$ - tosz$)    #peck1
    bq203 = tosz$
    bq204 = initht$ - tosz$
    bq206 = frplunge$
    bq211 = dwell$
    n$, "CYCL DEF 200 PERCAGE~",e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~", e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "    ", bq206, "  ; AVANCE PLONGEE PROF.~", e$
    "    ", bq202, "  ; PROFONDEUR DE PASSE~", e$
    "     Q210 = 0 ", "  ; TEMPO. EN HAUT~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; SAUT DE BRIDE~", e$
    "    ", bq211, "  ; TEMPO. AU FOND", e$
    oldtosz = tosz$
    oldbq201 = bq201

ppeck$      # Cycle de debourrage
    gcode$ = 0
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq202 = peck1$
    bq203 = tosz$
    bq204 = initht$ - tosz$
    bq206 = frplunge$
    bq211 = dwell$
    n$, "CYCL DEF 200 PERCAGE~", e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~", e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "    ", bq206, "  ; AVANCE PLONGEE PROF.~", e$
    "    ", bq202, "  ; PROFONDEUR DE PASSE~", e$
    "     Q210 = 0 ", "  ; TEMPO. EN HAUT~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; SAUT DE BRIDE~", e$
    "    ", bq211, "  ; TEMPO. AU FOND", e$
    ppercage_1
    oldtosz = tosz$
    oldbq201 = bq201
    #perreurTaraud    #0200

ppeck_2$    # Canned Peck Drill Cycle
    bq201 = depth$ - tosz$
    !bq201
    gcode$ = 0
    @bq201 ,@oldbq201 , @oldtosz , @tosz$
    if bq201 <> oldbq201 | oldtosz <> tosz$, ppeck_3
    ppercage_1

ppeck_3
    gcode$ = 0
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq202 = peck1$
    bq203 = tosz$
    bq204 = initht$ - tosz$
    bq206 = frplunge$
    bq211 = dwell$
    n$, "CYCL DEF 200 PERCAGE~", e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~", e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "    ", bq206, "  ; AVANCE PLONGEE PROF.~", e$
    "    ", bq202, "  ; PROFONDEUR DE PASSE~", e$
    "     Q210 = 0 ", "  ; TEMPO. EN HAUT~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; SAUT DE BRIDE~",e$
    "    ", bq211, "  ; TEMPO. AU FOND", e$
    oldtosz = tosz$
    oldbq201 = bq201

pchpbrk$    # Cycle de brise copeaux
    gcode$ = 0
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq206 = frplunge$
    bq202 = peck1$
    bq205 = dwell$
    bq203 = tosz$
    bq204 = initht$ - tosz$
    bq208 = peck2$
    bq256 = shftdrl$
    bq212 = peckclr$
    bq213 = retr$
    n$, "CYCL DEF 203 PERCAGE UNIVERSEL~", e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~", e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "    ", bq206, "  ; AVANCE PLONGEE PROF.~", e$
    "    ", bq202, "  ; PROFONDEUR DE PASSE~", e$
    "     Q210 = 0   ; TEMPO. EN HAUT~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; SAUT DE BRIDE~", e$
    "    ", bq212, "  ; VALEUR DE REDUCTION~", e$
    "    ", bq213, "  ; NB BRISE-COPEAUX~", e$
    "    ", bq205, "  ; PROF. PASSE MINI~", e$
    "     Q211 = 0   ; TEMPO. AU FOND~", e$
    "     Q208 = +9999 ", "  ; AVANCE RETRAIT~", e$
    "    ", bq256, "  ; RETR. BRISE COPEAUX", e$
    ppercage_1
    perreurPar_perc #0200
    oldtosz = tosz$
    oldbq201 = bq201
    #perreurTaraud    #0200

pchpbrk_2$  # Canned Chip Break Cycle
    bq201 = depth$ - tosz$
    !bq201
    gcode$ = 0
    @bq201 ,@oldbq201 , @oldtosz , @tosz$
    if bq201 <> oldbq201 | oldtosz <> tosz$, pchpbrk_3
    ppercage_1

pchpbrk_3
    gcode$ = 0
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq206 = frplunge$
    bq202 = peck1$
    bq205 = dwell$
    bq203 = tosz$
    bq204 = initht$ - tosz$
    bq208 = peck2$
    bq256 = shftdrl$
    bq212 = peckclr$
    bq213 = retr$
    n$, "CYCL DEF 203 PERCAGE UNIVERSEL~", e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~", e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "    ", bq206, "  ; AVANCE PLONGEE PROF.~", e$
    "    ", bq202, "  ; PROFONDEUR DE PASSE~", e$
    "     Q210 = 0   ; TEMPO. EN HAUT~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; SAUT DE BRIDE~", e$
    "    ", bq212, "  ; VALEUR DE REDUCTION~", e$
    "    ", bq213, "  ; NB BRISE-COPEAUX~", e$
    "    ", bq205, "  ; PROF. PASSE MINI~", e$
    "     Q211 = 0   ; TEMPO. AU FOND~", e$
    "     Q208 = +9999 ", "  ; AVANCE RETRAIT~", e$
    "    ", bq256, "  ;RETR. BRISE COPEAUX", e$
    oldtosz = tosz$
    oldbq201 = bq201

ptap$     # nouveau Cycle taraudage rigide 207   #0001
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq206 = frplunge$
    bq211 = shftdrl$
    bq208 = peck2$
    bq203 = tosz$
    bq204 = initht$ - tosz$
    bq214 = peckclr$
    bq336 = retr$
    bq239 = n_tap_thds$
    gcode$ = 0
    pas = n_tap_thds$
    n$, "CYCL DEF 207 NOUV. TARAUDAGE RIG.~",e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~", e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "     Q239 = ", pas, "  ; PAS DE VIS~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; SAUT DE BRIDE", e$
    perreurTaraud2  #0200
    ppercage_1
    oldtosz = tosz$
    oldbq201 = bq201

ptap_2$     # Canned Tap Cycle3
    bq201 = depth$ - tosz$
    !bq201
    gcode$ = 0
    @bq201 ,@oldbq201 , @oldtosz , @tosz$
    if bq201 <> oldbq201 | oldtosz <> tosz$, ptap_3
    ppercage_1

ptap_3
    gcode$ = 0
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq239 = n_tap_thds$
    bq203 = tosz$
    bq204 = initht$ - tosz$
    gcode$ = 0
    n$, "CYCL DEF 207 NOUV. TARAUDAGE RIG.~",e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~", e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "     Q239 = ", pas, "  ; PAS DE VIS~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; SAUT DE BRIDE", e$
    oldtosz = tosz$
    oldbq201 = bq201

pbore1$     # Cycle d'alésage à l'ALESOIR
    gcode$ = 0
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq206 = frplunge$
    bq211 = shftdrl$
    bq208 = peck2$
    bq203 = tosz$
    bq204 = initht$ - tosz$
    bq214 = peckclr$
    bq336 = retr$
    n$, "CYCL DEF 201 ALESAGE AVEC ALESOIR~", e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~" , e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "    ", bq206, "  ; AVANCE PLONGEE PROF.~", e$
    "    ", bq211, "  ; TEMPO. AU FOND~", e$
    "    ", bq208, "  ; AVANCE RETRAIT~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; SAUT DE BRIDE", e$
    ppercage_1
    oldtosz = tosz$
    oldbq201 = bq201
    perreurTaraud #0200

pbore1_2$   # Canned Bore #2 Cycle
    bq201 = depth$ - tosz$
    !bq201
    gcode$ = 0
    @bq201 ,@oldbq201 , @oldtosz , @tosz$
    if bq201 <> oldbq201 | oldtosz <> tosz$, pbore1_3
    ppercage_1

pbore1_3    # Canned Bore #3 Cycle
    gcode$ = 0
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq206 = frplunge$
    bq211 = shftdrl$
    bq208 = peck2$
    bq203 = tosz$
    bq204 = initht$ - tosz$
    bq214 = peckclr$
    bq336 = retr$
    n$, "CYCL DEF 201 ALESAGE AVEC ALESOIR~", e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~" , e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "    ", bq206, "  ; AVANCE PLONGEE PROF.~", e$
    "    ", bq211, "  ; TEMPO. AU FOND~", e$
    "    ", bq208, "  ; AVANCE RETRAIT~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; SAUT DE BRIDE", e$
    oldtosz = tosz$
    oldbq201 = bq201

pbore2$     # Cycle d'alésage indexé
    gcode$ = 0
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq206 = frplunge$
    bq211 = shftdrl$
    bq208 = peck2$
    bq203 = tosz$
    bq204 = initht$ - tosz$
    bq214 = peckclr$
    bq336 = retr$
    if paramT2 = 7 & paramT16 = 1, bq214 = 1
    else, bq214 = 0
    n$, "CYCL DEF 202 ALESAGE A L'OUTIL~", e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~", e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "    ", bq206, "  ; AVANCE PLONGEE PROF.~", e$
    "    ", bq211, "  ; TEMPO. AU FOND~", e$
    "    ", bq208, "  ; AVANCE RETRAIT~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; SAUT DE BRIDE~", e$
    "    ", bq214, "  ; SENS DEGAGEMENT~", e$
    "     Q336 = 0", "  ; ANGLE BROCHE", e$
    ppercage_1
    oldtosz = tosz$
    oldbq201 = bq201
    perreurTaraud #0200

pbore2_2$   # Cycle d'alésage indexé
    bq201 = depth$ - tosz$
    !bq201
    gcode$ = 0
    @bq201 ,@oldbq201 , @oldtosz , @tosz$
    if bq201 <> oldbq201 | oldtosz <> tosz$, pbore2_3
    ppercage_1

pbore2_3    # Cycle d'alésage indexé
    gcode$ = 0
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq206 = frplunge$
    bq211 = shftdrl$
    bq208 = peck2$
    bq203 = tosz$
    bq204 = initht$ - tosz$
    bq214 = peckclr$
    bq336 = retr$
    if paramT2 = 7 & paramT16 = 1 , bq214 = 1 #4
    else, bq214 = 0
    n$, "CYCL DEF 202 ALESAGE A L'OUTIL~", e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~", e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "    ", bq206, "  ; AVANCE PLONGEE PROF.~", e$
    "    ", bq211, "  ; TEMPO. AU FOND~", e$
    "    ", bq208, "  ; AVANCE RETRAIT~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; SAUT DE BRIDE~", e$
    "    ", bq214, "  ; SENS DEGAGEMENT~", e$
    "     Q336 = 0", "  ; ANGLE BROCHE", e$
    oldtosz = tosz$
    oldbq201 = bq201

pmisc1$        # Cycle de taraudage 209
    gcode$ = 0
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq239 = n_tap_thds$
    bq203 = tosz$
    bq204 = initht$ - tosz$
    if peck1$ = 0, [
		bq257 = bq201, e$
        bq256 = 0, e$
		]
	else, [
		bq257 = peck1$, e$
	    bq256 = peckclr$, e$ 
		]
    n$, "CYCL DEF 209 TARAUD. BRISE-COPEAUX~",e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~", e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "    ", bq239, "  ; PAS DE VIS~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; 2EME DISTANCE D'APPROCHE~", e$
    "    ", bq257, "  ; PROF. PERC. BRISE-COPEAUX~", e$
    "    ", bq256, "  ; RETR BRISE-COPEAUX~", e$
    "     Q336 = 0", "  ; ANGLE BROCHE", e$
    ppercage_1
    oldtosz = tosz$
    oldbq201 = bq201

pmisc1_2$      # Canned Tap Cycle
    bq201 = depth$ - tosz$
    !bq201
    gcode$ = 0
    @bq201 ,@oldbq201 , @oldtosz , @tosz$
    if bq201 <> oldbq201 | oldtosz <> tosz$, pmisc1_3
    ppercage_1

pmisc1_3
    gcode$ = 0
    bq200 = refht$ - tosz$
    bq201 = depth$ - tosz$
    bq239 = n_tap_thds$
    bq203 = tosz$
    bq204 = initht$ - tosz$
    if peck1$ = 0, [
		bq257 = bq201, e$
        bq256 = 0, e$
		]
    else, [
		bq257 = peck1$, e$
        bq256 = peckclr$, e$ 
		]
    n$, "CYCL DEF 209 TARAUD. BRISE-COPEAUX~",e$
    "    ", bq200, "  ; DISTANCE D'APPROCHE~", e$
    "    ", bq201, "  ; PROFONDEUR~", e$
    "    ", bq239, "  ; PAS DE VIS~", e$
    "    ", bq203, "  ; COORD. SURFACE PIECE~", e$
    "    ", bq204, "  ; 2EME DISTANCE D'APPROCHE~", e$
    "    ", bq257, "  ; PROF. PERC. BRISE-COPEAUX~", e$
    "    ", bq256, "  ; RETR BRISE-COPEAUX~", e$
    "     Q336 = 0", "  ; ANGLE BROCHE", e$
    oldtosz = tosz$
    oldbq201 = bq201

pmisc2$     # Cycle d'alesage indexe G76

pmisc2_2$   # Canned Misc #2 Cycle

pdrlcst$     # Test de l'appel des cycles  et embranchements #0014
    x_pt_zero = x$      #0034
    y_pt_zero = y$
    z_pt_zero = depth$
	if Cycles_palpage_YN = yes$, [
	    if drl_prm10$ <>0, n$, "*********", e$
	    if drl_prm10$ >0, n$, "; VALEUR VERS TABLEAU POINT 0", e$ #0034
	    if drl_prm10$ =0 & (drillcyc$ <> 14), n$, "; NOUVEAU POINT D ORIGINE", e$ #0034 0091
	    if drl_prm10$ <>0, n$, "*********", e$
	    if drillcyc$ = 8, pdrlcst1      #Cycle de palpage "410 (et 411) Pt de réf. int. (exter) rectangulaire"  #0014
	    if drillcyc$ = 9, pdrlcst2      #Cycle de palpage "412 (et 413) Pt de réf. int. (exter) circulaire" #0014
	    if drillcyc$ = 10, pdrlcst3     #Cycle de palpage "414 Pt de réf. exter Coin"   #0014
	    if drillcyc$ = 11, pdrlcst4     #Cycle de palpage "415 Pt de réf. inter Coin"   #0014
	    if drillcyc$ = 12, pdrlcst5     #Cycle de palpage "417 Pt de réf. int. dans l'axe du palpeur"   #0014
	    if drillcyc$ = 13, pdrlcst6     #Cycle de palpage "408 Pt de réf. CENTRE RAINURE"   #0014
		]
	else, p_erreur_cycle_palpage
	if drillcyc$ = 14, pdrlcst7     #0091 perçage très profond avec trous d'huile

pdrlcst_2$ #Cycles suivants
    if drillcyc$ = 14, pdrlcst7_2   #0091 perçage très profond avec trous d'huile
    gcode$ = 0               #0033

pcom_cycl_palp  # Commentaires communs pour les cycles de palpages
    n$, "; Q303=0 dans Def.7 -- activer le tableau *.D", e$
    n$, "; Q303=1 dans le tableau Preset -ORIGINE- *.PR", e$
    n$, "; Q333=+1  ; POINT DE REFERENCE", e$

pdrlcst1        #Cycle de palpage "410 (et 411) Pt de réf. int. (exter) rectangulaire"  #0014
    gcode$ = 0
    bq261 = depth$
    bq260 = initht$ 
    bq323 = peck1$
    bq324 = peck2$
    bq321 = x1
    bq322 = y2

    if drl_prm1$ = 1 , n$, "TCH PROBE 410 PT REF INT. RECTANGLE~", e$
    if drl_prm1$ = 1 ,
        [
        bq323 = bq323 - 4
        bq324 = bq324 - 4
        ]   # SECURITE EN INTER
    if drl_prm2$ = 1 , n$, "TCH PROBE 411 PT REF EXT. RECTANGLE~", e$
    if drl_prm2$ = 1 ,
        [
        bq323 = bq323 + 5
        bq324 = bq324 + 5
        ]   # SECURITE EN EXTER
    perreurPalp1   #0200 "1 ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"
    "    ", bq321, "  ; CENTRE 1ER AXE~", e$
    "    ", bq322, "  ; CENTRE 2EME AXE~", e$
    "    ", bq323, "  ; 1ER COTE~", e$
    "    ", bq324, "  ; 2EME COTE~", e$
    "    ", bq261, "  ; HAUTEUR DE MESURE~", e$
    "     Q320 = 0  ; DISTANCE D'APPROCHE~", e$
    "    ", bq260, "  ; HAUTEUR DE SECURITE~", e$
    if drl_prm1$ = 1 ,"     Q301 = 0  ; DEPLACEMENT HAUT. SEC.~", e$
    if drl_prm2$ = 1 ,"     Q301 = 1  ; DEPLACEMENT HAUT. SEC.~", e$
    "     Q305 = ", drl_prm10$, "  ; NO. DANS TABLEAU~", e$ #0034
    "     Q331 = ", *x_pt_zero, "  ; POINT DE REF.~", e$   #0034
    "     Q332 = ", *y_pt_zero, "  ; POINT DE REF.", e$    #0034
    "     Q303 = -1  ; TRANSF. VAL. MESURE~", e$
    "     Q381 = 0  ; PALP. DS AXE PALPEUR~", e$
    "     Q382 = 0  ; 1. CO. POUR AXE PALP.~", e$
    "     Q383 = 0  ; 2. CO. POUR AXE PALP.~", e$
    "     Q384 = 0  ; 3. CO. POUR AXE PALP.~", e$
    "     Q333 = +1  ; POINT DE REFERENCE", e$

pdrlcst2        #Cycle de palpage "412 (et 413) Pt de réf. int. (exter) circulaire" #0014
    gcode$ = 0
    bq261 = depth$
    bq260 = initht$ 
    bq262 = peck1$
    bq321 = x1
    bq322 = y2
    if drl_prm1$ = 1 , n$, "TCH PROBE 412 PT REF INT. CERCLE~", e$
    if drl_prm1$ = 1 , bq260 = bq260 - 4   # SECURITE EN INTER
    if drl_prm2$ = 1 , n$, "TCH PROBE 413 PT REF EXT. CERCLE~", e$
    if drl_prm2$ = 1 , bq260 = bq260 + 4   # SECURITE EN EXTER
    perreurPalp1  #0200 "1 ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"
    "    ", bq321, "  ; CENTRE 1ER AXE~", e$
    "    ", bq322, "  ; CENTRE 2EME AXE~", e$
    "    ", bq262, "  ; DIAMETRE NOMINAL~", e$
    "     Q325 = +0  ; ANGLE INITIAL~", e$
    "     Q247 = +90  ; PAS ANGULAIRE~", e$
    "    ", bq261, "  ; HAUTEUR DE MESURE~", e$
    "     Q320 = 0  ; DISTANCE D'APPROCHE~", e$
    "    ", bq260, "  ; HAUTEUR DE SECURITE~", e$
    if drl_prm1$ = 1 ,"     Q301 = 0  ; DEPLACEMENT HAUT. SEC.~", e$
    if drl_prm2$ = 1 ,"     Q301 = 1  ; DEPLACEMENT HAUT. SEC.~", e$
    "     Q305 = ", drl_prm10$, "  ; NO. DANS TABLEAU~", e$ #0034
    "     Q331 = ", *x_pt_zero, "  ; POINT DE REF.~", e$   #0034
    "     Q332 = ", *y_pt_zero, "  ; POINT DE REF.", e$    #0034
    "     Q303 = -1  ; TRANSF. VAL. MESURE~", e$
    "     Q381 = 0  ; PALP. DS AXE PALPEUR~", e$
    "     Q382 = 0  ; 1. CO. POUR AXE PALP.~", e$
    "     Q383 = 0  ; 2. CO. POUR AXE PALP.~", e$
    "     Q384 = 0  ; 3. CO. POUR AXE PALP.~", e$
    "     Q333 = +1  ; POINT DE REFERENCE", e$

pdrlcst3    #Cycle de palpage "414 Pt de réf. exter Coin"   #0014
    gcode$ = 0
    bq261 = depth$
    bq260 = initht$
    n$, "TCH PROBE 414 PT REF. EXT. COIN~", e$
    "     Q263 = ", drl_prm4$, "  ; 1ER POINT 1ER AXE~", e$
    "     Q264 = ", drl_prm5$, "  ; 1ER POINT 2EME AXE~", e$
    "     Q326 = ", drl_prm6$, "  ; DIST.1ER AXE~", e$
    "     Q296 = ", drl_prm7$, "  ; 3EME POINT 1ER AXE~", e$
    "     Q297 = ", drl_prm8$, "  ; 3EME POINT 2EME AXE~", e$
    "     Q327 = ", drl_prm9$, "  ; DIST. DU 2EME AXE~", e$
    "    ", bq261, "  ; HAUTEUR DE MESURE~", e$
    "     Q320 = 2  ; DISTANCE D'APPROCHE~", e$
    "    ", bq260, "  ; HAUTEUR DE SECURITE~", e$
    "     Q301 = 1  ; DEPLACEMENT HAUT. SEC.~", e$
    "     Q304 = ", drl_prm3$, "  ; ROTATION DE BASE~", e$
    "     Q305 = ", drl_prm10$, "  ; NO. DANS TABLEAU~", e$ #0034
    "     Q331 = ", *x_pt_zero, "  ; POINT DE REF.~", e$   #0034
    "     Q332 = ", *y_pt_zero, "  ; POINT DE REF.", e$    #0034
    "     Q303 = -1  ; TRANSF. VAL. MESURE~", e$
    "     Q381 = 0  ; PALP. DS AXE PALPEUR~", e$
    "     Q382 = 0  ; 1. CO. POUR AXE PALP.~", e$
    "     Q383 = 0  ; 2. CO. POUR AXE PALP.~", e$
    "     Q384 = 0  ; 3. CO. POUR AXE PALP.~", e$
    "     Q333 = +1  ; POINT DE REFERENCE", e$
    perreurPalp2  #0200 "2 ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"


pdrlcst4    #Cycle de palpage "415 Pt de réf. inter Coin"   #0014
    gcode$ = 0
    bq261 = depth$
    bq260 = initht$ 
    n$, "TCH PROBE 415 PT REF INT. COIN~", e$
    "     Q263 = ", drl_prm4$, "  ; 1ER POINT 1ER AXE~", e$
    "     Q264 = ", drl_prm5$, "  ; 1ER POINT 2EME AXE~", e$
    "     Q326 = ", drl_prm6$, "  ; DISTANCE 1ER AXE~", e$
    "     Q327 = ", drl_prm7$, "  ; DISTANCE 2EME AXE~", e$
    "     Q308 = ", drl_prm8$, "  ; COIN~", e$
    "    ", bq261, "  ; HAUTEUR DE MESURE~", e$
    "     Q320 = 2  ; DISTANCE D'APPROCHE~", e$
    "    ", bq260, "  ; HAUTEUR DE SECURITE~", e$
    "     Q301 = 1  ; DEPLACEMENT HAUT. SEC.~", e$
    "     Q304 = ", drl_prm3$, "  ; ROTATION DE BASE~", e$
    "     Q305 = ", drl_prm10$, "  ; NO. DANS TABLEAU~", e$ #0034
    "     Q331 = ", *x_pt_zero, "  ; POINT DE REF.~", e$   #0034
    "     Q332 = ", *y_pt_zero, "  ; POINT DE REF.", e$    #0034
    "     Q303 = -1  ; TRANSF. VAL. MESURE~", e$
    "     Q381 = 0  ; PALP. DS AXE PALPEUR~", e$
    "     Q382 = 0  ; 1. CO. POUR AXE PALP.~", e$
    "     Q383 = 0  ; 2. CO. POUR AXE PALP.~", e$
    "     Q384 = 0  ; 3. CO. POUR AXE PALP.~", e$
    "     Q333 = +1  ; POINT DE REFERENCE", e$
    perreurPalp3  #0200 "ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"

pdrlcst5    #Cycle de palpage "417 Pt de réf. int. dans l'axe du palpeur"   #0014
    gcode$ = 0
    bq294 = depth$ - tosz$
    bq260 = initht$
    bq333 = peck1$
    bq263 = x1
    bq264 = y2
    n$, "TCH PROBE 417 PT REF AXE TS~", e$
    "    ", bq263, "  ; 1ER POINT 1ER AXE~", e$
    "    ", bq264, "  ; 1ER POINT 2EME AXE~", e$
    "    ", bq294, "  ; 1ER POINT 3EME AXE~", e$
    "     Q320 = 5  ; DISTANCE D'APPROCHE~", e$
    "    ", bq260, "  ; HAUTEUR DE SECURITE~", e$
    "    ", bq333, "  ; POINT DE REF.~", e$
    "     Q305 = ", drl_prm10$, "  ; NO. DANS TABLEAU~", e$ #0034
    "     Q303 = ", *z_pt_zero, "  ; POINT DE REF.", e$    #0034

pdrlcst6        #Cycle de palpage "408 Pt de réf. CENTRE RAINURE"   #0014
    gcode$ = 0
    bq261 = depth$
    bq260 = initht$ 
    bq311 = peck1$
    bq321 = x$  
    bq322 = y$  
    if peck2$ = 1 , n$, "; PALPAGE EN X", e$
    if peck2$ = 2 , n$, "; PALPAGE EN Y", e$
    n$, "TCH PROBE 408 PT REF. CENTRE RAINURE~", e$
    #perreurPalp1   #0200 "1 ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"
    "    ", bq321, "  ; CENTRE 1ER AXE~", e$
    "    ", bq322, "  ; CENTRE 2EME AXE~", e$
    "    ", bq311, "  ; LARGEUR RAINURE~", e$
    #if drl_prm1$ = 1 ,"     Q272 = 1  ; -X- AXE DE MESURE~", e$
    #if drl_prm2$ = 1 ,"     Q272 = 2  ; -Y- AXE DE MESURE~", e$
    if peck2$ = 1 ,"     Q272 = 1  ; -X- AXE DE MESURE~", e$
    if peck2$ = 2 ,"     Q272 = 2  ; -Y- AXE DE MESURE~", e$
    "    ", bq261, "  ; HAUTEUR DE MESURE~", e$
    "     Q320 = 10  ; DISTANCE D'APPROCHE~", e$
    "    ", bq260, "  ; HAUTEUR DE SECURITE~", e$
    "     Q301 = 1  ; DEPLAC. HAUT. SECU.~", e$
    "     Q305 = ", drl_prm10$, "  ; NO. DANS TABLEAU~", e$ #0034
    "     Q405 = 0  ; POINT DE REFERENCE~", e$
    "     Q303 = +1  ; TRANSF. VAL. MESURE~", e$
    "     Q381 = 0  ; PALP. DS AXE PALPEUR~", e$
    "     Q382 = 0  ; 1. CO. POUR AXE PALP.~", e$
    "     Q383 = 0  ; 2. CO. POUR AXE PALP.~", e$
    "     Q384 = 0  ; 3. CO. POUR AXE PALP.~", e$
    "     Q333 = 0  ;POINT DE REFERENCE", e$    #0034
    #"     Q333 = ", *z_pt_zero, "  ;POINT DE REFERENCE", e$    #0034

p_affiche_outil_percages
    if nom_outil = 1, n$, "TOOL CALL ", 34, no_spc$, strtool$, no_spc$, 34, "Z", ssa, e$
    if outils_param = 0 & nom_outil = 0, n$, "TOOL CALL ", t$, "Z", *_ssa, e$
    if outils_param = 1 & nom_outil = 0, [
        outil_paramT2 = t$ + 1800
        n$, "TOOL CALL", outil_paramT2, "Z", *_ssa, e$
        ]

pdrlcst7    # perçage très profond avec trous d'huile   #0091
    gcode$ = 0
    #result = mprint(s_mess_per_prof)
    #result = mprint(s_mess_per_prof2)
    #if ssa > 500, result = mprint(s_mess_per_prof3)    # "ATTENTION -S- DE DEPART > 500 Tr/mn A MODIFIER DANS L'ISO !"#0092
    f_p_profond = abs(frplunge$ *2)
    z_dep_p_prof = tosz$ +2
    #f_p_profond = abs(f_p_profond)
    n$, "; PERCAGE TRES PROFOND", e$
    n$, "M4 ",  e$
    n$, "L", refht$, f_p_profond, e$   # Z secu dehors
    n$, "L", *z_dep_p_prof, ";Z depart + garde de 2mm", e$ # Z départ
    n$, "M3", e$
    n$, "CYCL DEF 9.0 TEMPORISATION", e$
    n$, "CYCL DEF 9.1 TEMPO. 1.0", e$
	p_affiche_outil_percages
    #0085
    n$, "M7 ; arrosage au centre", e$
    n$, "CYCL DEF 9.0 TEMPORISATION", e$
    n$, "CYCL DEF 9.1 TEMPO. 1.0", e$
    n$, "L", *depth$, *frplunge$, e$
    n$, "M9", e$
    #n$, "L", *dwell$, e$
    n$, "L Z", tosz$, "F1000", e$
    p_affiche_outil_percages
    #0085
    n$, "L", initht$, e$
    drillcyc$ = -1
    drlcst7 = 1

    perreurTaraud #0200

pdrlcst7_2    # perçage très profond avec trous d'huile   #0091
    gcode$ = 0
    pdrlcst_autres
    #result = mprint(s_mess_per_prof)
    #result = mprint(s_mess_per_prof2)
    f_p_profond = abs(frplunge$ *2)
    z_dep_p_prof = tosz$ +2
    #f_p_profond = abs(f_p_profond)
    n$, "; PERCAGE TRES PROFOND", e$
    n$, "M4 ",  e$
    n$, "L", refht$, f_p_profond, e$   # Z secu dehors
    n$, "L", *z_dep_p_prof, ";Z depart + garde de 2mm", e$ # Z départ
    n$, "M3", e$
    n$, "CYCL DEF 9.0 TEMPORISATION", e$
    n$, "CYCL DEF 9.1 TEMPO. 1.0", e$
    p_affiche_outil_percages
    #0085
    n$, "M7 ; arrosage au centre", e$
    n$, "CYCL DEF 9.0 TEMPORISATION", e$
    n$, "CYCL DEF 9.1 TEMPO. 1.0", e$
    n$, "L", *depth$, *frplunge$, e$
    n$, "M9", e$
    #n$, "L", *dwell$, e$
    n$, "L Z", tosz$, "F1000",e$
    p_affiche_outil_percages
    #0085
    n$, "L", initht$, e$
    drillcyc$ = -1
    drlcst7 = 0

pdrlcst_autres  # Positions de percages
    n$, "L", *x$, *y$, sgcode, e$     #0012
    !x$,!y$

pcanceldc$  # Cancel canned drill cycle
   gcode$ = 0
   n$, "L", *zr$, sgcode,e$

pcancelcc$  # Cancel canned drill cycle

#endregion

#region erreurs
#0200   GESTION DES ERREURS
s_erreur_message 		: ""
serreur         		: ""
serreur2        		: "nbr_combi_axes > 1, qu'une combinaison d'axe par programme"
serreurTar      		: "Erreur - Taraud avec un autre cycle"
serreurTar2     		: "Erreur - Taraud INFORMER LA VALEUR DU PAS"
serreurCC_Cor   		: "ATTENTION PRISE DE CORRECTION OU ANNULATION SUR UN CERCLE"
serreurPar_perc 		: "ATTENTION BQ256 NE PEUT ETRE 0"
serreurPalp1    		: "ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"
serreurPalp2    		: "ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"
serreurPalp3    		: "ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"
serreur_vit_broche 		: "ATTENTION -BROCHE SANS VITESSE-"
s_erreur_origine_plan 	: "ATTENTION coordonnée de l'origine du plan incliné ne correspond à l'origine de base"  #0079
s_erreur_Nom_RUD 		: "ATTENTION *** RUDs DIFFERENTS dans un meme programme ****"  #0080
s_erreur_prof_passe 	: "ATTENTION ***renseigner la profondeur de passe au PERCAGE"
s_erreur_pas_fil 		: "ATTENTION RENSEIGNER LE PAS DU FILETAGE à la fraise"    #0090
#s_mess_per_prof 		: "ATTENTION METTRE S/10 SUR LE FORET TRES LONG. LE PP *10" #0091
#s_mess_per_prof2 		: "ATTENTION METTRE -F- A LA BONNE VALEUR SUR LE FORET TRES LONG."#0091
#s_mess_per_prof3 		: "ATTENTION -S- DE DEPART > 500 Tr/mn A MODIFIER DANS L'ISO !"#0092
s_erreur_pas_fil2 		: "ATTENTION l'outil et l'opération non pas le meme PAS !" #0093
s_erreur_num_outil 		: "ATTENTION le numéro d'outil dépasse les 30 !" #0094
s_erreur_tranf_plan 	: "ATTENTION transformation PLAN à plat ! Rotation sur Z !" #0096
s_erreur_origine_plan2 	: "- POUR INFO - il peut Etre utilisE avec plusieurs piEces"  #0079
s_erreur_dif_T_H_D 		: "ATTENTION num. d'outil est different du num -H- ou -D- !" #0097
s_erreur_avance_fil 	: "ATTENTION l'avance de filetage à la fraise est TROP importante !" #0099
s_erreur_avanceS 		: "ATTENTION **INFORMER LA VALEUR DE --F-- DANS L OUTIL***" #0102
s_erreur_choix_axe 		: "ATTENTION **CE POST-PROCESSEUR N'EST PAS PREVU POUR CETTE ROTATION D'AXE !"
s_erreur_nbr_axes_rot 	: "le pst ne supporte q'un axe rotatif"
s_erreur_choix_cycle_palpage 	: "CYCLES DE PALPAGES NON AUTORISE, VEUILLEZ CONTACTER FICAM POUR LES UTILISER"
s_erreur_stock_cyl_axis 			: "ERREUR - Brut cylindrique doit Etre autour de Z pour du fraisage 3 axes, ou autour de X-Y en 4 axes" + no2asc(13) + no2asc(13) +
                       				"Erreur de brut dans l'ISO."
s_erreur_stock_shape 			: "ERREUR - CONFIG. DU BRUT - Seulement rectangulaire ou Cylindrique supportEs CN." + no2asc(13) + no2asc(13) + "Info dans l'ISO, Solide-Maillage, Stl"
s_erreur_inclinaison_OP_5axes 	: "ATTENTION **UNE INCLINAISON IMPOSSIBLE SUR CETTE MACHINE EST DEMANDEE EN OPERATION 5 AXES !"

perreurTaraud   #"Erreur - Taraud avec un autre cycle"
    if paramT2 = 4 | paramT2 = 5, [   
        "ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(serreurTar)
        exitpost$
        ]

perreurTaraud2  #"ATTENTION PAS DE VALEUR DE ***PAS***"
    if pas =0, [        #if tool_typ$ = 3 | tool_typ$ = 4,
        "ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(serreurTar2)
        exitpost$
        ]

perreurCC_COR   #"ATTENTION PRISE DE CORRECTION OU ANNULATION SUR UN CERCLE"
    if cc$ =41 | cc$ = 42 | cc$ =40 | cc$ = 140, [
        "ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(serreurCC_Cor)
        exitpost$
        ]

perreurPar_perc #"ATTENTION BQ256 NE PEUT ETRE 0"
    if bq256 = 0, [
        "ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(serreurPar_perc)
        exitpost$
        ]

perreurPalp1    #"ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"
    if (drl_prm1$ = 1 & drl_prm2$ = 1) | (drl_prm1$ = 0 & drl_prm2$ = 0), [
        "ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(serreurPalp1)
        exitpost$
        ]

perreurPalp2    #"ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"
    if drl_prm6$ < 1, [
        "ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(serreurPalp2)
        exitpost$
        ]

perreurPalp3    #"ATTENTION SELECTIONNER LES PARAM. DU CYCLE **DANS PARAMETRES**"
    if drl_prm8$ < 1 , [
        "ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(serreurPalp3)
        exitpost$
        ]

perreur_vit_broche #"ATTENTION -BROCHE SANS VITESSE-"
    if ssa = 0,    [
        #"ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(serreur_vit_broche)
        #exitpost$
        ]

Perreur_origine_plan    #0079
    if Val_origine_Z <> Old_Val_origine_Z | Val_origine_Y <> Old_Val_origine_Y | Val_origine_X <> Old_Val_origine_X, 
        [
        s_erreur_message = "ATTENTION ERREUR 12 OP: " + no2str(op_id$)+ " AVEC OUTIL " + no2str(t$)
		result = mprint(s_erreur_origine_plan)
        result = mprint(s_erreur_origine_plan2)
		result = mprint(s_erreur_message)
        #exitpost$
        ]

Perreur_nom_RUD         #0080
    if snom_RUD <> Sold_snom_RUD,
        [
        "ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
        s_erreur_Nom_RUD, e$
        result = mprint(s_erreur_Nom_RUD)
        #exitpost$
        ]
    Sold_snom_RUD = snom_RUD

Perreur_prof_passe  #"ATTENTION ***renseigner la profondeur de passe au PERCAGE"
    if bq202 = 0, [
        "ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
        s_erreur_prof_passe, e$
        result = mprint(s_erreur_prof_passe)
        #exitpost$
        ]

perreur_pas_fil  #0090 "ATTENTION RENSEIGNER LE PAS DU FILETAGE à la fraise"
    if tool_op$ = 100,    [
        if pas_filetage = 9.999, [  #0090 "ATTENTION RENSEIGNER LE PAS DU FILETAGE à la fraise"
            "ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
            result = mprint(s_erreur_pas_fil)
            exitpost$
            ]
        if pas_filetage <> paramT7, [   #0093 ""ATTENTION l'outil et l'opération non pas le meme PAS !""
            "ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
            result = mprint(s_erreur_pas_fil2)
            exitpost$
            ]
        p_erreur_avance_fil #99
        ]

perreur_num_outil  # "ATTENTION le numéro d'outil dépasse les 30 !" #0094
    if t$ >30,    [
        "ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(s_erreur_num_outil) 
        #exitpost$
        ]

perreur_tranf_plan # "ATTENTION transformation PLAN à plat !  Rotation sur Z !" #0096
    if (diviseur = 1 & m1$ <> 1) | (diviseur = 2 & m5$ <> 1), [
        "ATTENTION ERREUR 9 OP: ", op_id$, " AVEC OUTIL ", t$, e$
        "ATTENTION VERIFIER SI LE NOUVEAU PLAN EST BIEN D EQUERRE PAR RAPPORT AU RUD", e$
        result = mprint(s_erreur_tranf_plan)
		n$, *m1$, *m2$, *m3$, *m4$, *m5$, *m5$, *m7$, *m8$, *m9$, e$
        ]
    if diviseur = 1 & m1$ <> 1, [
        "ROTATION AXE MACHINE = ", s_axe_rot_A, e$
        "SOLUTION CREER LE NOUVEAU PLAN PAR RAPPORT AU RUD AVEC -PLAN ROTATION- DE X DEG. EN X,Y OU Z", e$
        ]
    if diviseur = 2 & m5$ <> 1, [
        "ROTATION AXE MACHINE = ", s_axe_rot_B, e$
        "SOLUTION CREER LE NOUVEAU PAR RAPPORT AU RUD AVEC -PLAN ROTATION- DE X DEG. EN X,Y OU Z", e$	
        ]

p_erreur_dif_T_H_D #0097 "ATTENTION num. d'outil est different du num -H- ou -D- !"
    if t$ <> tloffno$ | t$ <> tlngno$,
        [
        #"ATTENTION ERREUR OP: ", op_id$, " AVEC OUTIL ", t$, e$
        #s_erreur_dif_T_H_D, e$
        #result = mprint(s_erreur_dif_T_H_D)
        #exitpost$
        ]

p_erreur_avance_fil #0099 "ATTENTION l'avance de filetage à la fraise est TROP importante !" #0099
    if fr$ > 500,    [
        "ATTENTION l'avance de filetage à la fraise est TROP importante !", e$
        "ATTENTION ERREUR 16 OP: ", op_id$, " AVEC OUTIL ", t$, e$
        result = mprint(s_erreur_avance_fil)
        ]

p_erreur_avanceS    #: "ATTENTION **INFORMER LA VALEUR DE --F-- DANS L OUTIL***" #0102
	if drillcyc$ > 0 & (frplunge$ = 0 | fr_pos$ = 0),    [
        "ATTENTION l'avance -F- EST A --0-- !", e$
        "ATTENTION ERREUR 17 OP: ", op_id$, " AVEC OUTIL ", t$, e$
        #*drillcyc$, *frplunge$, *fr_pos$, *fr$, e$
        result = mprint(s_erreur_avanceS)
        ]

p_erreur_choix_axe    #: "ATTENTION **CE POST-PROCESSEUR N'EST PAS PREVU POUR CETTE ROTATION D'AXE !"
    "ATTENTION **CE POST-PROCESSEUR N'EST PAS PREVU POUR CETTE ROTATION D'AXE !"
    result = mprint(s_erreur_choix_axe)
    if diviseur = 1, "ROTATION AXE :", s_axe_rot_B, e$
    if diviseur = 2, "ROTATION AXE :", s_axe_rot_A, e$
    "ATTENTION ERREUR 18 OP: ", op_id$, " AVEC OUTIL ", t$, e$
	
p_erreur_cycle_palpage
	n$, "CYCLES DE PALPAGES NON AUTORISE, VEUILLEZ CONTACTER FICAM POUR LES UTILISER", e$
	result = mprint(s_erreur_choix_cycle_palpage)

p_erreur_inclinaison_OP_5axes    #: "ATTENTION **UNE INCLINAISON IMPOSSIBLE SUR CETTE MACHINE EST DEMANDEE EN OPERATION 5 AXES !"
    "ATTENTION **UNE INCLINAISON IMPOSSIBLE SUR CETTE MACHINE EST DEMANDEE EN OPERATION 5 AXES !"	
	"VEUILLEZ BLOQUER UN AXE SI POSSIBLE DANS L'OPERATION OU CHANGER D'OPERATION"
    result = mprint(s_erreur_inclinaison_OP_5axes)
    "ATTENTION ERREUR 20 OP: ", op_id$, " AVEC OUTIL ", t$, e$
	exitpost$

#endregion

#region entete_OP_commentaires
#0024**************************** Affichage des commentaires de début d'OP en entete Prog.
stextentete : ""
stextecoupe : ""
svirgule : ","
sposiNomprog : "/PROGRAMMEUR/"
sposiClient : "/CLIENT/"
sposiPiece : "/NOM PIECE/"
sposiNumplan : "/NUM PLAN/"
sposiIndiceplan : "/INDICE/"
#Textes origines
sposiX  : "/X/"
sposiY  : "/Y/"
sposiZ  : "/Z/"
#Texte Orientation
sposiOrient : "/ORIENTATION/"
#Texte Divers
sposInfos : "/INFO/"
#sposivirgule : ""    # la virgule indique le saut à la ligne
sSlash : "/"    #0120

fmt 7 posiNomprog
fmt 7 posiClient
fmt 7 posiNomPiece
fmt 7 posiNumplan
fmt 7 posiIndiceplan
fmt 7 posiX
fmt 7 posiY
fmt 7 posiZ
fmt 7 posiOrientation
fmt 7 posiInfo
fmt 7 posivirgule
fmt 7 posicoupe
fmt 7 posiSlash #0120
fmt 7 long_TEXTE

ptextentete

    stextentete = scomm$
    long_TEXTE = strlen(stextentete)    #0120
    posiNomprog = strstr(sposiNomprog, stextentete)
    posiClient = strstr(sposiClient, stextentete)
    posiNomPiece = strstr(sposiPiece, stextentete)
    posiNumplan = strstr(sposiNumplan, stextentete)
    posiIndiceplan = strstr(sposiIndiceplan, stextentete)
    posiX = strstr(sposiX, stextentete)
    posiY = strstr(sposiY, stextentete)
    posiZ = strstr(sposiZ, stextentete)
    posiOrientation = strstr(sposiOrient, stextentete)
    posiInfo = strstr(sposInfos, stextentete)
    #posivirgule = strstr(svirgule, stextentete)
    posiSlash = strstr(sSlash, stextentete) #0120

    longTexte = 1           #0025
    if posiNomprog <>0,
        [
        posicoupe = posiNomprog+13
        pcoupetexte
        n$, " ; PAR:", stextecoupe, e$
        ]
    if posiClient >0,
        [
        posicoupe = posiClient+8
        pcoupetexte
        n$, " ; CLIENT:", stextecoupe, e$
        ]
    if posiNomPiece >0,
        [
        posicoupe = posiNomPiece+11
        pcoupetexte
        n$, " ; PIECE:", stextecoupe, e$
        ]
    if posiNumplan >0,
        [
        posicoupe = posiNumplan+10
        pcoupetexte
        n$, " ; PLAN:",stextecoupe, e$
        ]
    if posiIndiceplan >0,
        [
        posicoupe = posiIndiceplan+8
        pcoupetexte
        n$, " ; INDICE:",stextecoupe, e$
        ]
    if posiX >0,
        [
        posicoupe = posiX+3
        pcoupetexte
        n$, " ; ORIGINE:", e$, n$, " ; X:", stextecoupe, e$
        ]
    if posiY >0,
        [
        posicoupe = posiY+3
        pcoupetexte
        n$, " ; Y:", stextecoupe, e$
        ]
    if posiZ >0,
        [
        posicoupe = posiZ+3
        pcoupetexte
        n$, " ; Z:",stextecoupe, e$
        ]
    if posiOrientation >0,
        [
        posicoupe = posiOrientation+13
        pcoupetexte
        n$, " ; ORIENTATION PIECE: ",e$, n$, " ;", stextecoupe, e$
        ]
    if posiInfo >0,
        [
        posicoupe = posiInfo+6
        pcoupetexte
        n$, " ; *****************************",e$
        n$, " ;", stextecoupe, e$
        ]
    #if posivirgule > 0,
        #[
        #posicoupe = posivirgule+1
        #pcoupetexte
        #n$, " ;",stextecoupe, e$
        #]
    if posiSlash = 0 & long_TEXTE > 0,  #0120
        [
        n$, " ;", scomm$, e$
        ]

pcoupetexte #coupe le texte
            stextecoupe = brksps(posicoupe, stextentete)

#endregion

#region infos_outils_liste
#------------------Liste des OUTILS---------------------------------------------------
smanu : ""
svide : " "
smand : ""                       	#0021 string info outil texte dans "mandrin" (chuck name)
snom_porte_outil : ""             	#0101
snom_assemblage_outil_porte_outil : "" 	
sposi_porte_out_def : "Porte"   #0101   string test prEsence "porte outil par dEfaut"
fmt       7 posi_porte_out_defaut 	#0101
fmt       7 longsmand             	#0023
fmt       4 paramT1                	# N° outil
fmt       2 paramT2                 # Type d'outil
fmt       2 paramT3                 # Matiere de l'outil 1=Rapide 2=carbure 3=carbure revetu 4=cermet 5=borzon
fmt       2 paramT4                 # Type de rayon de bout 0=aucun 1=torique 2=spherique
fmt "D=" 11 paramT5               	# Diametre
fmt "R=" 11 paramT6               	# Rayon de bout
fmt "P=" 11 paramT7             	# PAS / Nombre de filet par mm
fmt "A=" 11 paramT8               	# Angle de bout
fmt       2 paramT9                 # N° de correcteur de rayon
fmt       2 paramT10                # N° de correcteur de longeur
fmt       2 paramT11                # Avance travail
fmt       2 paramT12                # Avance plongee
fmt       2 paramT13                # Avance retraction
fmt       2 paramT14                # Vitesse de broche
fmt       2 paramT15                # Type de lubrification 0=arret 1=eau 2=air 3=broche 4=les 2
fmt "NBR-DENTS="  4 paramT16    	# Nombre de dents

# géométrie de l'outil
fmt   6 paramT20                 	# Diamètre pilote
fmt "EP=" 6 paramT21             	# Hauteur de coupe
fmt "HS=" 6 paramT22             	# Hauteur de sortie totale
fmt   	  6 paramT23                 	# Hauteur helice
fmt   	  6 paramT24                 	# Diametre de queue
fmt   	  6 paramT25                 	# Diametre porte-outil
fmt   	  6 paramT26                 	# Hauteur porte-outil
fmt   	  6 paramT27                 	# 0=sens horaire 1=sens horaire
fmt   	  6 paramT28                 	# % de la vitesse de coupe
fmt   	  6 paramT29                 	# % de l'avance par dent
fmt   	  4 paramT30                 	# 0=pouces 1=metrique

stypT00 : "FORME"
stypT01 : "FORET A C."
stypT02 : "FORET A P."
stypT03 : "FORET"
stypT04 : "TARAUD A D."
stypT05 : "TARAUD A G."
stypT06 : "ALESOIR"
stypT07 : "BARRE D ALES."
stypT08 : "FR. COUTEAU"
stypT09 : "FR. A EBAVUR."
stypT10 : "FR."
stypT11 : "FR. BOULE"
stypT12 : "FR. A CHANF."
stypT13 : "TOURTEAU"
stypT14 : "FR. 3 T."
stypT15 : "FR. CONCAVE"
stypT16 : "FR. QUEUE D ARONDE"
stypT17 : "FR. CONIQUE TRONQUEE"
stypT18 : "FR. SPHERIQUE"
stypT19 : "FR. TORIQUE"
stypT20 : "SPECIALE"
stypT21 : "FRAISE A GRAVER"
stypT22 : "FORET BRAD"
stypT23 : "BARRE D ALESAGE"
stypT24 : "FRAISE A FILETER"
stypT25 : "FRAISE TONNEAU"
stypT26 : "FRAISE DEPOUILLE"
stypT27 : "FRAISE LENTILLE"
stypT28 : "FRAISE LENTILLE TONNEAU"
stypT29 : "DIVERS"
stypeT : ""
fstrsel stypT00 paramT2 stypeT 30 -1

smatT0  : ""
smatT1  : "HSS"
smatT2  : "CA."
smatT3  : "CA. REVETU"
smatT4  : "CERMET"
smatT5  : "BORZON"
smatT6  : "BORZON"
smatT7  : "BORZON"
smatT8  : "BORZON"
smatT9  : "BORZON"
smatT10 : "INCONNU"
smatT : ""
fstrsel smatT0 paramT3 smatT 11 -1

ppas       # afficher ou non le pas
    if paramT7 > 0, *paramT7

ptypeBoutT # afficher on non le rayon de bout
    if paramT4 <> 0, *paramT6

pangleT    # afficher on non l'angle de l'outil
    if paramT2 = 2 | paramT2 = 3 | paramT2 = 9 | paramT2 = 12 | paramT2 = 13 | paramT2 = 16 | paramT2 = 17, *paramT8

phauteurT  # afficher la hauteur de dent pour une fraise 3 tailles
    if paramT2 = 14, paramT21

ptype      # Pour afficher le texte des outils perso suivant comment. dans "mandrin" (chuck name)#0023#0029
    longsmand = strlen(smand)
    #if longsmand > 5, *smand    # attention pas d'espaces dans cette case "mandrin"
    #else, *stypeT
    if longsmand > 3, *strtool$,
    else, *stypeT

pporte_outil #0101
	posi_porte_out_defaut = strstr(sposi_porte_out_def, snom_porte_outil)
	spaces$ = 1
	if posi_porte_out_defaut < 1, [ 
		if Nom_porte_outil_entete = 1, n$, "; porte out.:", no_spc$, snom_porte_outil, *paramT22, e$ 
		if Nom_porte_outil_entete = 2, n$, "; Assemblage:", no_spc$, snom_assemblage_outil_porte_outil, *paramT22, e$
		if Nom_porte_outil_entete = 3, n$, "; porte out.:", no_spc$, snom_porte_outil, "Assemblage:", no_spc$, snom_assemblage_outil_porte_outil, *paramT22, e$
		]

pwrttparam$    # lire les parametres des outils
    if affiche_prmcodes = 1, "-->pwrttparam DONNEES OUTILS", ~prmcode$, "=", ~sparameter$, e$
    if syncaxis$ <> old_syncaxis, nbr_combi = nbr_combi + 1
    old_syncaxis = syncaxis$
    if prmcode$ = 20002, smanu = sparameter$   
    if prmcode$ = 20003, smand = sparameter$   
    if prmcode$ = 20004, paramT1 = rpar(sparameter$, 16)
    if prmcode$ = 20007, paramT20 = rpar(sparameter$, 11)
    if prmcode$ = 20005, perc_prof = rpar(sparameter$, 1)  	#0100 lecture du type de perçage DE L'OUTIL ***valeur du cycle affecté à l'outil** 1= percage simple, 2 =débourrage ...
    #if prmcode$ = 12727, snom_porte_outil = sparameter$         
	if prmcode$ = 20020, snom_porte_outil = sparameter$ 
	if prmcode$ = 20021, snom_assemblage_outil_porte_outil = sparameter$ 
    longsmand = strlen (smand)

parrosage  # affichage de "arrosage au centre"
    if paramT15 = 2, "ARROSAGE AU CENTRE"    #0028

pwrtt$      # Liste d'outils & infos (--> lecture avant traitement parcours)
    strtool$ = ucase(strtool$)
    # vErification des rotations avant le traitement ISO
    if m9$ <> 1, rotation_axe = 1               # Inclinaison des axes
    if nextop$ = 11, rotation_axe = 1			# useaxe = 1	#si pas de lecture def armoire en OP 5 axes seule
	if m1$ = 1 & m5$ <> 1, rotation_A = 1       # incliné en Y uniquement (et Z) = ROTATION SUR L'AXE X
    if m1$ <> 1 & m5$ = 1, rotation_B = 1       # incliné en X uniquement (et Z) = ROTATION SUR L'AXE Y
    if m1$ <> 1 & m5$ <> 1, rotation_axe = 2    # Erreur de plan
	
	# pour info : Type_infos_outil	 
	# 1 = NOM de l'outil "texte NOM" --> strtool$
	# 3 = NOM MC de l'outil et Infos géométrique réelle de l'outil
	# 4 = NOM de l'outil "texte NOM" & Infos géométrique réelle de l'outil --> = 0 + 2				
	if Liste_outils, [
	    if nom_outil = 1, [   #0121
	        if t$ > 0, [
				n$, s_com_open, strtool$, 
					if Type_infos_outil	= 1, e$
					if Type_infos_outil	= 2 | Type_infos_outil= 4, "--", *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, s_com_close, e$ 
					if Type_infos_outil	= 3, "--", ptype, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, s_com_close, e$ 
				pporte_outil
				]
	        ]
	    if nom_outil = 0, [
	        if outils_param = 0, [	#0053 sans les parametres
				if t$ > 0, [	            	
					if Type_infos_outil	= 1, n$, "; T", paramT1, strtool$, e$					
					if Type_infos_outil	= 2 | Type_infos_outil	= 3, n$, "; T", paramT1, ptype, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, e$  			
	            	if Type_infos_outil	= 4, n$, "; T", paramT1, strtool$, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, e$  				
					pporte_outil
					]
				]
	        if outils_param = 1,  [  #0053 avec les parametres
	            outil_paramT1 = paramT1
	            outil_paramT1 = outil_paramT1 + 1800    #0098
				if t$ > 0, [
					if Type_infos_outil	= 1, n$, "FN 0: Q", outil_paramT1, "=", paramT1, "; T", paramT1, strtool$, e$	
					if Type_infos_outil	= 2 | Type_infos_outil	= 3, n$, "FN 0: Q", outil_paramT1, "=", paramT1, ";", ptype, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, e$  
					if Type_infos_outil	= 4, n$, "FN 0: Q", outil_paramT1, "=", paramT1, ";", strtool$, *smatT, *paramT5, ptypeBoutT, pangleT, phauteurT, ppas, parrosage, e$  
					pporte_outil
					]					
				]
	        ]
		]
	# Compteur d'opErations dans le programme
	if op_id$ > 0, nbr_opErations = nbr_opErations + 1
    #0085
    ptravel
    pwritbuf5
#endregion

#region modif_nom_fichiers
#0030------------------------ RENOMMER LE FICHIER NC EN FONCTION DU NUMERO DE PROGRAMME -------------------------
snom_nc : ""           	# STRING de stockage du non du NC complet avec chemin et extension style c:\cfao\prog-cn\TOTO.NC
snom_numero : ""       	# STRING de stockage du non du NC sous forme O0123.nc avec chemin et extesion style c:\cfao\prog-cn\ous forme O0123.NC
spoint : ""          	# STRING du POINT pour l'extenssion (.NC)
#stringo            	# STRING du O pour le non (O0123) en nom du Numero PRG
#seditor : "C:\WINNT\system32\notepad.exe" # nom de l'editeur pour les prog en nom du Numero PRG (avec chemin complet si pas dans Windows)
#seditor : "C:\WINDOWS\notepad.exe"    #XP non de l'editeur pour les prog en nom du Numero PRG (avec chemin complet si pas dans Windows)
#seditor : "C:\Program Files\Microsoft Office\Office\WINWORD.EXE"  #ouvrir avec WORD
#seditor : "C:\Mcam91\Common\Editors\Cedit\CIMCOEdit.exe"  #ouvrir avec CIMCOEDIT (ne fonctionne pas)
seditor  : "C:\Program Files\Mastercam 2022\Mastercam\Extensions\CodeExpert.exe"    #NOUVEL EDITEUR MC"

sdebut : "F"
smachine : "-BR"             # addition en fin de fichier en commentaire de 2ème ligne ex: FD260450-A-BR.H
snouv_nom : ""
schange_nom_fichier : ""     # nouveau nom uniquement, sans le chemin
snomprogentete : ""
#sfraisage_ "\FRAISAGE\"
#stous_clients "\TOUS_CLIENTS\"
sext : ""                    # extention
spoint2 : "."                  #0040 STRING du POINT pour l'extenssion (.NC) UNIQUEMENT pour les entêtes prog.
fmt 7 posipoint
#fmt 7 posiFraisage_
#fmt 7 posiTous_clients
sfileops : ""               # string du nom du fichier OPS
sops : ".ops"                 # extention des fichier OPS
spathnc_ : "C:\MASTERCAM FICAM\ISO\" #chemin pour les fichiers ISO

sdebut2 : "PF"                #0300
snom_entete : ""             #0300
#sprogno = progno$

pnom_nc     # Génération des noms du fichier NC
    #snom_fichier = sdebut+snamenci+smachine+spoint+sextnc
    snom_nc = spathnc_+snamenc$+spoint+sextnc$             #spathnc$ Fichier NC en cours de creation sous forme toto.nc
    #snom_numero = no2str (progno)
    snouv_nom = spathnc_+sdebut2+snamenci$+spoint+sextnc$  #spathnc$ nouveau nom de fichier NC sous forme F15662-A-2-HE.H
    schange_nom_fichier = snouv_nom
    snom_entete = sdebut+smcname$+smachine+spoint+sextnc$ #0300 nouveau non de fichier NC sous forme F15662-A-2-HE.H  AFFICHE EN COMMENTAIRE

    #smcpath$ = ucase (smcpath$)    # retourne le chemin du fichier CN
    #smcname$ = ucase (smcname$)    # Nom du fichier NC
    #smcext$ = ucase (smcext$)      # retourne l'extention du pst
    #snamepst$ = ucase (snamepst$)  # retourne le nom du pst

ptest_nom   # test du non du fichier NC si O0123.NC
    #progno2 = progno
    if fexist (snouv_nom), pchange_nom
        #[
        #Q10
        #pchange_nom   #ex #snom_numero
        #if remplace = 0, pchange_nom
        #if remplace = 1, result = remove (snouv_nom)
        #pchange_nom
        #snouv_nom = schange_nom_fichier
        #]
    pmodif_nom_entete

pchange_nom     # changer le numéro de prog si fichier exite déja
    while fexist (snouv_nom),       #(snom_numero)
        [
        q20
        #snom_numero = no2str (progno)
        #snouv_nom = spathnc+sdebut+snouv_nom+smachine+spoint+sextnc
        snouv_nom = schange_nom_fichier
        ]
    pmodif_nom_entete

pmodif_nom_entete   #modif nom au début et fin de l'ISO
    snomprogentete = snouv_nom

    #posiTous_clients = strstr(stous_clients, snomprogentete)
    #posiTous_clients = posiTous_clients + 14

    snomprogentete = brksps(25,snomprogentete)

    #if posiTous_clients > 15,
        #[
        #snomprogentete = brksps(posiTous_clients,snomprogentete)
        #]
    #else,
        #[
        #posiFraisage_ = strstr(sfraisage_, snomprogentete)
        #posiFraisage_ = posiFraisage_ + 10
        #snomprogentete = brksps(posiFraisage_,snomprogentete)
        #]

    #enlever l'extention de fichier ex: .H
    #ex. string2 = brksps (posipoint, string1)
    #   string1 = O1235     string2 = txt
    posipoint = strstr(spoint2, snomprogentete) #0040
    sext = brksps (posipoint, snomprogentete)

ppost$       # traitement après post pro pour effacer le fichier OPS et renommer le fichier NC
    if change_nom = 0, ex$           # pour 0 = pas de changement sur le fichier
    snouv_nom = ucase(snouv_nom)
    sfileops = spathnci$ + snamenci$ + sops     #non du fichier ops
    result = remove (sfileops)                  #éfface le fichier ops (si existant, en fonction de la question 1524 du PST
                                                #ou d'après la config MC, fichier utile pour les params surep...
    result = remove (snouv_nom)                 #efface fichier en nom numero
    result = rename (snom_nc, snouv_nom)        #renomer fichier NC en nom numero
    snouv_nom = sguillemet + snouv_nom + sguillemet #0040
    result = launch (seditor, snouv_nom)        #lancer le blocnote
#endregion

#region infos_limites_parcours
ptravel    #0085 Tool travel limit calculation
    if x_min$ < x_tmin, x_tmin = x_min$
    if x_max$ > x_tmax, x_tmax = x_max$
    if y_min$ < y_tmin, y_tmin = y_min$
    if y_max$ > y_tmax, y_tmax = y_max$
    if z_min$ < z_tmin, z_tmin = z_min$
    if z_max$ > z_tmax, z_tmax = z_max$

# --------------------------------------------------------------------------
#0085 Buffer 5  Read / Write Routines
# --------------------------------------------------------------------------
pwritbuf5   # Write Buffer 1
    b5_gcode = gcode$
    b5_zmin = z_min$
    b5_zmax = z_max$
    b5_gcode = wbuf(5, wc5)

preadbuf5   # Read Buffer 1
    size5 = rbuf(5,0)
    b5_gcode = 1000
    min_depth = 999
    max_depth = -999
    while rc5 <= size5 & b5_gcode = 1000,
        [
          if rc5 <= size5, b5_gcode = rbuf(5,rc5)
          if b5_zmin < min_depth, min_depth = b5_zmin
          if b5_zmax > max_depth, max_depth = b5_zmax
        ]
#endregion

[ENDBIN]

#region TEXTES_XML
[CTRL_TEXT_XML_BEGIN]  # All post text edits must be made through Control Definition Manager
<?xml version="1.0" encoding="UTF-8"?>
<mp_xml_post_text xml:space="preserve">
#region DEFAULT
	<control>
		<control_label>CTRL_MILL|DEFAULT</control_label>
		<language>fr-FR</language>
		<misc_integers>
			<misc_1>
				<text>""</text>
			</misc_1>
			<misc_2>
				<text>Parametres sur avances 0= OUI 0=NON</text>
			</misc_2>
			<misc_3>
				<text>Bris outil 1=TCH481 2=FRAISE 3=TCH586</text>
			</misc_3>
			<misc_4>
				<text>Cycle 7 activer/toutes les OPS 1=oui 0=nom</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>""</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>""</text>
			</misc_10>
		</misc_integers>
		<misc_reals>
			<misc_1>
				<text>0=absolu 0=G91 (IZ) de degag. 4 AXES 0</text>
			</misc_1>
			<misc_2>
				<text>""</text>
			</misc_2>
			<misc_3>
				<text>""</text>
			</misc_3>
			<misc_4>
				<text>""</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>""</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>""</text>
			</misc_10>
		</misc_reals>
		<simple_drill>
			<description>
				<text>Pointage Cycle 200</text>
			</description>
			<feed_rate>
				<text>Avance Q206</text>
			</feed_rate>
			<dwell>
				<text>Tempo. au fond Q211</text>
			</dwell>
			<clearance>
				<text>Saut bride Q204</text>
			</clearance>
			<retract>
				<text>Garde Q200</text>
			</retract>
			<depth>
				<text>Profondeur Q201</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</simple_drill>
		<peck_drill>
			<description>
				<text>Percage PROFOND Cycle 200</text>
			</description>
			<feed_rate>
				<text>Avance Q206</text>
			</feed_rate>
			<dwell>
				<text>Tempo. au fond Q211</text>
			</dwell>
			<clearance>
				<text>Saut bride Q204</text>
			</clearance>
			<retract>
				<text>Garde Q200</text>
			</retract>
			<depth>
				<text>Profondeur Q201</text>
			</depth>
			<first_peck>
				<text>Prof. passe Q202</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</peck_drill>
		<chip_break>
			<description>
				<text>Brise-copeaux cycle 203</text>
			</description>
			<feed_rate>
				<text>Avance Q206</text>
			</feed_rate>
			<dwell>
				<text>Prof mini passe Q205&gt;0</text>
			</dwell>
			<clearance>
				<text>Saut bride Q204</text>
			</clearance>
			<retract>
				<text>Garde Q200</text>
			</retract>
			<depth>
				<text>Profondeur Q201</text>
			</depth>
			<first_peck>
				<text>Prof. de passe Q202</text>
			</first_peck>
			<subsequent_peck>
				<text>Avance retrait Q208</text>
			</subsequent_peck>
			<peck_clearance>
				<text>Valeur réduction Q212</text>
			</peck_clearance>
			<retract_amount>
				<text>Nb brise-copeaux Q213</text>
			</retract_amount>
			<shift>
				<text>Retr. Brise-copeau Q256&gt;0</text>
			</shift>
		</chip_break>
		<tap>
			<description>
				<text>Cycle NOUV. Taraud. 207</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</tap>
		<bore1>
			<description>
				<text>Alésage avec alésoir 201</text>
			</description>
			<feed_rate>
				<text>Avance Q206</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Saut bride Q204</text>
			</clearance>
			<retract>
				<text>Garde Q200</text>
			</retract>
			<depth>
				<text>Profondeur Q201</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>Avance retrait Q208</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>Tempo. au fond Q211</text>
			</shift>
		</bore1>
		<bore2>
			<description>
				<text>Alésage indexé 202</text>
			</description>
			<feed_rate>
				<text>Avance Q206</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Saut bride Q204</text>
			</clearance>
			<retract>
				<text>Garde Q200</text>
			</retract>
			<depth>
				<text>Profondeur Q201</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>Avance retrait Q208</text>
			</subsequent_peck>
			<peck_clearance>
				<text>Sens dégagt Q214 =1</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>Tempo. au fond Q211</text>
			</shift>
		</bore2>
		<misc1>
			<description>
				<text>Taraud. Brise C. C.209</text>
			</description>
			<feed_rate>
				<text>Avance Q206</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Saut bride Q204</text>
			</clearance>
			<retract>
				<text>Garde Q200</text>
			</retract>
			<depth>
				<text>Profondeur Q201</text>
			</depth>
			<first_peck>
				<text>Prof. de passe Q257</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>Retr. Br-cop Q256</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</misc1>
		<misc2>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</misc2>
		<drill_cycle_9>
			<description>
				<text>Réf. Int. Exter rectangle</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité Q260</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Prof.Centre B.</text>
			</depth>
			<first_peck>
				<text>Long. en X Q323</text>
			</first_peck>
			<subsequent_peck>
				<text>Larg. en Y Q324</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_9>
		<drill_cycle_10>
			<description>
				<text>Réf. Int. Exter Cercle</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité Q260</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Prof.Centre B.</text>
			</depth>
			<first_peck>
				<text>Diametre nominal</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_10>
		<drill_cycle_11>
			<description>
				<text>Réf. Exter Coin</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité Q260</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Prof.Centre B.</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_11>
		<drill_cycle_12>
			<description>
				<text>Réf. Inter Coin</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité Q260</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Prof.Centre B.</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_12>
		<drill_cycle_13>
			<description>
				<text>Réf. en Z</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité Q260</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Z réf.</text>
			</depth>
			<first_peck>
				<text>Dist. à Z+- (Brut)</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_13>
		<drill_cycle_14>
			<description>
				<text>Réf. larg. rainure</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité Q260</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Prof.Centre B.</text>
			</depth>
			<first_peck>
				<text>LARGEUR</text>
			</first_peck>
			<subsequent_peck>
				<text>sur X=1 &amp; Y=2</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_14>
		<drill_cycle_15>
			<description>
				<text>Percage tres profond</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>Z HORS MAT.</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_15>
		<drill_cycle_16>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>1er Débour.</text>
			</first_peck>
			<subsequent_peck>
				<text>Déb. suivant</text>
			</subsequent_peck>
		</drill_cycle_16>
		<drill_cycle_17>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>1er Débour.</text>
			</first_peck>
			<subsequent_peck>
				<text>Déb. suivant</text>
			</subsequent_peck>
		</drill_cycle_17>
		<drill_cycle_18>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>1er Débour.</text>
			</first_peck>
			<subsequent_peck>
				<text>Déb. suivant</text>
			</subsequent_peck>
		</drill_cycle_18>
		<drill_cycle_19>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>1er Débour.</text>
			</first_peck>
			<subsequent_peck>
				<text>Déb. suivant</text>
			</subsequent_peck>
		</drill_cycle_19>
		<drill_cycle_20>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>1er Débour.</text>
			</first_peck>
			<subsequent_peck>
				<text>Déb. suivant</text>
			</subsequent_peck>
		</drill_cycle_20>
		<simple_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 1</text>
			</description>
		</simple_drill_custom_parameters>
		<peck_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 2</text>
			</description>
		</peck_drill_custom_parameters>
		<chip_break_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 3</text>
			</description>
		</chip_break_drill_custom_parameters>
		<tap_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 4</text>
			</description>
		</tap_custom_parameters>
		<bore1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 5</text>
			</description>
		</bore1_custom_parameters>
		<bore2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 6</text>
			</description>
		</bore2_custom_parameters>
		<misc1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 7</text>
			</description>
		</misc1_custom_parameters>
		<misc2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 8</text>
			</description>
		</misc2_custom_parameters>
		<drill_cycle_9_custom_parameters>
			<description>
				<text>Réf. Int./Ext. Rectangle</text>
			</description>
			<parameter_1>
				<text>Réf. Inter rectangle = 1</text>
			</parameter_1>
			<parameter_2>
				<text>Réf. Exter rectangle = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_9_custom_parameters>
		<drill_cycle_10_custom_parameters>
			<description>
				<text>Réf. Int./Ext. Cercle</text>
			</description>
			<parameter_1>
				<text>Réf. Inter Cercle = 1</text>
			</parameter_1>
			<parameter_2>
				<text>Réf. Exter Cercle = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>Q10 0= origine &gt;0 val. dans le</text>
			</parameter_9>
			<parameter_10>
				<text>Tableau pt 0  1=(54) 2=(55)..</text>
			</parameter_10>
		</drill_cycle_10_custom_parameters>
		<drill_cycle_11_custom_parameters>
			<description>
				<text>Réf. Ext. Coin</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>Rotation base 1=O 0=N</text>
			</parameter_3>
			<parameter_4>
				<text>1ER PT dist X en +</text>
			</parameter_4>
			<parameter_5>
				<text>1ER PT dist Y en +</text>
			</parameter_5>
			<parameter_6>
				<text>Dist. 2eme PT X G91 en +</text>
			</parameter_6>
			<parameter_7>
				<text>3EME PT dist X en +</text>
			</parameter_7>
			<parameter_8>
				<text>3EME PT dist Y en +</text>
			</parameter_8>
			<parameter_9>
				<text>Dist. 4eme PT Y en + G91</text>
			</parameter_9>
			<parameter_10>
				<text>&gt;0 Tab. pt 0  1=(54) 2=(55)..</text>
			</parameter_10>
		</drill_cycle_11_custom_parameters>
		<drill_cycle_12_custom_parameters>
			<description>
				<text>Réf. Int. Coin</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>Rotation base 1=O 0=N</text>
			</parameter_3>
			<parameter_4>
				<text>1ER PT dist X en +</text>
			</parameter_4>
			<parameter_5>
				<text>1ER PT dist Y en +</text>
			</parameter_5>
			<parameter_6>
				<text>Dist. 2eme PT X en + G91</text>
			</parameter_6>
			<parameter_7>
				<text>Dist. 3eme PT Y en + G91</text>
			</parameter_7>
			<parameter_8>
				<text>COIN:1=-135°,2=-45,3=45,4=135</text>
			</parameter_8>
			<parameter_9>
				<text>Q10 0= origine &gt;0 val. dans le</text>
			</parameter_9>
			<parameter_10>
				<text>Tableau pt 0  1=(54) 2=(55)..</text>
			</parameter_10>
		</drill_cycle_12_custom_parameters>
		<drill_cycle_13_custom_parameters>
			<description>
				<text>Réf. en Z</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>Q10 0= origine &gt;0 val. dans le</text>
			</parameter_9>
			<parameter_10>
				<text>Tableau pt 0  1=(54) 2=(55)..</text>
			</parameter_10>
		</drill_cycle_13_custom_parameters>
		<drill_cycle_14_custom_parameters>
			<description>
				<text>Réf. larg. rainure</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>Q10 0= origine &gt;0 val. dans le</text>
			</parameter_9>
			<parameter_10>
				<text>Tableau pt 0  1=(54) 2=(55)..</text>
			</parameter_10>
		</drill_cycle_14_custom_parameters>
		<drill_cycle_15_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 15</text>
			</description>
		</drill_cycle_15_custom_parameters>
		<drill_cycle_16_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 16</text>
			</description>
		</drill_cycle_16_custom_parameters>
		<drill_cycle_17_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 17</text>
			</description>
		</drill_cycle_17_custom_parameters>
		<drill_cycle_18_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 18</text>
			</description>
		</drill_cycle_18_custom_parameters>
		<drill_cycle_19_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 19</text>
			</description>
		</drill_cycle_19_custom_parameters>
		<drill_cycle_20_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 20</text>
			</description>
		</drill_cycle_20_custom_parameters>
		<drill_cycle_descriptions>
			<simple_drill>
				<text>Perçage Pointage</text>
			</simple_drill>
			<peck_drill>
				<text>Percage Profond</text>
			</peck_drill>
			<chip_break>
				<text>Percage Brise copeaux 203</text>
			</chip_break>
			<tapping>
				<text>Taraudage</text>
			</tapping>
			<boring_1>
				<text>Alésage ret. G1</text>
			</boring_1>
			<boring_2>
				<text>Alésage Indéxé</text>
			</boring_2>
			<misc_drill_1>
				<text>Taraud. Brise C. C.209</text>
			</misc_drill_1>
			<misc_drill_2>
				<text>""</text>
			</misc_drill_2>
			<custom_drill_9>
				<text>Ref. Int. Exter. Rectangle</text>
				<resource>E:\MASTERCAM FICAM\IMAGES PPs\Poche rectangul INTER-EXTER_1.bmp</resource>
			</custom_drill_9>
			<custom_drill_10>
				<text>REf. Int. Exter. Cercle</text>
				<resource>E:\MASTERCAM FICAM\IMAGES PPs\CERCLE INTER-EXTER_1.bmp</resource>
			</custom_drill_10>
			<custom_drill_11>
				<text>REf. Exter Coin</text>
				<resource>E:\MASTERCAM FICAM\IMAGES PPs\COIN EXTER_1.bmp</resource>
			</custom_drill_11>
			<custom_drill_12>
				<text>REf. Inter Coin</text>
				<resource>E:\MASTERCAM FICAM\IMAGES PPs\COIN INTER_1.bmp</resource>
			</custom_drill_12>
			<custom_drill_13>
				<text>REf. en Z</text>
				<resource>E:\MASTERCAM FICAM\IMAGES PPs\FACE EN -Z-_1.bmp</resource>
			</custom_drill_13>
			<custom_drill_14>
				<text>REf. larg. rainure</text>
				<resource>E:\MASTERCAM FICAM\IMAGES PPs\RAINURE_1.bmp</resource>
			</custom_drill_14>
			<custom_drill_15>
				<text>Percage trEs profond</text>
			</custom_drill_15>
			<custom_drill_16>
				<text>Cycle 16</text>
			</custom_drill_16>
			<custom_drill_17>
				<text>Cycle 17</text>
			</custom_drill_17>
			<custom_drill_18>
				<text>Cycle 18</text>
			</custom_drill_18>
			<custom_drill_19>
				<text>Cycle 19</text>
			</custom_drill_19>
			<custom_drill_20>
				<text>Cycle 20</text>
			</custom_drill_20>
		</drill_cycle_descriptions>
		<canned_text>
			<canned_text_1>
				<text>M00</text>
			</canned_text_1>
			<canned_text_2>
				<text>M01</text>
			</canned_text_2>
			<canned_text_3>
				<text>BLOC OPTIONNEL ON</text>
			</canned_text_3>
			<canned_text_4>
				<text>BLOC OPTIONNEL OFF</text>
			</canned_text_4>
			<canned_text_5>
				<text>REPRISE</text>
			</canned_text_5>
			<canned_text_6>
				<text>ZONE 1</text>
			</canned_text_6>
			<canned_text_7>
				<text>ZONE 2</text>
			</canned_text_7>
			<canned_text_8>
				<text>EBAUCHE</text>
			</canned_text_8>
			<canned_text_9>
				<text>FINITION</text>
			</canned_text_9>
			<canned_text_10>
				<text>AJOUT BRIDEs</text>
			</canned_text_10>
			<canned_text_11>
				<text>ENLEVER BRIDEs</text>
			</canned_text_11>
		</canned_text>
	</control>
#endregion 

#region MILL_ST_HEIDENHAIN-ROTATION-A-OU-B
<control>
		<control_label>CTRL_MILL|MILL_ST_HEIDENHAIN-ROTATION-A-OU-B</control_label>
		<language>fr-FR</language>
		<misc_integers>
			<misc_1>
				<text>""</text>
			</misc_1>
			<misc_2>
				<text>degag. 4 AXES 0=absolu 1=G91 (IZ)</text>
			</misc_2>
			<misc_3>
				<text>Val. angulaire index. broche (mortaisage)</text>
			</misc_3>
			<misc_4>
				<text>Cycle 7 activer/toutes les OPS 1=oui 0=nom</text>
			</misc_4>
			<misc_5>
				<text>Bris outil 1=TCH481 2=FRAISE 3=TCH586</text>
			</misc_5>
			<misc_6>
				<text>Test_Bris_Out =1 (en FIN d OPERATION)</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>Ne pas bloquer le diviseur 1=OUI 0=NON</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>""</text>
			</misc_10>
		</misc_integers>
		<misc_reals>
			<misc_1>
				<text>VALEUR de degag. en 4 AXES </text>
			</misc_1>
			<misc_2>
				<text>""</text>
			</misc_2>
			<misc_3>
				<text>""</text>
			</misc_3>
			<misc_4>
				<text>""</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>""</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>""</text>
			</misc_10>
		</misc_reals>
		<simple_drill>
			<description>
				<text>Pointage Cycle 200</text>
			</description>
			<feed_rate>
				<text>Avance Q206</text>
			</feed_rate>
			<dwell>
				<text>Tempo. au fond Q211</text>
			</dwell>
			<clearance>
				<text>Saut bride Q204</text>
			</clearance>
			<retract>
				<text>Garde Q200</text>
			</retract>
			<depth>
				<text>Profondeur Q201</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</simple_drill>
		<peck_drill>
			<description>
				<text>Percage PROFOND Cycle 200</text>
			</description>
			<feed_rate>
				<text>Avance Q206</text>
			</feed_rate>
			<dwell>
				<text>Tempo. au fond Q211</text>
			</dwell>
			<clearance>
				<text>Saut bride Q204</text>
			</clearance>
			<retract>
				<text>Garde Q200</text>
			</retract>
			<depth>
				<text>Profondeur Q201</text>
			</depth>
			<first_peck>
				<text>Prof. passe Q202</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</peck_drill>
		<chip_break>
			<description>
				<text>Brise-copeaux cycle 203</text>
			</description>
			<feed_rate>
				<text>Avance Q206</text>
			</feed_rate>
			<dwell>
				<text>Prof mini passe Q205&gt;0</text>
			</dwell>
			<clearance>
				<text>Saut bride Q204</text>
			</clearance>
			<retract>
				<text>Garde Q200</text>
			</retract>
			<depth>
				<text>Profondeur Q201</text>
			</depth>
			<first_peck>
				<text>Prof. de passe Q202</text>
			</first_peck>
			<subsequent_peck>
				<text>Avance retrait Q208</text>
			</subsequent_peck>
			<peck_clearance>
				<text>Valeur réduction Q212</text>
			</peck_clearance>
			<retract_amount>
				<text>Nb brise-copeaux Q213</text>
			</retract_amount>
			<shift>
				<text>Retr. Brise-copeau Q256&gt;0</text>
			</shift>
		</chip_break>
		<tap>
			<description>
				<text>Cycle NOUV. Taraud. 207</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</tap>
		<bore1>
			<description>
				<text>Alésage avec alésoir 201</text>
			</description>
			<feed_rate>
				<text>Avance Q206</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Saut bride Q204</text>
			</clearance>
			<retract>
				<text>Garde Q200</text>
			</retract>
			<depth>
				<text>Profondeur Q201</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>Avance retrait Q208</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>Tempo. au fond Q211</text>
			</shift>
		</bore1>
		<bore2>
			<description>
				<text>Alésage indexé 202</text>
			</description>
			<feed_rate>
				<text>Avance Q206</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Saut bride Q204</text>
			</clearance>
			<retract>
				<text>Garde Q200</text>
			</retract>
			<depth>
				<text>Profondeur Q201</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>Avance retrait Q208</text>
			</subsequent_peck>
			<peck_clearance>
				<text>Sens dégagt Q214 =1</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>Tempo. au fond Q211</text>
			</shift>
		</bore2>
		<misc1>
			<description>
				<text>Taraud. Brise C. C.209</text>
			</description>
			<feed_rate>
				<text>Avance Q206</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Saut bride Q204</text>
			</clearance>
			<retract>
				<text>Garde Q200</text>
			</retract>
			<depth>
				<text>Profondeur Q201</text>
			</depth>
			<first_peck>
				<text>Prof. de passe Q257</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>Retr. Br-cop Q256</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</misc1>
		<misc2>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</misc2>
		<drill_cycle_9>
			<description>
				<text>Réf. Int. Exter rectangle</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité Q260</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Prof.Centre B.</text>
			</depth>
			<first_peck>
				<text>Long. en X Q323</text>
			</first_peck>
			<subsequent_peck>
				<text>Larg. en Y Q324</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_9>
		<drill_cycle_10>
			<description>
				<text>Réf. Int. Exter Cercle</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité Q260</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Prof.Centre B.</text>
			</depth>
			<first_peck>
				<text>Diametre nominal</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_10>
		<drill_cycle_11>
			<description>
				<text>Réf. Exter Coin</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité Q260</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Prof.Centre B.</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_11>
		<drill_cycle_12>
			<description>
				<text>Réf. Inter Coin</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité Q260</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Prof.Centre B.</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_12>
		<drill_cycle_13>
			<description>
				<text>Réf. en Z</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité Q260</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Z réf.</text>
			</depth>
			<first_peck>
				<text>Dist. à Z+- (Brut)</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_13>
		<drill_cycle_14>
			<description>
				<text>Réf. larg. rainure</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité Q260</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>Prof.Centre B.</text>
			</depth>
			<first_peck>
				<text>LARGEUR</text>
			</first_peck>
			<subsequent_peck>
				<text>sur X=1 &amp; Y=2</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_14>
		<drill_cycle_15>
			<description>
				<text>Percage tres profond</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>Z HORS MAT.</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</drill_cycle_15>
		<drill_cycle_16>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>1er Débour.</text>
			</first_peck>
			<subsequent_peck>
				<text>Déb. suivant</text>
			</subsequent_peck>
		</drill_cycle_16>
		<drill_cycle_17>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>1er Débour.</text>
			</first_peck>
			<subsequent_peck>
				<text>Déb. suivant</text>
			</subsequent_peck>
		</drill_cycle_17>
		<drill_cycle_18>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>1er Débour.</text>
			</first_peck>
			<subsequent_peck>
				<text>Déb. suivant</text>
			</subsequent_peck>
		</drill_cycle_18>
		<drill_cycle_19>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>1er Débour.</text>
			</first_peck>
			<subsequent_peck>
				<text>Déb. suivant</text>
			</subsequent_peck>
		</drill_cycle_19>
		<drill_cycle_20>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan Sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>1er Débour.</text>
			</first_peck>
			<subsequent_peck>
				<text>Déb. suivant</text>
			</subsequent_peck>
		</drill_cycle_20>
		<simple_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 1</text>
			</description>
		</simple_drill_custom_parameters>
		<peck_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 2</text>
			</description>
		</peck_drill_custom_parameters>
		<chip_break_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 3</text>
			</description>
		</chip_break_drill_custom_parameters>
		<tap_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 4</text>
			</description>
		</tap_custom_parameters>
		<bore1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 5</text>
			</description>
		</bore1_custom_parameters>
		<bore2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 6</text>
			</description>
		</bore2_custom_parameters>
		<misc1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 7</text>
			</description>
		</misc1_custom_parameters>
		<misc2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 8</text>
			</description>
		</misc2_custom_parameters>
		<drill_cycle_9_custom_parameters>
			<description>
				<text>Réf. Int./Ext. Rectangle</text>
			</description>
			<parameter_1>
				<text>Réf. Inter rectangle = 1</text>
			</parameter_1>
			<parameter_2>
				<text>Réf. Exter rectangle = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>""</text>
			</parameter_9>
			<parameter_10>
				<text>""</text>
			</parameter_10>
		</drill_cycle_9_custom_parameters>
		<drill_cycle_10_custom_parameters>
			<description>
				<text>Réf. Int./Ext. Cercle</text>
			</description>
			<parameter_1>
				<text>Réf. Inter Cercle = 1</text>
			</parameter_1>
			<parameter_2>
				<text>Réf. Exter Cercle = 1</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>Q10 0= origine &gt;0 val. dans le</text>
			</parameter_9>
			<parameter_10>
				<text>Tableau pt 0  1=(54) 2=(55)..</text>
			</parameter_10>
		</drill_cycle_10_custom_parameters>
		<drill_cycle_11_custom_parameters>
			<description>
				<text>Réf. Ext. Coin</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>Rotation base 1=O 0=N</text>
			</parameter_3>
			<parameter_4>
				<text>1ER PT dist X en +</text>
			</parameter_4>
			<parameter_5>
				<text>1ER PT dist Y en +</text>
			</parameter_5>
			<parameter_6>
				<text>Dist. 2eme PT X G91 en +</text>
			</parameter_6>
			<parameter_7>
				<text>3EME PT dist X en +</text>
			</parameter_7>
			<parameter_8>
				<text>3EME PT dist Y en +</text>
			</parameter_8>
			<parameter_9>
				<text>Dist. 4eme PT Y en + G91</text>
			</parameter_9>
			<parameter_10>
				<text>&gt;0 Tab. pt 0  1=(54) 2=(55)..</text>
			</parameter_10>
		</drill_cycle_11_custom_parameters>
		<drill_cycle_12_custom_parameters>
			<description>
				<text>Réf. Int. Coin</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>Rotation base 1=O 0=N</text>
			</parameter_3>
			<parameter_4>
				<text>1ER PT dist X en +</text>
			</parameter_4>
			<parameter_5>
				<text>1ER PT dist Y en +</text>
			</parameter_5>
			<parameter_6>
				<text>Dist. 2eme PT X en + G91</text>
			</parameter_6>
			<parameter_7>
				<text>Dist. 3eme PT Y en + G91</text>
			</parameter_7>
			<parameter_8>
				<text>COIN:1=-135°,2=-45,3=45,4=135</text>
			</parameter_8>
			<parameter_9>
				<text>Q10 0= origine &gt;0 val. dans le</text>
			</parameter_9>
			<parameter_10>
				<text>Tableau pt 0  1=(54) 2=(55)..</text>
			</parameter_10>
		</drill_cycle_12_custom_parameters>
		<drill_cycle_13_custom_parameters>
			<description>
				<text>Réf. en Z</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>Q10 0= origine &gt;0 val. dans le</text>
			</parameter_9>
			<parameter_10>
				<text>Tableau pt 0  1=(54) 2=(55)..</text>
			</parameter_10>
		</drill_cycle_13_custom_parameters>
		<drill_cycle_14_custom_parameters>
			<description>
				<text>Réf. larg. rainure</text>
			</description>
			<parameter_1>
				<text>""</text>
			</parameter_1>
			<parameter_2>
				<text>""</text>
			</parameter_2>
			<parameter_3>
				<text>""</text>
			</parameter_3>
			<parameter_4>
				<text>""</text>
			</parameter_4>
			<parameter_5>
				<text>""</text>
			</parameter_5>
			<parameter_6>
				<text>""</text>
			</parameter_6>
			<parameter_7>
				<text>""</text>
			</parameter_7>
			<parameter_8>
				<text>""</text>
			</parameter_8>
			<parameter_9>
				<text>Q10 0= origine &gt;0 val. dans le</text>
			</parameter_9>
			<parameter_10>
				<text>Tableau pt 0  1=(54) 2=(55)..</text>
			</parameter_10>
		</drill_cycle_14_custom_parameters>
		<drill_cycle_15_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 15</text>
			</description>
		</drill_cycle_15_custom_parameters>
		<drill_cycle_16_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 16</text>
			</description>
		</drill_cycle_16_custom_parameters>
		<drill_cycle_17_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 17</text>
			</description>
		</drill_cycle_17_custom_parameters>
		<drill_cycle_18_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 18</text>
			</description>
		</drill_cycle_18_custom_parameters>
		<drill_cycle_19_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 19</text>
			</description>
		</drill_cycle_19_custom_parameters>
		<drill_cycle_20_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 20</text>
			</description>
		</drill_cycle_20_custom_parameters>
		<drill_cycle_descriptions>
			<simple_drill>
				<text>Perçage Pointage</text>
			</simple_drill>
			<peck_drill>
				<text>Percage Profond</text>
			</peck_drill>
			<chip_break>
				<text>Percage Brise copeaux 203</text>
			</chip_break>
			<tapping>
				<text>Taraudage</text>
			</tapping>
			<boring_1>
				<text>Alésage ret. G1</text>
			</boring_1>
			<boring_2>
				<text>Alésage Indéxé</text>
			</boring_2>
			<misc_drill_1>
				<text>Taraud. Brise C. C.209</text>
			</misc_drill_1>
			<misc_drill_2>
				<text>""</text>
			</misc_drill_2>
			<custom_drill_9>	
				<text>Ref. Int. Exter. Rectangle</text>
				<resource>C:\Users\Public\Documents\Shared Mastercam 2022\mill\Posts\\IMAGES PPs\Poche rectangul INTER-EXTER_1.bmp</resource>
			</custom_drill_9>
			<custom_drill_10>
				<text>REf. Int. Exter. Cercle</text>
				<resource>C:\Users\Public\Documents\Shared Mastercam 2022\mill\Posts\\IMAGES PPs\CERCLE INTER-EXTER_1.bmp</resource>
			</custom_drill_10>
			<custom_drill_11>
				<text>REf. Exter Coin</text>
				<resource>C:\Users\Public\Documents\Shared Mastercam 2022\mill\Posts\\IMAGES PPs\COIN EXTER_1.bmp</resource>
			</custom_drill_11>
			<custom_drill_12>
				<text>REf. Inter Coin</text>
				<resource>C:\Users\Public\Documents\Shared Mastercam 2022\mill\Posts\\IMAGES PPs\COIN INTER_1.bmp</resource>
			</custom_drill_12>
			<custom_drill_13>
				<text>REf. en Z</text>
				<resource>C:\Users\Public\Documents\Shared Mastercam 2022\mill\Posts\\IMAGES PPs\FACE EN -Z-_1.bmp</resource>
			</custom_drill_13>
			<custom_drill_14>
				<text>REf. larg. rainure</text>
				<resource>C:\Users\Public\Documents\Shared Mastercam 2022\mill\Posts\IMAGES PPs\RAINURE_1.bmp</resource>
			</custom_drill_14>
			<custom_drill_15>
				<text>Percage trEs profond</text>
			</custom_drill_15>
			<custom_drill_16>
				<text>Cycle 16</text>
			</custom_drill_16>
			<custom_drill_17>
				<text>Cycle 17</text>
			</custom_drill_17>
			<custom_drill_18>
				<text>Cycle 18</text>
			</custom_drill_18>
			<custom_drill_19>
				<text>Cycle 19</text>
			</custom_drill_19>
			<custom_drill_20>
				<text>Cycle 20</text>
			</custom_drill_20>
		</drill_cycle_descriptions>
		<canned_text>
			<canned_text_1>
				<text>M00</text>
			</canned_text_1>
			<canned_text_2>
				<text>M01</text>
			</canned_text_2>
			<canned_text_3>
				<text>BLOC OPTIONNEL ON</text>
			</canned_text_3>
			<canned_text_4>
				<text>BLOC OPTIONNEL OFF</text>
			</canned_text_4>
			<canned_text_5>
				<text>REPRISE</text>
			</canned_text_5>
			<canned_text_6>
				<text>ZONE 1</text>
			</canned_text_6>
			<canned_text_7>
				<text>ZONE 2</text>
			</canned_text_7>
			<canned_text_8>
				<text>EBAUCHE</text>
			</canned_text_8>
			<canned_text_9>
				<text>FINITION</text>
			</canned_text_9>
			<canned_text_10>
				<text>AJOUT BRIDEs</text>
			</canned_text_10>
			<canned_text_11>
				<text>ENLEVER BRIDEs</text>
			</canned_text_11>
		</canned_text>
	</control>
#endregion
</mp_xml_post_text>
[CTRL_TEXT_XML_END]
#endregion