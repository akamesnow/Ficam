[POST_VERSION] #DO NOT MOVE OR ALTER THIS LINE# V24.00 P0 E1 W24.00 T1648225310 M24.00 I0 O0
# ---------------------------------------------------------------------------------------------------------
# -   POST PRO FRAISAGE 3 ET 4 AXES AUTOUR DE X OU Y                                                      -
# -   SOUS PROG EN Z en ABSOLUE et INCREMENTAL                                                            -
# ---------------------------------------------------------------------------------------------------------
# -   Version 5.0                                                                                         -
# ---------------------------------------------------------------------------------------------------------
# -   Affichage des Surep R et L et 3D                                                                    -
# -   Affichage des type de corections                                                                    -
# -   Gestion du palpeur de bris outil                                                                    -
# -   Utiliser la comande DR-(rayon outil) pour correction usure usure inverse                            -
# ---------------------------------------------------------------------------------------------------------
# -       MASTERCAM X5         F.I.CAM                                                                    -
# ---------------------------------------------------------------------------------------------------------
# - Réalisé le      : 25/02/11  Par : SR
# - Pour la société : amgp
# - Armoire CN      : HEID 426/530
# - Nom MACHINE     :  DMU50evo MAIS PAS QUE
# ---------------------------------------------------------------------------------------------------------
# -                                           -
# ---------------------------------------------------------------------------------------------------------
# -   DESCRIPTION DES MODIFICATIONS           -
# affichage du descripteur de fichier meme si pas question entete
# ajout de l'info groupe ou non
# mi10 utilisé pour ajuster les avances sur les arc 0=NON 1=Ralentir 2=Accélérer 3=les Deux
# modification de la gestions des degagement machine en fonction des flag de reglage PST
# mi1 utilisé pour ne pas degager en Z avant rotation plateau
# mi2 utilisé pour ne pas bloquer le diviseur
# Workof (n°de Décalage) de 54 a 59  (0 pour 54 1 pour 55 etc...) et 59.1P1 P2 apres
# ecriture des parametres dans NCI et du fichier OPS (pour lire les infos de surep)
# creation des bloc pour afficher les surep
# creation de l'affichage des types de correction
# gestion du pmx en 4 axes
# lecture de la def armoire pour :
#                   l'extension de l'iso
#                   les arcs
#                   les commentaires
#                   la preparation de l'outil suivant
# Lecture de la def machine pour :
#                   Le nom de la machine
#                   Le nombre d'axes rotatif (1 seul supporté)
#                   Le sens de rotation de l'axe rotatif
#                   Le nom de l'axe rotatif (ABC)
#                   L'avance Maxi et Mini de la machine
# ---------------------------------------------------------------------------------------------------------


#---------------------------------------------------------------------------------------------------------
#            REGLAGES DU PST
#

inc_degage  : 1    # degagement machine  1 en INCREMENTAL (G91) ou 0 en ABSOLUE (G90)
sdegageZ    : "Z-1"    # Degagement en Z pour appel outil et changement de position 4eme axe
sdegageY    : "Y45"    # Degagement en Y pour appel outil
sdegageX    : "X400"  # Degagement en X pour appel outil et changement de position 4eme axe
smodedeg    : "M91"   # Mode de degagement des axes G28 G53

deg_debut   : 0     # Degager aux debut de prog             0=nom  1=Z  2=Z-X  3=Z-Y  4=Z-X-Y  5=Z-XY
deg_outil   : 1     # Degager aux changement outil          0=nom  1=Z  2=Z-X  3=Z-Y  4=Z-X-Y  5=Z-XY
deg_4axe    : 1     # Degager aux changement position 4 ou 5 eme axe  0=nom  1=Z  2=Z-X  3=Z-Y  4=Z-X-Y  5=Z-XY
deg_fin     : 1     # Degager en fin de programme           0=nom  1=Z  2=Z-X  3=Z-Y  4=Z-X-Y  5=Z-XY

numcoment   : 1     # Numeroter les lignes de commentaire 0 = nom 1 = oui
numsprog    : 1     # Numeroter les lignes de sous programme 0 = nom 1 = oui
info_corr   : 1     # afficher le type de correction
info_surep  : 0     # afficher les surepaisseurs xy et z
info_outil  : 1     # afficher les info sur l'outil
info_groupe : 0     # afficher les noms des groupe d'usinage
outil_apres : 0     # preparation outil suivant juste apres appel outil : 0  - preparation outil suivant avec premier placement : 1
use_progno  : 0     # Ecrire le NC sous forme O0123.nc  = 1 ou TOTO.NC = 0
entete      : 0     # Poser les question pour l'entete
tooltable$  : 1     # creation liste outil en entete
use_bloque  : 0     # 1 pour ecrire M10 M11 (blocage diviseur) -  0 pour ne pas ecrire M10 M11
use_cyc200  : 1     # 0 pour utiliser les anciens cycles DEF1  -  1 pour utiliser les cycles de percage 200 et 203 - 2 pour utiliser que le 203
nom_tool    : 0     # 0 pour TOOL CALL 1  -  1 pour TOOL CALL "fraise 2 tailles dia 10"
avance_arc  : 0     # ajuster les avances sur les arcs en correction usure ou ordinateur 0 = nom 1 = oui (utilise avance mxi et mini de la def machine)
fmini       : 1     # avance mini machine en travail
fmaxi       : 16000 # avance maxi machine en travail
nbroutil    : 30    # nombre d'outil de la machine pour ajout au D (0 pour T1 D1 - 30 pour T1 D31)
test_bris   : 0     # test de bris outil 0=non 1=oui
use_DR      : 0     # Utiliser la comande DR-(rayon outil) pour correction usure usure inverse
#--------------- variable pour le 5 axes ------------------------------------------
mode_5axe   : 1     # type machine: 0 3 et 4 axes, 1 = 5 axes positionne et continue
type_plane  : 1    # type de mode spacial, 1 = plan, 2 = point
ecrit_plane_dessus : 1 # ecrire un cycle plan meme en dessus , 0 = pas ecriture si dessus, 1 ecriture
frap5x : 5000       # RAPIDE EN DEPLACEMENT 5 AXES
macro : 1           # ecrit une macro en fin de prog en LBL 99 ou on donne les mouvements a faire entre chaque changement outil et plan ( voir pmacro )
seq : ""        # sans pour le positionner 5 axes
GESTc247 : 1        # Gestion du cycle 247 en 5 axes , 0 = sans, 1 = juste au debut, 2 = gestion total ( workoff)
mode_pre_5x : 0     # type d'ecriture en mode 5 axes continue de la presentation des plateau tournant, 0 = plane point, 1 = plane project
#------------------------------------------------------------------------------------------------------------------
#   UTILISER LES CYCLES MACHINE ou DECOMPOSITION en G1 G0
#

usecandrill$ : yes$   # utiliser cycle percage lamage
usecanpeck$  : yes$   # utiliser cycle debourrage
usecanchip$  : yes$   # utiliser cycle brise copeaux
usecantap$   : yes$   # utiliser cycle taraudage
usecanbore1$ : yes$   # utiliser cycle alesage a l'alesoir
usecanbore2$ : yes$   # utiliser cycle alesage a la barre
usecanmisc1$ : no$    # utiliser cycle divers 1
usecanmisc2$ : no$    # utiliser cycle divers 2



#--------------------------------------------------------------------------------------------------------
#   DEBUG POST PRO
bug1$     : 2       # 0 = pas voir le NC  1 = Visu du NC en lecture - 2 = visu du NC en edit
bug2$     : 70      # numéro de colonne pour l'affichage du bloc en cour de traitement
#CNC<<ECHEC>>bug3$     : 0       # whatline 01234 etat de l'usinage0 debut prog 1 prapid 2 pzrapid 3 mouvement frplung 4 fin
#CNC<<MSG -ERREUR(111)>> The variable, postblock, or other keyword is no longer supported
bug4$     : 1       # numero de ligne du nci traité
whatno$   : yes$    # Ignore whatline branches to plin1 etc.?

#--------------------------------------------------------------------------------------------------------
#   TOLERANCES POST PRO
linktolvar$    : 1  #Associer les variables de tolérance X metrique au variable english
#linklvar$  :1  # ULISLIDE LES USECANDRIL POUR LES LCANDRILL
linkplnvar$    : 0  #Associer les variables spécifiques plan Xy POUR TOUS LES PLAN YZ XZ
linklvar$      : 1  #Associer les variables spécifiques X Tournage AU FRAISAGE ULISISE LES USECANDRIL POUR LES LCANDRILL
cant_tlchng$   : 1  #Ignorer entrée de texte programmé au changement avec tlchng_aft?
newglobal$     : 1  #Activer la vérification d'erreur pour les variables globales?

#------------------------------------------------------------------------------------------------------------------
#   FORMATS DES VARIABLES
#
fs  1  1.9lt        # Format avec toute la precision pour les variable internes de mp
fs  2  +1%3l        # frormat d'affichage a 3 chifres max pour les variables affichées
fs  3  +1%3ln       # idem mais non modale
fs  4  1 0      # 1 chiffre mini avant virgule  pas de virgule pas de chiffre apres
fs  5  1 0n     # idem mais non modale
fs  6  4 0ln        # 4 chiffres avant pas de virgule pas de chiffre apres non modal force 0 de tete
fs  7  1 3t     # 1 chiffre mini avant virgule  pas de virgule 3 apres force 0 de queue non modal.
fs  8  1.3ln        # 1 chiffre avant la vigule met . 3 chiffres apres virgule non modal force 0 de tete
fs  9  1 0n     # pour liste outil
fs  10 1.3n     # pour liste outil
fs  11 +1%3li       # force 1 chiffre avant virgule met . 3 chiffres apres virgule en incremental
fs  12 +1%3lni
fs  13 3 0ln
fs  14 1,4lt
fs  15 1^3n     # pour liste outil
fs  16 1^3l
fs  17 1.5ln
fs  18 +1^4ln
#------------------------------------------------------------------------------------------------------------------
#   AFFECTATION DES VARIABLES FLAG
#
fmt     4 numcoment # flag pour Numeroter les lignes de commentaire
fmt     4 numsprog  # flag pour Numeroter les lignes de sous programme
fmt     1 texte     # flag pour textes
fmt     1 nbr_car   # nombre de carracteres maxi dans les connemtaires
fmt     1 old_comm_cnt  # nombre d'enregistrement dans buffeur commentaires
fmt     1 info_corr # flag pour correction outil
fmt     1 info_outil    # flag pour info outil
fmt     1 info_surep    # flag pour surep
fmt     1 info_groupe   # flag pour le nom des groupes
fmt     1 old_spaces    # memo de spaces
fmt     1 old_omitseq   # memo de omiseq
fmt     1 old_linarc    # memo de la decomposition des arcs
fmt     4 entete    # Variable utilisée pour générer l'entete
fmt     4 numerote  # Variable numerote utilisée pour numéroter ou non les lignes
fmt     1 outil_apres   # flag pour la position d'appel de l'outil suivant
fmt     1 avance_arc    # flag pour gerer l'avance sur arc
#________________________________________________________________________
#________________Valeur des avances par FQ____________________________
fmt   4 ftravail    # pour stoker l'avance travail de l'op
fmt   4 fplongee    # pour stoker l'avance plongee de l'op
fmt   4 fretract    # pour stoker l'avance retraction de l'op
fmt   4 fg1ugv         # pour stocker l'avance au dessus de la piece en UGV 3D
fmt  "F" 4 valparam  # pour affiche FQ1 en travail, FQ2 en plongée, fQ3 en rétraction, fQ4 deplacement au dessus de la pcs en UGV
fmt   "F" 4 frap5x
#_____________________________________________________________________

#------------------------------------------------------------------------------------------------------------------
#   AFFECTATION DES VARIABLES MP
fmt     5 gcode$        # Gcode pst
fmt     5 memo_gcode
fmt     1 x$        # XYZ pst
fmt     1 y$
fmt     1 z$
fmt     1 xr$       # XYZ rapide pst
fmt     1 yr$
fmt     1 zr$
fmt     1 i$        # IJK centre des arcs pst
fmt     1 j$
fmt     1 k$
fmt     1 arcrad$   # Valeur du rayon pst
fmt     1 linarc$   # couper les arcs
fmt     1 t$        # numéro d'outil pst
fmt     1 next_tool$    # numéro suivant pst
fmt     1 first_tool$   # numéro du premier outil pst
fmt     1 tloffno$  # Correcteur de Diamentre pst
fmt     1 tlngno$   # Correcteur de Longueur pst
fmt     1 tldia$    # diamétre outil pst
fmt     1 cc_computer$  # correction ordinateur
fmt     1 cc_pos$   # correction Armoire
fmt     1 fr$       # avance pst
fmt  "F" 16 fr_pos$  # AVANCE TRAVAIL au point pst
fmt     1 ss$       # vitesse de broche pst
fmt     4 n$        # numérotetion des blocs a chaque ligne
fmt     5 progno$   # Numéro de programe pst
fmt  "G" 4 cc$      # valeur de la correction dans NCI
fmt     1 coolant$  # Lubrification 0 1 2 3 arret axe buse les deux
#fmt     1 mi1$      # mi1 utilise pour degagement en Z avant rotation plateau
fmt     1 mi2$      # mi2 utilise pour ne pa rebloquer le plateau
fmt     1 op_id$    # Numero de l'operation du gestionaire PST
#------------------- PERCAGES ------------------------------------------
fmt    1 depth$     # profondeur percage pst
fmt    1 refht$     # Garde pour percage pst
fmt    1 initht$    # Plan de sécu percage pst
fmt    1 frplunge$  # Avance percage pst
fmt    1 dwell$     # Tempo pour percage pst
fmt  "D" 3 peckclr$     # garde d'approche rapide dans les débourrage pst
fmt  "Q" 3 peck1$       # Pas Z du premier débourrage pst
fmt     1 peck2$        # Pas Z des débourrages suivants
fmt  "Q" 3 shftdrl$     # valeur de retrait du grain de la barre d'allsage
fmt     1 retr$         # valeur de remonté relative en rapide dans les debourages en G1 G0
#_____________________alesage a la fraise_______________________________________
fmt     3 dianomi       # diametre nominale pour cycle def 208(alesage a la fraise)
fmt     3 diapreperc    # diametre de pre-percage pour cycle def 208
fmt     1 modefraisage  # mode fraisage 1 pour oui 0 pou non pour cycle def 208
#-------------------------filetage a la fraise--cycl def 262-------------
fmt     3 filparpas
fmt     3 fprepo
fmt     3 pasdvis
#------------------- SOUS PROG ------------------------------------------
fmt     1 sub_prg_no$       # Numéro de sous-programe interne en Z
fmt     1 main_prg_no$      # Numéro de sous prog interne en transformation
fmt  "X" 1 sub_trnsx$       # decalage en X pour G52 en usinage transformer translation
fmt  "Y" 1 sub_trnsy$       # decalage en Y pour G52 en usinage transformer translation
fmt  "Z" 1 sub_trnsz$       # decalage en Z pour G52 en usinage transformer translation
sub_trnsx$   :  -99999
sub_trnsy$   :  -99999
sub_trnsz$   :  -99999
#------------------- 4 AXES ------------------------------------------
fmt    1 rotdia$            # diam de sbstitution
fmt    1 rotaxis$       # type de substitution
fmt  "v" 1 v$
fmt  "w" 1 w$
m7$        : 999
m8$        : 999

#------------------------------------------------------------------------------------------------------------------
#   AFFECTATION DES VARIABLES NC
#
#------------------- POSITIONS ------------------------------------------
fmt  "X" 2 xabs         # XYZ en Absolue pour NC
fmt  "Y" 2 yabs
fmt  "Z" 2 zabs

fmt  "IX" 11 xinc           # XYZ en incremental pour NC
fmt  "IY" 11 yinc
fmt  "IZ" 11 zinc

fmt  "A" 2 axeA         # POSITION pour rotation plateau en ABS
fmt  "IA" 11 axeAi      # POSITION pour rotation plateau en INCREMENTAL
fmt "dessus" 4 dessus

xinc = xabs
yinc = yabs
zinc = zabs
axeAi = axeA            # A incremental

fmt "px" 2 old_x        # ancien XYZ du NC
fmt "py" 2 old_y
fmt "pz" 2 old_z

fmt  "X" 2 iabs         # IJK centre des arcs pour NC en G90
fmt  "Y" 2 jabs
fmt  "Z" 2 kabs

fmt  "IX" 2 iinc        # ijk centre des arcs pour NC en G91
fmt  "IY" 2 jinc
fmt  "IZ" 2 kinc
fmt  "R" 3 rayon        # valeur de rayon de l'arc pour NC
fmt  "IPA" 3 sweep$
fmt      1 cor_arc      # compensation sur les arc autorisée
fmt "X" 3 xmin
fmt "Y" 3 ymin
fmt "Z" 3 zmin
fmt "X" 3 xmax
fmt "Y" 3 ymax
fmt "Z" 3 zmax

#------------------- OUTILS ------------------------------------------
fmt      1 deg_debut
fmt      1 deg_outil
fmt      1 deg_4axe
fmt      1 deg_fin
#fmt      1 ftravail

fmt  "TOOL CALL "  5 outil " Z"     # numéro d'outil appele pour NC
fmt  "TOOL DEF "  5 outil_suivant   # numéro de l'outil suivant pour NC
fmt     5 nbroutil          # nombre d'outil du changeur de la def machine

fmt  "D" 4 correcteur_D     # Correcteur de Diamentre pour NC
fmt  "H" 4 correcteur_H     # Correcteur de Longueur pour NC
fmt  "H" 4 old_correcteur_H

correcteur_D = tloffno$ #+ nbroutil
correcteur_H = tlngno$

fmt  "DIAM " 2 diam_outil   # diamétre outil pour NC
fmt "DR" 2 DR           # decalage de rayon de fraise pour correction usure
fmt      2 old_DR
fmt  "F" 4 avance       # avance pour NC
fmt  "S" 4 ssa          # Vitesse de broche affiché

ssa = abs(ss$)          # vitesse de broche en valeur absolue

fmt  "S" 4 old_ss       # memo de la vitesse de broche précédente
fmt     4 lubrif        # gestion de la lubrification pour NC
fmt     3 type_comp     # type de correction
fmt "SUREP R " 8 surep          # Surep au rayon
fmt "SUREP Z " 8 surepl         # Surep en Z
fmt "SUREP 3D " 8 surep3d       # Surep en usinage 3D
surep3d = surep
fmt "R" 1 result        # resultat de calcul

fmt     5 prognosav     # Mémo du Numéro de programe
fmt     1 debut         # flag pour debut de programme
#------------------- NUMEROTATION ------------------------------------------
fmt  "N" 4 num          # numero de bloc sur ligne appel outil si pas de numerotation des lignes
fmt    1 old_op_id      # Memo de l'operation
fmt    1 last_op_id     # Derniere operation
num : 0
num = num + 1
old_op_id : -99999
fmt  "OPERATION "  5 numop  # NUMERO D'OPERATION
#------------------- ORIGINES D'USINAGE ------------------------------------------
fmt  "G" 4 origine      # origine d'usinage G54 a G59 pour NC
fmt     4 orheid
fmt  "G54.1P"  4 originebis # origine d'usinage G60 a G9999 pour NC
fmt  "G" 4 old_origine      # Stocage de la valeur precedente de origine d'usinage
fmt     4 old_orheid

fmt "ORI" 1 oriusi  # flag pour savoir si on utilise une origine d'usinage
fmt "X" 2 tox$
fmt "Y" 2 toy$
fmt "Z" 2 toz$
fmt "X" 2 tox4$
fmt "Y" 2 toy4$
fmt "Z" 2 toz4$
fmt "X" 2 old_tox
fmt "Y" 2 old_toy
fmt "Z" 2 old_toz
old_tox : 0
old_toy : 0
old_toz : 0
#---------------------- SOUS PROG ------------------------------------
fmt "inc" 1 incremental     # mode incremental ou Absolue
fmt     1 memo_incremental  # memeo du mode incremental ou Absolue
#fmt     1 inc_degage        # degagement machine en INCREMENTAL ou en ABSOLUE

fmt  "O" 6 debsousprog      # Numéro du premier sous programe
fmt  "#100="  4 nprincipal  # memo du numero de ligne du prog principal
fmt  "X" 2 decX         # decalage d'origine en X pour G52
fmt  "Y" 2 decY         # decalage d'origine en Y pour G52
fmt  "Z" 2 decZ         # decalage d'origine en Z pour G52
fmt  "CALL LBL "  5 subprognum      # numero du sous-programe pour l'appel
fmt  "LBL " 5 numsubprog        # Numéro entete de sous-programe
fmt     5 nomsubprog        # Numéro n'entete de sous-programe

fmt  "N" 4 ndebutsz         # memo du 1er numero de ligne du sous prog en z
fmt  "N" 4 ndebutst         # memo du 1er numero de ligne du sous prog en transformation



fmt  "DEC" 2 decalage       # flag pour savoir si on a ecrit un G52
fmt      1 sous_prog_type   # type de merge des sous prog (0 apres prog principal 1 avant)
incremental : 0         # init en Absolue
decalage : 0

fmt  "transform" 2 transform


#------------------- PERCAGES ------------------------------------------
fmt     1 use_cyc200    # flag pour utiliser les cycle 200
fmt     2 profabs       # profondeur de percage en ABS
fmt     2 profi         # profondeur de percage en INC
fmt     2 gardeabs      # Garde pour percage en ABS
fmt     2 gardei        # Garde pour percage en INC
fmt  "F" 8 pas          # valeur calculée du pas pour taraudage rigide
fmt  "F" 5 pasavance
fmt     2 typcycle      # variable mise a 1 lors des percage pour afficher l'intitulé du cycle

fmt    14 tempo
tempo = dwell$

fmt     2 old_profabs   # memo de la prof
fmt     2 old_gardeabs  # memo de la garde
fmt     3 passe     # increment de percage
fmt     2 psecu     # plan de secu
fmt     2 dbrut     # dessus du brut
fmt     2 old_psecu
fmt     2 old_dbrut

fmt  "    Q200=" 3 bq200    # Cycle 200
fmt  "    Q201=" 3 bq201    # Cycle 200
fmt  "    Q202=" 3 bq202    # Cycle 200
fmt  "    Q203=" 3 bq203    # Cycle 200
fmt  "    Q204=" 3 bq204    # Cycle 200
fmt  "    Q205=" 3 bq205    # Cycle 200
fmt  "    Q206=" 4 bq206    # Cycle 200
fmt  "    Q207=" 3 bq207    # Cycle 200
fmt  "    Q208=" 4 bq208    # Cycle 200
fmt  "    Q209=" 3 bq209    # Cycle 200
fmt  "    Q210=" 8 bq210    # Cycle 200 tempo en haut
fmt  "    Q211=" 8 bq211    # Cycle 200 tempo en bas
fmt  "    Q212=" 3 bq212    # Cycle 200
fmt  "    Q213=" 5 bq213    # Cycle 200
fmt  "    Q214=" 5 bq214    # Cycle 200
fmt  "    Q239=" 8 bq239    # Cycle 200 pas du taraud utilisé -_-_aussi dans cycle def 262
fmt  "    Q239=" 3 bq238    # dans cycle def 262
fmt  "    Q256=" 3 bq256    # Cycle 200
fmt  "    Q336=" 3 bq336    # Cycle 200

fmt  "    Q334=" 3 bq334
fmt  "    Q335=" 3 bq335    # cycle def 208 =diametre nominal-_-_- utilisé aussi dans cycle def 262
fmt  "    Q342=" 3 bq342    # cycle def 208
fmt  "    Q351=" 3 bq351    # cycle def 208 = mode fraisage

fmt  "    Q355=" 3 bq355    # cycle def 262  = filet par pas
fmt  "    Q253=" 8 bq253    # cycle def 262  = avance preposition
#-------------------- Axe A et B et C  ------------------------------------------

fmt  3 useaxe           # flag pour utiliser le 4eme axe
fmt  "S" 2 sens         # pour inverser le sens de l'axe
fmt     1 bloque        # pour gestion M10 M11
fmt     1 use_bloque
fmt     1 old_rotaxis       # memo de rotaxis$
fmt "A" 2 old_axeA     # memo de l ancien A
fmt "Sens" 2 sensA      # sens de rotation de A
fmt  "A" 2 epsi         # Delta de rotation de l'axe A
fmt  "Ntour" 2 nbrtour      # nombre de tour realise
fmt     3 tolquestion       # flag utilisé pour poser la question de tolérance de developpé q'une fois
fmt     4 mode_5axe
fmt     4 type_plane
fmt     3 axeB
fmt     3 axeC
fmt     3 tourne
fmt     3 old_axeB
fmt     3 old_axeC
fmt     3 old_tourne

fmt "P2X" 18 m1p
fmt "P2Y" 18 m2p
fmt "P2Z" 18 m3p
fmt "P3X" 18 m4p
fmt "P3Y" 18 m5p
fmt "P3Z" 18 m6p
fmt "" 18 m7p
fmt "" 18 m8p
fmt "" 18 m9p

fmt "old_P2X" 18 old_m1
fmt "old_P2Y" 18 old_m2
fmt "old_P2Z" 18 old_m3
fmt "old_P3X" 18 old_m4
fmt "old_P3Y" 18 old_m5
fmt "old_P3Z" 18 old_m6
fmt "old_" 18 old_m7
fmt "old_" 18 old_m8
fmt "old_" 18 old_m9



fmt "TX" 17 tx
fmt "TY" 17 ty
fmt "TZ" 17 tz
fmt  "A" 1 axeA1
fmt  "A" 1 axeA2
fmt    3 axeA5x

fmt  "A" 1 delta_axeA1
fmt  "A" 1 axeA1_dep
fmt  "A" 1 old_axeA1
fmt    3 old_axeA5x
fmt     1 debutpmx  # flag debut prog pmx
srot_label : ""
fmt    4 macro
axeA1_dep :  -999999
fmt "VX" 1 vx
fmt "VY" 1 vy
fmt "VZ" 1 vz
fmt "VX2" 1 vx2
fmt "VX2" 1 vx2_h
fmt "VY2" 1 vy2
fmt "VZ2" 1 vz2
fmt "VEC" 1 longvec

fmt "PROPR" 18 PROPR
fmt "PROMIN" 18 PROMIN

fmt   4 GESTc247
fmt   4 mode_pre_5x



axeA     : 999          # Inint de A
old_axeA : 0.9999999        # Inint de old_axeA
nbrtour : 0         # Inint du nombre de tour realise
tolquestion : 0         # Inint de tolquestion
#vtol$      : 0.01


#----------------------Parametres de DEF MACHINE-------------------------------

fmt    1 type_composant     # type de composant
fmt    1 compt_axes_rot     # compteur d'axes rotatif
fmt    3 erreur         # numero d'erreur
fmt    3 testerreur4            # flag pour erreur 4
fmt    1 diviseur       # Axe de l'axe rotatif
fmt    1 old_syncaxis       # memo du numero de combinaison d'axes
fmt    1 nbr_combi      # Nombre de combinaison d'axes
fmt    1 palette        # flag pour machine avec palette
fmt    1 fmaxi          # avance maxi de la machine
fmt    1 fmini          # avance mini de la machine


write_ops    : 0     #Write NC operation information (True/False)
erreur : 0
nbr_combi : 0
compt_axes_rot : 0
palette : 0
#-----------------------------Liste des OUTILS----------------------------------------

fmt "T" 5 paramT1       # N° outil
fmt   5 paramT2         # Type d'outil
fmt   5 paramT3         # Matiere de l'outil 1=Rapide 2=carbure 3=carbure revetu 4=cermet 5=borzon
fmt   5 paramT4         # Type de rayon de bout 0=aucun 1=torique 2=spherique
fmt "DIAM=" 10 paramT5   # Diametre
fmt "R=" 10 paramT6     # Rayon de bout
fmt   10 paramT7        # Nombre de filet par mm
fmt "A=" 10 paramT8 # Angle de bout
fmt   5 paramT9         # N° de correcteur de rayon
fmt   5 paramT10    # N° de correcteur de longeur
fmt   9 paramT11    # Avance travail
fmt   9 paramT12    # Avance plongee
fmt   9 paramT13    # Avance retraction
fmt   5 paramT14    # Vitesse de broche
fmt   5 paramT15    # Type de lubrification 0=arret 1=eau 2=air 3=broche 4=les 2
fmt   5 paramT16    " DENTS" # Nombre de dents
fmt "F" 15 fauto     # AFFICHAGE AVANCE TRAVAIL DANS LIGNE "TOOL CALL"
#-------------------------------divers------------------------


#-----------------------------------------------------
#   ZONE de FORMULES  si : uniquement au dédut si = mise a jour systématique
#

#tlchng_aft$ : 1     # Delay the tool change call until the first motion is read on all the NCI Gcode 1000, 1001, 1002 tool changes.
get_1004$   : 1     # Find gcode 1004 with getnextop?
rpd_typ_v7$ : 0     # Use Version 7 style contour flags?
getnextop$  : 1     # autorise la commande nextop nextccomp etc
strtool_v7$ : 2     # autorise la lecture des commentaires de la bibiotheque outil
skp_lead_flgs$  : 0 # Do NOT use v9 style contour flags
ncldr$      : 20    # nbr de zero de queue utilisés pour la fonction "fleader"
ldrcode$    : 65
nobrk$      : no$   # ne pas décomposer en xy pui z les mouvements en rapid
cc_1013$    : 1     # pour connaitre cc dans appel outil
opcode$     : 1
gcode$      : -1
progname$   : 1      # force le nom du nci en majuscule



#-----------------------------------------------------
#   DEFINITION DES STRING
#

#--------- DEFINITION DES STRING -----------------------
svide : ""           # STRING Vide utilisée pour faire des comparaisons
space : " "       # STRING pour forcer un espace
sdcom   : "; "        # STRING de debut de commentaire
sfcom : ""           # STRING de fin de commentaire
sdesioutil : ""      # STRING de designation outil
snomgroupe_op : ""       # STRING du nom du groupe d'opération
snomgroupe_op_old : ""   # STRING de l'ancien nom du groupe d'opération
smachine : ""        # STRING du nom de la machine
spalette : "PALETTE"  # STRING du nom palette
scomentsprog : ""        # STRING du commentaire pour le titre du sous prog
snom_nc : ""         # STRING de stockage du non du NC complet avec chemin et extesion style c:\cfao\prog-cn\TOTO.NC
snom_numero : ""     # STRING de stockage du non du NC sous forme O0123.nc avec chemin et extesion style c:\cfao\prog-cn\ous forme O0123.NC
spoint : "."      # STRING du POINT pour l'extesion (.NC)
stringo : ""         # STRING du O pour le non (O0123) en nom du Numero PRG
seditor : "notepad.exe"   # STRING du non de l'editeur pour les prog en nom du Numero PRG (avec chemenin complet si pas dans Windows)
sfileops : ""        # STRING du nom du fichier OPS
sops : ".ops"     # STRING de l'extention des fichier OPS
sfmax : "FMAX"        # STRING de la vitesse rapide
serreur2 : ""
spt_ref : ""
sfauto : "F AUTO"
#--------- DEFINITION DES TABLEAUX DE STRING -----------------------
# erreur
serr0   : "err0"
serr1   : "ERREUR - LA FONCTION Ecriture de l'information CN d'opération DOIT ETRE VALIDE DANS LA DEFINITION D'ARMOIRE"
serr2   : "ERREUR - CE POST PRO NE SUPPORTE Q'UN SEUL AXE ROTATIF - VERIFIEZ LA DEF MACHINE ET LA COMBINAISON D'AXE"
serr3   : "ERREUR - CE POST PRO NE SUPPORTE Q'UNE SEULE COMBINAISON D'AXE PAR PROGRAMME - VERIFIEZ LA COMBINAISON D'AXE DES OPERATIONS"
serr4   : "CORRECTION SUR ARC DETECTEE - Vérifiez les entrées/sorties de l'opération "
serreur : ""
fstrsel serr0 erreur serreur 5 -1

#   Mode Absolue ou incremental
sinc00 : ""          # Mode Absolue
sinc01 : ""          # Mode incremental
sinc02 : ""
sinc_abs : ""
fstrsel sinc00 incremental sinc_abs 3 -1

#   Affectation de coté de correction outil G41 G42
sc00    : "R0"
sc01    : "RL"
sc02    : "RR"
scord : ""
fstrsel  sc00 cc_pos$ scord 3 -1

#   Affectation de G0 à G3 dans sgcode en fonction du GCODE
sg00    : "L"        # Rapide
sg01    : "L"        # travail
sg02    : "DR-"       # arc horaire
sg03    : "DR+"       # arc trigo
sq04    : "G4"       # tempo
sg05    : "G80"          # annulation Cycle Fixes
sgcode : ""

fstrsel  sg00 gcode$ sgcode 6 -1

#   Affectation des plans d'usinage pour
spl00 : ""       # plan XY
spl01 : ""       # plan YZ
spl02 : ""       # plan XZ
spl03 : ""
splcode : ""

fstrsel  spl00 plane$ splcode 4 -1

#   Blocage déblocage 4ieme Axe
sblo0 : ""           # pour pas de blocage ni deblocage
sblo1   : "M10"   # blocage axe A
sblo2   : "M11"   # déblocage axe A
sblo3 : ""           # pour Frein axe A
sbloque : ""

fstrsel sblo0 bloque sbloque 4 -1

#      Rotation broche
sm00    : "M4"
sm01    : "M5"
sm02    : "M3"
sm03    : "M14"
sm04    : "M15"
sm05    : "M13"
sm06    : "M4 M7" #"M24"
sm07    : "M25"
sm08    : "M13 M7" #"M23"
sm09    : "M34"
sm10    : "M35"
sm11    : "M3 M25"
spdlon : ""

#spdlsel = fsg3(ss$)
spdlsel = fsg3(ss$)+(coolant$*3)
#spdlsel = fsg3(ss)+(coolant*3)

fstrsel  sm00 spdlsel spdlon 12 -1


#   Types d'outils
stypT00 : "RIEN"
stypT01 : "FORET A CENTRER"
stypT02 : "FORET A NOYER"
stypT03 : "FORET"
stypT04 : "TARAUD A DROITE"
stypT05 : "TARAUD A GAUCHE"
stypT06 : "ALESOIR"
stypT07 : "BARRE D'ALESAGE"
stypT08 : "FRAISE A LAMER"
stypT09 : "FRAISE A EBAVURER"
stypT10 : "FRAISE 2 TAILLES"
stypT11 : "FRAISE BOULE"
stypT12 : "FRAISE A CHANFREINER"
stypT13 : "TOURTEAU"
stypT14 : "FRAISE 3 TAILLES"
stypT15 : "FRAISE A RAYON"
stypT16 : "FRAISE QUEUE D'ARONDE"
stypT17 : "FRAISE CONIQUE"
stypT18 : "FRAISE SPHERIQUE"
stypT19 : "FRAISE TORIQUE"
stypT20 : "SPECIAL"
stypT21 : "FRAISE A GRAVER"
stypT22 : "FORET BRAD"

stypeT : ""
fstrsel stypT00 paramT2 stypeT 23 -1

#   Matiere des outils
smatT0  : "ARS"
smatT1  : "ARS"
smatT2  : "CARBURE"
smatT3  : "CARBURE PLAQUETTES"
smatT4  : "CERAMIQUE"
smatT5  : "BORZON"
smatT6  : "BORZON"
smatT7  : "BORZON"
smatT8  : "BORZON"
smatT9  : "BORZON"
smatT10 : "INCONNU"
smatT : ""
fstrsel smatT0 paramT3 smatT 11 -1

# Table de l'affichage du type de corection

stc0   : "SANS CORRECTION"             #"CORRECTION AUCUNE"
stc1   : "AVEC CORRECTION ARMOIRE"             #"CORRECTION ARMOIRE DROITE"
stc2   : "AVEC CORRECTION ARMOIRE"             #"CORRECTION ARMOIRE GAUCHE"
stc3   : "SANS CORRECTION"             #"CORRECTION ORDINATEUR DROITE"
stc4   : "SANS CORRECTION"             #"CORRECTION ORDINATEUR GAUCHE"
stc5   : "AVEC CORRECTION USURE"             #"CORRECTION USURE DROITE"
stc6   : "AVEC CORRECTION USURE"             #"CORRECTION USURE GAUCHE"
stc7   : "AVEC CORRECTION USURE"             #"CORRECTION USURE INVERSE DROITE"
stc8   : "AVEC CORRECTION USURE"             #"CORRECTION USURE INVERSE GAUCHE"

stype_comp : ""

fstrsel  stc0 type_comp stype_comp 9 -1


#-----------------------------------------------------
#   Tables de parametres
#
fprmtbl 2    1          # lecture des parametres de surep pour surfacage
        12068  surepl       # surep en Z

fprmtbl 1    2          # lecture des parametres de surep pour contour et 3D
        10010    surep      # surep R
        10068    surepl     # surep Z

#fprmtbl 18000   4           # Lecture des Param de def armoire
 #       18171   write_ops   # Autoriser l'ecriture de l'information CN d'operation
 #      #18458   texte       # Nombre de caracteres pour les commentaires
  #     18705   cor_arc     # compesation sur les arcs autorisée
  #     18713   sous_prog_type  # type de merge des sous prog (0 apres prog principal 1 avant)

texte : 1

#------------- Bloc de définition des Questions du post pro -----------------
#   Question 1
#



#   Question 2
#
sclient : ""
fq 2 sclient "CLIENT"

#   Question 3
#
srepere : ""
fq 3 srepere "Nom pièce"

#   Question 4
#
sindice : ""
fq 4 sindice "REFERENCE PIECE"

#   Question 5
#


#   Question 6
#
fq 6 progno$ "Numero de Prog SVP ?"
#   Question 7
#   Question 8
#
fq 8 vtol$    "TOLERANCE CORDALE POUR DEVELOPPE"
#   Question 10
#
fq 10 progno$ "Numéro de programme //progno$// existant, ENTREZ UN NOUVEAU NUMERO"
#   Question 11
#
fmt 2 remplace
remplace : 2

fq 11 remplace "Numéro de programme //progno$// existant, LE REMPLACER ?      0 pour NON - 1 pour OUI"


fq 27 spt_ref "Numéro point de ref"

pdebug      # pour activer les infos de debug pst

        err_file$ = 4
        fastmode$ = 0
        bug2$ = 60


pinfos      # affichage d'infos

        #*tlchng_aft$, "--------------", e$
        #*workofs$, e$
        #*sub_trnstyp$, e$
        #*sub_trnmthd$, e$
        #*usecandrill$, e$
        #*usecanpeck$, e$
        #*usecanchip$, e$
        #*usecantap$, e$
        #*usecanbore1$, e$
        #*usecanbore2$, e$
        #*usecanmisc1$, e$
        #*usecanmisc2$, e$
        #*sous_prog_type, "----", e$

#---------------- BLOCS DE PRE TRAITEMENT POST PRO ---------------------------------
#
pprep$      # affectation des variables avant debut traitememt post pro

    #pdebug     # pour activer les infos de debug pst
    rotaxtyp$ = 3
    tlchng_aft$ = 1     # Delay the tool change call until the first motion is read on all the NCI Gcode 1000, 1001, 1002 tool changes.
    omitseq$ = 0    # forcer la numerotation de bloc de 1 en 1
    seqinc$ = 1
    seqno$ = 0
    arctype$ = 1    # forcer les arcs en ij absolue



    #rd_mch_ent_no$ = 0          # pour lire les infos de base de la machine
    #rd_cd$                  # lire le control definition
    #if write_ops = 0, erreur = 1        # Write NC Operation information MUST be enabled in CD
    #!erreur
    #!serreur

   # if erreur <> 0, [
      #  result = mprint(serreur, 2)
      #  exitpost$
      #      ]


#---------------- BLOCS DE DEF MACHINE ET DEF ARMOIRE ---------------------------------
#

pmachineinfo$    # lecture des parametre de def armoire et def machine

    #"-------------------pmachineinfo$", e$
    #~prmcode$, "=", sparameter$, e$        # pour afficher tous les parametres

    #if prmcode$ = 18171, *prmcode$, "ecriture ops =", sparameter$, e$
    #if prmcode$ = 18458, "nombre de caracteres de commentaire", sparameter$, e$
    #if prmcode$ = 19958, *prmcode$, "type de composant", "=", sparameter$, e$  # type de composant 5 = axe rotatif
    #if prmcode$ = 17399, *prmcode$, "AXE DE L'AXE ROTATIF", "=", sparameter$, e$   # AXE ROTATIF - +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9
    #if prmcode$ = 17402, *prmcode$, "sens de laxe", "=", sparameter$, e$       # sens de l'axe rotatif 0=trigo 1=horaire
    #if prmcode$ = 17401, *prmcode$, "position 0", "=", sparameter$, e$         # Position angle 0 deg  +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9
    #if prmcode$ = 17398, *prmcode$, "=", sparameter$, e$
    #if prmcode$ = 17201, *prmcode$, "nom de l'element =", sparameter$, e$
    #if prmcode$ = 17696, *prmcode$, "nom de la combinaison =", sparameter$, e$

    if prmcode$ = 17063, fmaxi = rpar(sparameter$, 1)           # avance maxi en G1
    if prmcode$ = 17062, fmini = rpar(sparameter$, 1)           # avance mini en G1



    if prmcode$ >= 18000 & prmcode$ < 19000, result = fprm(18000)   # Lecture de la table de parametre Control Definition

    if prmcode$ = 17012, smachine = sparameter$             # Nom de la machine

    if prmcode$ = 17201,        [               # nom du composant
            if ucase(sparameter$) = spalette, palette = 1       # si c'est une palette, activer la gestion de palette

                        ]

    if prmcode$ = 19958,        [               # type de composant
            type_composant = rpar(sparameter$, 1)
            if type_composant = 5,  [               # si c'est un axe rotatif
            useaxe = 1
            compt_axes_rot  = compt_axes_rot + 1            # compter le nombre d'axes rotatif
                        ]
                        ]

    if prmcode$ = 17399,    [                   #AXE ROTATIF - +X=1,+Y=2,+Z=3,-X=7,-Y=8,-Z=9
            diviseur = rpar(sparameter$, 1)
            if diviseur > 3, diviseur = diviseur - 6        #ne garder que x y z
                    ]

    if prmcode$ = 17402,    [                   # sens de l'axe rotatif 0=trigo 1=horaire
            sens = rpar(sparameter$, 1)
        if sens = 0, sens = 1                   # variable sens pour le post pro
        else, sens = -1
                ]

      if prmcode$ = 17598,      [               # nombre d'outils du changeur de la def machine
        #nbroutil = rpar(sparameter$, 1)
                        ]

      if prmcode$ = 17397,      [               # Nom de l'axe rotatif (ABC)
    srot_label = sparameter$
            ]

plireaxes   # Lecture des parametres de la combinaison d'axes uniquement
        #"plireaxes", syncaxis$, e$

    if syncaxis$ <> old_syncaxis, [
    compt_axes_rot = 0
    erreur = 0
        ]


    rd_mch_ent_no$ = syncaxis$      # pour avoir les infos de la conbinaison d'axe utilisée
    #rd_mch_ent_no$ = -2            # forcer la lecture de toute la def machine -1 que la combinaison d'axe -2 que la base machine 0
    #rd_cd$                 # lecture de la def armoire
    rd_md$                  # lecture de la def machine


        result = nwadrs(srot_label, axeA)   # affectation du nom de l'axe rotatif en ABS
        srot_label = "I" + srot_label       # affectation du nom de l'axe rotatif en INC
        result = nwadrs(srot_label, axeAi)  # affectation du nom de l'axe rotatif en INC

    ptestmachine
    old_syncaxis = syncaxis$

#---------------- BLOCS DE LECTURE DES PARAMETRES ---------------------------------
#

pparameter$  # lecture des parametres d'operation
    #"------------------------------------------------pparameter$", e$
    #~prmcode$, "=", sparameter$, e$                # pour afficher tous les parametres



    if opcode$ <> 19, result = fprm (1)                 # lecture des parametres de surep pour surfacage
    if opcode$ = 19, result = fprm (2)                  # lecture des parametres de surep pour contour et 3D

    if prmcode$ = 20004, paramT1 = rpar(sparameter$, 16)        # lecture des parametres d'outil
    if prmcode$ = 20018, snomgroupe_op = ucase (sparameter$)    # Lecture du nom de groupe d'usinage

    if prmcode$ = 10030, ftravail = rpar(sparameter$, 1)
    if prmcode$ = 10031, fplongee = rpar(sparameter$, 1)
    if prmcode$ = 15140, fretract = rpar(sparameter$, 1)
    if prmcode$ = 12662, fg1ugv   = rpar(sparameter$, 1)

    #if prmcode$ = 15166, "--------------15166--------------", sparameter$, e$
    #if prmcode$ = 15181, "--------------15181--------------", sparameter$, e$
    #if prmcode$ = 15370, "--------------15370--------------", sparameter$, e$
    #if prmcode$ = 15239, sparameter$, e$


pwrttparam$  # lecture des parametres d'outils
    #~prmcode$, "=", sparameter$, e$        # pour afficher tous les parametres

    if prmcode$ = 20004, paramT1 = rpar(sparameter$, 16)

    if syncaxis$ <> old_syncaxis, nbr_combi = nbr_combi + 1
    #*nbr_combi, "-------------pwrttparam--------", e$
    old_syncaxis = syncaxis$








#---------------- BLOCS DE TRAITEMENT DES SOUS PROG EN Z ---------------------------------

psub_call_s$       # appel sous prog en Z
        sub_seq_typ$ = transform
    #"--------appel sous prog en Z---------", *sub_sec_no$, e$
        !sub_prg_no$                # mise a jour du numero interne de sous prog en Z
        subprognum = debsousprog + sub_prg_no$  # affectation du numero de sous prog en Z
        nprincipal = n$  + seqinc$      # memo du numero de ligne pour le rappel dans le sous-programme

        if transform = 1, n$, *subprognum, e$           # appel du sous prog

        else, if sub_sec_no$ > 1 | sub_sec_no$ < 1, [    # call suivant

        #*nprincipal, e$            # affecation du parametre CN pour memo du numéro de ligne
        n$, *subprognum, e$         # appel du sous prog

            ]


        nprincipal = n$             # memo du numero de ligne pour le prog principal



psub_st_s$    # ecriture de l'entete de sous prog en Z

        if sub_sec_no$ > 1 | sub_sec_no$ <1, ndebutsz = n$
    if transform = 1, n$  = 1

        !sub_prg_no$                # mise a jour du numero interne de sous prog en Z
        numsubprog = debsousprog + sub_prg_no$  # affectation du numero de sous prog en Z
        nomsubprog = numsubprog                 # affectation du nom de sous prog en Z
        memo_incremental = incremental          # memorisation du mode ABS INC Actuel
        incremental = sub_inc$          # Sous prog en incremental ou absolue


    #if incremental = 1, p_casse_modalite   # casser la modalité xyz pour les sous prog en relatif
    p_casse_modalite_avance         # casser la modalité le l'avance pour les sous prog

        if numsprog = 0, omitseq$ = 1       # pas du numero de ligne pour les sous prog

    #space, e$                  # sauter une ligne


        if texte <> 0, [            # entete avec commentaires

                if scomentsprog <> svide, n$, *numsubprog, sdcom, spaces$ = 0, scomentsprog, sfcom, e$
                 else, n$, *numsubprog, e$
                spaces$ = old_spaces
                                ]


        else, [             # entete sans commentaires
                n$, *numsubprog, e$
                    ]

        n$, *sinc_abs, e$                 # ecrire si sous prog en ABS ou INC
    gcode$ = 5      # pour forcer l'ecriture de code G du premier bloc du sous prog
        !gcode$

psub_end_s$    # fin sous prog en Z


        incremental = memo_incremental          # rappel du mode INC ABS precedent
        n$, *sinc_abs, e$

        n$, "LBL 0", e$                 # fermeture de sous prog
    #space, e$                  # sauter une ligne
    #if sub_sec_no$ > 1 | sub_sec_no$ <1, n$ = ndebutsz

        if transform = 0, [
        if sub_sec_no$ > 1 | sub_sec_no$ <1, n$ = ndebutsz
            subout$ = transform
                mergeaux$
                clearaux$
                ]
#-------------------------BLOCS DE TRAITEMENT DES SOUS PROG EN TRANSFORMER ---------------------------


pmirroir    # pour usinage transformer en mirroir

protation    # pour usinage transformer en rotation

pechelle    # pour usinage transformer en echelle

    # pour usinage transformer en translation

        #n$, "-------------------------------------", *sub_trnmthd$, e$



ptranslation

        prapid$


ptranslation_old    # pour usinage transformer en translation

        #n$, "-------------------------------------", *sub_trnmthd$, e$


    if sub_trnmthd$ = 2, [              # translation en coordonnées

         n$, "(translate  coordinate)", e$


        prapid$



                        ]



    if sub_trnmthd$ = 1, [              # translation de l'origine du plan uniquement

        n$, "(translate tool plane origine only)", e$


        memo_incremental = incremental
        incremental = 0

            decX = sub_trnsx$
            decY = sub_trnsy$
            decZ = sub_trnsz$

            if decX <> 0 | decY <> 0 | decZ <> 0, [
            if decalage = 1, panulldecalageg52              # annuler les decalages d'origine
            decX = sub_trnsx$
            decY = sub_trnsy$
            decZ = sub_trnsz$
            n$, sinc_abs, "G52", *decX, *decY, *decZ, e$            # ecriture des valeur de decalage d'origine
            decalage = 1                            # memo de mise en place de decalage pour l'annuler
        p_casse_modalite                # pour forcer le rappel des coordonées apres changement d'origine
        prapid$
                             ]

            incremental= memo_incremental
                n$, sinc_abs, e$
                    ]

    if sub_trnmthd$ = 0, [              # translation du plan d'usinage uniquement

        n$, "(translate tool plane ----> must use new workofs$)", e$

        poriusi
        #p_casse_modalite               # pour forcer le rappel des coordonées apres changement d'origine
        prapid$

        ]
psub_call_mm$
    psub_call_m$

psub_call_mm_old     # appel sous prog en transformation pour outils multiples
        transform = 1

        #"appel sous prog en transformation pour outils multiples", e


        !main_prg_no$                    # mise a jour du numero interne de sous prog en transformation pour outils multiples
        subprognum = debsousprog + main_prg_no$ +300   # affectation du numero de sous prog

        if sub_trnstyp$ = 0, pmirroir       # si on fait du mirroir
        if sub_trnstyp$ = 1, protation      # si on fait de la rotation
        if sub_trnstyp$ = 2, pechelle       # si on fait de l'echelle
        if sub_trnstyp$ = 3, ptranslation       # si on fait de la translation aller avant dans bloc ecriture decalage orignie

        nprincipal = n$  + seqinc$      # memo du numero de ligne pour le rappel dans le sous-programme

        #*nprincipal, e$            # affecation du parametre CN pour memo du numéro de ligne
        #if sub_sec_no$ <> 0, n$, *subprognum, e$       # appel du sous prog
         n$, *subprognum, e$        # appel du sous prog

        nprincipal = n$             # memo du numero de ligne pour le prog principal


      # n, "(PASSE ", sub_sec_no, "SUR ", sub_totl_no, ")", e


          #  "Subprogram number ", sub_op_id, e
          #  "Actual operation ID", sub_grp_id, e
          #  "Transform/non-transform indicator", sub_ref_id, e
          #  "Iteration counter", sub_sec_no, e
          #  "Total number of instances", sub_totl_no, e






psub_call_m$   # appel sous prog en transformation pour outil unique
        transform = 1
        sub_seq_typ$ = 1

       # "appel sous prog en transformation pour outil unique", e$

        #main_prg_no$, sub_prg_no$, sub_ref_id$, sub_op_id$, sub_grp_id$, sub_trns_id$, sub_sec_no$, sub_totl_no$, sub_chn_no$, sub_inc$, e
        #*main_prg_no$, e


        !main_prg_no$               # mise a jour du numero interne de sous prog en transformation pour outils multiples
        subprognum = debsousprog + main_prg_no$ +300   # affectation du numero de sous prog


        if sub_trnstyp$ = 0, pmirroir       # si on fait du mirroir
        if sub_trnstyp$ = 1, protation      # si on fait de la rotation
        if sub_trnstyp$ = 2, pechelle       # si on fait de l'echelle
        if sub_trnstyp$ = 3, ptranslation   # si on fait de la translation aller avant dans bloc ecriture decalage orignie

        nprincipal = n$  + seqinc$      # memo du numero de ligne pour le rappel dans le sous-programme

        #*nprincipal, e$            # affecation du parametre CN pour memo du numéro de ligne
        #if sub_sec_no$ <> 0, n$, *subprognum, e$       # appel du sous prog
        n$, *subprognum, e$     # appel du sous prog

        nprincipal = n$             # memo du numero de ligne pour le prog principal


      # n, "(PASSE ", sub_sec_no, "SUR ", sub_totl_no, ")", e


          #  "Subprogram number ", sub_op_id, e
          #  "Actual operation ID", sub_grp_id, e
          #  "Transform/non-transform indicator", sub_ref_id, e
          #  "Iteration counter", sub_sec_no, e
          #  "Total number of instances", sub_totl_no, e


psub_end_m_r$    # bloc system non explique dans doc des PST (a voir)
        transform = 0
        #"-------------------------------------------", "psub_end_m_r$", e$


psub_st_m$    # entete sous prog en transformation

        ndebutst = n$
    n$  = 1
        !main_prg_no$                   # mise a jour du numero interne de sous prog en transformation pour outils multiples
        numsubprog = debsousprog + main_prg_no$ +300    # affectation du numero de sous prog
        nomsubprog = numsubprog                 # affectation du nom de sous prog en Z
        memo_incremental = incremental          # memorisation du mode ABS INC Actuel
        incremental = sub_inc$          # Sous prog en incremental ou absolue


    #if incremental = 1, p_casse_modalite   # casser la modalité pour les sous prog en relatif
    p_casse_modalite_avance         # casser la modalité le l'avance pour les sous prog

        if numsprog = 0, omitseq$ = 1       # pas du numero de ligne pour les sous prog
        if texte <> 0, [            # entete avec commentaires

                 if scomentsprog <> svide, n$, *numsubprog, sdcom, spaces$ = 0, scomentsprog, sfcom, e$
                 else, n$, *numsubprog, e$
                spaces$ = old_spaces
                ]


        else, [             # entete sans commentaires
                *numsubprog, e$
                    ]

        n$, *sinc_abs, e$           # ecrire si sous prog en ABS ou INC
    gcode$ = 5              # pour forcer l'ecriture de code G du premier bloc du sous prog
        !gcode$

             #sub_op_id, sub_prg_no, e


psub_end_m$   # fin sous prog en transformation


        incremental = memo_incremental          # rappel du mode INC ABS precedent
        n$, *sinc_abs, e$
    n$, "LBL 0", e$
    #space, e$                  # sauter une ligne
    #if sub_sec_no$ <> 0 & transform = 0, n$ = ndebutst

        omitseq$ = old_omitseq
        #n$ = ndebutst                  # recuperation du numero de ligne pour prog principal

       # subout$ = 0
       # mergesub$
       # clearsub$




#------------------- GESTION DES COMMENTAIRES ---------------------------------------
#
pcomment$   # Gestion des commentaires dans le prog

        if entete = 0,  pcomment2   # commentaires des usinages
        else,       pcomment3   # commentaires d'entete de prog

pcomment_end$   # post traitement des commentaires

         if entete = 1, comm_cnt$ = old_comm_cnt            # pour pouvoir relire les commentaires apres appel de comment dans pheader



pcomment2       #Affichage des commentaire des usinages

    scomm$ = ucase (scomm$)                             # focer en majuscules
    scomentsprog = svide                                # mise a zero du commentaire de sous prog

    if texte <> 0, [
        spaces$ = 0                             # suprimer les espaces
        if numcoment = 0, omitseq$ = 1                      # si pas de numero de bloc pour commentaires enlever les numeros de bloc
            if debut = 1, [
        # if gcode$ = 1051, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, scomm$, sfcom, e$ # Nom Machine
        if gcode$ = 1053, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, scomm$, sfcom, e$   # Nom du Groupe Machine
        if gcode$ = 1052, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, scomm$, sfcom, e$   # Commentaire de groupe Machine
        #if gcode$ = 1054, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, scomm$, sfcom, e$  # Descripteur de fichier
                    ]
        if gcode$ = 1005, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, scomm$, sfcom, e$   # Usinage commentaire - en commentaire
        if gcode$ = 1007, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, scomm$, sfcom       # Entree Manuelle - en commentaire avec le mouvement sans e$
        if gcode$ = 1008, spaces$ = old_spaces, n$, "* -     ", spaces$ = 0, scomm$, e$   # Commentaire d'operation
        if gcode$ = 1008, scomentsprog = scomm$
        spaces$ = old_spaces                            # rappel des espaces
        omitseq$ = old_omitseq                          # rappel des numero de bloc

                ]

    if gcode$ = 1006, n$, scomm$, e$                        # Usinage commentaire - en code
    if gcode$ = 1026, scomm$                            # Entree Manuelle - en code avec le mouvement sans e$

pcomment3   # Affichage des commentaires d'entete de prog

        if gcode$ = 1054, [
        scomm$ = ucase (scomm$)
        spaces$ = old_spaces, n$, sdcom, spaces$ = 0, scomm$, sfcom, e$     # Descripteur de fichier
        spaces$ = old_spaces
                ]
            old_comm_cnt = comm_cnt$



pnomgroupe  # Affichage du nom du groupe d'operation
    if info_groupe = 1, [
    if snomgroupe_op <> svide & texte <> 0 & snomgroupe_op <> snomgroupe_op_old, [
        spaces$ = 0                             # suprimer les espaces
        if numcoment = 0, omitseq$ = 1                      # si pas de numero de bloc pour commentaires enlever les numeros de bloc
        spaces$ = old_spaces, n$, sdcom, spaces$ = 0, "*", snomgroupe_op, "*", sfcom, e$                # nom du groupe d'operation
        #space, e$
        spaces$ = old_spaces                            # rappel des espaces
        omitseq$ = old_omitseq                          # rappel des numero de bloc
            snomgroupe_op_old = snomgroupe_op                   # memo du nom du groupe d'operation
                        ]
                    ]

pnumop      # numerotation des operations post-processées

        if op_id$ <> old_op_id, numop = numop + 1

#------------------- 4 Axes continue en fonctions 5 Axes ---------------------------------------
#
paxeA   # Affichage de l'axe A



        nbrtour = int (axeA / 360) * sens

    if incremental = 0, axeA, !axeAi
    if incremental = 1, !axeA, axeAi

        old_axeA = axeA




pcalculpmx  # Calacul de l'axe A x y z


    vx = u$ - x$
    vy = v$ - y$
    vz = w$ - z$

    if diviseur = 1, axeA1 = atan2(vy,vz) # on tourne autour de x
    if diviseur = 2, axeA1 = atan2(vx,vz) # on tourne autour de Y

    if axeA1 >  180, axeA2 = 360 - axeA1
    if axeA1 <= 180, axeA2 = axeA1 * -1

    delta_axeA1 = axeA1 - old_axeA1

    if delta_axeA1 >  180, delta_axeA1 = delta_axeA1 - 360
    if delta_axeA1 <  -180,delta_axeA1 = delta_axeA1 + 360

    axeA1_dep = axeA1_dep + delta_axeA1
    old_axeA1 = axeA1
        axeA = axeA1_dep * sens


    if diviseur = 1, [          # on tourne autour de x
    xabs = x$
    yabs = z$*sin(axeA2) + y$*cos(axeA2)
    zabs = z$*cos(axeA2) - y$*sin(axeA2)
            ]

    if diviseur = 2, [          # on tourne autour de Y
    xabs = z$*sin(axeA2) + x$*cos(axeA2)
    yabs = y$
    zabs = z$*cos(axeA2) - x$*sin(axeA2)
            ]




pmx0$       # pre output pmx
            if fr$ = -2, gcode$ = 0
            else, gcode$ = 1
            pcalculpmx



pmx$      # ecriture du 5 axes continue
            #"voir ", *x$, *y$,*z$,*u$,*v$,*w$,*vx,*vy,*vz,*longvec,e$
            if mode_5axe = 0, pmx_4axes
            else, pmx_5axes

pmx_5axes   # Gestion en 5 axes continue

           xabs = x$
           yabs = y$
           zabs = z$
           !xabs, !yabs, !zabs

           if opcode$ = 16, ex$  # on passe la dans le percage 5 axes
           vx = u$ - x$
           vy = v$ - y$
           vz = w$ - z$
           longvec=sqrt(vx * vx + vy * vy + vz * vz)

           tx = (vx/longvec)
           ty = (vy/longvec)
           tz = (vz/longvec)
            #"voir ", *x$, *y$,*z$,*u$,*v$,*w$,*vx,*vy,*vz,*tx,*ty,*tz,*longvec,e$
           if gcode$ = 0, fr$ = frap5x
           gcode$ = 1


           if debutpmx = 1,
                        [
                        if mode_pre_5x = 1,  # on est en mode Plane Projected , marche pas a tous les angel, suivant machine
                                    [

                                    gcode$ = 0
                                    PROPR = atan2(vx,vz)
                                    if PROPR > 180, PROPR = PROPR - 360

                                    PROMIN = (atan2(vy,vz)) * -1
                                    if PROMIN < -180, PROMIN = PROMIN + 360
                                    comment$
                                    n$, "PLANE PROJECTED",*PROPR,*PROMIN,"ROT+0 TURN FMAX", seq, "TABLE ROT", e$
                                    n$, "PLANE RESET STAY", e$
                                    n$, "M128 M126",e$
                                    n$, "L", *spdlon, e$
                                    n$, "LN" , *xabs, *yabs, *zabs, *tx, *ty, *tz, *frap5x,e$
                                    debutpmx = 0
                                    ]
                        else,               # on est en mode Plane point, plus classic mais a testes suivant double choix machine
                                    [
                                    pcal5xpos
                                    axeC = atan2(tx,-ty)
                                    axeA5x = acos(tz)
                                    n$, "PLANE SPATIAL SPA", axeA5x,  "SPB+0", "SPC", axeC, "TURN FMAX", seq, " TABLE ROT", e$
                                    n$, "L X+0 Y+0 R0 FMAX", e$
                                    n$, "PLANE RESET STAY", e$
                                    n$, "M128 M126",e$
                                    n$, "CYCL DEF 32.0 TOLERANCE",e$
                                    n$, "CYCL DEF 32.1 T0.1", e$
                                    n$, "CYCL DEF 32.2 HSC-MODE:0 TA0.25",e$
                                    n$, "L", *spdlon, e$
                                    n$, "LN" , *xabs, *yabs, *zabs, *tx, *ty, *tz, *frap5x,e$
                                    debutpmx = 0
                                    ]
                        ]
          else, n$, "LN" , *xabs, *yabs, *zabs, *tx,*ty,*tz,plubrifon, pfr,e$





pmx_end$  # Operation  premier mouvement
        if opcode$ = 16, ex$
        if debutpmx = 1, pmx$



pmx_4axes        # Gestion 4 axes continue avec fonction 5 axes
            if debutpmx = 1, pmx_4axes_2
            if debutpmx = 0, [
            if gcode$ = 1, [
            @xabs, @yabs, @old_x, @old_y, @axeA, @old_axeA
            if xabs <> old_x | yabs <> old_y | axeA <> old_axeA, poriusinul, n$, sinc_abs, sgcode, pxyz, paxeA, pcord, pfr, e$
            else, poriusinul, n$, sinc_abs, sgcode, pxyz, paxeA, pfr, e$
                        ]
            if gcode$ = 0, n$, sinc_abs, sgcode, pxyz, paxeA, pfr, e$
            ]
            old_x = xabs
            old_y = yabs
            old_z = zabs

pmx_4axes_2   # debut du 4 axes continue
            bloque = 2
            if use_bloque = 0, bloque = 0
            n$, sbloque, e$
            gcode$ = 0
            poriusi
            n$, sinc_abs, *sgcode, *xabs, *yabs, paxeA, pfr, *spdlon, e$
            paffiche_outil_suivant
            n$, sinc_abs, sgcode, *zabs, pfr, e$
            !x$, !y$, !z$, !xr$, !yr$, !zr$
            p_modal
            debutpmx = 0









#------------------- 4 Axes continue en substitution d'axe ---------------------------------------
#

plinarc  # Convertir les G2 G3 en G1

        linarc$ = 1
        if tolquestion <> 1, q8
        tolquestion = 1


p_Apos  # calcul de l'axe A en substitution

        @x$, @y$

        if diviseur = 1, axeA = (y$ * 360 / (pi$ * rotdia$)) * sens   # pour 4eme axe autour de X (substituer Y)
        if diviseur = 2, axeA = (x$ * 360 / (pi$ * rotdia$)) * sens   # pour 4eme axe autour de Y (substituer X)

    p_zdev          # calcul du Z en substitution

p_zdev  # calcul du Z en substitution

    @z$, @rotdia$
    zabs  = z$ +(rotdia$ /2)    # Z pour continue substitutuion en ABS


p_Apos_affiche  # affichage de l'angle au chg outil nul pour continue





           if useaxe <> 0, [

            @old_axeA, @axeA
            epsi = old_axeA - axeA
            epsi = abs(epsi)
                #"---------p_Apos_affiche-------", e£

           if epsi <> 0, [
            pdegage4_5axes, e$
         bloque = 2
         if use_bloque = 0, bloque = 0
            n$, sbloque, e$
            if incremental = 0, poriusi, n$, sgcode, sinc_abs, *axeA, !axeAi, pfr, sbloque, e$
            else, poriusi, n$, sgcode, sinc_abs, !axeA, *axeAi, pfr, sbloque, e$
                ]
            ]

        old_axeA = axeA



#------------------- 4 Axes positionné ---------------------------------------
#

prot0$  #   Tool plan view matrix du gcode 1014


prot$



prot1   # calcul de l'axe A en positionné

        @old_axeA, @nbrtour

        if diviseur = 1, axeA = atan2(m8$,m9$) + (360 * nbrtour)    # pour diviseur tourne autour de X
        if diviseur = 2, axeA = atan2(m7$,m9$) + (360 * nbrtour)    # pour diviseur tourne autour de Y
    axeA = axeA * sens                      # prise en compte du sens de rotation

    epsi = axeA - old_axeA                      # variation angulaire
    sensA = 0
    if epsi > 0, sensA = 1                      # sens de la variation
    if epsi < 0, sensA =  -1
    epsi = abs(epsi)
    @epsi, @sensA                           # mise a jour

            if epsi > 180,  [                   # optimisation de l'angle
        axeA = axeA - (360 * sensA)
                epsi = axeA - old_axeA
                sensA = 0
        if epsi > 0, sensA = 1
        if epsi < 0, sensA = -1
                        ]
        nbrtour = int (axeA / 360)                  # Calcul du nombre de tour

        # "----prot1-----valeur corigee------", *old_axeA, *axeA,*epsi,*sensA,*nbrtour, e


prot2   # affichage de l'angle au chg outil pour positionné


           if useaxe <> 0, [        # afficher les angle que si machine avec Axe A

            @old_axeA, @axeA        # mise a jour

            epsi = old_axeA - axeA  # regarder si on tourne
            epsi = abs(epsi)

           if epsi <> 0, [      # si ca tourne
            bloque = 2          # deblocage de l'axe A
            if use_bloque = 0, bloque = 0
            n$, sbloque, e$
            if mi2$ = 0, bloque = 1         # preparer le blocage de l'axe A
            if use_bloque = 0, bloque = 0
            poriusi
            if incremental = 0, n$, sgcode, sinc_abs, *axeA, !axeAi, pfr, e$
            else, n$, sgcode, sinc_abs, !axeA, *axeAi, pfr, e$
            n$, sbloque, e$     # bloquer l'axe A
                ]

            ]

        old_axeA = axeA         # memo de la position de l'axe A affiché




prot3   # affichage de l'angle au chg outil nul pour positionné



           if useaxe <> 0, [        # afficher les angle que si machine avec Axe A

            @old_axeA, @axeA        # mise a jour

            epsi = old_axeA - axeA  # regarder si on tourne
            epsi = abs(epsi)

           if epsi <> 0, [      # si ca tourne

            #xabs = x$           # reprendre les positions xyz avant le dégagement
            #yabs = y$
            #zabs = z$

            pdegage4_5axes        # Dégagement machine avant la rotation de l'axe A

            bloque = 2          # deblocage de l'axe A
            if use_bloque = 0, bloque = 0
            n$, sbloque, e$
            if mi2$ = 0, bloque = 1         # preparer le blocage de l'axe A
            if use_bloque = 0, bloque = 0
            if incremental = 0, n$, sgcode, sinc_abs, *axeA, !axeAi, pfr, e$
            else, n$, sgcode, sinc_abs, !axeA, *axeAi, pfr, e$

            n$, sbloque, e$     # bloquer l'axe A

            if incremental = 0, [           # Rappel des positions XYZ avant le dégagement
            n$, sgcode, sinc_abs, *xabs, *yabs, pfr, e$
            n$, sgcode, *zabs, pfr, e$
            p_modal
                ]

                ]
            ]

        old_axeA = axeA         # memo de la position de l'axe A affiché


#sfauto : "F AUTO"
fmt  "F" 3 avance2
#fmt  F  1 fr_pos$
pfrparam         # avance en parametré

        avance = fr$ #fr_pos$
        #avance2 = fr_pos$
        if gcode$ = 0, [
        fr_pos$ =  -9999
        !fr_pos$
        valparam = 0
        !valparam
                    ]

    if gcode$ <> 0, [
                @fr_pos$

        #if fr_pos$ = fg1ugv, valparam = 4
        #if fr_pos$ = fretract, valparam = 3
        #if fr_pos$ = fplongee, valparam = 2
        #if fr_pos$ = ftravail, valparam = 1
        #if fr_pos$ = ftravail  | fr_pos$ = fplongee | fr_pos$ = fretract | fr_pos$ = fg1ugv, valparam

         if avance = ftravail, sfauto
         else, fr_pos$ #avance2
                !fr_pos$
                    ]

#   Gestion de la valeur de l'avance pour l'afficher
#
pfr     # avance travail

        @cc_computer$, @cc_pos$                 # mise à jour des variables

        if cc_pos$ = 0  & cc_computer$ = 0, type_comp = 0   #AUCUNE

        if cc_pos$ = 2  & cc_computer$ = 0, type_comp = 1   #ARMOIRE DROITE
        if cc_pos$ = 1  & cc_computer$ = 0, type_comp = 2   #ARMOIRE GAUCHE

        if cc_pos$ = 0  & cc_computer$ = 42, type_comp = 3  #ORDINATEUR DROITE
        if cc_pos$ = 0  & cc_computer$ = 41, type_comp = 4  #ORDINATEUR GAUCHE

    if cc_pos$ = 2  & cc_computer$ = 42, type_comp = 5  #USURE DROITE
    if cc_pos$ = 1  & cc_computer$ = 41, type_comp = 6  #USURE GAUCHE

    if cc_pos$ = 1  & cc_computer$ = 42, type_comp = 7  #USURE INVERSE DROITE
    if cc_pos$ = 2  & cc_computer$ = 41, type_comp = 8  #USURE INVERSE GAUCHE


    if gcode$ <> 0, [   # Avance travail
        @fr_pos$
        @fmini
        @fmaxi
        avance = fr_pos$    # affectation de l'avance

        if avance_arc <> 0, [   # acivation de l'avance optimiseé sur arc  (option PST)

        # arc horaire correction a gauche
        if gcode$ = 2 & (type_comp = 6 | type_comp = 4 | type_comp = 8), if (arcrad$ - tldia$/2) <> 0, avance =(arcrad$*fr_pos$)/abs(arcrad$ - tldia$/2)
        # arc trigo correction a gauche
        if gcode$ = 3 & (type_comp = 6 | type_comp = 4 | type_comp = 8), avance =(arcrad$*fr_pos$)/(tldia$/2 + arcrad$)

        # arc horaire correction a droite
        if gcode$ = 2 & (type_comp = 5 | type_comp = 3 | type_comp = 7), if (arcrad$ - tldia$/2) <> 0, avance =(arcrad$*fr_pos$)/abs(arcrad$ -tldia$/2)
        # arc trigo correction a droite
        if gcode$ = 3 & (type_comp = 5 | type_comp = 3 | type_comp = 7), avance =(arcrad$*fr_pos$)/(tldia$/2 +arcrad$)

        # control en foction de l'operation (par mi10$)
        # que ralentir (mi10$ = 1)
        if avance > fr_pos$ & mi10$ = 1, avance = fr_pos$
        # que accelerer (mi10$ = 2)
        if avance < fr_pos$ & mi10$ = 2, avance = fr_pos$
        # pas d'optimisation (mi10$ = 0)
        if mi10$ = 0, avance = fr_pos$

        # test des avances en fonction des limites de la def machine
        if avance < fmini, avance = fmini
        if avance > fmaxi, avance = fmaxi

        ]

        #avance
    result = newfs (4, avance)  # affectation en format modal
            ]
     pfrparam

    if gcode$ = 0,  [   # Avance rapide
            `sfmax
            avance = -9999
            !avance
            ]

pavanceperce    # Avance en percage

    p_casse_modalite_avance             # pour forcer l'affichage de l'avance
    pfr                     # Affichage de l'avance


#   Gestion de la correction outil et du numéro de corecteur
#




pcord



    if opcode$ < 16 | opcode$ > 18, [   # pour 3 axes

    if cc$ = 140, cc$ = 40

         if cc$ <> 0, `scord
                    ]

        else, [                 # pour 4 axes pmx
        if cend$ = 1 & cc_pos$ <> 0, cc$ = 40

         if cc$ <> 0, scord

        cc$ = 0

        ]

    #if cc$ <> 0, if gcode$ = 2 | gcode$ =3, if cor_arc = 0, erreur = 4, perreur


pcancelcc$  # Annulation de correction de rayon



#   Gestion lubrif -0 arret -1 axe outil -2 buse -3 les deux separé du M3 M4
#
plubrifon
           lubrif = coolant$

           if lubrif = 1, #"M8"      #buses
           if lubrif = 2, #"M7"     #centre
           if lubrif = 3, "M25"     #air


plubrifoff
           if lubrif = 1, n$, "M9"
           if lubrif = 2, n$, "M9"
           if lubrif = 3, n$, "M26"




#   Initialisation de la machine
#

pintcn  #   Initialisation de la machine
      q2, q4, q3, #q27
      #origineheid = workofs$
      sclient = ucase (sclient)
      sindice = ucase (sindice)
      srepere = ucase (srepere)
      spt_ref = ucase (spt_ref)
      orheid = workofs$
      if orheid = 0, orheid = 1
        n$, "* -", e$
        n$, "* -", e$
        n$, "* -", e$
        n$, "* -", sclient, sindice, e$
        n$, "   * -", srepere, e$
        n$, "* -", e$
        n$, "* -", e$
        n$, "* -", e$
        if GESTc247 = 1, [
        n$, "CYCL DEF 247 INIT. PT DE REF. ~", e$
        spaces$ = 0, n$, "  Q339=+", *orheid, "    ;NUMERO POINT DE REF.", e$    #spt_ref
        spaces$ = 1
        old_orheid = orheid
        ]
        if mode_5axe = 1, n$, "L B+0 C+0 R0 FMAX M70", e$
pbrise_outil                    # controle bris outil
    if test_bris = 1, [

    if sdegageZ <> svide, n$, sgcode, sinc_abs, sdegageZ, pfr, smodedeg, e$        # degager en Z

    n$, "TCH PROBE 481 LONGUEUR D'OUTIL ~", e$
        "    Q340=+1    ;CONTROLE ~", e$
        "    Q260=+100  ;HAUTEUR DE SECURITE ~", e$
    "    Q341=+0    ;ETALONNAGE DENTS", e$
    n$, "FN 9: IF +Q199 EQU +2 GOTO LBL 249", e$
    n$, "FN 9: IF +Q199 EQU +1 GOTO LBL 249", e$
             ]


#   Gestion du dégagement de la machine au debut de prog
#
pdegage_debut       #   Gestion du dégagement de la machine au debut de prog

    if deg_debut <> 0, [

    memo_gcode = gcode$         # memo du gcode precedent
    gcode$ = 0              # Degagement en Rapide
        @incremental
        memo_incremental = incremental      # memo du mode actuel G90 G91
        incremental = inc_degage        # passage en mode 90 ou 90 pour degagement

    if deg_debut >= 1, [            # si degager en Z
        if sdegageZ <> svide, n$, sgcode, sinc_abs, sdegageZ, pfr, smodedeg, e$                     # degager en Z
                ]


    if deg_debut = 2 | deg_outil = 4, [             # si degager en Z et X
        if sdegageX <> svide, n$, sgcode, sinc_abs, sdegageX, pfr, smodedeg, e$ # degager en X

                ]
    if deg_debut = 3 | deg_outil = 4, [             # si degager en Z et Y
        if sdegageY <> svide, n$, sgcode, sinc_abs, sdegageY, pfr, smodedeg, e$ # degager en X
                    ]
    if deg_debut = 5, [             # si degager en Z etXY
        if sdegageX <> svide & sdegageY <> svide, n$, sgcode, sinc_abs, sdegageX, sdegageY, pfr, smodedeg, e$  # degager en  X Y                                    # degager en X
                ]

    gcode$ = memo_gcode         # rappel du gcode precedent
        incremental = memo_incremental                                                                  # Rappel du mode actuel G90 G91
        #@incremental                                                                                   # mise a jour
        #if sdegageZ <> svide | sdegageX <> svide | sdegageY <> svide, n$, sinc_abs, e$
        #!incremental

            ]


#   Gestion du dégagement de la machine avant appel outil
#
pdegage     #   Gestion du dégagement de la machine avant appel outil

    if deg_outil <> 0, [

    memo_gcode = gcode$         # memo du gcode precedent
    gcode$ = 0              # Degagement en Rapide
        @incremental
        memo_incremental = incremental      # memo du mode actuel G90 G91
        incremental = inc_degage        # passage en mode 90 ou 90 pour degagement

    if deg_outil >= 1, [            # si degager en Z
        if sdegageZ <> svide, n$, sgcode, sinc_abs, sdegageZ, pfr, smodedeg, e$                     # degager en Z
                ]


    if deg_outil = 2 | deg_outil = 4, [             # si degager en Z et X
        if sdegageX <> svide, n$, sgcode, sinc_abs, sdegageX, pfr, smodedeg, e$ # degager en X

                ]
    if deg_outil = 3 | deg_outil = 4, [             # si degager en Z et Y
        if sdegageY <> svide, n$, sgcode, sinc_abs, sdegageY, pfr, smodedeg, e$ # degager en X
                    ]
    if deg_outil = 5, [             # si degager en Z etXY
        if sdegageX <> svide & sdegageY <> svide, n$, sgcode, sinc_abs, sdegageX, sdegageY, pfr, smodedeg, e$  # degager en  X Y                                    # degager en X
                ]

    gcode$ = memo_gcode         # rappel du gcode precedent
        incremental = memo_incremental                                                                  # Rappel du mode actuel G90 G91
        @incremental                                                                                    # mise a jour
        if sdegageZ <> svide | sdegageX <> svide | sdegageY <> svide, n$, sinc_abs, e$
        !incremental

            ]

#   Gestion du dégagement de la machine fin de prog
#
pdegage_fin #   Gestion du dégagement de la machine fin de prog

   if deg_fin <> 0, [
    memo_gcode = gcode$         # memo du gcode precedent
    gcode$ = 0              # Degagement en Rapide
        @incremental                # mise a jour
        memo_incremental = incremental          # memo du mode actuel G90 G91
        incremental = inc_degage        # passage en mode 90 ou 90 pour degagement


    if deg_fin >= 1, [          # si degager en Z
        if sdegageZ <> svide, n$, sgcode, sinc_abs, sdegageZ, pfr, smodedeg, e$                     # degager en Z
                ]


    if deg_fin = 2 | deg_outil = 4, [               # si degager en Z et X
        if sdegageX <> svide, n$, sgcode, sinc_abs, sdegageX, pfr, smodedeg, e$ # degager en X

                ]
    if deg_fin = 3 | deg_outil = 4, [               # si degager en Z et Y
        if sdegageY <> svide, n$, sgcode, sinc_abs, sdegageY, pfr, smodedeg, e$ # degager en X
                    ]
    if deg_fin = 5, [               # si degager en Z etXY
        if sdegageX <> svide & sdegageY <> svide, n$, sgcode, sinc_abs, sdegageX, sdegageY, pfr, smodedeg, e$  # degager en  X Y                                    # degager en X
                ]

    gcode$ = memo_gcode         # rappel du gcode precedent
        incremental = memo_incremental          # Rappel du mode actuel G90 G91
        @incremental                # mise a jour
        if sdegageZ <> svide | sdegageX <> svide | sdegageY <> svide, n$, sinc_abs, e$
        !incremental
                ]




#   Gestion du dégagement de la machine avant rotation plateau
#
pdegage4_5axes        #   Gestion du dégagement de la machine avant rotation plateau

   if deg_4axe <> 0, [

    if mi1$ = 0, [

    memo_gcode = gcode$         # memo du gcode precedent
    gcode$ = 0              # Degagement en Rapide
        @incremental
        memo_incremental = incremental          # memo du mode actuel G90 G91
        incremental = inc_degage            # passage en mode 90 ou 90 pour degagement


    p_casse_modalite            # casser la modalité pour rappel des XYZ

    if deg_4axe >= 1, [         # si degager en Z
        if sdegageZ <> svide, n$, sgcode, sinc_abs, sdegageZ, pfr, smodedeg, e$                     # degager en Z
                ]


    if deg_4axe = 2 | deg_outil = 4, [              # si degager en Z et X
        if sdegageX <> svide, n$, sgcode, sinc_abs, sdegageX, pfr, smodedeg, e$ # degager en X

                ]
    if deg_4axe = 3 | deg_outil = 4, [              # si degager en Z et Y
        if sdegageY <> svide, n$, sgcode, sinc_abs, sdegageY, pfr, smodedeg, e$ # degager en X
                    ]
    if deg_4axe = 5, [              # si degager en Z etXY
        if sdegageX <> svide & sdegageY <> svide, n$, sgcode, sinc_abs, sdegageX, sdegageY, pfr, smodedeg, e$  # degager en  X Y                                    # degager en X
                ]

    gcode$ = memo_gcode         # rappel du gcode precedent
        incremental = memo_incremental          # Rappel du mode actuel G90 G91
        @incremental                # mise a jour
        n$, sinc_abs, e$
            ]

                ]

#   Gestion des Origine d'usinages G54 a G59
#
poriusi


    if workofs$ >=0, [                  # ne pas afficher de G54 si le decalage < 0
        pfairedef7
    #origine = 54 + workofs$                 # origine de  54 a 59
    origine = workofs$                 # origine de  54 a 59

        originebis = origine - 59               # origine > 59


      ]

       # if origine <> old_origine, [                # si changement d'origine

         #n$, "CYCL DEF 247 INIT. PT DE REF. ~", e$
        #spaces$ = 0, n$, "  Q339=+1    ;NUMERO POINT DE REF.", e$
        #spaces$ = 1
        #n$, " * - CHANGEMENT ORIGINE", e$

        #old_origine = origine               # memo de l'origine affichée

        #]


#   Gestion des G54 a 59 pour changement outil mul
#
poriusinul

        #"poriusinul", e$
    if workofs$ >=0, [                  # ne pas afficher de G54 si le decalage < 0
        pfairedef7
    #origine = 54 + workofs$                 # origine de  54 a 59
    origine = workofs$                 # origine de  54 a 59
    originebis = origine - 59               # origine > 59


        #if origine <> old_origine, [                # si changement d'origine



        #old_origine = origine               # memo de l'origine affichée

        #]
            ]


panuldef7


        n$, "CYCL DEF 7.0 POINT ZERO", e$
        n$, "CYCL DEF 7.1 X0", e$
        n$, "CYCL DEF 7.2 Y0", e$
        n$, "CYCL DEF 7.3 Z0", e$
        oriusi = 0

pfairedef7

    !tox4$, !toy4$, !toz4$ #, *tox$, *toy$, *toz$, *tox4$, *toy4$, *toz4$,e$
     if tox4$ <> old_tox | toy4$ <> old_toy | toz4$ <> old_toz | ((tox4$ <> 0 | toy4$ <> 0 | toz4$ <> 0 ) & oriusi = 0 ), pcycledef7 # si origine dif ancienne l'ecrire

    #if old_tox <> tox$ | old_toy <> toy$ | old_toz <> toz$, pcycledef7 # si origine dif ancienne l'ecrire

pcycledef7  # ecrire le cycle def7
        #if oriusi = 1, [
        #        panuldef7   # annuler la precedente
        #        ]

        p_casse_modalite                # pour forcer le rappel des coordonées apres changement d'origine
        #n$, *tox$, e$
        #n$, *toy$, e$
        #n$, *toz$, e$
        #n$, *old_tox, e$
        #n$, *old_toy, e$
        #n$, *old_toz, e$

        n$, "CYCL DEF 7.0 POINT ZERO", e$
        n$, "CYCL DEF 7.1", *tox4$, e$
        n$, "CYCL DEF 7.2", *toy4$, e$
        n$, "CYCL DEF 7.3", *toz4$, e$
        old_tox = tox4$
        old_toy = toy4$
        old_toz = toz4$
        oriusi = 1




#   Gestion des gammes de vitesse de broche
#
pgamme

    @ssa
    #if ssa < 1500, "M38"
    #else, "M39"

p_block_form


          if stck_crnr$ = 0,
               [
               xmin = stck_x$ - (stck_ht$ / 2)
               ymin = stck_y$ - (stck_wdth$ / 2)
               xmax = stck_x$ + (stck_ht$ / 2)
               ymax = stck_y$ + (stck_wdth$ / 2)
               ]
          if stck_crnr$ = 1 | stck_crnr$ = 5,
               [
               xmin = stck_x$
               ymin = stck_y$ - stck_wdth$
               xmax = stck_x$ + stck_ht$
               ymax = stck_y$
               ]
          if stck_crnr$ = 2 | stck_crnr$ = 6,
               [
               xmin = stck_x$ - stck_ht$
               ymin = stck_y$ - stck_wdth$
               xmax = stck_x$
               ymax = stck_y$
               ]
          if stck_crnr$ = 3 | stck_crnr$ = 7,
               [
               xmin = stck_x$ - stck_ht$
               ymin = stck_y$
               xmax = stck_x$
               ymax = stck_y$ + stck_wdth$
               ]
          if stck_crnr$ = 4 | stck_crnr$ = 8,
               [
               xmin = stck_x$
               ymin = stck_y$
               xmax = stck_x$ + stck_ht$
               ymax = stck_y$ + stck_wdth$
               ]

          if stck_crnr$ < 5,
               [
               zmin = stck_z$ - stck_thck$
               zmax = stck_z$
               ]
          else,
               [
               zmin = stck_z$
               zmax = stck_z$ + stck_thck$
              ]



#----------------- BLOCS D'AFFICHAGES DES ENTETES ET APPEL OUTLIS -----------------


pentete     # QUESTION POUR L'ENTETE

           if entete = 1, q2, q3, q4
        entete = 1
        sclient = ucase (sclient)
        srepere = ucase (srepere)
        sindice = ucase (sindice)

        if sclient <> svide, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, "CLIENT - ", sclient, sfcom, e$
        if srepere <> svide, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, "DESIGNATION - ", srepere, sfcom, e$
        if sindice <> svide, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, "REFERENCE PIECE - ", sindice, sfcom, e$
        spaces$ = old_spaces
        comment$        # pour sortie du descripteur de fichier
        entete = 0




pheader$     # ENTETE DE PROGRAMME

    rd_mch_ent_no$ = -1         # pour lire les info de toute la machine
    rd_md$                  # lire la definition machine
    rd_mch_ent_no$ = 0          # pour lire les info de base de la machine
    rd_md$                  # lire la definition machine
    compt_axes_rot = 0          # pour remetre a zero le nombre d'axe rotatif avant la lecture de la conbinasin d'axe
    useaxe = 0

    if omitseq$ = 1, numcoment = 0      # si pas de numero de bloc ne pas numeroter les commentaires
    debut = 1               # flag pour debut de prog
        old_omitseq = omitseq$          # memo du mode de numerotation de ligne
        old_spaces = spaces$            # memo du nombre d'espaces
    old_linarc = linarc$            # memo de la decomposition des arcs

        smcpath$ = ucase (smcpath$)     # convertir en MAJUSCULES les noms
        smcname$ = ucase (smcname$)
        smcext$ = ucase(smcext$)
        snamepst$ = ucase (snamepst$)
    snamenc$ = ucase (snamenc$)
    smachine = ucase (smachine)



        if use_progno = 1, [            # si on sauve sous la forme 00123.NC
                while progno$ = 0, q6       # verifier le numéro de prog
        pnom_nc             # Génération des noms du fichier NC
        ptest_nom           # Tester si prog O0123.NC existe
                ]

         prognosav = progno$            # memo du numéro de prog
         debsousprog = 0            # memo du num de premier sous prog
         #debsousprog = progno$ * 100       # memo du num de premier sous prog


    #---------------------- Debut de prog -----------------------

    if use_progno = 0,  n$, "BEGIN PGM", snamenc$, "MM", e$
    else,           n$, "BEGIN PGM", progno$, "MM", e$

        if texte <> 0,      [                           # Si la machine accepte les commentaires

        if numcoment = 0, omitseq$ = 1                      # si pas de numero de bloc pour commentaires enlever les numeros de bloc
            pentete                                 # faire l'entete de prog
        #spaces$ = old_spaces, n$, sdcom, spaces$ = 0, "POST-PRO FICAM", sfcom, e$
        #spaces$ = old_spaces, n$, sdcom, spaces$ = 0, "MACHINE - ", smachine, sfcom, e$         # nom de la machine
        #spaces$ = old_spaces, n$, sdcom, spaces$ = 0, "DESSIN MASTERCAM - ", smcname$, sfcom, e$    # nom du fichier MCX
        #spaces$ = old_spaces, n$, sdcom, spaces$ = 0, "PROG-CN DU ", date$, " A ", time$, sfcom, e$ # date du traitement post-pro
        #space, e$                                          # Sauter une ligne
        spaces$ = old_spaces                                        # rappel des espaces
    omitseq$ = old_omitseq                                  # rappel des numero de bloc
                ]


        p_block_form

        n$, "BLK FORM 0.1 Z", *xmin, *ymin, *zmin, e$
        n$, "BLK FORM 0.2", *xmax, *ymax, *zmax, e$


        if texte <> 0,      [                           # Si la machine accepte les commentaires
            spaces$ = 0                             # suprimer les espaces
        if numcoment = 0, omitseq$ = 1                      # si pas de numero de bloc pour commentaires enlever les numeros de bloc
                           " ",e$
            if tooltable$ <> 0, spaces$ = old_spaces, n$, sdcom,spaces$ = 0, "LISTE DES OUTILS UTILISES", sfcom, e$ # pour liste des outils
            spaces$ = old_spaces                            # rappel des espaces
        omitseq$ = old_omitseq                          # rappel des numero de bloc
                ]



psof0$       # DEBUT DE PROGRAMME pour T=0

       psof$

pappel_outil    # ecriture de l'appel outil pour psof et ptlchg

    pnomgroupe                                  # Nom du groupe d'operation


    if tool_typ$ = 5, ss$ = (abs(ss$))*-1       # si tataud à gauche inverser le sens de broche

        #--------------- infos outil -------------------------------------------
        #if texte <> 0 & info_outil = 1, [                   # si affichage des infos outil
        #        sdesioutil = ucase (strtool$)               # convertir en MAJUSCULES le nom outil
        #        spaces$ = 0                     # suprimer les espaces
        #    if numcoment = 0, omitseq$ = 1              # si pas de numero de bloc pour commentaires enlever les numeros de bloc
        #        paramT1 = t$
        #    if strtool$ <> svide,   spaces$ = old_spaces, n$, sdcom, spaces$ = 0, paramT1, space, sdesioutil, space, stypeT, space,paramT5, space, paramT16, ptypeBoutT, pangleT, space, smatT, sfcom, e$
        #    else,           spaces$ = old_spaces, n$, sdcom, spaces$ = 0, paramT1, space, stypeT, space, paramT5, space, paramT16, ptypeBoutT, pangleT, space, smatT, sfcom, e$
        #       spaces$ = old_spaces                    # rappel des espaces
        #   omitseq$ = old_omitseq                  # rappel des numero de bloc
        #           ]
        #--------------- surep et compenstion ----------------------------------                    _-_-_-_-_-_-_-_-_-_-_-___AFFICHAGE INFOS OUTIL DANS BLOC "poutil"_-_-_-_-_-_-_-_-______
        #paramcomp                               # afficher le type de compensation

        if texte <> 0, paramsurep                       # afficher les surepaisseur


    paffiche_outil

        #n$, "M1", e$
        #space, e$                              # Sauter une ligne
        debut = 0
        gcode$ = 5
        !gcode$

poutil  # appel outil sans outil suivant
    n$, "* -", e$
    fauto = paramT11
    outil = t$
    if outil_parm = 1, [      # appel outil par son nom
        if strtool$ <> svide, [
            spaces$ = 0
            if omitseq$ = 1, num, " TOOL CALL ", p_af_outil, " Z ", *ssa
            if omitseq$ = 0, n$, " TOOL CALL ", p_af_outil, " Z ", *ssa
            spaces$ = old_spaces
                    ]
        else, [
            if omitseq$ = 1, num, *outil, *ssa
            if omitseq$ = 0, n$, *outil, *ssa
            ]
            ]
    else, [             # appel outil par son numero
    if omitseq$ = 1, num, *outil, *ssa
    if omitseq$ = 0, n$, *outil, *ssa, *fauto
            ]


    if use_DR = 1, [
        DR = 0
        if type_comp >=5, DR = tldia$/-2
        DR
        old_DR = DR
         ]
    e$

                p_casse_modalite_X
            p_casse_modalite_Y
            p_casse_modalite_Z
            #--------------- infos outil -------------------------------------------

        if texte <> 0 & info_outil = 1, [                   # si affichage des infos outil

                sdesioutil = ucase (strtool$)               # convertir en MAJUSCULES le nom outil
                spaces$ = 0                     # suprimer les espaces
            if numcoment = 0, omitseq$ = 1              # si pas de numero de bloc pour commentaires enlever les numeros de bloc
                paramT1 = t$
            if strtool$ <> svide,  spaces$ = old_spaces, n$, "* -", spaces$ = 0, !paramT1, space, sdesioutil, space, !stypeT, space, !paramT5, space, !paramT16, ptypeBoutT , pangleT , space, !smatT, e$
            else, spaces$ = old_spaces, n$, "* -", spaces$ = 0, !paramT1, space, stypeT, space, paramT5, space, !paramT16, ptypeBoutT , pangleT , space, !smatT, e$
                spaces$ = old_spaces                    # rappel des espaces
            omitseq$ = old_omitseq                  # rappel des numero de bloc
                    ]

      comment$                                    # commentaires d'operation
      paramcomp                               # afficher le type de compensation
poutil_suivant  # appel outil avec outil suivant

        if outil_apres = 0, [       # flag pour la position d'appel de l'outil suivant
            n$, "M45", e$
            outil = t$
            outil_suivant = next_tool$
            n$,"TOOL DEF", p_af_outil_suivant, e$
                        ]

paffiche_outil  # affichage du numero d'outil

#     Début de programme pour outil
        if bldnxtool$ = 1, [

                if op_id$ <> last_op_id & t$ <> next_tool$, poutil, poutil_suivant  # appel outil avec outil suivant juste apres
                if op_id$ <> last_op_id & t$ = next_tool$, poutil           # appel outil sans outil suivant
                if op_id$ = last_op_id & t$ <> first_tool$, poutil, poutil_suivant  # appel outil avec outil suivant juste apres
                if op_id$ = last_op_id & t$ = first_tool$, poutil           # appel outil sans outil suivant

                            ]


        if bldnxtool$ = 0, poutil                       # appel outil sans outil suivant



paffiche_outil_suivant  # affichage de l'outil suivant ou non

    outil = t$
    outil_suivant = next_tool$

        if bldnxtool$ = 1 & outil_apres = 1, [

                if op_id$ <> last_op_id & t$ <> next_tool$, n$, outil_suivant, e$   # appel outil suivant
                if op_id$ = last_op_id & t$ <> first_tool$, n$, outil_suivant, e$   # appel outil  suivant

                    ]

#     Début de programme pour outil
#
psof$        # DEBUT DE PROGRAMME
        debutpmx = 1
    pinfos
    DR = -99999
    old_DR = -99999
    !DR, !old_DR

    plireaxes                   # Lecture des parametres de la combinaison d'axes uniquement


        if tooltable$ <> 0 & texte <> 0, [      # Si liste des outils et textes supportés

            if numcoment = 0, omitseq$ = 1  # Si pas de numero sur les commentaires
                spaces$ = 0
            #spaces$ = old_spaces, n$, sdcom, spaces$ = 0, "FIN DE LISTE DES OUTILS", sfcom, e$
            #space, e$                  # Sauter une ligne
                spaces$ = old_spaces
                omitseq$ = old_omitseq
                        ]

    pnumop                      # compteur d'operation
        gcode$ = 0
    plane$ = 3                  # pour focer le rappel G17 G18 G19
    !plane$

    old_origine = -9999             # pour forcer l'affichage du G54 au chg outil
        incremental = 0                 # Travail en Absolue


    pintcn                      # Initialisation de la machine


        incremental = 2                 # pour re forcer l'affichage du mode Absolue
        !incremental
        incremental = 0

    pdegage_debut                           # Dégagement de la Machine au debut de prog

    #space, e$                  # sauter une ligne
        pappel_outil                        # APPEL OUTIL



    pplacement_cn                   # AFFICHAGE DES MOUVEMENTS MACHINE


#   Mise en route cn apres appel outil
#
pplacement_cn   # AFFICHAGE DES MOUVEMENTS MACHINE

        @rotaxis$                   # mise a jour du type de substitution d'axe


        if nextop$ = 11,    [               # si  4  ou 5 axes
        gcode$ = 0                      # Force le gcode a 0 pour faire un G0 apres
        axeA = 0
        axeA1_dep = 0
        old_axeA1 = 0
        debutpmx = 1                # flag pour faire l'appel outil

        cc$ = cc_pos$ + 40
        if mode_5axe = 1, plane_arret_sansbouger, pmx$

                        ]


    if nextop$ <> 11,    [   # utilisation en positionné ou substitution

        gcode$ = 0                              # Force le gcode a 0 pour faire un G0 apres
        xabs = x$
        yabs = y$
        zabs = z$
        #"voir ", *x$, *y$, *z$, *nextx$, *nexty$, *nextz$, *xnci$, *ynci$, *znci$, e$

    if rotaxis$ = 0,    [     # 3 axes + diviser en positionne
        poriusi

        if mode_5axe <> 1,  [     # on est en mode 3 ou 4 axes
                        if mi3$ = 0, prot1                                   # calcul rotation plateau
                        old_axeA =  -99999                          # pour forcer l'affichage
                        if mi3$ = 0, prot2                                   # affichage de l'angle au chg outil
                            ]
        else, plane_marche         # on est en mode 5 axes

        n$, *sgcode, sinc_abs, *xabs, *yabs, pfr, *spdlon, plubrifon, e$   #ssa, pgamme, *spdlon, e$
        paffiche_outil_suivant
        n$, sgcode, *zabs, pfr, e$
                        ]


   if rotaxis$ <> 0,    [           # utilisation en substitution

        plinarc
                p_Apos
                bloque = 2
                if use_bloque = 0, bloque = 0
        if rotaxis$ = 1, xabs = 0                   # diviseur tourne autour de Y (X sbstitue)
        if rotaxis$ = 2, yabs = 0                   # diviseur tourne autour de X (Y sbstitue)

    poriusi
        n$, *sgcode, sinc_abs, sbloque, *axeA, pfr, e$
        n$, sgcode, sinc_abs, *xabs, *yabs, pfr, *spdlon, plubrifon, e$ # ssa, pgamme, *spdlon, e$
        paffiche_outil_suivant
        n$, sgcode, *zabs, pfr, e$

                        ]

    p_modal                                 # affectation en format modal
        !x$, !y$, !z$, !xabs, !yabs, !zabs, !xinc, !yinc, !zinc, !axeA, !axeAi  # mise à jour des positions affichées

                            ]






   old_ss = ss$             # memo de la vitesse de broche
   old_op_id = op_id$           # memo du numero d'operation
   old_rotaxis = rotaxis$       # memo du type de substitution
   old_x = xabs             # memo X Y Z
   old_y = yabs
   old_z = zabs


  c_mmlt$           # truc qui doit servire pour usinage transformé
  c_msng$

        #origineheid = workofs$
        #if origine <> old_origine, [
        #n$, "CYCL DEF 247 INIT. PT DE REF. ~", e$
        #spaces$ = 0, n$, "  Q339=+1    ;NUMERO POINT DE REF.", e$
        #spaces$ = 1
        #n$, "* - CHANGEMENT ORIGINE", e$
        #]

ptlchg0$     # CHANGEMENT D'OUTIL NUL
       # n$, "-----CHANGEMENT D'OUTIL NUL--------", *workofs$, e$
        gcode$ = 0
        pinfos



        pnumop                      # compteur d'operation

        if subout$ = 0, omitseq$ = old_omitseq
        memo_incremental = incremental              # memo du mode ABS INC actuel
        if subout$ = 0, incremental = 0         # pour forcer le mode Absolue
        @rotaxis$, @old_rotaxis             # mise a jour
        if op_id$ <> old_op_id, linarc$ = old_linarc                    # pour activer les G2 G3
        typcycle = 0                    # variable mise a 1 lors des percage pour afficher l'intitulé du cycle
        pnomgroupe                  # Nom du groupe d'operation
        comment$                    # commentaires d'operation
        paramcomp                   # afficher le type de compensation
        if texte <> 0, paramsurep           # afficher les surepaisseur
        if tool_typ$ = 5, ss$ = (abs(ss$))*-1       # si tataud à gauche inverser le sens de broche
        if ss$ <> old_ss, [             # si changement de vitesse de broche l'afficher
            DR = -99999
            !DR
        poutil
            ]


        if use_DR = 1, [
        DR = 0
        if type_comp >=5, DR = tldia$/-2
        #*DR, *old_DR, "------------------------------", e$
        if DR <> old_DR, poutil

         ]

            if nextop$ = 11,
                            [       # si  4 axes avec fonction 5 axes
                            if op_id$ <> old_op_id,
                                                     [
                                                     old_axeA1 = 0
                                                     axeA1_dep = 0.
                                                    cc$ = cc_pos$ + 40
                                                    if mode_5axe = 1 & debutpmx = 1, plane_arret_sansbouger
                                                    if mode_5axe = 1 & debutpmx = 0,
                                                                                    [
                                                                                    n$, "M129", e$
                                                                                    pdegage
                                                                                    plane_arret_sansbouger
                                                                                    debutpmx = 1
                                                                                    ]
                                                     poriusinul              # affichage de l'origine d'usinage
                                                    ]
                            ]



   if nextop$ <> 11, [                      # utilisation en positionné ou substitution

        x$ = nextx$                   # prise en compte de XYZ
        y$ = nexty$
        z$ = nextz$
        if debutpmx = 0 & mode_5axe = 1, n$, "M129", e$
        xabs = nextx$                   # prise en compte de XYZ
        yabs = nexty$
        zabs = nextz$
        #"voir ", *x$, *y$, *z$, *nextx$, *nexty$, *nextz$, *xnci$, *ynci$, *znci$, e$
        if rotaxis$ = 0, [              # 3 axes + diviser en positionné

        if mode_5axe <> 1,  [
        poriusinul                                  # affichage de l'origine d'usinage cycle def 7
        if mi3$ = 0, prot1                          # calcul rotation plateau
        if mi3$ = 0, prot3                          # affichage de l'angle
                            ]
         else, plane2plane                          # on est en mode 5 axes
                         ]
        if rotaxis$ <> 0, plinarc                   # Convertir les G2 G3 en G1
        if rotaxis$ <> 0 & old_rotaxis = 0, [       # si on passe de positionné a continue
        plinarc                                     # Convertir les G2 G3 en G1
        p_Apos                                      # calcul de l'axe A en substitution
        if rotaxis$ = 1, xabs = 0                   # diviseur tourne autour de Y (X sbstitue)
        if rotaxis$ = 2, yabs = 0                   # diviseur tourne autour de X (Y sbstitue)
        poriusinul
        p_Apos_affiche                          # affichage de l'angle au chg outil nul pour continue
        n$, sgcode, sinc_abs, xabs, yabs, !xinc, !yinc, pfr, e$
        n$, sgcode, sinc_abs, zabs, !zinc, pfr, e$
        p_modal                                 # affectation en format modal
        !x$, !y$, !z$, !xabs, !yabs, !zabs, !xinc, !yinc, !zinc, !axeA, !axeAi  # mise à jour des positions affichées
                     ]
                    debutpmx = 1
                ]

       if GESTc247 > 1, pcycledef247

   incremental = memo_incremental   # rappel du mode incremental ou absolue précédent
   old_ss = ss$             # memo de la vitesse de broche
   old_op_id = op_id$           # memo du numero d'operation
   old_rotaxis = rotaxis$       # memo du type de substitution
   old_x = xabs             # memo X Y Z
   old_y = yabs
   old_z = zabs

   c_mmlt$              # Appel sous prog multi outils
   c_msng$              # Appel sous prog mono outil

       # origineheid = workofs$
       #*workofs$, tox4$, toy4$, toz4$, e$
        #if workofs$ <> old_origine, [
        #n$, "CYCL DEF 247 INIT. PT DE REF. ~", e$
       # spaces$ = 0, n$, "  Q339=+1    ;NUMERO POINT DE REF.", e$
       # spaces$ = 1
       # n$, "* - CHANGEMENT ORIGINE", e$
       # ]

ptlchg0_end$

        #"--------------- fin ptlchg0_end$", e$


panulldecalageg52

        memo_incremental = incremental
        incremental = 0

        decX = 0
        decY = 0
        decZ =0

            n$, sinc_abs, "G52", *decX, *decY, *decZ, e$

        decalage = 0
        incremental = memo_incremental

ptlchg$      # CHANGEMENT D'OUTIL

    if debutpmx = 0 & mode_5axe = 1, n$, "M129", e$
    DR = -99999
    old_DR = -99999
    !DR, !old_DR

    plubrifoff, e$                  # arret lubriff
    n$, "M5", e$                    # arret broche

    if decalage = 1, panulldecalageg52      # annuler les decalages d'origine
     pinfos
    if nbrtour <> 0,    [           # pour remise a zero du diviseur
        old_axeA = 0
        axeA = 0
        nbrtour = 0
                ]
        pbrise_outil                    # controle bris outil

       pnumop                      # compteur d'operation

    p_casse_modalite_avance             # pour rappel de l'avance sur le premier G1

    plane$ = 3                  # pour focer le rappel G17 G18 G19
    !plane$

    memo_incremental = incremental          # memo du mode incremental
        incremental = 2                 # pour re forcer l'affichage du mode Absolue
    !incremental
    incremental = 0                 # pour forcer le mode Absolue

    old_origine = -9999             # pour forcer l'affichage du G54 au chg outil
    linarc$ = old_linarc                    # pour activer les G2 G3
    typcycle = 0                    # variable mise a 1 lors des percage pour afficher l'intitulé du cycle
        pdegage                             # Dégagement de la Machine
        if mode_5axe = 1, plane_arret_sansbouger  # RAZ si 5 axes positionner

       if GESTc247 > 1, pcycledef247                        # appel cycle 247

        pappel_outil                        # APPEL OUTIL

        pplacement_cn                   # AFFICHAGE DES MOUVEMENTS MACHINE

        incremental = memo_incremental          # pour revenir au mode precedent


peof0$

           peof$

pcycledef247
      orheid = workofs$
      if orheid = 0, orheid = 1
      @orheid
      #n$, *workofs$, e$
      #n$, " voir orheid=", *orheid, e$
      #n$, " voir orheid=", *old_orheid, e$
      if old_orheid <> orheid, [

        n$, "CYCL DEF 247 INIT. PT DE REF. ~", e$
        spaces$ = 0, n$, "  Q339=+", *orheid, ";NUMERO POINT DE REF.", e$
        spaces$ = 1
        n$, "* - CHANGEMENT ORIGINE", e$
        ]
         old_orheid = orheid

pdecharge_outil     # Déchargement de l'outil en broche

    outil = 0

    n$, *outil, e$

peof$

    if debutpmx = 0 & mode_5axe = 1, n$, "M129", e$
    plubrifoff, e$                  # Arret lubriff
    n$, "M5", e$                    # Arret broche
    if decalage = 1, panulldecalageg52      # Annuler les decalages d'origine
    if oriusi = 1, panuldef7
        gcode$ = 0                      # Force le gcode a 0 pour faire un G0 apres
        incremental = 2                 # pour re forcer l'affichage du mode Absolue
        !incremental
        incremental = 0                 # pour forcer le mode Absolue
        pbrise_outil                    # controle bris outil
    pdegage_fin                 # Dégagement de la machine fin de prog
    if mode_5axe = 1, plane_arret_RAZ  # RAZ si 5 axes positionner
    else, [
          if useaxe <> 0 & old_axeA <> 0, [       # Remise a 0 de l'axe A si pas a Zero
         axeA = 0                # A = 0
            prot2                   # affichage de l'angle
                ]
          ]
    #pdecharge_outil                    # Déchargement de l'outil en broche
    plane$ = 3                  # pour focer le rappel G17 G18 G19
    !plane$
    plane$ = 0

    n$, splcode, sinc_abs, e$           # Plan XY mode Absolue
    comment$                    # commentaires d'operation
    if palette = 1, n$, "M98", "P9901", e$  #
    if test_bris = 1, n$, "LBL 249", e$
    n$, "CALL PGM TNC:\ANNUL", e$
    n$, "CALL PGM TNC:\NET", e$
    n$, "CALL PGM TNC:\FIN", e$
    n$, "CALL PGM TNC:\ROBOT", e$



    n$, "M30", e$                   # fin de prog et rembobine au debut
    if macro <> 0 & mode_5axe = 1, pmacro
    #space, e$                  # Sauter une ligne

    subout$ = 0                 # Ecriture dan le NC
    #mergeext$                      # Merge les sous prog
    mergesub$                   # merge les sous prog en transform
    mergeaux$                   # merge les sous prog en Z


    #clearext$                  # Effacer les sous prog
    clearsub$
    clearaux$


    if use_progno = 0, n$, "END PGM", snamenc$, "MM", e$        # fin de fichier
    else,       n$, "END PGM", progno$, "MM", e$


#--------------- debut du traitemant 5 axes positionner --------------------------------


pmacro     # macro ecrite en fin de prog si macro <> 0
                  n$, "LBL 99 ; ANNULATION", e$
                  panuldef7
                  n$, "PLANE RESET STAY", e$
                  n$, "LBL 0", e$





pcal5xpos  # conversion de la matrice
                        # Activer la partie matrice voulue
                        #axec = atan2(m7$,m8$), "voir axec pur =",axec, e$
                        #axec = atan2(-m7$,m8$), "voir axec pur =",axec, e$
                        axeC = atan2(m7$,-m8$) #, "voir axec pur =",axec, e$
                        #axec = atan2(-m7$,-m8$) , "voir axec pur =",axec, e$
                        #axec = atan2(m8$,m7$), "voir axec pur =",axec, e$
                        #axec = atan2(-m8$,m7$), "voir axec pur =",axec, e$
                        #axec = atan2(m8$,-m7$), "voir axec pur =",axec, e$
                        #axec = atan2(-m8$,-m7$), "voir axec pur =",axec, e$

                        axeA5x = acos(m9$)
                        #"voir axeA5x",*axeA5x, e$

                        tourne = (atan2(m3$,m6$))
                        m1p = m1$, m2p = m2$, m3p = m3$, m4p = m4$, m5p = m5$, m6p = m6$
                        !m1p, !m2p, !m3p, !m4p, !m5p, !m6p
                        if m1$ = 1 & m5$ = 1 & m9$ = 1, dessus = 1   # flag pour voir que l'on ne bouge pas
                        else, dessus = 0
                        if dessus = 1, axeC = 0, axeA5x = 0, tourne = 0
                        if ecrit_plane_dessus = 1, dessus = 0  # on ecrit le cycle plan meme en vue de dessus

plane_arret_RAZ   # Remise a zero des axes et tourner les axes
                        n$, "PLANE RESET TURN FMAX", frap5x, e$

plane_arret_sansbouger  #   Remise a zero des axes et pas bouger
                            if macro = 0, n$, "PLANE RESET STAY", e$
                            else,[
                                 n$, "CALL LBL 99", e$
                                 n$, "M1" , e$
                                 oriusi = 0
                                 ]
                            old_axeA5x = 0, old_axeC = 0, old_tourne = 0
                            !old_axeA5x,  !old_axeC, !old_tourne



plane2plane   # transition entre deux plan incline
                #" on est dans plan2plane" ,e$
                pcal5xpos
                if type_plane = 1, [
                            !old_axeA5x, !axeA5x, !old_axeC, !axeC, !old_tourne, !tourne
                            #"voir les axes et les old", *old_axeA5x, *axeA5x, *old_axec, *axec, *old_tourne, *tourne, e$

                            if axeC <> old_axeC | axeA5x <> old_axeA5x | tourne <> old_tourne | debutpmx = 0,
                             [
                            pdegage4_5axes             # on degage
                            if dessus = 0, plane_arret_sansbouger      # on raz les angles
                            else, plane_arret_RAZ

                            if tox4$ <> 0 | toy4$ <> 0 | toz4$ <> 0 | oriusi = 1, poriusinul                                # affichage de l'origine d'usinage cycle def 7
                            plane_marche               # on ecrit les plan
                            gcode$ = 0

                            n$, *sgcode, sinc_abs, *xabs, *yabs, pfr, e$   #ssa, pgamme, *spdlon, e$
                             ]
                             ]
                if type_plane = 2, [
                            if m1p <> old_m1 | m2p <> old_m2 | m3p <> old_m3 | m4p <> old_m4 | m5p <> old_m5 | m6p <> old_m6 | debutpmx = 0,
                            [
                            pdegage4_5axes             # on degage
                            if dessus = 0, plane_arret_sansbouger      # on raz les angles
                            else, plane_arret_RAZ
                            if tox4$ <> 0 | toy4$ <> 0 | toz4$ <> 0 | oriusi = 1, poriusinul                                # affichage de l'origine d'usinage cycle def 7                              # affichage de l'origine d'usinage cycle def 7
                            plane_marche
                            gcode$ = 0
                            n$, *sgcode, sinc_abs, *xabs, *yabs, pfr, e$   #ssa, pgamme, *spdlon, e$
                             ]
                             ]

plane_marche   # activation du mode 5 axes position
            if type_plane = 1,   # ecriture en mode spatial
                        [
                        pcal5xpos
                        old_axeA5x = axeA5x, old_axeC = axeC, old_tourne = tourne
                        !old_axeA5x, !old_axeC, !old_tourne
                        if dessus <> 1, [
                        n$, "PLANE SPATIAL SPA", axeA5x,  "SPB+0", "SPC", axeC, "TURN FMAX", seq, " TABLE ROT", e$
                        if tourne <> 0, n$, "PLANE RELATIV SPC", tourne, "TURN FMAX", seq, "TABLE ROT", e$
                                        ]
                        ]
            if type_plane = 2,   # ecriture en mode points
                        [
                         pcal5xpos
                         old_m1 = m1p, old_m2 = m2p, old_m3 = m3p, old_m4 = m4p, old_m5 = m5p,  old_m6 = m6p
                         !old_m1, !old_m2, !old_m3, !old_m4, !old_m5, !old_m6
                         !m1p, !m2p, !m3p, !m4p, !m5p, !m6p
                         if dessus <> 1, [
                         n$, "PLANE POINTS P1X+0 P1Y+0 P1Z+0", m1p, m2p, m3p, m4p, m5p, m6p, "TURN FMAX", seq, "TABLE ROT", frap5x, e$
                                         ]
                        ]

#----------------CORPS DU CODE ISO G1 G2 G3 G0 -------------------------

plrapid     # Ligne en rapide
        #" voir", *x$, *y$, *z$, *xnci$, *ynci$, *znci$, e$
        xabs = x$
        yabs = y$
        zabs = z$

        n$, `sgcode, `sinc_abs, pxyz, pfr, e$

pltravail   # ligne en travail
        xabs = x$
        yabs = y$
        zabs = z$

           n$, `sgcode, sinc_abs, pxyz, pcord, pfr, e$

prapid$      # Ligne en rapide

    if gcode$ = 0, plrapid
        else, pltravail


pzrapid$     # Ligne Z en rapide
        x$ = xnci$
        y$ = ynci$

        if gcode$ = 0, plrapid
        else, pltravail


plin$        # Ligne travail

    if gcode$ = 0, plrapid
        else, pltravail

pz$      # z en avance TRAVAIL
        #"------PZ----", e$
        xabs = x$
        yabs = y$
        zabs = z$


         if gcode$ = 1, n$, `sgcode, sinc_abs, pxyz, pfr, e$
         else, plrapid


p_modal     # affectation en format modal X Y Z A garde profondeur ABS ET INC
        #"p_modal"

            result = newfs (2, xabs)
            result = newfs (11, xinc)
            result = newfs (2, yabs)
            result = newfs (11, yinc)
            result = newfs (2, zabs)
            result = newfs (11, zinc)

            result = newfs (2, axeA)
            result = newfs (11, axeAi)

            result = newfs (2, profabs)
            result = newfs (2, profi)
            result = newfs (2, gardeabs)
            result = newfs (2, gardei)


pcir$        # Circulaire


    p_modal     #affectation en format modal

        xabs = x$
        yabs = y$
        zabs = z$

        #"----------------", *arctype$,"---------------", e$


        if arctype$ >= 5, pcir_r, e$    # en R
        else, pcir_ij, e$           # en IJ


p_casse_modalite_avance # casser la modalité de l'avance

            result = newfs (5, avance)

p_casse_modalite    # pour casser la modalité de Xabs et Xinc Yabs et Yinc Zabs et Zinc Aabs Ainc

            p_casse_modalite_X
            p_casse_modalite_Y
            p_casse_modalite_Z
            p_casse_modalite_A


p_casse_modalite_X  # pour casser la modalité de Xabs et Xinc

            result = newfs (3, xabs)
            result = newfs (12, xinc)

p_casse_modalite_Y  # pour casser la modalité de Yabs et Yinc

            result = newfs (3, yabs)
            result = newfs (12, yinc)


p_casse_modalite_Z  # pour casser la modalité de Zabs et Zinc

            result = newfs (3, zabs)
            result = newfs (12, zinc)

p_casse_modalite_A  # pour casser la modalité de Aabs et Ainc

            result = newfs (3, axeA)
            result = newfs (12, axeAi)


p_casse_modalite_perce  # pour casser la modalité de profabs et profi gardeabs gardei

            result = newfs (3, profabs)
            result = newfs (3, profi)

            result = newfs (3, gardeabs)
            result = newfs (3, gardei)


pcir_r      # Circulaire G2 G3 G17 G18 G19 en R
        if arctype$ = 5, rayon = arcrad$            # pour Rayon
        if arctype$ = 6 & abs(sweep$) < 180, rayon = arcrad$    # pour Rayon signé
        if arctype$ = 6 & abs(sweep$) >=180, rayon = -arcrad$   # pour Rayon signé


        if plane$ = 0, p_casse_modalite_X, p_casse_modalite_Y
        if plane$ = 2, p_casse_modalite_X, p_casse_modalite_Z
        if plane$ = 1, p_casse_modalite_Y, p_casse_modalite_Z

        if plane$ = 0, n$, splcode, sinc_abs, *sgcode, pxyz, rayon, pfr   # plan XY
        if plane$ = 2, n$, splcode, sinc_abs, *sgcode, pxyz, rayon, pfr   # plan XZ
        if plane$ = 1, n$, splcode, sinc_abs, *sgcode, pxyz, rayon, pfr   # plan YZ

pcir_ij     # Circulaire G2 G3 G17 G18 G19 en IJ
        @plane$
        if plane$ = 0, p_casse_modalite_X, p_casse_modalite_Y
        if plane$ = 2, p_casse_modalite_X, p_casse_modalite_Z
        if plane$ = 1, p_casse_modalite_Y, p_casse_modalite_Z

        n$, "CC", pijk, e$

        if plane$ = 0, [

            if zabs <> old_z, [
                    n$, "CP", sweep$
                    if incremental = 0, *zabs, !zinc
                    else, !zabs, *zinc
                    sgcode, pcord, pfr, !z$
                    ]
            else, n$, "C", pxyz, sgcode, pcord, pfr
                ]

        if plane$ = 2, [
            if yabs <> old_y, [
                    n$, "CP", sweep$
                    if incremental = 0, *yabs, !yinc
                    else, !yabs, *yinc
                    sgcode, pcord, pfr, !y$
                    old_y = yabs
                    ]
            else, n$, "C", pxyz, sgcode, pcord, pfr
                ]

        if plane$ = 1, [
            if xabs <> old_x, [
                    n$, "CP", sweep$
                    if incremental = 0, *xabs, !xinc
                    else, !xabs, *xinc
                    sgcode, pcord, pfr, !x$
                    old_x = xabs
                    ]
            else, n$, "C", pxyz, sgcode, pcord, pfr
                ]



pxyz        # ecriture des x, y, z en abs ou incremental pour corp ISO

    pxyz_new
    p_modal     # affectation en format modal

        !x$, !y$, !z$   # mise a jour xyz

        old_x = xabs    # memo des anciennes positions
        old_y = yabs
        old_z = zabs


pxyz_new    # ecriture des positions X Y Z et A pour substitution

    if rotaxis$ = 0,    [    # XYZ CLASIQUE 3 axes (+ positionné)

        if incremental = 0, xabs, yabs, zabs, !xinc, !yinc, !zinc
        else,           !xabs, !yabs, !zabs, xinc, yinc, zinc

                ]

    if rotaxis$ <> 0, [    # SUBSTITUTION
            p_Apos                              # Calcul de l'axe A
        if rotaxis$ = 1, xabs = 0                   # diviseur tourne autour de Y (X sbstitue)
        if rotaxis$ = 2, yabs = 0                   # diviseur tourne autour de X (Y sbstitue)

            if incremental = 0,     xabs, yabs, axeA, zabs, !xinc, !yinc, !axeAi, !zinc
            else,           !xabs, !yabs, !axeA, !zabs, xinc, yinc, axeAi, zinc

        old_axeA  = axeA                            # memo de l'axe A
        nbrtour = int (axeA / 360)                      # calcul du nombre de tours
            ]





pijk        # ecriture des IJK pour G90 G91


        !i$, !j$, !k$


        if arctype$ = 1, [   # pour centre en absolue en G90

    iabs = i$
    jabs = j$
    kabs = k$
    iinc = i$ - prv_x$
    jinc = j$ - prv_y$
    kinc = k$ - prv_z$
            ]

        else,       [     # pour centre en relatif en G90

    iabs = i$
    jabs = j$
    kabs = k$
    iinc = i$
    jinc = j$
    kinc = k$
            ]

        if incremental = 0 & plane$ = 0, *iabs, *jabs, !iinc, !jinc, !kinc
        if incremental = 0 & plane$ = 2, *iabs, *kabs, !iinc, !jinc, !kinc
        if incremental = 0 & plane$ = 1, *jabs, *kabs, !iinc, !jinc, !kinc

        if incremental = 1 & plane$ = 0, !iabs, !jabs, *iinc, *jinc, !kinc
        if incremental = 1 & plane$ = 2, !iabs, !kabs, *iinc, !jinc, *kinc
        if incremental = 1 & plane$ = 1, !jabs, !kabs, !iinc, *jinc, *kinc



#-------------------------------------------------------------------------
pcyleperce_1    # ecriture du cycle de percage DEF 1 (percage debourrage)

        n$, "CYCL DEF 1.0 PERCAGE PROFOND", e$
        n$, "CYCL DEF 1.1 DIST. ", *gardeabs, e$
        n$, "CYCL DEF 1.2 PROF. ", *profabs, e$
        n$, "CYCL DEF 1.3 PASSE ", *passe, e$
        n$, "CYCL DEF 1.4 TEMP. ", *tempo, e$
        n$, "CYCL DEF 1.5", pavanceperce, e$

pcyleperce_2    # ecriture du cycle de percage DEF 2 (taraudage simple)

              n$, "CYCL DEF 2.0 TARAUDAGE", e$
              n$, "CYCL DEF 2.1 DIST. ", *gardeabs, e$
              n$, "CYCL DEF 2.2 PROF. ", *profabs, e$
              n$, "CYCL DEF 2.3 TEMP. ", *tempo, e$
              n$, "CYCL DEF 2.4", *pasavance, e$

pcyleperce_17   # ecriture du cycle de percage DEF 17 (taraudage rigide)

              n$, "CYCL DEF 17.0 TARAUDAGE", e$
              n$, "CYCL DEF 17.1 DIST. ", *gardeabs, e$
              n$, "CYCL DEF 17.2 PROF. ", *profabs, e$
              n$, "CYCL DEF 17.3 PAS. ", *pas, e$


pcyleperce_200  # ecriture du cycle de percage DEF 200 (percage debourrage)

        n$, "CYCL DEF 200 PERCAGE ~", e$
        *bq200, "; DISTANCE D'APPROCHE~", e$
        *bq201, "; PROFONDEUR~", e$
        "    Q206=AUTO ; AVANCE PLONGEE PROF.~", e$
        *bq202, "; PROFONDEUR DE PASSE~", e$
        *bq210, "; TEMPO. EN HAUT~", e$
        *bq203, "; COORD. SURFACE PIECE~", e$
        *bq204, "; SAUT DE BRIDE~", e$
        *bq211, "; TEMPO. AU FOND", e$




pcyleperce_201  # ecriture du cycle d'alesage DEF 201 (alesage alesoir)

        n$, "CYCL DEF 201 ALESAGE AVEC ALESOIR~", e$
        *bq200, "; DISTANCE D'APPROCHE~", e$
        *bq201, "; PROFONDEUR~", e$
        "    Q206=AUTO ; AVANCE PLONGEE PROF.~", e$
        *bq211, "; TEMPO. AU FOND~", e$
        *bq208, "; AVANCE RETRAIT~", e$
        *bq203, "; COORD. SURFACE PIECE~", e$
        *bq204, "; SAUT DE BRIDE", e$



pcyleperce_202  # ecriture du cycle d'alesage DEF 202 (alesage bare)

        n$, "CYCL DEF 202 ALESAGE A L'OUTIL~", e$
        *bq200, "; DISTANCE D'APPROCHE~", e$
        *bq201, "; PROFONDEUR~", e$
        "    Q206=AUTO ; AVANCE PLONGEE PROF.~", e$
        *bq211, "; TEMPO. AU FOND~", e$
        *bq208, "; AVANCE RETRAIT~", e$
        *bq203, "; COORD. SURFACE PIECE~", e$
        *bq204, "; SAUT DE BRIDE~", e$
        "    Q214=+1 ; SENS DEGAGEMENT~", e$                                                                  #*bq214, "; SENS DEGAGEMENT~", e$
        "    Q336=0 ; ANGLE BROCHE", e$                                                                       #*bq336, "; ANGLE BROCHE", e$






pcyleperce_203  # ecriture du cycle de percage DEF 203 (percage debourrage brise copeaux)

        n$, "CYCL DEF 203 PERCAGE UNIVERSEL~", e$
        *bq200, "; DISTANCE D'APPROCHE~", e$
        *bq201, "; PROFONDEUR~", e$
        "    Q206=AUTO ; AVANCE PLONGEE PROF.~", e$
        *bq202, "; PROFONDEUR DE PASSE~", e$
        *bq210, "; TEMPO. EN HAUT~", e$
        *bq203, "; COORD. SURFACE PIECE~", e$
        *bq204, "; SAUT DE BRIDE~", e$
        *bq212, "; VALEUR DE REDUCTION~", e$
        *bq213, "; NB BRISE-COPEAUX~", e$
        *bq205, "; PROF. PASSE MINI~", e$
        *bq211, "; TEMPO. AU FOND~", e$
        *bq208, "; AVANCE RETRAIT~", e$
        *bq256, "; RETR. BRISE COPEAUX", e$



pcyleperce_207  # ecriture du cycle de percage DEF 207 (taraudage rigide)

        n$, "CYCL DEF 207 NOUV. TARAUDAGE RIG. ~", e$
        *bq200, "; DISTANCE D'APPROCHE~", e$
        *bq201, "; PROFONDEUR~", e$
        *bq239, "; PAS DE VIS~", e$
        *bq203, "; COORD. SURFACE PIECE~", e$
        *bq204, "; SAUT DE BRIDE", e$


pcyleperce_208 # cycle alesage a la fraise
      bq334 = bq202
    n$, "CYCL DEF 208 FRAISAGE DE TROUS ~", e$
    *bq200, "; DISTANCE D'APPROCHE ~", e$
    *bq201, "; PROFONDEUR ~", e$
    "    Q206=AUTO ; AVANCE PLONGEE PROF. ~", e$
    *bq334, "; PROFONDEUR DE PASSE ~", e$
    *bq203, "; COORD. SURFACE PIECE ~", e$
    *bq204, "; SAUT DE BRIDE ~", e$
    *bq335, "; DIAMETRE NOMINAL ~", e$
    *bq342, "; DIAMETRE PRE-PERCAGE", e$


pcyleperce_262 # filetage  a la fraise
     bq238 = bq211
    n$, "CYCL DEF 262 FRAISAGE DE FILETS ~", e$
    *bq335, "; DIAMETRE NOMINAL ~", e$
    *bq238, "; PAS DE VIS ~", e$
    *bq201, "; PROFONDEUR FILETAGE ~", e$
    *bq355, "; FILETS PAR PAS ~", e$
    "    Q253=AUTO ; AVANCE PRE-POSIT.~ ", e$                                         #*bq253, "; AVANCE PRE-POSIT. ~", e$
    "    Q351=+1 ; MODE FRAISAGE ~ ", e$                                               #*bq351, "; MODE FRAISAGE ~", e$
    *bq200, "; DISTANCE D'APPROCHE ~", e$
    *bq203, "; COORD. SURFACE PIECE ~", e$
    *bq204, "; SAUT DE BRIDE ~", e$
    "    Q207=AUTO ; AVANCE PLONGEE PROF ", e$



pcyleperce  # choix du type de cycle

  if use_cyc200 <> 0,[      # si l'armoire utilise les cycle 200

    @drillcyc$

    dianomi = peck2$
    diapreperc = peckclr$
    modefraisage = retr$
    filparpas = peckclr$
    fprepo = shftdrl$

    bq200 = gardeabs                # distance de garde
    bq201 = profabs                 # distance de percage

    if drillcyc$ <> 2, bq202 = abs(passe)       # prise de passe pour debourrage et percages
    if drillcyc$ = 2, bq202 = abs(passe)        # prise de passe pour brises copeaux
    if drillcyc$ = 4, bq202 = abs(profabs)      # prise de passe pour alesage alesoir

    bq203 = dbrut                   # Z de debut du percage
    bq204 = initht$ - tosz$             # distance de securité

    bq205 = tldia$ /10              # prise de passe mini

    bq206 = fr_pos$                 # avavce de travail

    bq208 = 9999                  # avance de retrait
    if drillcyc$ = 4, bq208 = diapreperc

    bq210 = 0                   # tempo en haut
    bq211 = dwell$                  # tempo au fond

    bq212 = 0                   # valeur de reduction

    if drillcyc$ = 2, bq213 = abs(bq201 / passe)    # nombre de brise copeaux
    else, bq213 = 0

    bq214 = 0                   # sens de degagement pour alesage indexé
    bq336 = 0                   # angle d'orientation de la broche pour alesage indexé

    bq239 = pas
    bq335 = dianomi                     #DIAMETRE NOMINAL pour alesage a la fraise
    bq342 = diapreperc                  #DIAMETRE PRE-PERCAGE pour alesage a la fraise
    bq351 = modefraisage                #MODE FRAISAGE pour alesage a la fraise
    bq355 = filparpas
    bq253 = fprepo
    bq238 = pasdvis
    if drillcyc$ = 2, bq256 = abs(retr$)        # remonté brise copeaux
    else, bq256 = 0



    if use_cyc200 = 1, [
        if drillcyc$ < 2,   pcyleperce_200  # ecriture du cycle de percage 200 pour percage et debourrage
        if drillcyc$ = 2,   pcyleperce_203  # ecriture du cycle de percage 203 pour percage et debourrage
        if drillcyc$ = 3,   pcyleperce_207  # ecriture du cycle de taraudage rigide 207
        if drillcyc$ = 4,   pcyleperce_201  # ecriture du cycle alesage alesoir
        if drillcyc$ = 5,   pcyleperce_202  # ecriture du cycle alesage bare
        if drillcyc$ = 6,   pcyleperce_208  # ecriture du cycle alesage a la fraise
        if drillcyc$ = 7,   pcyleperce_262  # ecriture du cycle filetage a la fraise

            ]

    if use_cyc200 = 2, [
        if drillcyc$ <= 2,  pcyleperce_203  # ecriture du cycle de percage 203 pour brise copeaux
        if drillcyc$ = 3,   pcyleperce_207  # ecriture du cycle de taraudage rigide 207
        if drillcyc$ = 4,   pcyleperce_203  # ecriture du cycle alesage alesoir
        if drillcyc$ = 5,   pcyleperce_202  # ecriture du cycle alesage bare

            ]

  ]


  if use_cyc200 = 0, [              # si l'armoire n'utilise pas les cycle 200

    @drillcyc$
    if drillcyc$ <= 2,  pcyleperce_1        # ecriture cycle 1 (pas de brise copeaux)
    if drillcyc$ = 3,   pcyleperce_2        # ecriture du cycle de taraudage simple
    #if drillcyc$ = 3,  pcyleperce_17       # ecriture du cycle de taraudage rigide 17

  ]

ppercage    # ecricure des cycle de percage, debourrage brise copeaux etc...


    pcyleperce                  # choix du type de cycle a ecrire

    if use_cyc200 = 0,[             # si l'armoire n' utilise pas les cycle 200
        gcode$ = 0
        n$, `sgcode, ppercexy, pfr, e$      # Position xy
        z$ = refht$
        p_casse_modalite_Z
        n$, sgcode, ppercez, pfr, "M99", e$ # Position Z et executer le cycle
            ]

    if use_cyc200 <> 0,[                # si l'armoire utilise les cycle 200
        gcode$ = 0
        p_casse_modalite_X
        p_casse_modalite_Y
        p_casse_modalite_A
        n$, sgcode, ppercexy, pfr, "M99", e$    # Position xy et executer le cycle

            ]


    old_gardeabs = gardeabs         # memo des prof et garde
    old_profabs = profabs


pdrill$      # Cycle de percage G81 G82

        if texte <> 0, [
        if numcoment = 0, omitseq$ = 1
        if typcycle = 0 & dwell$ = 0, n$, sdcom, "POINTAGE-PERCAGE", sfcom, e$
        if typcycle = 0 & dwell$ <> 0, n$, sdcom, "POINTAGE-PERCAGE-TEMPO", sfcom, e$
        omitseq$ = old_omitseq

            ]

    typcycle = 1

    pprof_garde         # calcul des profondreur et des gardes
    passe = depth$ - tosz$      # increment de percage
    ppercage            # ecriture des cycles de percage


ppeck$      # Cycle de débourrage G83


        if texte <> 0, [
        if numcoment = 0, omitseq$ = 1
        if typcycle = 0, n$, sdcom, "DEBOURRAGE", sfcom, e$
        omitseq$ = old_omitseq
            ]

    typcycle = 1

    pprof_garde         # calcul des profondreur et des gardes
    passe = abs(peck1$)     # increment de percage
    ppercage            # ecriture des cycles de percage




pchpbrk$    # Cycle de brise copeaux G73

        if texte <> 0, [
        if numcoment = 0, omitseq$ = 1
        if typcycle = 0, n$, sdcom, "BRISE COPEAUX", sfcom, e$
        omitseq$ = old_omitseq
            ]

    typcycle = 1

    pprof_garde         # calcul des profondreur et des gardes
    passe = abs(peck1$)     # increment de percage
    ppercage            # ecriture des cycles de percage





ptap$       # Cycle de taraudage G84

        if texte <> 0, [
        if numcoment = 0, omitseq$ = 1
        if typcycle = 0, n$, sdcom, "TARAUDAGE", sfcom, e$
        omitseq$ = old_omitseq
            ]

    typcycle = 1



           if tldia$ = 3, pas = 0.5
           if tldia$ = 4, pas = 0.7
           if tldia$ = 5, pas = 0.8
           if tldia$ = 6, pas = 1
           if tldia$ = 8, pas = 1.25
           if tldia$ = 10, pas = 1.5
           if tldia$ = 12, pas = 1.75
           if tldia$ = 14, pas = 2
           if tldia$ = 16, pas = 2

             if n_tap_thds$ <> 0, pas = n_tap_thds$

             if tool_typ$ = 5, ss$ = (abs(ss$))*-1

             pasavance = pas * abs(ss$)

    pprof_garde         # calcul des profondreur et des gardes
    passe = depth$ - tosz$      # increment de percage
    ppercage            # ecriture des cycles de percage



pbore1$     # Cycle d'alésage G85

        if texte <> 0, [
        if numcoment = 0, omitseq$ = 1
        if typcycle = 0, n$, sdcom, "ALESAGE", sfcom, e$
        omitseq$ = old_omitseq
                ]

    typcycle = 1

    pprof_garde         # calcul des profondreur et des gardes
    passe = abs(peck1$)     # increment de percage
    ppercage            # ecriture des cycles de percage




pbore2$     # Cycle d'alésage indexé G75

        if texte <> 0, [
        if numcoment = 0, omitseq$ = 1
        if typcycle = 0, n$, sdcom, "ALESAGE INDEXE", sfcom, e$
        omitseq$ = old_omitseq
                ]

    typcycle = 1

    pprof_garde         # calcul des profondreur et des gardes
    passe = abs(peck1$)     # increment de percage
    ppercage            # ecriture des cycles de percage


pmisc1$     # Cycle

    if texte <> 0, [
        if numcoment = 0, omitseq$ = 1
        if typcycle = 0, n$, sdcom, "ALESAGE A LA FRAISE", sfcom, e$
        omitseq$ = old_omitseq
            ]

    typcycle = 1

    pprof_garde         # calcul des profondreur et des gardes
    passe = abs(peck1$)     # increment de percage
    ppercage            # ecriture des cycles de percage


pmisc2$     # Cycle
        if texte <> 0, [
        if numcoment = 0, omitseq$ = 1
        if typcycle = 0, n$, sdcom, "FRAISAGE DE FILET", sfcom, e$
        omitseq$ = old_omitseq
            ]

    typcycle = 1

    pprof_garde         # calcul des profondreur et des gardes
    passe = abs(peck1$)     # increment de percage
    ppercage            # ecriture des cycles de percage


pdrill_2$   # Cycle de percage points suivants


    pprof_garde         # calcul des profondreur et des gardes
    passe = depth$ - tosz$      # increment de percage
    phole                   # trous suivants


ppeck_2$    # Canned Peck Drill Cycle

    pprof_garde         # calcul des profondreur et des gardes
    passe = abs(peck1$)     # increment de percage
    phole                   # trous suivants

pchpbrk_2$  # Canned Chip Break Cycle

    pprof_garde         # calcul des profondreur et des gardes
    passe = abs(peck1$)     # increment de percage
    phole                   # trous suivants

ptap_2$     # Canned Tap Cycle

    pprof_garde         # calcul des profondreur et des gardes
    passe = depth$ - tosz$      # increment de percage
    phole                   # trous suivants

pbore1_2$   # Canned Bore #1 Cycle

    pprof_garde         # calcul des profondreur et des gardes
    passe = abs(peck1$)     # increment de percage
    phole                   # trous suivants

pbore2_2$   # Canned Bore #2 Cycle

    pprof_garde         # calcul des profondreur et des gardes
    passe = abs(peck1$)     # increment de percage
    phole                   # trous suivants

pmisc1_2$   # Canned Misc #1 Cycle

    pprof_garde         # calcul des profondreur et des gardes
    passe = abs(peck1$)     # increment de percage
    phole                   # trous suivants

pmisc2_2$   # Canned Misc #2 Cycle

    pprof_garde         # calcul des profondreur et des gardes
    passe = abs(peck1$)     # increment de percage
    phole                   # trous suivants


ppercexy     # ecriture des x, y en abs ou incremental pour percage

        xabs = x$
        yabs = y$

           if rotaxis$ = 0, [   # XY CLASIQUE


                    if incremental = 0, xabs, yabs, !xinc, !yinc
                    else, !xabs, !yabs, xinc, yinc

                        ]

           if rotaxis$ <> 0, [    # SUBSTITUTION Y par A (diviseur tourne autour de X)
            p_Apos



                if incremental = 0, xabs, yabs, axeA, !xinc, !yinc, !axeAi
                else, !xabs, !yabs, !axeA, xinc, yinc, axeAi

            old_axeA  = axeA
            nbrtour = int (axeA / 360)
                     ]

    p_modal     # afficher en format modal
        !x$, !y$    # mise a jour XY

        old_x = xabs
        old_y = yabs

ppercez     # ecriture de z en abs ou incremental pour percage

          if rotaxis$ = 0, [   # XY CLASIQUE

                zabs = z$

                    if incremental = 0, zabs, !zinc
                    else, !zabs, zinc

                        ]

          if rotaxis$ <> 0, [   # Z EN SUBSTITUTION

            @rotdia$
            zabs  = z$ +(rotdia$ /2)    # Z pour continue substitutuion en ABS

                ]

    p_modal     # afficher en format modal
        !z$         # mise a jour Z

        old_z = zabs

pprof_garde # calcul des profondeurs et des gardes

     if rotaxis$ = 0, [   # XY CLASIQUE
            @depth$
            @refht$
            @tosz$
            @initht$
            profabs = depth$ - tosz$
            profi = profabs
            gardeabs = refht$ - tosz$
            gardei = gardeabs
            psecu = initht$
            dbrut = tosz$
            !depth$
            !refht$
            !tosz$


                        ]

           if rotaxis$ <> 0, [    # SUBSTITUTION par A (diviseur tourne autour de X ou Y)

            @depth$
            @refht$
            @tosz$
            @initht$
            profabs = (depth$ - tosz$)
            profi = profabs
            gardeabs = (refht$ - tosz$)
            gardei = gardeabs
            psecu = initht$ + (rotdia$/2)
            dbrut = tosz$ + (rotdia$/2)
            !depth$
            !refht$
        !tosz$
            ]



phole       # trous suivants


    gcode$ = 0


    if initht$ <> refht$, [     # SI PLAN DE SECU ET GARDE DIFFERENT

        if use_cyc200 = 0,  [       # si l'armoire n'utilise pas les cycles 200
            z$ = initht$            # remonter plan secu avant
            n$, sgcode, ppercez, pfr, e$
                ]

           if (profabs <> old_profabs) | (gardeabs <> old_gardeabs), ppercage   # si la prof ou la garde sont <> ecrire le cycle
           else, [
                if use_cyc200 = 0,  [           # si l'armoire n'utilise pas les cycles 200
            n$, sgcode, ppercexy, pfr, e$       # Position xy
            z$ = refht$
            n$, sgcode, ppercez, pfr, "M99", e$ # Position Z et executer le cycle
                    ]
        if use_cyc200 <> 0,     [           # si l'armoire utilise les cycles 200
            n$, sgcode, ppercexy, pfr, "M99", e$    # Position XY et executer le cycle
                    ]
                ]
                        ]

    if initht$ = refht$, [      # SI PLAN DE SECU ET GARDE IDENTIQUE

           if (profabs <> old_profabs) | (gardeabs <> old_gardeabs), pcyleperce     # si la prof ou la garde sont <> ecriture du cycle de percage

        n$, sgcode, ppercexy, pfr, "M99", e$                    # Position xy  # se placer et percer

                ]



        z$ = depth$
        zabs = z$
        !z$
        !zabs
        !zinc

    old_gardeabs = gardeabs     # memo des prof et garde
    old_profabs = profabs


pcanceldc$  # Anulation de cyle fixe


    z$ = initht$      # z au plan de secu
    profabs=  -99999    # raz des prof garde tempo
    gardeabs=  -99999
    tempo = 0
    !profabs
    !gardeabs
    !tempo


           if rotaxis$ = 0, [   # XYZ CLASIQUE

        zabs = z$

                                ]
        else, [

        zabs = z$ + (rotdia$/2)
            ]

        gcode$ = 0    # choix du gcode pour ecrire G0 G80

             if incremental = 0, n$, sinc_abs, `sgcode, zabs, !zinc, pfr, e$
             if incremental = 1, n$, sinc_abs, `sgcode, !zabs, zinc, pfr, e$




        !z$      # Raz de Z
        old_z = zabs





#------------------Liste des OUTILS---------------------------------------------------

ptypeBoutT # afficher on non le rayon de bout
           if paramT4 <> 0, space, paramT6

pangleT    # afficher on non l'angle de l'outil
           #if paramT2 = 3 | paramT2 = 12 | paramT2 = 2 | paramT2 = 17 | paramT2 = 9 | paramT2 = 4 | paramT2 = 5, space, paramT8



#----------------------- pour gere les outil en parametrï¿½ ---------------------------------

fmt "" 4 var_outil
fmt "" 4 num_outil
num_outil = t$
var_outil : 500
scorH_param : "H#"
scorD_param : "D#"


fmt "" 4 outil_1
fmt "" 4 outil_2
fmt "" 4 outil_3
fmt "" 4 outil_4
fmt "" 4 outil_5
fmt "" 4 outil_6
fmt "" 4 outil_7
fmt "" 4 outil_8
fmt "" 4 outil_9
fmt "" 4 outil_10
fmt "" 4 outil_11
fmt "" 4 outil_12
fmt "" 4 outil_13
fmt "" 4 outil_14
fmt "" 4 outil_15
fmt "" 4 outil_16
fmt "" 4 outil_17
fmt "" 4 outil_18
fmt "" 4 outil_19
fmt "" 4 outil_20
fmt "" 4 outil_21
fmt "" 4 outil_22
fmt "" 4 outil_23
fmt "" 4 outil_24
fmt "" 4 outil_25
fmt "" 4 outil_26
fmt "" 4 outil_27
fmt "" 4 outil_28
fmt "" 4 outil_29
fmt "" 4 outil_30

fmt "Q" 4 affiche_1
fmt "Q" 4 affiche_2
fmt "Q" 4 affiche_3
fmt "Q" 4 affiche_4
fmt "Q" 4 affiche_5
fmt "Q" 4 affiche_6
fmt "Q" 4 affiche_7
fmt "Q" 4 affiche_8
fmt "Q" 4 affiche_9
fmt "Q" 4 affiche_10
fmt "Q" 4 affiche_11
fmt "Q" 4 affiche_12
fmt "Q" 4 affiche_13
fmt "Q" 4 affiche_14
fmt "Q" 4 affiche_15
fmt "Q" 4 affiche_16
fmt "Q" 4 affiche_17
fmt "Q" 4 affiche_18
fmt "Q" 4 affiche_19
fmt "Q" 4 affiche_20
fmt "Q" 4 affiche_21
fmt "Q" 4 affiche_22
fmt "Q" 4 affiche_23
fmt "Q" 4 affiche_24
fmt "Q" 4 affiche_25
fmt "Q" 4 affiche_26
fmt "Q" 4 affiche_27
fmt "Q" 4 affiche_28
fmt "Q" 4 affiche_29
fmt "Q" 4 affiche_30


p_enregistre_outil # enregistre les outil limitï¿½ a 30 outil

     if var_outil = 501 , outil_1 = t$ , affiche_1 = var_outil
     if var_outil = 502 , outil_2 = t$ , affiche_2 = var_outil
     if var_outil = 503 , outil_3 = t$ , affiche_3 = var_outil
     if var_outil = 504 , outil_4 = t$ , affiche_4 = var_outil
     if var_outil = 505 , outil_5 = t$ , affiche_5 = var_outil
     if var_outil = 506 , outil_6 = t$ , affiche_6 = var_outil
     if var_outil = 507 , outil_7 = t$ , affiche_7 = var_outil
     if var_outil = 508 , outil_8 = t$ , affiche_8 = var_outil
     if var_outil = 509 , outil_9 = t$ , affiche_9 = var_outil
     if var_outil = 510 , outil_10 = t$ , affiche_10 = var_outil
     if var_outil = 511 , outil_11 = t$ , affiche_11 = var_outil
     if var_outil = 512 , outil_12 = t$ , affiche_12 = var_outil
     if var_outil = 513 , outil_13 = t$ , affiche_13 = var_outil
     if var_outil = 514 , outil_14 = t$ , affiche_14 = var_outil
     if var_outil = 515 , outil_15 = t$ , affiche_15 = var_outil
     if var_outil = 516 , outil_16 = t$ , affiche_16 = var_outil
     if var_outil = 517 , outil_17 = t$ , affiche_17 = var_outil
     if var_outil = 518 , outil_18 = t$ , affiche_18 = var_outil
     if var_outil = 519 , outil_19 = t$ , affiche_19 = var_outil
     if var_outil = 520 , outil_20 = t$ , affiche_20 = var_outil
     if var_outil = 521 , outil_21 = t$ , affiche_21 = var_outil
     if var_outil = 522 , outil_22 = t$ , affiche_22 = var_outil
     if var_outil = 523 , outil_23 = t$ , affiche_23 = var_outil
     if var_outil = 524 , outil_24 = t$ , affiche_24 = var_outil
     if var_outil = 525 , outil_25 = t$ , affiche_25 = var_outil
     if var_outil = 526 , outil_26 = t$ , affiche_26 = var_outil
     if var_outil = 527 , outil_27 = t$ , affiche_27 = var_outil
     if var_outil = 528 , outil_28 = t$ , affiche_28 = var_outil
     if var_outil = 529 , outil_29 = t$ , affiche_29 = var_outil
     if var_outil = 530 , outil_30 = t$ , affiche_30 = var_outil

p_af_outil # affiche les outil en parametrï¿½

     if t$ = outil_1, *affiche_1
     if t$ = outil_2, *affiche_2
     if t$ = outil_3, *affiche_3
     if t$ = outil_4, *affiche_4
     if t$ = outil_5, *affiche_5
     if t$ = outil_6, *affiche_6
     if t$ = outil_7, *affiche_7
     if t$ = outil_8, *affiche_8
     if t$ = outil_9, *affiche_9
     if t$ = outil_10, *affiche_10
     if t$ = outil_11, *affiche_11
     if t$ = outil_12, *affiche_12
     if t$ = outil_13, *affiche_13
     if t$ = outil_14, *affiche_14
     if t$ = outil_15, *affiche_15
     if t$ = outil_16, *affiche_16
     if t$ = outil_17, *affiche_17
     if t$ = outil_18, *affiche_18
     if t$ = outil_19, *affiche_19
     if t$ = outil_20, *affiche_20
     if t$ = outil_21, *affiche_21
     if t$ = outil_22, *affiche_22
     if t$ = outil_23, *affiche_23
     if t$ = outil_24, *affiche_24
     if t$ = outil_25, *affiche_25
     if t$ = outil_26, *affiche_26
     if t$ = outil_27, *affiche_27
     if t$ = outil_28, *affiche_28
     if t$ = outil_29, *affiche_29
     if t$ = outil_30, *affiche_30

p_af_outil_suivant

     if next_tool$ = outil_1, *affiche_1
     if next_tool$ = outil_2, *affiche_2
     if next_tool$ = outil_3, *affiche_3
     if next_tool$ = outil_4, *affiche_4
     if next_tool$ = outil_5, *affiche_5
     if next_tool$ = outil_6, *affiche_6
     if next_tool$ = outil_7, *affiche_7
     if next_tool$ = outil_8, *affiche_8
     if next_tool$ = outil_9, *affiche_9
     if next_tool$ = outil_10, *affiche_10
     if next_tool$ = outil_11, *affiche_11
     if next_tool$ = outil_12, *affiche_12
     if next_tool$ = outil_13, *affiche_13
     if next_tool$ = outil_14, *affiche_14
     if next_tool$ = outil_15, *affiche_15
     if next_tool$ = outil_16, *affiche_16
     if next_tool$ = outil_17, *affiche_17
     if next_tool$ = outil_18, *affiche_18
     if next_tool$ = outil_19, *affiche_19
     if next_tool$ = outil_20, *affiche_20
     if next_tool$ = outil_21, *affiche_21
     if next_tool$ = outil_22, *affiche_22
     if next_tool$ = outil_23, *affiche_23
     if next_tool$ = outil_24, *affiche_24
     if next_tool$ = outil_25, *affiche_25
     if next_tool$ = outil_26, *affiche_26
     if next_tool$ = outil_27, *affiche_27
     if next_tool$ = outil_28, *affiche_28
     if next_tool$ = outil_29, *affiche_29
     if next_tool$ = outil_30, *affiche_30

p_cor_param

     if t$ = outil_1, correcteur_D = affiche_1 , correcteur_H = affiche_1
     if t$ = outil_2, correcteur_D = affiche_2 , correcteur_H = affiche_2
     if t$ = outil_3, correcteur_D = affiche_3 , correcteur_H = affiche_3
     if t$ = outil_4, correcteur_D = affiche_4 , correcteur_H = affiche_4
     if t$ = outil_5, correcteur_D = affiche_5 , correcteur_H = affiche_5
     if t$ = outil_6, correcteur_D = affiche_6 , correcteur_H = affiche_6
     if t$ = outil_7, correcteur_D = affiche_7 , correcteur_H = affiche_7
     if t$ = outil_8, correcteur_D = affiche_8 , correcteur_H = affiche_8
     if t$ = outil_9, correcteur_D = affiche_9 , correcteur_H = affiche_9
     if t$ = outil_10, correcteur_D = affiche_10 , correcteur_H = affiche_10
     if t$ = outil_11, correcteur_D = affiche_11 , correcteur_H = affiche_11
     if t$ = outil_12, correcteur_D = affiche_12 , correcteur_H = affiche_12
     if t$ = outil_13, correcteur_D = affiche_13 , correcteur_H = affiche_13
     if t$ = outil_14, correcteur_D = affiche_14 , correcteur_H = affiche_14
     if t$ = outil_15, correcteur_D = affiche_15 , correcteur_H = affiche_15
     if t$ = outil_16, correcteur_D = affiche_16 , correcteur_H = affiche_16
     if t$ = outil_17, correcteur_D = affiche_17 , correcteur_H = affiche_17
     if t$ = outil_18, correcteur_D = affiche_18 , correcteur_H = affiche_18
     if t$ = outil_19, correcteur_D = affiche_19 , correcteur_H = affiche_19
     if t$ = outil_20, correcteur_D = affiche_20 , correcteur_H = affiche_20
     if t$ = outil_21, correcteur_D = affiche_21 , correcteur_H = affiche_21
     if t$ = outil_22, correcteur_D = affiche_22 , correcteur_H = affiche_22
     if t$ = outil_23, correcteur_D = affiche_23 , correcteur_H = affiche_23
     if t$ = outil_24, correcteur_D = affiche_24 , correcteur_H = affiche_24
     if t$ = outil_25, correcteur_D = affiche_25 , correcteur_H = affiche_25
     if t$ = outil_26, correcteur_D = affiche_26 , correcteur_H = affiche_26
     if t$ = outil_27, correcteur_D = affiche_27 , correcteur_H = affiche_27
     if t$ = outil_28, correcteur_D = affiche_28 , correcteur_H = affiche_28
     if t$ = outil_29, correcteur_D = affiche_29 , correcteur_H = affiche_29
     if t$ = outil_30, correcteur_D = affiche_30 , correcteur_H = affiche_30

fmt "" 2  outil_parm
outil_parm = 1
pwrtt$      # Lite des outil origine classic

     #outil_parm <> 1 ,[
         #   strtool$ = ucase(strtool$)
       # if texte <> 0 & t$ > 0, [
         #   if numcoment = 0, omitseq$ = 1
         #   if strtool$ <> svide,   n$, sdcom, spaces$ = 0, paramT1, space, strtool$, space, paramT5, space, paramT16, ptypeBoutT, pangleT, space, smatT, sfcom, spaces$ = old_spaces, e$
         #  else, n$, sdcom, spaces$ = 0, paramT1, space, stypeT, space, paramT5, space, paramT16, ptypeBoutT, pangleT, space, smatT, sfcom, spaces$ = old_spaces, e$
          #  omitseq$ = old_omitseq
                         #        ]
                                   #  ]

  #  outil_parm = 1 ,[ # outil en parametre en entete de pgm

                  strtool$ = ucase(strtool$)
                   if texte <> 0 & t$ > 0, [
                   var_outil = var_outil + 1
                   spaces$ =0

                   n$ ," Q",  var_outil, "=", num_outil," ", sdcom, spaces$ = 0, paramT1, space, strtool$, space, paramT5, space, paramT16, ptypeBoutT, pangleT, space, smatT, sfcom, spaces$ = old_spaces, e$
                   p_enregistre_outil
                                           ]
                               #     ]
pwrtt_old      # Lite des outil

            sdesioutil = ucase(strtool$)

           if texte <> 0 & t$ > 0, [


            if numcoment = 0, omitseq$ = 1

            paramT1 = t$
            spaces$ = 0
            if strtool$ <> svide, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, paramT1, space, sdesioutil, space, stypeT, space, paramT5, space, paramT16, ptypeBoutT, pangleT, space, smatT, sfcom, e$
            else, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, paramT1, space, stypeT, space, paramT5, space, paramT16, ptypeBoutT, pangleT, space, smatT, sfcom, e$
            spaces$ = old_spaces
            omitseq$ = old_omitseq

                ]

    last_op_id = op_id$



# -------------------------LECTURE DES PARAMETRES DE SUREP ET DE TYPE DE CORRECTION--------------------------------------------

paramcomp   # Type de correction d'outil au changement d'operation


        @cc_computer$, @cc_pos$                 # mise à jour des variables
        #cc_comp 41 42 0
        #cc_pos   1  2 0
        if cc_pos$ = 0  & cc_computer$ = 0, type_comp = 0   #AUCUNE

        if cc_pos$ = 2  & cc_computer$ = 0, type_comp = 1   #ARMOIRE DROITE
        if cc_pos$ = 1  & cc_computer$ = 0, type_comp = 2   #ARMOIRE GAUCHE

        if cc_pos$ = 0  & cc_computer$ = 42, type_comp = 3  #ORDINATEUR DROITE
        if cc_pos$ = 0  & cc_computer$ = 41, type_comp = 4  #ORDINATEUR GAUCHE

    if cc_pos$ = 2  & cc_computer$ = 42, type_comp = 5  #USURE DROITE
    if cc_pos$ = 1  & cc_computer$ = 41, type_comp = 6  #USURE GAUCHE

    if cc_pos$ = 1  & cc_computer$ = 42, type_comp = 7  #USURE INVERSE DROITE
    if cc_pos$ = 2  & cc_computer$ = 41, type_comp = 8  #USURE INVERSE GAUCHE


        if opcode$ = 19, type_comp = 0              # mis sur aucune a la place d'ordinateur pour surfacage (bug)



    if info_corr = 1 & op_id$ <> old_op_id  & texte <> 0, [ # si afficher les infos de compesation et changement d'operation et texte supporté

    spaces$ = 0                                     # suprimer les espaces
    if numcoment = 0, omitseq$ = 1                              # si pas de numero de bloc pour commentaires enlever les numeros de bloc
    if opcode$ <> 3, spaces$ = old_spaces, n$, sdcom,spaces$ = 0, stype_comp, sfcom, e$ # pour ne pas afficher les infos si percage
        spaces$ = old_spaces                                    # rappel des espaces
    omitseq$ = old_omitseq                                  # rappel des numero de bloc
                                    ]


paramsurep  # Affichage des surep au changement d'opération

        if info_surep = 1 & op_id$ <> old_op_id  & texte <> 0, [    # si afficher les infos de compesation et changement d'operation et texte supporté

    spaces$ = 0                         # suprimer les espaces
    if numcoment = 0, omitseq$ = 1                  # si pas de numero de bloc pour commentaires enlever les numeros de bloc
    # surep pour surfacage
        if opcode$ = 19, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, *surepl, sfcom, e$
    # surep 2d
        if opcode$ <> 3 & opcode$ < 5  & opcode$ <> 19, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, *surep, space, *surepl, sfcom, e$
    # surep 3d
        if opcode$ <> 3 & opcode$ >= 5 & opcode$ <> 19, spaces$ = old_spaces, n$, sdcom, spaces$ = 0, *surep3d, sfcom, e$
        spaces$ = old_spaces                        # rappel des espaces
    omitseq$ = old_omitseq                      # rappel des numero de bloc
                                ]

ptestmachine    # verif de la def machine

        #*nbr_combi, "---------", e$
    if nbr_combi > 1, erreur = 3        # le pst ne supporte q'une combinaison d'axe par programme
    if compt_axes_rot > 1, erreur = 2       # le pst ne supporte q'un axe rotaif
    #if write_ops = 0, erreur = 1       # Write NC Operation information MUST be enabled in CD
    perreur

perreur

      !erreur
      !serreur


    if erreur <> 0, [

        if erreur = 4 & testerreur4 = 0, [
            serreur2 = serreur + no2str(numop)
            result = mprint(serreur2, 3)

            if result = 3, serreur2 , e$, exitpost$ # abandonner
            if result = 4, serreur2         # recommencer
            if result = 5,  testerreur4 = 1     # ignorer

                ]

        #if erreur <> 4, [
          #  result = mprint(serreur, 2)
          #  exitpost$
           # ]
            ]




#-------------------------- RENOMMER LE FICHIER NC EN FONCTION DU NUMERO DE PROGRAMME -------------------------



pnom_nc     # Génération des noms du fichier NC

        snom_nc = spathnc$+snamenc$+sextnc$             # Fichier NC en cours de creation sous forme toto.nc
        snom_numero = no2str (progno$)
        snom_numero = spathnc$+snom_numero+sextnc$     # nouveau non de fichier NC sous forme O0015.nc


ptest_nom   # test du non du fichier NC si O0123.NC

        if fexist (snom_numero), q11

        if remplace = 0, pchange_nom
        if remplace = 1, result = remove (snom_numero)

pchange_nom     # changer le numéro de prog si fichier exite déja


        while fexist (snom_numero), [
            q10
            snom_numero = no2str (progno$)
            snom_numero = spathnc$+snom_numero+sextnc$
                        ]



ppost$       # traitement apres post pro pour effacer le fichier OPS et renommer le fichier NC

        sfileops= spathnci$ + snamenci$ + sops      # non du fichier ops
        result = remove (sfileops)          # effacer le fichier ops


        if use_progno = 1, result = remove (snom_numero)            #efface fichier en nom numero
        if use_progno = 1, result = rename (snom_nc, snom_numero)   #renomer fichier NC en nom numero
        if use_progno = 1, result = launch (seditor, snom_numero)   #lancer le blocnote




[CTRL_TEXT_XML_BEGIN]  # Post text edits MUST be made with Control Definition Manager.
<?xml version="1.0" encoding="UTF-8"?>
<mp_xml_post_text xml:space="preserve">
	<control>
		<control_label>CTRL_MILL|DEFAULT</control_label>
		<language>fr-FR</language>
		<misc_integers>
			<misc_1>
				<text>Utiliser plan de sécu pour rotation diviseur 1=OUI 0=NON</text>
			</misc_1>
			<misc_2>
				<text>Ne pas bloquer le diviseur 1=OUI 0=NON</text>
			</misc_2>
			<misc_3>
				<text>""</text>
			</misc_3>
			<misc_4>
				<text>""</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>""</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>Ajuster les avances sur arc 0=NON 1=Ralentir 2=Accélérer 3=les Deux</text>
			</misc_10>
		</misc_integers>
		<simple_drill>
			<description>
				<text>Perçage</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</simple_drill>
		<peck_drill>
			<description>
				<text>Débourrage</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Increment</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</peck_drill>
		<chip_break>
			<description>
				<text>Brise copeaux</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Increment</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>Remontée</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</chip_break>
		<tap>
			<description>
				<text>Taraudage</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</tap>
		<bore1>
			<description>
				<text>Alésage alesoir</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</bore1>
		<bore2>
			<description>
				<text>Alésage bare</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>Degagement</text>
			</shift>
		</bore2>
		<misc1>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</misc1>
		<misc2>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</misc2>
		<drill_cycle_9>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_9>
		<drill_cycle_10>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_10>
		<drill_cycle_11>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_11>
		<drill_cycle_12>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_12>
		<drill_cycle_13>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_13>
		<drill_cycle_14>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_14>
		<drill_cycle_15>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_15>
		<drill_cycle_16>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_16>
		<drill_cycle_17>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_17>
		<drill_cycle_18>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_18>
		<drill_cycle_19>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_19>
		<drill_cycle_20>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_20>
		<simple_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 1</text>
			</description>
		</simple_drill_custom_parameters>
		<peck_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 2</text>
			</description>
		</peck_drill_custom_parameters>
		<chip_break_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 3</text>
			</description>
		</chip_break_drill_custom_parameters>
		<tap_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 4</text>
			</description>
		</tap_custom_parameters>
		<bore1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 5</text>
			</description>
		</bore1_custom_parameters>
		<bore2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 6</text>
			</description>
		</bore2_custom_parameters>
		<misc1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 7</text>
			</description>
		</misc1_custom_parameters>
		<misc2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 8</text>
			</description>
		</misc2_custom_parameters>
		<drill_cycle_9_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 9</text>
			</description>
		</drill_cycle_9_custom_parameters>
		<drill_cycle_10_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 10</text>
			</description>
		</drill_cycle_10_custom_parameters>
		<drill_cycle_11_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 11</text>
			</description>
		</drill_cycle_11_custom_parameters>
		<drill_cycle_12_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 12</text>
			</description>
		</drill_cycle_12_custom_parameters>
		<drill_cycle_13_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 13</text>
			</description>
		</drill_cycle_13_custom_parameters>
		<drill_cycle_14_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 14</text>
			</description>
		</drill_cycle_14_custom_parameters>
		<drill_cycle_15_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 15</text>
			</description>
		</drill_cycle_15_custom_parameters>
		<drill_cycle_16_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 16</text>
			</description>
		</drill_cycle_16_custom_parameters>
		<drill_cycle_17_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 17</text>
			</description>
		</drill_cycle_17_custom_parameters>
		<drill_cycle_18_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 18</text>
			</description>
		</drill_cycle_18_custom_parameters>
		<drill_cycle_19_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 19</text>
			</description>
		</drill_cycle_19_custom_parameters>
		<drill_cycle_20_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 20</text>
			</description>
		</drill_cycle_20_custom_parameters>
		<drill_cycle_descriptions>
			<simple_drill>
				<text>Perçage</text>
			</simple_drill>
			<peck_drill>
				<text>Débourrage</text>
			</peck_drill>
			<chip_break>
				<text>Brise copeaux</text>
			</chip_break>
			<tapping>
				<text>Taraudage</text>
			</tapping>
			<boring_1>
				<text>Alésage alesoir</text>
			</boring_1>
			<boring_2>
				<text>Alésage bare</text>
			</boring_2>
			<misc_drill_1>
				<text>""</text>
			</misc_drill_1>
			<misc_drill_2>
				<text>""</text>
			</misc_drill_2>
			<custom_drill_9>
				<text>""</text>
			</custom_drill_9>
			<custom_drill_10>
				<text>""</text>
			</custom_drill_10>
			<custom_drill_11>
				<text>""</text>
			</custom_drill_11>
			<custom_drill_12>
				<text>""</text>
			</custom_drill_12>
			<custom_drill_13>
				<text>""</text>
			</custom_drill_13>
			<custom_drill_14>
				<text>""</text>
			</custom_drill_14>
			<custom_drill_15>
				<text>""</text>
			</custom_drill_15>
			<custom_drill_16>
				<text>""</text>
			</custom_drill_16>
			<custom_drill_17>
				<text>""</text>
			</custom_drill_17>
			<custom_drill_18>
				<text>""</text>
			</custom_drill_18>
			<custom_drill_19>
				<text>""</text>
			</custom_drill_19>
			<custom_drill_20>
				<text>""</text>
			</custom_drill_20>
		</drill_cycle_descriptions>
		<canned_text>
			<canned_text_1>
				<text>""</text>
			</canned_text_1>
			<canned_text_2>
				<text>""</text>
			</canned_text_2>
			<canned_text_3>
				<text>""</text>
			</canned_text_3>
			<canned_text_4>
				<text>""</text>
			</canned_text_4>
			<canned_text_5>
				<text>""</text>
			</canned_text_5>
			<canned_text_6>
				<text>""</text>
			</canned_text_6>
			<canned_text_7>
				<text>""</text>
			</canned_text_7>
			<canned_text_8>
				<text>""</text>
			</canned_text_8>
			<canned_text_9>
				<text>""</text>
			</canned_text_9>
			<canned_text_10>
				<text>""</text>
			</canned_text_10>
		</canned_text>
		<tool_parameters>
			<head_number>
				<text>""</text>
			</head_number>
			<length_offset>
				<text>""</text>
			</length_offset>
			<diameter_offset>
				<text>""</text>
			</diameter_offset>
			<canned_text>
				<text>""</text>
			</canned_text>
		</tool_parameters>
	</control>
<control>
		<control_label>CTRL_MILL|HEIDENHAIN 426</control_label>
		<language>fr-FR</language>
		<misc_integers>
			<misc_1>
				<text>Utiliser plan de sécu pour rotation diviseur 1=OUI 0=NON</text>
			</misc_1>
			<misc_2>
				<text>Ne pas bloquer le diviseur 1=OUI 0=NON</text>
			</misc_2>
			<misc_3>
				<text>""</text>
			</misc_3>
			<misc_4>
				<text>""</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>""</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>Ajuster les avances sur arc 0=NON 1=Ralentir 2=Accélérer 3=les Deux</text>
			</misc_10>
		</misc_integers>
		<simple_drill>
			<description>
				<text>Perçage</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</simple_drill>
		<peck_drill>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Increment</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</peck_drill>
		<chip_break>
			<description>
				<text>Brise copeaux</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Increment</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>Remontée</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</chip_break>
		<tap>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</tap>
		<bore1>
			<description>
				<text>Alésage alesoir</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</bore1>
		<bore2>
			<description>
				<text>Alésage bare</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>Degagement</text>
			</shift>
		</bore2>
		<misc1>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</misc1>
		<misc2>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</misc2>
		<drill_cycle_9>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_9>
		<drill_cycle_10>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_10>
		<drill_cycle_11>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_11>
		<drill_cycle_12>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_12>
		<drill_cycle_13>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_13>
		<drill_cycle_14>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_14>
		<drill_cycle_15>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_15>
		<drill_cycle_16>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_16>
		<drill_cycle_17>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_17>
		<drill_cycle_18>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_18>
		<drill_cycle_19>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_19>
		<drill_cycle_20>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_20>
		<simple_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 1</text>
			</description>
		</simple_drill_custom_parameters>
		<peck_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 2</text>
			</description>
		</peck_drill_custom_parameters>
		<chip_break_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 3</text>
			</description>
		</chip_break_drill_custom_parameters>
		<tap_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 4</text>
			</description>
		</tap_custom_parameters>
		<bore1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 5</text>
			</description>
		</bore1_custom_parameters>
		<bore2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 6</text>
			</description>
		</bore2_custom_parameters>
		<misc1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 7</text>
			</description>
		</misc1_custom_parameters>
		<misc2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 8</text>
			</description>
		</misc2_custom_parameters>
		<drill_cycle_9_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 9</text>
			</description>
		</drill_cycle_9_custom_parameters>
		<drill_cycle_10_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 10</text>
			</description>
		</drill_cycle_10_custom_parameters>
		<drill_cycle_11_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 11</text>
			</description>
		</drill_cycle_11_custom_parameters>
		<drill_cycle_12_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 12</text>
			</description>
		</drill_cycle_12_custom_parameters>
		<drill_cycle_13_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 13</text>
			</description>
		</drill_cycle_13_custom_parameters>
		<drill_cycle_14_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 14</text>
			</description>
		</drill_cycle_14_custom_parameters>
		<drill_cycle_15_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 15</text>
			</description>
		</drill_cycle_15_custom_parameters>
		<drill_cycle_16_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 16</text>
			</description>
		</drill_cycle_16_custom_parameters>
		<drill_cycle_17_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 17</text>
			</description>
		</drill_cycle_17_custom_parameters>
		<drill_cycle_18_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 18</text>
			</description>
		</drill_cycle_18_custom_parameters>
		<drill_cycle_19_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 19</text>
			</description>
		</drill_cycle_19_custom_parameters>
		<drill_cycle_20_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 20</text>
			</description>
		</drill_cycle_20_custom_parameters>
		<drill_cycle_descriptions>
			<simple_drill>
				<text>Perçage</text>
			</simple_drill>
			<peck_drill>
				<text>Débourrage</text>
			</peck_drill>
			<chip_break>
				<text>Brise copeaux</text>
			</chip_break>
			<tapping>
				<text>Taraudage</text>
			</tapping>
			<boring_1>
				<text>Alésage alesoir</text>
			</boring_1>
			<boring_2>
				<text>Alésage bare</text>
			</boring_2>
			<misc_drill_1>
				<text>""</text>
			</misc_drill_1>
			<misc_drill_2>
				<text>""</text>
			</misc_drill_2>
			<custom_drill_9>
				<text>""</text>
			</custom_drill_9>
			<custom_drill_10>
				<text>""</text>
			</custom_drill_10>
			<custom_drill_11>
				<text>""</text>
			</custom_drill_11>
			<custom_drill_12>
				<text>""</text>
			</custom_drill_12>
			<custom_drill_13>
				<text>""</text>
			</custom_drill_13>
			<custom_drill_14>
				<text>""</text>
			</custom_drill_14>
			<custom_drill_15>
				<text>""</text>
			</custom_drill_15>
			<custom_drill_16>
				<text>""</text>
			</custom_drill_16>
			<custom_drill_17>
				<text>""</text>
			</custom_drill_17>
			<custom_drill_18>
				<text>""</text>
			</custom_drill_18>
			<custom_drill_19>
				<text>""</text>
			</custom_drill_19>
			<custom_drill_20>
				<text>""</text>
			</custom_drill_20>
		</drill_cycle_descriptions>
		<canned_text>
			<canned_text_1>
				<text>""</text>
			</canned_text_1>
			<canned_text_2>
				<text>""</text>
			</canned_text_2>
			<canned_text_3>
				<text>""</text>
			</canned_text_3>
			<canned_text_4>
				<text>""</text>
			</canned_text_4>
			<canned_text_5>
				<text>""</text>
			</canned_text_5>
			<canned_text_6>
				<text>""</text>
			</canned_text_6>
			<canned_text_7>
				<text>""</text>
			</canned_text_7>
			<canned_text_8>
				<text>""</text>
			</canned_text_8>
			<canned_text_9>
				<text>""</text>
			</canned_text_9>
			<canned_text_10>
				<text>""</text>
			</canned_text_10>
		</canned_text>
		<tool_parameters>
			<head_number>
				<text>""</text>
			</head_number>
			<length_offset>
				<text>""</text>
			</length_offset>
			<diameter_offset>
				<text>""</text>
			</diameter_offset>
			<canned_text>
				<text>""</text>
			</canned_text>
		</tool_parameters>
	</control>
	<control>
		<control_label>CTRL_MILL|DMU50EVO</control_label>
		<language>fr-FR</language>
		<misc_integers>
			<misc_1>
				<text>Utiliser plan de sécu pour rotation diviseur 1=OUI 0=NON</text>
			</misc_1>
			<misc_2>
				<text>Ne pas bloquer le diviseur 1=OUI 0=NON</text>
			</misc_2>
			<misc_3>
				<text>""</text>
			</misc_3>
			<misc_4>
				<text>""</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>""</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>Ajuster les avances sur arc 0=NON 1=Ralentir 2=Accélérer 3=les Deux</text>
			</misc_10>
		</misc_integers>
		<simple_drill>
			<description>
				<text>Perçage</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</simple_drill>
		<peck_drill>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Increment</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</peck_drill>
		<chip_break>
			<description>
				<text>Brise copeaux</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Increment</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>Remontée</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</chip_break>
		<tap>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</tap>
		<bore1>
			<description>
				<text>Alésage alesoir</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</bore1>
		<bore2>
			<description>
				<text>Alésage bare</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>Degagement</text>
			</shift>
		</bore2>
		<misc1>
			<description>
				<text>Alésage a la fraise</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>Prof. de passe</text>
			</first_peck>
			<subsequent_peck>
				<text>Ø Nominal</text>
			</subsequent_peck>
			<peck_clearance>
				<text>Ø pré-perçage</text>
			</peck_clearance>
			<retract_amount>
				<text>Mode fraisage, 1=Oui</text>
			</retract_amount>
		</misc1>
		<misc2>
			<description>
				<text>Filetage a la fraise</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Pas de vis</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>Ø Nominal</text>
			</subsequent_peck>
			<peck_clearance>
				<text>Filets par pas</text>
			</peck_clearance>
			<retract_amount>
				<text>Mode fraisage, 1=Oui</text>
			</retract_amount>
			<shift>
				<text>Avance pré-perçage</text>
			</shift>
		</misc2>
		<drill_cycle_9>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_9>
		<drill_cycle_10>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_10>
		<drill_cycle_11>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_11>
		<drill_cycle_12>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_12>
		<drill_cycle_13>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_13>
		<drill_cycle_14>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_14>
		<drill_cycle_15>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_15>
		<drill_cycle_16>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_16>
		<drill_cycle_17>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_17>
		<drill_cycle_18>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_18>
		<drill_cycle_19>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_19>
		<drill_cycle_20>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_20>
		<simple_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 1</text>
			</description>
		</simple_drill_custom_parameters>
		<peck_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 2</text>
			</description>
		</peck_drill_custom_parameters>
		<chip_break_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 3</text>
			</description>
		</chip_break_drill_custom_parameters>
		<tap_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 4</text>
			</description>
		</tap_custom_parameters>
		<bore1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 5</text>
			</description>
		</bore1_custom_parameters>
		<bore2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 6</text>
			</description>
		</bore2_custom_parameters>
		<misc1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 7</text>
			</description>
		</misc1_custom_parameters>
		<misc2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 8</text>
			</description>
		</misc2_custom_parameters>
		<drill_cycle_9_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 9</text>
			</description>
		</drill_cycle_9_custom_parameters>
		<drill_cycle_10_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 10</text>
			</description>
		</drill_cycle_10_custom_parameters>
		<drill_cycle_11_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 11</text>
			</description>
		</drill_cycle_11_custom_parameters>
		<drill_cycle_12_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 12</text>
			</description>
		</drill_cycle_12_custom_parameters>
		<drill_cycle_13_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 13</text>
			</description>
		</drill_cycle_13_custom_parameters>
		<drill_cycle_14_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 14</text>
			</description>
		</drill_cycle_14_custom_parameters>
		<drill_cycle_15_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 15</text>
			</description>
		</drill_cycle_15_custom_parameters>
		<drill_cycle_16_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 16</text>
			</description>
		</drill_cycle_16_custom_parameters>
		<drill_cycle_17_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 17</text>
			</description>
		</drill_cycle_17_custom_parameters>
		<drill_cycle_18_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 18</text>
			</description>
		</drill_cycle_18_custom_parameters>
		<drill_cycle_19_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 19</text>
			</description>
		</drill_cycle_19_custom_parameters>
		<drill_cycle_20_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 20</text>
			</description>
		</drill_cycle_20_custom_parameters>
		<drill_cycle_descriptions>
			<simple_drill>
				<text>Perçage</text>
			</simple_drill>
			<peck_drill>
				<text>Débourrage</text>
			</peck_drill>
			<chip_break>
				<text>Brise copeaux</text>
			</chip_break>
			<tapping>
				<text>Taraudage</text>
			</tapping>
			<boring_1>
				<text>Alésage alesoir</text>
			</boring_1>
			<boring_2>
				<text>Alésage bare</text>
			</boring_2>
			<misc_drill_1>
				<text>""</text>
			</misc_drill_1>
			<misc_drill_2>
				<text>""</text>
			</misc_drill_2>
			<custom_drill_9>
				<text>""</text>
			</custom_drill_9>
			<custom_drill_10>
				<text>""</text>
			</custom_drill_10>
			<custom_drill_11>
				<text>""</text>
			</custom_drill_11>
			<custom_drill_12>
				<text>""</text>
			</custom_drill_12>
			<custom_drill_13>
				<text>""</text>
			</custom_drill_13>
			<custom_drill_14>
				<text>""</text>
			</custom_drill_14>
			<custom_drill_15>
				<text>""</text>
			</custom_drill_15>
			<custom_drill_16>
				<text>""</text>
			</custom_drill_16>
			<custom_drill_17>
				<text>""</text>
			</custom_drill_17>
			<custom_drill_18>
				<text>""</text>
			</custom_drill_18>
			<custom_drill_19>
				<text>""</text>
			</custom_drill_19>
			<custom_drill_20>
				<text>""</text>
			</custom_drill_20>
		</drill_cycle_descriptions>
		<canned_text>
			<canned_text_1>
				<text>""</text>
			</canned_text_1>
			<canned_text_2>
				<text>""</text>
			</canned_text_2>
			<canned_text_3>
				<text>""</text>
			</canned_text_3>
			<canned_text_4>
				<text>""</text>
			</canned_text_4>
			<canned_text_5>
				<text>""</text>
			</canned_text_5>
			<canned_text_6>
				<text>""</text>
			</canned_text_6>
			<canned_text_7>
				<text>""</text>
			</canned_text_7>
			<canned_text_8>
				<text>""</text>
			</canned_text_8>
			<canned_text_9>
				<text>""</text>
			</canned_text_9>
			<canned_text_10>
				<text>""</text>
			</canned_text_10>
		</canned_text>
		<tool_parameters>
			<head_number>
				<text>""</text>
			</head_number>
			<length_offset>
				<text>""</text>
			</length_offset>
			<diameter_offset>
				<text>""</text>
			</diameter_offset>
			<canned_text>
				<text>""</text>
			</canned_text>
		</tool_parameters>
	</control>
	<control>
		<control_label>CTRL_MILL|HEID530-5X</control_label>
		<language>fr-FR</language>
		<misc_integers>
			<misc_1>
				<text>Utiliser plan de sécu pour rotation diviseur 1=OUI 0=NON</text>
			</misc_1>
			<misc_2>
				<text>Ne pas bloquer le diviseur 1=OUI 0=NON</text>
			</misc_2>
			<misc_3>
				<text>""</text>
			</misc_3>
			<misc_4>
				<text>""</text>
			</misc_4>
			<misc_5>
				<text>""</text>
			</misc_5>
			<misc_6>
				<text>""</text>
			</misc_6>
			<misc_7>
				<text>""</text>
			</misc_7>
			<misc_8>
				<text>""</text>
			</misc_8>
			<misc_9>
				<text>""</text>
			</misc_9>
			<misc_10>
				<text>Ajuster les avances sur arc 0=NON 1=Ralentir 2=Accélérer 3=les Deux</text>
			</misc_10>
		</misc_integers>
		<simple_drill>
			<description>
				<text>Perçage</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</simple_drill>
		<peck_drill>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Increment</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</peck_drill>
		<chip_break>
			<description>
				<text>Brise copeaux</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>Increment</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>Remontée</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</chip_break>
		<tap>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</tap>
		<bore1>
			<description>
				<text>Alésage alesoir</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>avance sortie</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</bore1>
		<bore2>
			<description>
				<text>Alésage bare</text>
			</description>
			<feed_rate>
				<text>Avance</text>
			</feed_rate>
			<dwell>
				<text>Tempo.</text>
			</dwell>
			<clearance>
				<text>Plan de sécurité</text>
			</clearance>
			<retract>
				<text>Garde</text>
			</retract>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>Degagement</text>
			</shift>
		</bore2>
		<misc1>
			<description>
				<text>Alésage a la fraise</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>Prof. de passe</text>
			</first_peck>
			<subsequent_peck>
				<text>ØNominal</text>
			</subsequent_peck>
			<peck_clearance>
				<text>Ø pré-perçage</text>
			</peck_clearance>
			<retract_amount>
				<text>Mode fraisage, 1=Oui</text>
			</retract_amount>
			<shift>
				<text>Degagement</text>
			</shift>
		</misc1>
		<misc2>
			<description>
				<text>Filetage a la fraise</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>Pas de vis</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>ØNominal</text>
			</subsequent_peck>
			<peck_clearance>
				<text>Filets par pas</text>
			</peck_clearance>
			<retract_amount>
				<text>Mode fraisage, 1=Oui</text>
			</retract_amount>
			<shift>
				<text>Avance pré-perçage</text>
			</shift>
		</misc2>
		<drill_cycle_9>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_9>
		<drill_cycle_10>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_10>
		<drill_cycle_11>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_11>
		<drill_cycle_12>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_12>
		<drill_cycle_13>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_13>
		<drill_cycle_14>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_14>
		<drill_cycle_15>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_15>
		<drill_cycle_16>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_16>
		<drill_cycle_17>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_17>
		<drill_cycle_18>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_18>
		<drill_cycle_19>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_19>
		<drill_cycle_20>
			<description>
				<text>""</text>
			</description>
			<feed_rate>
				<text>""</text>
			</feed_rate>
			<dwell>
				<text>""</text>
			</dwell>
			<clearance>
				<text>""</text>
			</clearance>
			<retract>
				<text>""</text>
			</retract>
			<depth>
				<text>""</text>
			</depth>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
		</drill_cycle_20>
		<simple_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 1</text>
			</description>
		</simple_drill_custom_parameters>
		<peck_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 2</text>
			</description>
		</peck_drill_custom_parameters>
		<chip_break_drill_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 3</text>
			</description>
		</chip_break_drill_custom_parameters>
		<tap_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 4</text>
			</description>
		</tap_custom_parameters>
		<bore1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 5</text>
			</description>
		</bore1_custom_parameters>
		<bore2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 6</text>
			</description>
		</bore2_custom_parameters>
		<misc1_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 7</text>
			</description>
		</misc1_custom_parameters>
		<misc2_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 8</text>
			</description>
		</misc2_custom_parameters>
		<drill_cycle_9_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 9</text>
			</description>
		</drill_cycle_9_custom_parameters>
		<drill_cycle_10_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 10</text>
			</description>
		</drill_cycle_10_custom_parameters>
		<drill_cycle_11_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 11</text>
			</description>
		</drill_cycle_11_custom_parameters>
		<drill_cycle_12_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 12</text>
			</description>
		</drill_cycle_12_custom_parameters>
		<drill_cycle_13_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 13</text>
			</description>
		</drill_cycle_13_custom_parameters>
		<drill_cycle_14_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 14</text>
			</description>
		</drill_cycle_14_custom_parameters>
		<drill_cycle_15_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 15</text>
			</description>
		</drill_cycle_15_custom_parameters>
		<drill_cycle_16_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 16</text>
			</description>
		</drill_cycle_16_custom_parameters>
		<drill_cycle_17_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 17</text>
			</description>
		</drill_cycle_17_custom_parameters>
		<drill_cycle_18_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 18</text>
			</description>
		</drill_cycle_18_custom_parameters>
		<drill_cycle_19_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 19</text>
			</description>
		</drill_cycle_19_custom_parameters>
		<drill_cycle_20_custom_parameters>
			<description>
				<text>Paramètres de cycle spécial 20</text>
			</description>
		</drill_cycle_20_custom_parameters>
		<drill_cycle_descriptions>
			<simple_drill>
				<text>Perçage</text>
			</simple_drill>
			<peck_drill>
				<text>Débourrage</text>
			</peck_drill>
			<chip_break>
				<text>Brise copeaux</text>
			</chip_break>
			<tapping>
				<text>Taraudage</text>
			</tapping>
			<boring_1>
				<text>Alésage alesoir</text>
			</boring_1>
			<boring_2>
				<text>Alésage bare</text>
			</boring_2>
			<misc_drill_1>
				<text>""</text>
			</misc_drill_1>
			<misc_drill_2>
				<text>""</text>
			</misc_drill_2>
			<custom_drill_9>
				<text>""</text>
			</custom_drill_9>
			<custom_drill_10>
				<text>""</text>
			</custom_drill_10>
			<custom_drill_11>
				<text>""</text>
			</custom_drill_11>
			<custom_drill_12>
				<text>""</text>
			</custom_drill_12>
			<custom_drill_13>
				<text>""</text>
			</custom_drill_13>
			<custom_drill_14>
				<text>""</text>
			</custom_drill_14>
			<custom_drill_15>
				<text>""</text>
			</custom_drill_15>
			<custom_drill_16>
				<text>""</text>
			</custom_drill_16>
			<custom_drill_17>
				<text>""</text>
			</custom_drill_17>
			<custom_drill_18>
				<text>""</text>
			</custom_drill_18>
			<custom_drill_19>
				<text>""</text>
			</custom_drill_19>
			<custom_drill_20>
				<text>""</text>
			</custom_drill_20>
		</drill_cycle_descriptions>
		<canned_text>
			<canned_text_1>
				<text>""</text>
			</canned_text_1>
			<canned_text_2>
				<text>""</text>
			</canned_text_2>
			<canned_text_3>
				<text>""</text>
			</canned_text_3>
			<canned_text_4>
				<text>""</text>
			</canned_text_4>
			<canned_text_5>
				<text>""</text>
			</canned_text_5>
			<canned_text_6>
				<text>""</text>
			</canned_text_6>
			<canned_text_7>
				<text>""</text>
			</canned_text_7>
			<canned_text_8>
				<text>""</text>
			</canned_text_8>
			<canned_text_9>
				<text>""</text>
			</canned_text_9>
			<canned_text_10>
				<text>""</text>
			</canned_text_10>
		</canned_text>
		<tool_parameters>
			<head_number>
				<text>""</text>
			</head_number>
			<length_offset>
				<text>""</text>
			</length_offset>
			<diameter_offset>
				<text>""</text>
			</diameter_offset>
			<canned_text>
				<text>""</text>
			</canned_text>
		</tool_parameters>
	</control>
</mp_xml_post_text>
[CTRL_TEXT_XML_END]
