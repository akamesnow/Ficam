[POST_VERSION] #DO NOT MOVE OR ALTER THIS LINE# V24.00 P4 E1 W24.00 T1641996783 M24.00 I0 O10
# ----------------------------------------
# -   Post pro TOURNAGE MONO TOURELLE    -
# -      Bi BROCHE  avec AXE C et Y      -
# -     gestion du transfers             -
# -           Version 1.0                -
# ----------------------------------------
# -     MASTERCAM X2018     F.I.CAM         -
# ----------------------------------------
# - Realise le      : 30/05/2017  Par : CPR -
# - Pour la societe : generique fanuc      -
# - Armoire CN      : FANUC                -
# - Nom MACHINE     : FANUC    -

#region Code_M et G specifique
#---------- CODE M et G MACHINE -----------------

sFreinGaucheOn :"M70"
sFreinGaucheOff :"M71"
sFreinDroiteOn :"M250"
sFreinDroiteOff :"M251"

saxeCb1off : "M11"
saxeCb2off : "M281"
saxeCb1on : "M10"
saxeCb2on : "M280"
sG112 : "G12.1"
sannulG112 : "G13.1"
fmt "G112" 1 g112

#          M3 M4 TOURNAGE
sm01    : "M4"
sm02    : "M5"
sm03    : "M3"
sm04    : "M204"
sm05    : "M5"
sm06    : "M203"
spdlon : ""
spdlsel = fsg3(spdir$) + (3 * spindle_no$)
fstrsel  sm01 spdlsel spdlon 6 -1

#    M3 M4 FRAISAGE
sm11       : "M74"
sm12       : "M75"
sm13       : "M73"

sm14       : "M84"
sm15       : "M85"
sm16       : "M83"
spdlon_f : ""
spdlself = fsg3(spdir$) + (3 * spindle_no$)
fstrsel  sm11 spdlself spdlon_f 6 -1

sbroche00 : ""
sbroche01   : "" # broche gauche
sbroche02   : "" # broche droite
sbroche : ""
fstrsel  sbroche00 spindle_no$ sbroche 3 -1

sg00       : "G0"
sg01       : "G1"
sg02       : "G2"
sg03       : "G3"
sg04 : ""
sg05 : ""
sg06       : "G32"
sg07       : "G76"
sg08       : "G92"
sgcode : ""
fstrsel  sg00 gcode$ sgcode 9 -1

sgd00       : "G0"
sgd01       : "G1"
sgd02       : "G3"
sgd03       : "G2"
sgd04 : ""
sgd05 : ""
sgd06       : "G33"
sgd07       : "G76"
sgd08       : "G92"
sgcode_d : ""
fstrsel  sgd00 gcode$ sgcode_d 9 -1

# TYPES D4USINAGE
sty0    : "(FRAISAGE AXIAL)"
sty1    : "(FRAISAGE RADIAL POSITION)"
sty2    : "(FRAISAGE RADIAL DEVELOPPE)"
sty3    : "(TOURNAGE)"
stypeusi : ""
fstrsel  sty0 dessus stypeusi 4 -1
#------------------------------------------------
#endregion

#region commande de lub
plubrifon    # Mise en marche lubrifiant
    lubrif = coolant$
    if lubrif = 0, "M9", e$
    if lubrif = 1, "M8", e$
    if lubrif = 2, "M7", e$
    if lubrif = 3, "M8",e$
plubrifoff   # arret lubrifiant
    if lubrif <> 0 ,n$, "M9"
#endregion

#[STARTBIN]
#region FS
#-------------------------- DECLARATION DES FORMATS -----------------------
fs  1  1.3l
fs  2  1.3ln
fs  3  1 0
fs  4  1 0n
fs  5  4 0ln
fs  6  0 2t
fs  7  1.5t
fs  8  6 0ln
fs  9  4 0ln
#fs  10 1.2
#fs 11  2 0ln
fs 12  1.3ln
fs 13  1 3tn
fs 14  1 4tn
# pour filletages
fs 10  2 0ln
fs 11  0 3tn
fs 15  1 3tn
fs 16  1 3
fs 17  1 4tn
fs 18  1 5tn
fs 19  1 4tn
#--------------------------- AFFECTATION FORMATS ----------------------------
#endregion

#region declaration des variables
fmt "Vx=" 1 Vx
fmt "Vy=" 1 Vy
fmt "Vz=" 1 Vz
fmt 1 Lg_Vec
fmt "Z" 1 x_5X
fmt "Y" 1 y_5X
fmt "X" 1 z_5X
fmt "C" 1 C_5Xcal
fmt "C" 1 C_5X
fmt "C" 1 old_C_5Xcal
fmt "C" 1 delta_C
fmt 1 compt_tour
fmt 1 debut_5X
compt_tour : 0
debut_5X : yes$
fmt 1 depart_C5X
depart_C5X = -90
fmt 1 result
fmt 2 old_spdir_b
fmt  "X" 1 prof        #Variable utilisee pour ecrire la profondeur de pereage en pereage dessus
fmt  "X" 1 degagement  #Variable utilisee pour ecrire le degagement de pereage en pereage dessus
fmt  "R" 2 reference
fmt  "X" 2 gardedessus
fmt "Z" 1 depth_d
fmt "" 2 mode_tour
fmt "" 1 type_de_rotation
sLettreY : "Y"
sLettreC : "C"
fmt  "X" 2 xr$
fmt  "Y" 2 yr$
fmt  "Z" 2 zr$
fmt  "Z" 2 ztr
fmt  "X" 1 x$
fmt  "Y" 1 y$
fmt  "Z" 1 z$
fmt  "X" 1 prvx
fmt  "Y" 1 prvy
fmt  "Z" 1 prvz
fmt  "Z" 1 zt
fmt  "X" 2 xr2
fmt  "X" 1 x2
fmt  "X" 1 xrd
fmt  "X" 1 z_dev
fmt  "X" 1 zr_dev
fmt     1 xr_Bout
fmt     1 yr_Bout
fmt     1 zr_Bout
fmt  "X" 1 x_Bout
fmt  "X" 1 x_BoutY
fmt  "C" 1 y_Bout
fmt  "Z" 1 z_Bout
fmt  "X" 1 xh_Bout
fmt  "Y" 1 yh_Bout
fmt  "Z" 1 zh_Bout
fmt  "X" 1 xr_Bout_d
fmt  "Y" 1 yr_Bout_d
fmt  "Z" 1 zr_Bout_d
fmt  "X" 1 x_Bout_d
fmt  "C" 1 y_Bout_d
fmt  "Z" 1 z_Bout_d
fmt  "X" 1 xh_Bout_d
fmt  "Y" 1 yh_Bout_d
fmt  "Z" 1 zh_Bout_d
fmt  "X" 1 x_Bout_perce_d
fmt  "X" 1 x_Bout_perce
fmt  "Z" 2 xr_Dessus
fmt  "Y" 2 yr_Dessus
fmt  "X" 2 zr_Dessus
fmt  "Z" 1 x_Dessus
fmt  "Y" 1 y_Dessus
fmt  "X" 1 z_Dessus
fmt  "X" 2 xh$
fmt  "X" 2 xh2
fmt  "X" 2 xfin
fmt  "Z" 2 zh$
fmt  "Z" 2 zth
fmt  "Z" 2 zfin
fmt  "R" 2 arcrad$
fmt  "I" 2 i$
fmt  "K" 2 j$
fmt  "C" 1 axec
fmt  "C" 1 old_axec
fmt  "C" 1 axee
fmt  "C" 1 old_axee
fmt  "C" 1 Cr_pos
fmt  "C" 1 C_pos
fmt  "R" 2 rotaxis$
fmt  "R" 2 rotdia$
fmt  "N" 4 n$
fmt  "N" 4 num
num : 0
num = num + 10
fmt "G4U" 1 dwell$
fmt  "G" 4 cc$
fmt  "G" 4 old_cc
fmt  "G" 3 correc
fmt  "G" 4 old_correc
fmt     3 gcode$
fmt  "C" 4 coolant$
fmt     4 lubrif
fmt  "O"  5 progno$
fmt  "F" 1 fr_tour
fmt  "F" 1 fr$
fmt  "F" 1 fr_taraud
fmt  "F" 1 avance
fmt  "F" 1 avance1
fmt  "F" 1 avance_r
fmt  "F" 1 frplunge$
fmt  "G" 3 avtr
fmt     4 ss$
fmt     4 old_ss
fmt     4 old_spdir
fmt     4 chgoutil
fmt  "S" 4 Vcc
fmt  "S2=" 4 Vccf
fmt  "S2=" 4 Vccf1
fmt  "S" 4 maxss$
fmt  "S" 4 vitsdebut
fmt  "S" 4 speed_max
fmt  "S" 4 oldmaxss
fmt  "S" 4 vitchgt     #variable utilisee pour ecrire un G97 avec une vitesse pas trop ecartee de la vitesse constante au diam. d'attaque
fmt  "T" 4 t$
fmt     9 tloffno$
fmt     9 tlngno$
fmt     1 old_tloffno
fmt  "T" 9 outil_broche # numero outil en broche
fmt  "T" 9 old_outil_broche# memo numero outil en broche
fmt  "T" 9 annuloutil
fmt  "T" 9 firstannuloutil
fmt     4 first_tool$
fmt  "R " 12 tcr$
fmt "DIAM " 2 tldia$
fmt  "Op" 4 opcode$
fmt     2 dessus
fmt     2 old_dessus
fmt     1 broche
fmt     1 old_broche               # memo broche active
fmt     1 changement
fmt     1 frein
fmt     1 old_frein
#------- FILETAGES -----------
fmt    7 thdx1$     # ray majeur au z accostage
fmt    7 thdx2$     # ray mineur au z accostage
fmt    7 thdx3$     # ray mineur au z de fin
fmt    7 thdz1$     # z de debut filet
fmt    7 thdz2$     # z de fin filet (avec surusinage)
fmt    7 thdtaper$  # angle de filetage conique
fmt "P" 2 thddepth$
fmt "Q" 2 thdfirst$# 1ere passe
fmt "Q" 17 thdlast$ # derniere passe
fmt   11 nspring$   # nbr de passes a vide
fmt    7 thdzclr$   # garde d'approche en Z
fmt    7 thda1$     # angle de depat du filet
fmt    7 thda2$     # angle d'ouverture du filet
fmt "R" 2 thdfinish$# tol de finition
fmt    7 thdpulloff$    # degagenemt anticipe
fmt    7 thdangle$
fmt   10 thdang
fmt   10 thdpull
fmt "P" 10 passefinition
fmt   10 sortiefiltage
fmt   10 anglefilet
fmt "Q" 2 copeaumini
fmt "R" 2 lastpasse
#fmt X 2 diamfinal
fmt "Z" 1 longfilet
fmt "P" 2 hauteurfilet
fmt "Q" 2 firstpasse
#fmt F 1 pas
fmt  "Z" 1 zdeb
fmt  "Z" 1 ZAppTar
fmt  "X" 1 xdeb
fmt  "R" 1 cone
fmt   1 filetage
fmt "Z" 1 finitionfiletage
fmt  "R" 2  thdrdlt
fmt "Z" 2 initht$
fmt "Z" 2 refht$
fmt "Z" 1 depth$
fmt "Q" 4 peck1$ #13
fmt "H" 4 peck2$
fmt "F" 2 peckclr$
fmt "R" 2 retr$
fmt "P" 15 tempo
fmt "F" 1 pas
fmt "R" 1 garde
fmt "Z" 1 garde1
fmt "D" 1 garde2
fmt "S" 1 garde3
fmt "R" 1 gardeR
fmt     2 typecycle
fmt  "Z" 2 degageanticip
fmt  "F" 2 n_tap_thds$
fmt  "X" 2 diamajeur
fmt  "X" 2 gardefiletage
fmt  "F" 2 thdlead$
fmt  "X" 2 Diamfinal
fmt  "Z" 2 Zfinal
fmt "P" 10 Npasse
fmt "TXT" 1 texte         # flag pour ecrire des commentaire
fmt "REVERS" 1 reverse    # 0 pour broche gauche -1 pour droite
fmt "INVERSER" 1 inverser # 1 SI XCP + Z       -1 si xcp = -z
fmt     7 pi$
fmt     1 recul
fmt     1 contrepointe
fmt  "Z" 1 debcontrepointe
fmt  "Z" 1 fincontrepointe
fmt  "Z" 1 stck_final_z$
fmt  "Z" 1 stck_init_z$
fmt  "Z" 1 tlstck_on$
fmt     1 avancebrut
fmt     1 m10
fmt     1 g80             #variable utilisee pour ecrire (debourrage et taraudage) ou non (brise-copeaux) le G80 de fin
fmt  "G" 4 workofs$
fmt  "G" 4 oldworkofs
fmt  "X" 1 xdegage
fmt  "Z" 1 zdegage
fmt  "X" 1 oldxdegage
fmt  "Z" 1 oldzdegage
fmt     1  transfertbroche
fmt  "B" 1 stck_chuk_end_dz$
fmt   "T" 9 miscops_mi1$
fmt   "T" 9 outillibre
fmt   "B" 1 approche
fmt  "B-/////" 1 miscops_mr1$
fmt  "B-/////" 1 miscops_mr2$
fmt    1 calcul
fmt    1 transfer
fmt    1 chuck
fmt    1 z_pricepiece
fmt "B"  2 z_arrive
fmt "B"  2 z_b_end
fmt "" 1 old_opid
		 old_opid : 0
# -------------- DIVRES ---------------------
svide : ""       # strig vide
space : " "   # pour ajouter un espace
sinsert : ""     # strinq pour recup de la desi de plaquette
scorps : ""      # string pour recup desi de porte outil
snomoutil : ""   # string pour recup du nom d'outil
sletre_P : "P"
sletre_S : "S"
serreure : "Rotation interdite"

#endregion

#region pprep
spaspay_ : "Contact F.i.cam for this problem at +33 2 37 26 28 10."
#CNC<<ORIGINAL>>spaspayé : "Contact F.i.cam for this problem at +33 2 37 26 28 10."
#CNC<<MSG-ERREUR(376)>> Caractères incorrects rencontrés
pprep$
pheader$
    pheader_star
#endregion
#[ENDBIN]
#region question
speed_max : 500   # Maximum spindle speed? 3000
fq 1 speed_max "Vitesse de broche maxi pour //scomm0$//"

fq 3 workofs$ "ATTENTION !!!!!! PAS D'ORIGINE DECLAREE !!!!!! NOUVELLE ORIGINE POUR //t$//"


fq 10 vtol$ "TOLERANCE CORDALE POUR LES ARCS AVEC //t$//"
fq 11 xdegage "X de degagement"

zdegage : 350
fq 12 zdegage "Z de degagement"
#endregion

#region valeur_par default
fastmode$  : 1
bug1$      : 2         # 1 = Output post to screen - 2 = output leader to screen
bug4$      : 0         # Add -.nci line no. to each line? yes/no
whatno$    : yes$       # Ignore whatline branches to plin1 etc.?
linktolvar$    : 1     #Associer les variables de tolerance X aux variables V9-
linkplnvar$    : 1     #Associer les variables specifiques plan X aux variables V9-?
linklvar$      : 1     #Associer les variables specifiques X Tournage aux variables V9-
cant_tlchng$   : 1     #Ignorer entree de texte programme au changement avec tlchng_aft?
newglobal$     : 0     #Activer la verification d'erreur pour les variables globales?
rotaxtyp$  : 3
omitseq$   : 1        # ne pas numeroter les lignes
texte     : 1        # autorise les comentaires
rotdia$  : 99
get_1004$   : 1     #Find gcode 1004 with getnextop?
skp_lead_flgs$ : 1   #Do not use v9 style contour flags
rpd_typ_v7$ : 1     #Use Version 7 style contour flags?
lathe      : 1
spaces$    : 1
seqmax$    : 9999   # Max. sequence no.
seqout    : yes$    # Output sequence no.?
frrapid   : 300    # Rapid feedrate? 300.0
frmax     : 300    # Maximum feedrate? 300.0
breakarcs$ : 2      #Break arcs, 0 = no, 1 = quadrants, 2 = 180deg. max arcs
do_full_arc$ : 0     #Allow full circle output? 0=no, 1=yes
helix_arc$   : 1     #Support helix arc output, 0=no, 1=all planes, 2=XY plane only
arctype$   : 4      # Arc center 1=abs, 2=inc, 3=st-cen, 4=unsigned inc.
ncldr$     : 20     # No. of leader characters
ldrcode$   : 65     # Leader character dec. equiv.
bldnxtool$ : yes$
tooltable$ : yes$     # Build tool table
subprg$    : 1
auxprg$    : 1
extprg$    : 1
mergesub$  : 1
mergeaux$  : 1
mergext   : 1
progname$  : 1
strtool_v7$: 2
vtol$      : 0.01
old_ss    : 0     # variable de test de changement de vitesse pour chg outil nul TT
zt : 9999
avance_r  : 7500  # avance rapide de fraisage en bout
scomm0$ : ""
oldmaxss  : 0
g80 : 0             #variable utilisee pour ecrire (debourrage) ou non (brise-copeaux) le G80 de fin
pl_ax_m0x   : 1
pl_ax_m0y   : 1
pl_ax_m0z   : 1
pl_ax_m1x   : 1
pl_ax_m1y   : 1
pl_ax_m1z   : 1
pl_ax_m2x   : 1
pl_ax_m2y   : 1
pl_ax_m2z   : 1
nstart_cnt  : 0     #Counter for multiple threads
thd_vlen    : 0     #Incremental X move for G76 mult starts
xmaj_thd    : 0     #X major dia. from parameters
zstrt_thd   : 0     #Z start from parameters
zend_thd    : 0     #Z end from parameters
face_thd    : 0     #Face thread from parameters
calcul : 0
transfer : 0
chuck : 0
z_pricepiece = stck_chuk_st_z$
z_b_end = stck_chuk_end_z$
sort_ltchg : no$
sort_transfer : no$
tirage : no$
vitOn : no$
#endregion

#region calcul des axes
xr2       = xr$ * 2
x2        = x$  * 2
xh2       = xh$ * 2
zt         = z$
ztr        = zr$
zth        = zh$
reverse = (spindle_no$ * -2) + 1
xr_Bout   = xr$  * 2 * reverse #
yr_Bout   = yr$
zr_Bout   = zr$
x_Bout    = x$ * reverse # * 2 
y_Bout    = y$
z_Bout    = z$
xh_Bout   = xh$  * 2 * reverse #
yh_Bout   = yh$
zh_Bout   = zh$
x_Bout_perce = (sqrt ((abs(x$)^2)+(abs(y$)^2)))* 2
x_Dessus_perce  = x$  #* reverse * inverser
xr_Bout_d   = xr$ * 2 * reverse #
yr_Bout_d   = yr$ * -1
zr_Bout_d   = zr$ *  -1
x_Bout_d   = x$ * 2 * reverse #
y_Bout_d    = y$ * -1
z_Bout_d    = z$ *  -1
xh_Bout_d   = xh$ * 2 * reverse #
yh_Bout_d   = yh$ * -1
zh_Bout_d   = zh$ *  -1
x_Bout_perce_d = (sqrt ((abs(x$)^2)+(abs(y$)^2)))* 2
xr_Dessus = xr$ #* reverse * inverser
yr_Dessus = yr$ *   -1
zr_Dessus = zr$ * 2
x_Dessus  = x$ * reverse * inverser
y_Dessus  = y$  *   -1
z_Dessus  = z$  * 2
zr_dev    = zr$ * 2 #+ rotdia
z_dev     = z$  * 2 + rotdia$
C_pos     = (y$ * 360 / (pi$ * rotdia$))
prof = depth$ *2
degagement = initht$ *2
reference = refht$ *2
pcalpmx
    Vx = u$ - x$
    Vy = v$ - y$
    Vz = w$ - z$
    Lg_Vec = sqrt(Vx^2 + Vy^2 + Vz^2)
    if Lg_Vec = 0 , Lg_Vec = 1
    Vx = Vx / Lg_Vec
    Vy = Vy / Lg_Vec
    Vz = Vz / Lg_Vec
    C_5Xcal = atan2(Vz,Vy)
    delta_C = old_C_5Xcal - C_5Xcal
    if abs(delta_C) >= 180,
    [
        if delta_C > 0, compt_tour = compt_tour +1
        if delta_C < 0, compt_tour = compt_tour -1
    ]
    C_5X = C_5Xcal + (360 * compt_tour)
    x_5X = x$
    y_5X = z$ * sin(C_5Xcal + depart_C5X) + y$ * cos(C_5Xcal+ depart_C5X)
    z_5X = (z$ * cos(C_5Xcal + depart_C5X) - y$ * sin(C_5Xcal+ depart_C5X)) *2
    if Vx <> 0,
    [
        result = mprint(serreure,1)
        "impossible d atteindre le vecteur de rotation",e$
        exitpost$
    ]
    old_C_5Xcal = C_5Xcal
#endregion

#region  pparam
pparameter$
    #~prmcode$, "=", sparameter$, e$        # pour afficher tous les parametres
    if prmcode$ = 20103, sinsert = sparameter$
    if prmcode$ = 15351, type_de_rotation = rpar(sparameter$, 1) #2 = axe y et 3 = axe C
#endregion

#region degagement au changement outil
pchgt_outil_fin
    n$, "G0 G30 U0. V0. W0.", e$
    chgoutil = 1
pchgt_outil  # POINT DE CHG OUTIL
    #if transfer = 4 , n$, "M40", e$, #n$, "G0 G30 B0", e$
    n$, "G0 G30 U0. V0. W0.", e$
    chgoutil = 1
    if changement = 1,
    [
        zfin = zth
        changement = 2
    ]
pchgt_outil1  # POINT DE CHG OUTIL
    n$, "G0 G30", "U0. V0. W0.", e$
#endregion

#region commentaire et liste outil
pwrtt$      #  Liste outils
    # if texte = 0, ex$
    #  strtool$ = ucase (strtool$)
    # if t$ > 0 & tldia$ > 0, n$, "(", t$, strtool$, tldia$,")",e$
    # if t$ > 0 & tldia$ = 0, n$, "(", t$, strtool$, tcr$, ")",e$
pscomm0$     # pre commentaire

pcomment$     # Commentaires
    scomm$ = ucase (scomm$)
    if gcode$ = 1006 & texte = 1, n$, scomm$, e$
    if gcode$ = 1005 & texte = 1, "(", scomm$, ")", e$
    if gcode$ = 1007 & texte = 1, "(", scomm$, ")", e$
    if gcode$ = 1008 & texte = 1, "(", scomm$, ")", e$
#endregion

#region gestion de l avance
pfr_tournage # Ecriture avances tournage
    fr_tour = abs(fr$)
    if chgoutil = 1, pavtr, *fr_tour
    pavtr, fr_tour
    chgoutil = 0
pfr_fraisage # Ecriture avances fraisage
    avance = fr_pos$
    avance
pfr_fraisage1 # Avance cycle
    avance1 = frplunge$
    *avance1
#endregion

#region correction de rayon
pcord_tour     # Correction armoire pour tournage
    if cc$ = 41 , correc = 41
    if cc$ = 42 , correc = 42
    if cc$ = 140, correc = 40
    old_cc = correc
pcord_fraisage
    if cc$ = 41, cc$
    if cc$ = 42, cc$
    if cc$ = 140, "G40"
#endregion

#region transfert/lunette/pointe
ptransfertbrut
       "on y passe 1",e$
pavancebrut

pstck_trans$    #deuxieme broche

pstck_flip$     # retourner le brut

pstck_bar_fd$   # Avance du brut

psteadyrest$  # Lunette

#----------------------------TRANSFER---------------------------
pchuck$    # mors

    if chuck = 0 , # remet l outil au origine et eteint broche
    [
        if sort_ltchg = no$ ,
        [
            n$ , "G0 G30 U0 W0",e$
            #n$ , "G0 G30 V0",e$
        ]
        if  spindle_no$ = 0 & dessus = 3 , n$ , "M5",e$
        if  spindle_no$ = 1 & dessus = 3 , n$ , "M5",e$
        if  dessus <> 3 , n$ , "M5",e$
        plubrifoff ,e$
        " " ,e$
        "(PASSAGE DE LA PIECE EN CONTRE BROCHE)" ,e$
        sort_ltchg = no$
    ]
    if chuck = 1 , #preparre la machine au transfert et prepositionne la broche
    [
        #n$, "G59",e$
        n$, "M478 M18" ,e$
        n$, "M211" ,e$
        n$, "G4 U0.5",e$
        n$, "M96" ,e$
        n$, "M34",e$
        n$, "G97 S300", *spdlon, e$
        n$, "M54" ,e$
        n$, "G0", *z_b_end , e$
        sort_transfer = yes$
    ]
    if chuck = 2 , #active le controle d effort et ammene la broche en position de serrage
    [
        n$ , "G1 G98" ,*z_b_end ,"F500" ,e$
        n$, "M9" ,e$
    ]
    if chuck = 3 , #ferme mandrin droite et ouvre mandrin gauche
    [
        n$, "M59" ,e$
        n$, "M210" ,e$
        n$, "G4 U0.5",e$
        if opcode$ <> 106, # SIMPLE transferts
        [
            n$, "M11" ,e$
            n$ ,"G4 U0.5", e$
        ]
        else , vitOn = yes$
    ]
    if chuck = 4 , #retour broche en position origine
    [
        if opcode$ <> 106, # pas de tirage
        [
            sort_transfer = yes$
            tirage = no$
        ]
        else,
        [
            n$, "M11" ,e$
            n$ ,"G4 U0.5", e$
            sort_transfer = yes$
            tirage = yes$
        ]
    ]
    if chuck = 5 , #retour broche en position origine
    [

        if tirage, # pas de tirage
        [
            n$ , "G1" ,*z_b_end ,"F500" ,e$
            n$, "M10" ,e$
            n$ ,"G4 U0.5", e$
        ]
    ]
    chuck = chuck + 1
#----------------------------Contre pointe---------------------------
ptailstock$ # Contre pointe
    #  tlstck_on, stck_init_z, stck_final_z
    contrepointe = 1
    if tlstck_on$ = 0,
    [
        recul = 0, e$
        debcontrepointe = stck_init_z$, e$
        fincontrepointe = stck_final_z$, e$
    ]
    if tlstck_on$ = 1,
    [
        recul = 1, e$
        debcontrepointe = stck_init_z$, e$
        fincontrepointe = stck_final_z$, e$
    ]
pcontrepointe
    if recul = 0 , "M27 (RECUL CONTREPOINTE)", e$
    if recul = 1 , "M26 (AVANCE CONTREPOINTE)", e$
    contrepointe = 2
#endregion

#region vitesse de rotation
pvits       # Selection du type de mode de vitesse de broche
    if ss$ > 0, pvitmin
    if ss$ < 0, pvitVcc
pvitmin         # Vitesse en tours/minute G97
    old_ss = ss$
    old_spdir = spdir$
    Vcc = abs(ss$)
    "G97", Vcc, *spdlon, e$
pvitVcc         # Vitesse en coupe constante G96
    old_ss = ss$
    old_spdir = spdir$
    Vcc = abs(ss$)
    "G96", Vcc, *spdlon, e$
pavtr           # Mode d'avance en tour mm/mn ou mm /tr  G98 G99
    if fr$ > 0, avtr = 94
    if fr$ < 0, avtr = 95
    avtr
pvitsdebut
    @ss$
    @x2
    if ss$ < 0,
    [
        Vcc = abs(ss$)
        !x2
        if x2 > 0, vitsdebut = ((1000 * Vcc) / (3.1416 * x2))
        if x2 <=0, vitsdebut = speed_max
        if vitsdebut > speed_max, vitsdebut = speed_max
        n$, "G97", *vitsdebut, *spdlon, e$
    ]
#endregion

#region gestion de l axe C
prot0$
prot$
prot_calc_cote
    axec = atan2(m3$,m2$)
prot_calc_cote_d
    axee = atan2(m3$,m2$)
prot_affich_nul_cote
    @axec, @old_axec, e$
    if axec <> old_axec, n$, *axec, e$
    old_axec = axec
prot_affich_nul_cote_d
    @axee, @old_axee
    if axee <> old_axee, n$, *axee, e$
    old_axee = axee
prot_calc       # Calcul de l'angle de rotation du mandrin axe C
    if spindle_no$ = 0,
    [
        axec = atan2(m8$,m9$)*  -1+90
        if abs(axec) > 180, axec = axec + 360
    ]
    if spindle_no$ = 1,
    [
        axee = atan2(m8$,-m9$)*  -1+90
        if abs(axec) > 180, axee = axee + 360
    ]
prot_affich_T   # Affichage de la rotation du mandrin au changements d'outils
    frein = 3
    if spindle_no$ = 0,
    [
        pgerefrein
        n$, *axec, e$
        old_axec = axec
    ]
    if spindle_no$ = 1,
    [
        pgerefrein
        n$, *axee, e$
        old_axee = axee
    ]
prot_affich_nul # Affichage de la rotation du mandrin au changements d'outils
    if spindle_no$ = 0,
    [
        @old_axec, @axec, e$
        if axec <> old_axec, frein = 3, pgerefrein, n$, *axec, e$, frein = 1, pgerefrein
        old_axec = axec
    ]
    if spindle_no$ = 1,
    [
        @old_axee, @axee, e$
        if axee <> old_axee, frein = 3, pgerefrein, n$, *axee, e$, frein = 1, pgerefrein
        old_axee = axee
    ]
#endregion

#region gestion des frein d axe C
pgerefrein
    #"voir" ,*frein "et" , *old_frein ,e$
    if frein <> old_frein,
    [
        if spindle_no$ = 0 & frein = 1, n$, sFreinGaucheOn, e$
        if spindle_no$ = 1 & frein = 1, n$, sFreinDroiteOn, e$
        if spindle_no$ = 0 & frein = 3, n$, sFreinGaucheOff, e$
        if spindle_no$ = 1 & frein = 3, n$, sFreinDroiteOff, e$
    ]
    old_frein = frein
#endregion

#region gestion de l origine
poriusi
    if workofs$ < 54, workofs$ = 54
    n$, *workofs$
    oldworkofs = workofs$
poriusinul
    if workofs$ < 54, workofs$ = 54
    if oldworkofs <> workofs$, n$, workofs$
    oldworkofs = workofs$
#endregion

#region affichage de l outil
p_Calc_num_outil    #Calcul du numero d'outil en fonction du numero outil correcteur et broche
    snomoutil = ucase (strtool$)
    sinsert = ucase (sinsert)
    scorps = ucase (scorps)
    annuloutil = t$ * 100
    if spindle_no$ = 0, outil_broche = t$ * 100 + tloffno$
     if spindle_no$ = 1, outil_broche = t$ * 100 + tloffno$     #tlngno$
p_Calc_num_outil1   #Calcul du numero d'outil en fonction du numero outil correcteur et broche
    snomoutil = ucase (strtool$)
    sinsert = ucase (sinsert)
    scorps = ucase (scorps)
    annuloutil = t$ * 100
    if spindle_no$ = 0, outil_broche = t$ * 100 + tloffno$ #+ t$
    if spindle_no$ = 1, outil_broche = t$ * 100 + tloffno$ #+ 20 + t$
p_Outil         # affichage de l'outil
	pchgt_outil
    if broche = 0, n$, outil_broche, "G54", e$
    if broche = 1, n$, outil_broche, "G55", e$
    if snomoutil <> svide, n$, "(", snomoutil, ")", e$
    if sinsert <> svide, n$, "(", "PLAQUETTE", sinsert ")", e$
    if scorps <> svide, n$, "(", "SUPPORT", scorps ")", e$
    pchgt_outil_fin
    snomoutil = svide
    sinsert = svide
    scorps = svide
    old_outil_broche = outil_broche - tloffno$
p_Outil1            # affichage de l'outil
	pchgt_outil
    if broche = 0, n$, outil_broche, "G54", e$
    if broche = 1, n$, outil_broche, "G55", e$
    if snomoutil <> svide, n$, "(", snomoutil, ")", e$
    if sinsert <> svide, n$, "(", "PLAQUETTE", sinsert ")", e$
    if scorps <> svide, n$, "(", "SUPPORT", scorps ")", e$
    pchgt_outil_fin
    snomoutil = svide
    sinsert = svide
    scorps = svide
    old_outil_broche = outil_broche - t$
#endregion

#region choix du type d usinage
ptype_usi     # choix du mode d'usinage courant
    dessus = 0
    if m2$ = 1,  dessus = 0                      # fraisage en bout broche gauche
    if m2$ = -1, dessus = 0                      # fraisage en bout broche droite
    if m1$ = 1 & rotaxis$ = 0, dessus = 1 ,spdir$ = spdir$ #*-1       # fraisage vertical
    if m1$ = -1 & rotaxis$ = 0, dessus = 1 ,spdir$ = spdir$ #*-1       # fraisage vertical
    if m1$ = 1 & rotaxis$ = 2, dessus = 2 ,spdir$ = spdir$# *-1       # fraisage vertical en developpe
    if m1$ = -1 & rotaxis$ = 2, dessus = 2  ,spdir$ = spdir$ #*-1      # fraisage vertical en developpe
    if m1$ = -1 & opcode$ <=99, inverser =   -1  # pour fraisage vertical
    if m1$ = 1 & opcode$ <=99, inverser = 1
    if opcode$ > 99         , dessus = 3         # tournage
    if (dessus = 0) | (dessus = 1) | (dessus = 2), pusecanmill
    if (dessus = 3)                              , pusecanlathe
    !reverse
    #"--------------(", *spindle_no$, *dessus,  *m1, *m2, *reverse,")",  e$
#endregion

#region appel_outil suivant le type d usinage
p_Appel_T_T  # Appel outil de tournage
    x$ = xr$
    z$ = zr$
    avtr = 0
    !avtr
    if omitseq$ = 1, num, e$
    n$, stypeusi, e$
    comment$
    Vcc = abs(ss$)
    p_Calc_num_outil
    p_Outil
	n$, "G92" , maxss$, "(VITESSE DE BROCHE MAXI)", e$   
    n$, "G0", pavtr, "G18", e$
    n$ , *sbroche,e$
    if broche = 0,  n$, saxeCb1off, e$ # activation mode tournage
    if broche = 1,  n$, saxeCb2off, e$ # activation mode tournage
    gcode$ = 0
    if ss$ < 0,  pvitsdebut
    else , pvits
    n$, *sgcode, *x2, *zt, !xr$, !zr$,!x$, !z$,  plubrifon, e$
    if ss$ < 0,  pvits
    pcord_tour
    old_broche = broche
    old_tloffno = tloffno$
p_Appel_T_B # Appel outil de fraisage en bout (DESSUS = 0)
    gcode$ = 0
    fr$ = avance_r
    x$ = xr$
    z$ = zr$
    y$ = yr$
    avtr = 0
    !avtr
    if omitseq$ = 1, num, e$
    n$, stypeusi, e$
    comment$
    Vcc = abs(ss$)
    p_Calc_num_outil1   # Calcul du numero d'outil en fonction du numero outil correcteur et broche
    p_Outil1            # affichage de l'outil
    frein = 3           # frein debloque
    n$, "G0", "G17 G94 ", e$
    n$ , *sbroche,e$
    if broche = 0, n$, saxeCb1on, "(ACTIVATION DE LAXE C)", e$, pgerefrein, n$, "G0 G28 C0", e$
    if broche = 1, n$, saxeCb2on, "(ACTIVATION DE LAXE C)", e$
    @tool_typ$
    Vccf1 = abs(ss$)
	#spindle_no$ = 1, n$, "G97", *Vccf1, "M84", e$
	n$, "G97", *Vccf1, *spdlon_f, e$
    if opcode$ <> 3 & spindle_no$ = 0,
    [
        if type_de_rotation = 3 ,
        [
            g112 = 1, e$
			linarc$ = 0
            prot_calc_cote
            n$, *sgcode, *axec, e$
            frein = 3   # frein debloque
            pgerefrein
            old_axec = axec
            n$, *sgcode, *z_Bout, "Y0",!z$, plubrifon, e$
            n$, sG112, "(MODE POLAIRE XC)", e$
        ]
        else ,
        [
            g112 = 0, e$
            prot_calc_cote
             n$, *sgcode, *axec, e$
            frein = 3   # frein debloque
            pgerefrein
			n$, sFreinGaucheOn, e$
              old_axec = axec
            n$, *sgcode, *z_Bout, !z$, plubrifon, e$
        ]
    ]
    if opcode$ <> 3 & spindle_no$ = 1,
    [
        if type_de_rotation = 3 ,
        [
            g112 = 1, e$
			linarc$ = 1
            prot_calc_cote_d
            n$, *sgcode, *axee, e$
            frein = 3   # frein debloque
            pgerefrein
            old_axee = axee
            n$, *sgcode, *z_Bout_d, !z$, plubrifon, e$
            n$, sG112, "(MODE POLAIRE XC)", e$
        ]
        else ,
        [
            g112 = 0, e$
            prot_calc_cote
            n$, *sgcode, *axec, e$
            frein = 3   # frein debloque
            pgerefrein
            old_axec = axec
            n$, *sgcode, *z_Bout, !z$, plubrifon, e$
        ]
    ]
    if opcode$  = 3 & spindle_no$ = 0,
    [
        g112 = 2, e$          # en percage G1 G0
        axec = atan2(y$,x$), e$
        if axec > 180 , axec = axec - 360
        old_axec = axec
         n$, *sgcode, *x_Bout_perce, !y_Bout, *z_Bout, *axec, !x$, !y$, !z$, plubrifon, e$
    ]
    if opcode$  = 3 & spindle_no$ = 1,
    [
        g112 = 2, e$          # en percage G1 G0
        axee = atan2(y$,x$), e$
        if axee > 180 , axee = axee - 360
        old_axee = axee
        n$, *sgcode, *x_Bout_perce_d, !y_Bout_d, *z_Bout_d, *axee, !x$, !y$, !z$, plubrifon, e$
    ]
    old_broche = broche
    old_tloffno = tloffno$
p_Appel_T_D # Appel outil de fraisage dessus (DESSUS = 1)
    gcode$ = 0
    x$ = xr$
    z$ = zr$
    y$ = yr$
    avtr = 0
    !avtr
    if omitseq$ = 1, num, e$
    n$, stypeusi, e$
    comment$
    Vcc = abs(ss$)
    p_Calc_num_outil1   # Calcul du numero d'outil en fonction du numero outil correcteur et broche
    p_Outil1            # affichage de l'outil
    frein = 3 # frein debloque
    n$, "G0", "G19 G94", e$
    n$ , *sbroche,e$
    if broche = 0,
    [
        n$, saxeCb1on, "(ACTIVATION DE LAXE C)", e$
        pgerefrein
        n$, "G0 G28 C0", e$
    ]
    if broche = 1,
    [
        n$, saxeCb2on, "(ACTIVATION DE LAXE C)", e$
        pgerefrein
        n$, "G0 G28 C0", e$
    ]
    Vccf = abs(ss$)
    Vccf1 = abs(Vccf)
    if tool_typ$ = 4 | tool_typ$ = 5 ,
    [
        n$, "G97", e$
    ]
    else,
    [
        n$, "G97", Vccf1, *spdlon_f, e$
    ]
    if nextop$ <> 11,
    [
        prot_calc
        prot_affich_T
        frein = 1   # frein fort
        pgerefrein
        n$, *sgcode, *x_Dessus, *y_Dessus,!x$, !y$, e$   #y_Dessus,
        n$,  sgcode, *z_Dessus, plubrifon, !z$, e$
    ]
    old_broche = broche
    old_tloffno = tloffno$

p_Appel_T_Dev # Appel outil de fraisage en developpe (DESSUS = 2)
    q10
    linarc$ = 1
    gcode$ = 0
    x$ = xr$
    z$ = zr$
    y$ = yr$
    avtr = 0
    !avtr
    if omitseq$ = 1, num, e$
    n$, stypeusi, e$
    comment$
    Vcc = abs(ss$)
    p_Calc_num_outil1   # Calcul du numero d'outil en fonction du numero outil correcteur et broche
    p_Outil1            # affichage de l'outil
    n$, "G0", "G19 G94", e$
    frein = 3 # frein debloque
    n$ , *sbroche,e$
    if broche = 0,
    [
        n$, saxeCb1on, "(ACTIVATION DE LAXE C)", e$
        pgerefrein
        n$, "G0 G28 C0", e$
    ]
    if broche = 1,
    [
        n$, saxeCb2on, "(ACTIVATION DE LAXE C)", e$
        pgerefrein
        n$, "G0 G28 C0", e$
    ]
    Vccf = abs(ss$)
    Vccf1 = abs(Vccf)
    n$, "G97", Vccf1, *spdlon_f, e$
    frein = 3 # frein debloque
    pgerefrein
    n$, *sgcode, *x_Dessus, "Y0", *C_pos, e$
    n$, sgcode, *z_dev, plubrifon,  e$
    frein = 3 # fein faible
    pgerefrein
    !x$, !y$, !z$
    old_broche = broche
    old_tloffno = tloffno$
#endregion

#region transition entre les types d usinage
pBB     # bout vers bout
    PBT
PBT     # Bout vers tour
    if g112 = 1,
    [
        n$, sannulG112, "(ANNULATION DU G112)", e$
        g112 = 0
        frein = 3   # frein debloque
        pgerefrein
        n$, "G0", "C0", "(REMISE EN POSITION C0)", e$
    ]
    plubrifoff, e$
    spdlself = 2
    n$, "M75", "(ARRET BROCHE OUTIL TOURNANT)", e$
    frein = 3   # frein debloque
    pgerefrein
    n$, "G0 G28 C0.", e$
    n$ , *sbroche,e$
    if broche = 0, n$, saxeCb1off, "(DESACTIVER LAXE C)", e$
    if broche = 1, n$, saxeCb2off, "(DESACTIVER LAXE C)", e$
    pchgt_outil, e$
    n$, "M01", e$
pBD     # Bout vers dessus
    PBT
pBDev   # Bout vers developpe
    PBT
pDD     # Dessus vers dessus
    pDT
pDT     # Dessus vers tour
    gcode$=0
    frein = 3   # frein debloque
    pgerefrein
    n$, *sgcode, "C0", "(REMISE EN POSITION C0)", e$
    plubrifoff, e$
    spdlself = 2
    n$, "M75", "(ARRET BROCHE OUTIL TOURNANT)", e$
    n$, "G0 G28 C0.", e$
    n$ , *sbroche,e$
    if broche = 0, n$, saxeCb1off, "(DESACTIVER LAXE C)", e$
    if broche = 1, n$, saxeCb2off, "(DESACTIVER LAXE C)", e$
    pchgt_outil, e$
    n$, "M01", e$
pDB     # Dessus vers bout
    pDT
pDDev   # Dessus vers developpe
    pDT
pDevD   # Developpe vers dessus
    pDevT
pDevT   # Developpe vers tour
    gcode$=0
    frein = 3   # frein debloque
    pgerefrein
    n$, *sgcode, "C0", "(REMISE EN POSITION C0)", e$
    plubrifoff, e$
    spdlself = 2
    n$, "M75", "(ARRET BROCHE OUTIL TOURNANT)", e$
    n$, "G0 G28 C0.", e$
    n$ , *sbroche, e$
    if broche = 0, n$, saxeCb1off, "(DESACTIVER LAXE C)", e$
    if broche = 1, n$, saxeCb2off, "(DESACTIVER LAXE C)", e$
    pchgt_outil, e$
    n$, "M01", e$
pDevB   # Developpe vers bout
    pDevT
pDevDev # Developpe vers developpe
    pDevT
pTB     # Tour vers bout
    if (old_cc = 41 | old_cc = 42), n$, "G40", e$
    gcode$ = 0
    plubrifoff, e$
    "G97 S300", e$
    pchgt_outil
    if old_broche = 0, n$, "M5", "(ARRET BROCHE GAUCHE)", e$
    if old_broche = 1, n$, "M5", "(ARRET BROCHE DROITE)", e$
    n$, "M01", e$
pTD     # Tour vers dessus
    pTB
pTDev   # Tour vers developpe
    pTB
pTT     # Tour vers tour
    if (old_cc = 41 | old_cc = 42), correc = 40
    if (old_cc = 41 | old_cc = 42), n$, correc, e$
    pcord_tour
    plubrifoff, e$
    gcode$ = 0
      @spdir$
    if old_broche = 0 & old_spdir <> spdir$, n$, "M5", "(ARRET BROCHE GAUCHE)", e$
    if old_broche = 1 & old_spdir <> spdir$, n$, "M5", "(ARRET BROCHE DROITE)", e$
    pchgt_outil
     n$, "M01", e$
#======= TRANSITIONS ENTRE TYPES D'USINAGES POUR CHGT D'OUTILS NULS ==========
pBB_nul     # bout vers bout
	gcode$ = 0
		if g112 = 1 & type_de_rotation <> 3,
		[
			linarc$ = 0
			n$, sannulG112, "(ANNULATION DU G112)", e$
			g112 = 0
		]
    p_Calc_num_outil                # Calcul du numero d'outil en fonction du numero outil correcteur et broche
	if spindle_no$ = 0 & type_de_rotation = 2,
    [
        prot_calc_cote
		if axec <> old_axec,
		[
			n$, sFreinGaucheOff, e$
        	prot_affich_nul_cote
			n$, sFreinGaucheOn, e$
		]
    ]
    if spindle_no$ = 1,
    [
        prot_calc_cote_d
        prot_affich_nul_cote_d
    ]
pBT_nul     # Bout vers tour
pBD_nul     # Bout vers dessus
pBDev_nul   # Bout vers developpe
pDD_nul     # Dessus vers dessus
    gcode$ = 0
    p_Calc_num_outil                # Calcul du numero d'outil en fonction du numero outil correcteur et broche
    prot_calc
    prot_affich_nul
pDT_nul     # Dessus vers tour
pDB_nul     # Dessus vers bout
pDDev_nul   # Dessus vers developpe
    gcode$ = 0
    p_Calc_num_outil                # Calcul du numero d'outil en fonction du numero outil correcteur et broche
    if outil_broche <> old_outil_broche, p_Outil1   # Affichage de l'outil
    prot_calc
    prot_affich_nul
pDevD_nul   # Developpe vers dessus
    gcode$ = 0
    p_Calc_num_outil                # Calcul du numero d'outil en fonction du numero outil correcteur et broche
    #if outil_broche <> old_outil_broche, p_Outil1   # Affichage de l'outil
    prot_calc
    prot_affich_nul
pDevT_nul   # Developpe vers tour
pDevB_nul   # Developpe vers bout
pDevDev_nul # Developpe vers developpe
    p_Calc_num_outil                # Calcul du numero d'outil en fonction du numero outil correcteur et broche
    #if outil_broche <> old_outil_broche, p_Outil1   # Affichage de l'outil
    linarc$ = 1
pTT_nul     # Tour vers tour
    if (old_cc <> 0), correc = 40
    if (old_cc <> 0), n$, correc, e$
    if texte = 1, comment$
    pcord_tour
    p_Calc_num_outil                # Calcul du numero d'outil en fonction du numero outil correcteur et broche
    if ss$ <> old_ss, pvits
    if old_spdir <> spdir$, pvits
pTB_nul     # Tour vers bout
pTD_nul     # Tour vers dessus
pTDev_nul   # Tour vers developpe
#=========== CHOIX DES MODES DE TRANSITION ========================
p_transition  # choix du mode de transition entre deux usinages
    if old_dessus = 0 & dessus = 0  , pBB
    if old_dessus = 0 & dessus = 3  , PBT
    if old_dessus = 0 & dessus = 1  , pBD
    if old_dessus = 0 & dessus = 2  , pBDev
    if old_dessus = 1 & dessus = 1  , pDD
    if old_dessus = 1 & dessus = 3  , pDT
    if old_dessus = 1 & dessus = 0  , pDB
    if old_dessus = 1 & dessus = 2  , pDDev
    if old_dessus = 2 & dessus = 1  , pDevD
    if old_dessus = 2 & dessus = 3  , pDevT
    if old_dessus = 2 & dessus = 0  , pDevB
    if old_dessus = 2 & dessus = 2  , pDevDev
     if old_dessus = 3 & dessus = 3  , pTT
    if old_dessus = 3 & dessus = 0  , pTB
    if old_dessus = 3 & dessus = 1  , pTD
    if old_dessus = 3 & dessus = 2  , pTDev
p_transition_nul  # choix du mode de transition en chgt outil nul
    if old_dessus = 0 & dessus = 0  , pBB_nul
    if old_dessus = 0 & dessus = 3  , pBT_nul
    if old_dessus = 0 & dessus = 1  , pBD_nul
    if old_dessus = 0 & dessus = 2  , pBDev_nul
    if old_dessus = 1 & dessus = 1  , pDD_nul
    if old_dessus = 1 & dessus = 3  , pDT_nul
    if old_dessus = 1 & dessus = 0  , pDB_nul
    if old_dessus = 1 & dessus = 2  , pDDev_nul
    if old_dessus = 2 & dessus = 1  , pDevD_nul
    if old_dessus = 2 & dessus = 3  , pDevT_nul
    if old_dessus = 2 & dessus = 0  , pDevB_nul
    if old_dessus = 2 & dessus = 2  , pDevDev_nul
    if old_dessus = 3 & dessus = 3  , pTT_nul
    if old_dessus = 3 & dessus = 0  , pTB_nul
    if old_dessus = 3 & dessus = 1  , pTD_nul
    if old_dessus = 3 & dessus = 2  , pTDev_nul
	old_opid = op_id$
#endregion

#region corps de l'ISO

pheader_star      # Entete de programme
    seqno$ = 10
    seqinc$ = 10
    n$ = seqno$
    smcname$ = ucase(smcname$)
    @spindle_no$
    #q1
    "%", e$
    *progno$, "(", smcname$, ")", e$
    changement = 1
pdebprog # INIT MACHINE
    n$, "G40", "G80", "G95", e$ # init CN
    n$, "G92" , speed_max, "(VITESSE DE BROCHE MAXI)", e$
lsof$          # Premier outil tournage
	"(=============================)",e$
	"(--- TCN Biglia_BV_210Y  -----)",e$
	"(---", smcname$,"-----)",e$
	"(- VALIDER LE         PAR     )", e$
	"(=============================)",e$
    "G54",e$
    "G30U0",e$
    #"G28 V0.",e$
    "G0G40G30U0W0" ,e$
    "G0G40G95F.5" ,e$
    broche = spindle_no$
    old_broche = broche
    ptype_usi
    old_dessus = dessus
    firstannuloutil = t$ * 100
    if transfertbroche = 1, ptransfertbrut
    if avancebrut = 1, pavancebrut
    pchgt_outil1
    pdebprog
    " ",e$
    n$ , sbroche,e$
    p_Appel_T_T
msof$          # Premier outil fraisage
    broche = spindle_no$
    old_broche = broche
    ptype_usi
     old_dessus = dessus
    firstannuloutil = t$ * 100
    if transfertbroche = 1, ptransfertbrut
    if avancebrut = 1, pavancebrut
    if mode_tour = 1, "G97 S300", e$
    pchgt_outil1
    pdebprog
    " ",e$
    n$ , sbroche,e$
    if dessus = 0, p_Appel_T_B
    if dessus = 1, p_Appel_T_D
    if dessus = 2, p_Appel_T_Dev
    mode_tour = 0
ltlchg0$       # Changement d'outil nul tournage
    broche = spindle_no$
    if broche <> old_broche,
    [
        ltlchg$
        ex$
    ]
    linarc$ = 0
    if transfertbroche = 1, ptransfertbrut
    if avancebrut = 1, pavancebrut
     ptype_usi
    n$ , sbroche,e$
    p_transition_nul
    old_dessus = dessus
mtlchg0$       # Changement d'outil nul fraisage
    broche = spindle_no$
    if broche <> old_broche,
    [
        ltlchg$
        ex$
    ]
    linarc$ = 0
    ptype_usi
    n$ , sbroche, e$
    p_transition_nul
    if transfertbroche = 1, ptransfertbrut
    if avancebrut = 1, pavancebrut
    old_dessus = dessus
    compt_tour = 0
    debut_5X = yes$
ltlchg$        # Changement d'outil tournage
    broche = spindle_no$
    if sort_transfer ,
    [
        n$, "M36" ,e$
        n$, "M5" ,e$
        n$, "M205" ,e$
        n$, "G53 B0" ,e$
        "(FIN DU TRANSFERT)" ,e$
        sort_transfer = no$
    ]
    "G97 S300", e$
    linarc$ = 0
    ptype_usi
    p_transition
    chgoutil = 1
    old_dessus = dessus
    if transfertbroche = 1, ptransfertbrut
    if avancebrut = 1, pavancebrut
    " ",e$
    n$ , sbroche,e$
    p_Appel_T_T
    sort_ltchg = yes$
    compt_tour = 0
    debut_5X = yes$
mtlchg$        # Changement d'outil fraisage
    broche = spindle_no$
     linarc$ = 0
     ptype_usi
    p_transition
    old_dessus = dessus
    if transfertbroche = 1, ptransfertbrut
    if avancebrut = 1, pavancebrut
    if mode_tour = 1 , "G97 S300", e$
    " ",e$
    if dessus = 0, p_Appel_T_B
    if dessus = 1, p_Appel_T_D
    if dessus = 2, p_Appel_T_Dev
    compt_tour = 0
    debut_5X = yes$
    mode_tour = 0
leof0$         # Fin de programme tournage outil zero
    leof$
meof0$         # Fin de programme fraisage outil zero
     meof$
leof$          # Fin de programme tournage
    linarc$ = 0
    if (old_cc = 41 | old_cc = 42), correc = 40
    if (old_cc = 41 | old_cc = 42), n$, correc, e$
    plubrifoff, e$
    gcode$ = 0
    @spdir$
    if old_broche = 0 & old_spdir <> spdir$, n$, "M5", "(ARRET BROCHE GAUCHE)", e$
    if old_broche = 1 & old_spdir <> spdir$, n$, "M5", "(ARRET BROCHE DROITE)", e$
    pchgt_outil_fin
    if contrepointe = 1, pcontrepointe
    if transfertbroche = 1, ptransfertbrut
    if avancebrut = 1, pavancebrut
    comment$
	"M01" ,e$
 	#"M90 ( COMPTEUR PIECES )" ,e$
    n$, "M99",e$
    "%",e$
meof$          # Fin de programme fraisage
    linarc$ = 0
    if dessus = 0,
    [
        if g112 = 1,
        [
            n$, sannulG112, "(ANNULATION DU G112)", e$
            g112 = 0
			linarc$ = 0
            frein = 3   # frein debloque
            pgerefrein
            n$, "G0", "C0", "(REMISE EN POSITION C0)", e$
        ]
    ]
    else,
    [
        gcode$=0
        frein = 3   # frein debloque
        pgerefrein
        n$, *sgcode, "C0", "(REMISE EN POSITION C0)", e$
    ]
    plubrifoff, e$
    n$, "M75", "(ARRET BROCHE OUTIL TOURNANT)", e$
    frein = 3   # frein debloque
    pgerefrein
	n$,"M71", e$ 
    n$, "G0 G28 C0.", e$
    if broche = 0, n$, saxeCb1off, "(DESACTIVER LAXE C)", e$
    if broche = 1, n$, saxeCb2off, "(DESACTIVER LAXE C)", e$
    pchgt_outil_fin, e$
    if contrepointe = 1, pcontrepointe
    if transfertbroche = 1, ptransfertbrut
    if avancebrut = 1, pavancebrut
    comment$
	"M01" ,e$
 	"M90 ( COMPTEUR PIECES )" ,e$
    n$, "M99",e$
    "%",e$
#============================================ CONTOURS ================================================
pdwl_spd$     # Tempo
    if dwell$ <> 0, n$, *dwell$, e$
lrapid$        # Mouvement rapide lineaire tournage
    pcord_tour
    if vitOn ,
    [
        n$, "G54 G95" ,e$
        pvits
        plubrifon
        vitOn = no$
    ]
    n$, sgcode, correc, x2, zt, !x$, !z$,e$
pzrapid$    # Mouvement rapide Z fraisage
    if dessus = 0, frein = 3
    pligne_rapid
mrapid$        # Mouvement rapide lineaire fraisage
    if dessus = 0, frein = 3
    pligne_rapid
pligne_rapid    # Mouvement travail lineaire fraisage
    if opcode$ = 3 & dessus = 0,
    [
        if spindle_no$ = 0,
        [
            axec = atan2(y$,x$)
            n$, sgcode, x_Bout_perce, axec, z_Bout, e$
        ]
        if spindle_no$ = 1,
        [
            axee = atan2(y$,-x$)
            n$, sgcode,*x_Bout_perce_d, axee, z_Bout_d, e$
        ]
    ]
    else,
    [
        if type_de_rotation = 3,
        [
            result = nwadrs(sLettreC, y_Bout)
            result = nwadrs(sLettreC, y_Bout_d)
        ]
        else ,
        [
            result = nwadrs(sLettreY, y_Bout)
            result = nwadrs(sLettreY, y_Bout_d)
        ]
        if type_de_rotation = 2 ,
        [
			!x_Bout
             x_BoutY = x_Bout * 2
        ]
        if dessus = 0, gcode$ = 1
        if dessus = 0, avance = avance_r
        if dessus = 0 & spindle_no$ = 0,  
		[
			if type_de_rotation = 2, pgerefrein, n$, sgcode, x_BoutY, y_Bout, z_Bout,  avance, e$
			else , pgerefrein, n$, sgcode, x_Bout, y_Bout, z_Bout,  avance, e$
		]
        if dessus = 0 & spindle_no$ = 1,  pgerefrein, sgcode, x_Bout_d, y_Bout_d, z_Bout_d, avance, e$
        if dessus = 1,  n$, sgcode, x_Dessus, y_Dessus, z_Dessus, e$ #
        if dessus = 2,  n$, sgcode, x_Dessus, C_pos, z_dev, e$
    ]
    !x$, !y$, !z$
llin$          # Mouvement travail lineaire tournage
    pcord_tour
    n$, sgcode, correc, x2, zt, pfr_tournage, !x$, !z$, e$
mlin$          # Mouvement travail lineaire fraisage
    if dessus = 0,
    [
        frein = 3
        if mi1$ <>0, frein = 3
        @x$ ,@y$
        if prvx = x$ & prvy = y$, frein = 1
    ]
    pligne_travail


pligne_travail  # Mouvement travail lineaire fraisage
    if opcode$ = 3 & dessus = 0,
    [
        n$, sgcode,  *x_Bout_perce, *z_Bout, pfr_fraisage, e$
    ]
    else,
    [
        if type_de_rotation = 3, # axe C
        [
            result = nwadrs(sLettreC, y_Bout)
            result = nwadrs(sLettreC, y_Bout_d)
        ]
        else ,
        [
            result = nwadrs(sLettreY, y_Bout)
            result = nwadrs(sLettreY, y_Bout_d)
        ]
        if type_de_rotation = 2 , # axe Y
        [
			!x_Bout
            x_BoutY = x_Bout * 2
        ]
        if dessus = 0 & spindle_no$ = 0, 
		[
			if type_de_rotation = 2, pgerefrein, n$, pcord_fraisage, sgcode, x_BoutY, y_Bout, z_Bout, pfr_fraisage, e$
			else ,pgerefrein, n$, pcord_fraisage, sgcode, x_Bout, y_Bout, z_Bout, pfr_fraisage, e$
        	if dessus = 0 & spindle_no$ = 1, pgerefrein, n$, pcord_fraisage, sgcode, x_Bout_d, y_Bout_d, z_Bout_d, pfr_fraisage, e$
		]
        if dessus = 1, n$, pcord_fraisage, sgcode, x_Dessus,y_Dessus,  z_Dessus, pfr_fraisage, e$#
        if dessus = 2, n$, pcord_fraisage, sgcode, x_Dessus, C_pos, z_dev, pfr_fraisage, e$
    ]
    !x$, !y$, !z$
pz$            # Mouvement travail Z fraisage
    if dessus = 0, frein = 1
    pligne_travail
lcir$          # Interpolation circulaire tournage
    !reverse
    pcord_tour
    if reverse = 1, n$, sgcode, correc, *x2, *zt, arcrad$, pfr_tournage, !x$, !z$,e$
    if reverse = -1, n$,sgcode, correc, *x2, *zt, arcrad$, pfr_tournage, !x$, !z$,e$
mcir$          # Interpolation circulaire fraisage
    !spindle_no$ , !m2$
    if dessus = 0, frein = 3
    if dessus = 0 & mi1$ <>0, frein = 3
    pgerefrein
	if type_de_rotation = 2 , # axe Y
	[
		!x_Bout
		x_BoutY = x_Bout * 2
	]
    if dessus = 0 & spindle_no$ = 0, 
	[
		if type_de_rotation = 2 , n$, sgcode, *x_BoutY, *y_Bout, z_Bout, arcrad$, pfr_fraisage,e$ # fraisage en bout
		else ,n$, sgcode, *x_Bout, *y_Bout, z_Bout, arcrad$, pfr_fraisage,e$
	]
    if dessus = 0 & spindle_no$ = 1, n$, sgcode_d, *x_Bout_d, *y_Bout_d, z_Bout_d, arcrad$, pfr_fraisage,e$ # fraisage en bout
    if dessus = 1, n$, sgcode, *x_Dessus, *y_Dessus, z_Dessus, arcrad$, pfr_fraisage,e$#*y_Dessus,
    !x$, !y$, !z$
pmx$
    pcalpmx
    if debut_5X,
    [
        gcode$ = 0
        n$, sgcode, *x_5X , *y_5X , *C_5X, e$
        n$, sgcode, *z_5X, e$
    ]
    else,
    [
        if fr$ = -2, gcode$ = 0
        else, gcode$ = 1
        @x_5X , @y_5X , @z_5X, @C_5X
        n$, sgcode, x_5X , y_5X , z_5X, C_5X, pfr_fraisage, e$
    ]
    debut_5X = no$
#endregion

#region cycle fixe de tournage
ldrill$        # Cycle de pointage en tournage
    gcode$ = 0
    if spindle_no$ = 0,
    [
        garde = refht$ - initht$
        fr_tour = abs (frplunge$)
		peck1$ = garde - depth$
        if dwell$ = 0, n$, "G83", *x$, *depth$, *peck1$, *garde, *fr_tour, e$
        else, n$, "G83", *x$, *depth$, *garde, *peck1$, *tempo, *fr_tour, e$
        n$, *sgcode, "G80", e$
    ]
    if spindle_no$ = 1,
    [
        garde = (refht$ - initht$)*  -1
        depth_d = depth$ *  -1
        fr_tour = abs (frplunge$)   #fr$
        if dwell$ = 0, n$, "G83", *x$, *depth_d, *garde, *fr_tour, e$
        else, n$, "G83", *x$, *depth_d, *garde, *tempo, *fr_tour, e$
        n$, "G0 G80", e$
    ]
lpeck$     # Cycle de debourrage en tournage
    gcode$ = 0
    if spindle_no$ = 0,
    [
        garde = refht$ - initht$
        fr_tour = abs (frplunge$)   #fr$
        peck1$ = peck1$ /1000
        if dwell$ = 0, n$, "G83", *x$, *depth$, *garde, *peck1$, *fr_tour, e$
        else, n$, "G83", *x$, *depth$, *garde, *peck1$, *tempo, *fr_tour, e$
        n$, "G0 G80", e$
    ]
    if spindle_no$ = 1,
    [
        garde = (refht$ - initht$)*  -1
        fr_tour = abs (frplunge$)
        depth_d = depth$ *  -1
        if dwell$ = 0, n$, "G83", *x$, *depth_d, *garde, *peck1$, *fr_tour, e$
        else, n$, "G83", *x$, *depth_d, *garde, *peck1$, *tempo, *fr_tour, e$
        n$, "G0 G80", e$
    ]
lchpbrk$  # Cycle de brise-copeaux en tournage
    gcode$ = 0
    if spindle_no$ = 0,
    [
        garde = refht$ - initht$
        fr_tour = abs (frplunge$)
        n$, "G76", *x$, *depth$, *peck1$, *garde, pfr_tournage , e$
        n$, "G0 G80", e$
    ]
    if spindle_no$ = 1,
    [
        garde = (refht$ - initht$)*  -1
        fr_tour = abs (frplunge$)
        depth_d = depth$ *  -1
        n$, "G76", *x$, *depth_d, *peck1$, *garde, pfr_tournage , e$
        n$, "G0 G80", e$
    ]
ltap$      # Cycle de taraudage en tournage
    gcode$ = 0
    if spindle_no$ = 0,
    [
        garde = refht$ - initht$
        garde1 = depth$
        garde2 = abs(ss$)
        garde3 = abs(ss$)
        gardeR = refht$ - initht$
        fr_taraud = n_tap_thds$ #* abs (ss$)
        n$, "G84", *x$, *depth$, *garde,"D2,", *fr_taraud,e$
        #else, n$, "G84", *x$, *depth$, *garde, *tempo, *fr_taraud, e$         #pfr_tournage
        n$, "G0 G80", e$
    ]
    if spindle_no$ = 1,
    [
        garde = (refht$ - initht$)*  -1
        fr_taraud = n_tap_thds$ * abs (ss$)
        depth_d = depth$ *  -1
         if dwell$ = 0, n$, "G84", *x$, *depth_d, *garde, *fr_taraud, e$        #pfr_tournage
        else, n$, "G84", *x$, *depth_d, *garde, *tempo, *fr_taraud, e$         #pfr_tournage
        n$, "G0 G80", e$
    ]
lbore1$    # Cycle d'alesage en tournage
    gcode$ = 0
    if spindle_no$ = 0,
    [
    garde = refht$ - initht$
    fr_tour = abs (frplunge$)
    if dwell$ = 0, n$, "G85", *x$, *depth$, *garde, *fr_tour, e$         #pfr_tournage
    else, n$, "G85", *x$, *depth$, *garde, *tempo, *fr_tour, e$         #pfr_tournage
    n$, "G0 G80", e$
    ]
    if spindle_no$ = 1,
    [
        garde = (refht$ - initht$)*  -1
        fr_tour = abs (frplunge$)
        depth_d = depth$ *  -1
        if dwell$ = 0, n$, "G85", *x$, *depth_d, *garde, *fr_tour, e$         #pfr_tournage
        else, n$, "G85", *x$, *depth_d, *garde, *tempo, *fr_tour, e$         #pfr_tournage
        n$, "G0 G80", e$
     ]
pusecanmill
    usecandrill$ = 1
    usecanpeck$  = 1
    usecanchip$  = 0
    usecantap$   = 1
    usecanbore1$ = 1
    usecanbore2$ = 0
    usecanmisc1$ = 0
    usecanmisc2$ = 0
pusecanlathe
    usecandrill$ = 1
    usecanpeck$  = 1
    usecanchip$  = 0
    usecantap$   = 1
    usecanbore1$ = 1
    usecanbore2$ = 0
    usecanmisc1$ = 0
    usecanmisc2$ = 0
#endregion

#region cycle fixe de fraisage
mdrill$        # Cycle de pointage en fraisage
    if dessus = 0, pdrillB
    if dessus = 1, pdrillD
     if dessus = 2, pdrillDev
mdrill_2$  # Canned Drill Cycle
    if dessus = 0, pdrillB_2
    if dessus = 1, pdrillD_2
    if dessus = 2, pdrillDev_2
pdrillB       # Cycle de percage en fraisage en bout
    if spindle_no$ = 0,
    [
        garde = refht$ - initht$
        axec = atan2(y$,x$), e$
        frein = 1
        pgerefrein
		peck1$ = garde - depth$
        if dwell$ = 0, n$, "G83", *x_Bout_perce, *axec, *depth$, *peck1$, *garde,  pfr_fraisage1, "M70" ,e$ #*frplunge$, e$
        else, n$, "G83", x_Bout_perce, axec, *depth$, *garde, *peck1$,  *tempo, pfr_fraisage1,"M70", e$ # *frplunge$, e$
    ]
    if spindle_no$ = 1,
    [
        garde = (refht$ - initht$)*  -1
        axee = atan2(y$,-x$), e$
        depth_d = depth$ *  -1
        frein = 1
        pgerefrein
        if dwell$ = 0, n$, "G83", *x_Bout_perce_d, *axee, *depth_d, *garde, pfr_fraisage1, e$ # *frplunge$, e$
        else, n$, "G83", x_Bout_perce_d, axee, *depth_d, *garde, *tempo, pfr_fraisage1 # *frplunge$, e$
    ]
pdrillB_2      # Cycle de percage en fraisage en bout
    if spindle_no$ = 0,
    [
        garde = refht$ - initht$
        axec = atan2(y$,x$)        # Calcul de l'angle de rotation du mandrin axe C
        n$, axec, x_Bout_perce, depth$, *peck1$, garde, e$
    ]
    if spindle_no$ = 1,
    [
        garde = (refht$ - initht$)*  -1
        depth_d = depth$ *  -1
        axee = atan2(y$,-x$)        # Calcul de l'angle de rotation du mandrin axe C
        n$, axee, x_Bout_perce_d, depth_d,*peck1$, garde, e$
    ]
pdrillD       # Cycle de percage en fraisage en dessus
    frein = 1
    pgerefrein
    garde = (refht$ - initht$)
	peck1$ = garde - depth$
    if dwell$ = 0, n$, "G87", *x_Dessus, *y_Dessus, *prof, *garde, *depth$,  pfr_fraisage1, "M70", e$ #*frplunge$ *y_Dessus
    else, n$, "G87", *x_Dessus, *prof, *garde, *depth$,  pfr_fraisage1, "M70", e$ #*tempo, *frplunge$
pdrillD_2       # Cycle de percage en fraisage en dessus
    pcanceldc$
    prot_calc
    prot_affich_T
    pdrillD
pdrillDev
pdrillDev_2

mpeck$     # Cycle de debourrage en fraisage
    if dessus = 0, ppeckB
    if dessus = 1, ppeckD
    if dessus = 2, ppeckDev
mpeck_2$   # Canned Peck Drill Cycle
    if dessus = 0, ppeckB_2
    if dessus = 1, ppeckD_2
    if dessus = 2, ppeckDev_2
ppeckB       # Cycle de percage en fraisage en bout
    if spindle_no$ = 0,
    [
        garde = refht$ - initht$
        axec = atan2(y$,x$), e$
        frein = 3
        pgerefrein
        if dwell$ = 0, n$, "G83", x_Bout_perce, axec, *depth$, *garde, *peck1$,   pfr_fraisage1,"M70", e$ #*frplunge$, e$
        else, n$, "G83", x_Bout_perce, axec, *depth$, *garde, *peck1$,  *tempo,  pfr_fraisage1,"M70", e$ #*frplunge$, e$
    ]
    if spindle_no$ = 1,
    [
        garde = (refht$ - initht$)*  -1
        axee = atan2(y$,-x$), e$
        depth_d = depth$ *  -1
        frein = 1
        pgerefrein
        if dwell$ = 0, n$, "G83", x_Bout_perce_d, axee, *depth_d, *garde, *peck1$,  pfr_fraisage1, "M70",e$ #*frplunge$, e$
        else, n$, "G83", x_Bout_perce_d, axee, *depth_d, *garde, *peck1$, *tempo,  pfr_fraisage1, e$  #*frplunge$, e$
    ]
ppeckB_2      # Cycle de percage en fraisage en bout
    if spindle_no$ = 0,
    [
        garde = refht$ - initht$
        axec = atan2(y$,x$)        # Calcul de l'angle de rotation du mandrin axe C
        n$, axec, x_Bout_perce, *peck1$, depth$, garde, e$
    ]
    if spindle_no$ = 1,
    [
        garde = (refht$ - initht$)*  -1
        depth_d = depth$ *  -1
        axee = atan2(y$,-x$)        # Calcul de l'angle de rotation du mandrin axe C
        n$, axee, x_Bout_perce_d, *peck1$, depth_d, garde, e$
    ]
ppeckD       # Cycle de percage en fraisage en dessus
    garde = (refht$ - initht$)
    frein = 1
    pgerefrein
    if dwell$ = 0, n$, "G87", *x_Dessus, *y_Dessus,*prof, *garde, *peck1$, pfr_fraisage1,"M70", e$ #*frplunge$, e$- *y_Dessus
    else, n$, "G87", *x_Dessus, *prof, *garde, *peck1$, *tempo,  pfr_fraisage1, e$ #*frplunge$, e$
ppeckD_2       # Cycle de percage en fraisage en dessus
    pcanceldc$
    prot_calc
    prot_affich_T
    ppeckD
ppeckDev
ppeckDev_2
mchpbrk$   # Cycle de brise copeau en fraisage
    if dessus = 0, ppeckB
    if dessus = 1, ppeckD
    if dessus = 2, ppeckDev
mchpbrk_2$ # Canned Chip Break Cycle
    if dessus = 0, ppeckB_2
    if dessus = 1, ppeckD_2
    if dessus = 2, ppeckDev_2
mtap$      # Cycle de taraudage en fraisage
    fr_taraud = n_tap_thds$
    if dessus = 0, ptapB
    if dessus = 1, ptapD
     if dessus = 2, ptapDev
mtap_2$    # Taraudages suivants en fraisage
    if dessus = 0, ptapB_2
    if dessus = 1, ptapD_2
    if dessus = 2, ptapDev_2
ptapB     # Cycle de taraudage en fraisage en bout
    if spindle_no$ = 0,
    [
        !initht$, !depth$
        garde = refht$ - initht$
        garde1 = depth$
        garde2 = abs(ss$)
        garde3 = abs(ss$)
        gardeR = refht$ - initht$
        axec = atan2(y$,x$), e$
        frein = 1
        pgerefrein
		ZAppTar = gardeR
		n$, "G0" , *ZAppTar,e$
		if dwell$ = 0, n$, "G84", *garde1,"D2,",  *fr_taraud, "M70", e$
		else, n$, "G84", *garde1, *gardeR, *fr_taraud, "M70", e$
		n$, "G0 G80" , *ZAppTar,e$
        !x$, !y$, !z$
    ]
    if spindle_no$ = 1,
    [
        garde = (refht$ - initht$)*  -1
        axee = atan2(y$,-x$), e$
        frein = 1
        pgerefrein
        depth_d = depth$ *  -1
        if dwell$ = 0, n$, "G384",  *garde1, *fr_taraud, *garde3,  *garde2 "T2", e$
        else, n$, "G384",  *garde1, *fr_taraud, garde3,  *garde2 "T2", e$
    ]
ptapB_2
    garde = refht$ - initht$
    if spindle_no$ = 0,
    [
        !initht$, !depth$
        garde = refht$ - initht$
        garde1 = depth$
        garde2 = abs(ss$)
        garde3 = abs(ss$)
        gardeR = refht$ - initht$
        axec = atan2(y$,x$), e$
        frein = 3
        pgerefrein
        n$, *axec, e$
        frein = 1
        pgerefrein
		n$, "G0" , *ZAppTar,e$
		if dwell$ = 0, n$, "G84", *garde1,"D2," *fr_taraud, e$
		else, n$, "G84", *garde1, *gardeR, *fr_taraud, e$
		n$, "G0 G80" , *ZAppTar,e$
        !x$, !y$, !z$
    ]
    if spindle_no$ = 1,
    [
        garde = (refht$ - initht$)*  -1
        depth_d = depth$ *  -1
        axee = atan2(y$,-x$)        # Calcul de l'angle de rotation du mandrin axe C
        n$, "G384", axee, x_Bout_perce_d, depth_d, e$
    ]
ptapD     # Cycle de taraudage en fraisage en dessus
    !initht$, !depth$
    garde = refht$ - initht$
    garde1 = depth$ *2
    garde2 = Vccf
    garde3 = Vccf
    gardeR = refht$ - initht$
    frein = 1
    pgerefrein
	if dwell$ = 0, n$, "G88", *garde1, *gardeR,"D2,", *fr_taraud, e$
	else, n$, "G84", *garde1, *gardeR, *fr_taraud, e$
    !x$, !y$, !z$
ptapD_2       # Cycle de taraudage en fraisage en dessus
    pcanceldc$
    prot_calc
    prot_affich_T
    ptapD
ptapDev
ptapDev_2
#--------------------------------------------------------------------
mbore1$        # Cycle d'alesage en fraisage
    if dessus = 0, pbore1B
    if dessus = 1, pbore1D
    if dessus = 2, pbore1Dev
mbore1_2$  # Cycle d'alesage en fraisage
    if dessus = 0, pbore1B_2
    if dessus = 1, pbore1D_2
    if dessus = 2, pbore1Dev_2
pbore1B       # Cycle d'alesage en fraisage en bout
    if spindle_no$ = 0,
    [
        garde = refht$ - initht$
        axec = atan2(y$,x$), e$
        frein = 1
        pgerefrein
        if dwell$ = 0, n$, "G85", x_Bout_perce, axec, *depth$, *garde,  pfr_fraisage1, e$ #*frplunge$, e$
        else, n$, "G85", x_Bout_perce, axec, *depth$, *garde, *tempo,   pfr_fraisage1, e$ #*frplunge$, e$
    ]
    if spindle_no$ = 1,
    [
        garde = (refht$ - initht$)*  -1
        axee = atan2(y$,-x$), e$
        depth_d = depth$ *  -1
        frein = 1
        pgerefrein
        if dwell$ = 0, n$, "G85", x_Bout_perce_d, axee, *depth_d, *garde,  pfr_fraisage1, e$ #*frplunge$, e$
        else,  n$, "G85", x_Bout_perce_d, axee, *depth_d, *garde, *tempo, pfr_fraisage1, e$ #*frplunge$, e$
    ]
pbore1B_2      # Cycle d'alesage en fraisage en bout
    if spindle_no$ = 0,
    [
        garde = refht$ - initht$
        axec = atan2(y$,x$)        # Calcul de l'angle de rotation du mandrin axe C
        n$, axec, x_Bout_perce, depth$, garde, e$
    ]
    if spindle_no$ = 1,
    [
        garde = (refht$ - initht$)*  -1
        depth_d = depth$ *  -1
        axee = atan2(y$,-x$)        # Calcul de l'angle de rotation du mandrin axe C
        n$, axee, x_Bout_perce_d, depth_d, garde, e$
    ]
pbore1D       # Cycle d'alesage en fraisage en dessus
    garde = (refht$ - initht$)
    frein = 1
    pgerefrein
    if dwell$ = 0, n$, "G89", *x_Dessus,*y_Dessus, *prof, *garde, *frplunge$, e$
    else, n$, "G89", *x_Dessus,*y_Dessus, *prof, *garde, *tempo,  pfr_fraisage1, e$ #*frplunge$, e$ *y_Dessus
pbore1D_2       # Cycle d'alesage en fraisage en dessus
    pcanceldc$
    prot_calc
    prot_affich_T
    pbore1D
pbore1Dev
pbore1Dev_2

pcanceldc$ # Cancel canned drill cycle
    z$ = initht$
    if n_tap_thds$ <> 0, n$, "G0", "G80"
     else, n$, "G0", "G80"
    if dessus = 0,
    [
        if spindle_no$ = 0, *z_Bout, e$
        if spindle_no$ = 1, *z_Bout_d, e$
    ]
    if dessus = 1,
    [
        if spindle_no$ = 0, *z_Dessus, e$
        if spindle_no$ = 1, *z_Dessus, e$
    ]
    if dessus = 2,
    [
        if spindle_no$ = 0, *z_dev, e$
        if spindle_no$ = 1, *z_dev, e$
     ]


#endregion

#region filtage
pthdext$   # exter
pthdint$   # inter
pthread0$ # pre calcule
    thdrdlt = (((thdx2$ - thdx3$) / (thdz1$ - thdz2$)) * thdzclr$)
    thdrdlt = (thdrdlt + (thdx2$ - thdx3$)) * pl_ax_m0x
    xdeb = x2
    zdeb = zt
pval
    "------" , *thdtype$, e$
    "------", *thddepth$, e$
    *pi$
    "angle de filetage conique", *thdtaper$,e$
    "nbr de filets", *nstarts$,e$
    "angle d'entree", *thdangle$,e$
    "angle de depat du filet", *thda1$,e$
    "angle d'ouverture du filet", *thda2$,e$
    "nbr de passes a vide", *nspring$,e$
    "tol de finition", *thdfinish$,e$
    "degagenemt anticipe", thdpulloff$,e$
    "1ere passe", thdfirst$,e$
    "derniere passe", thdlast$,e$
    "passes egales(meme prof)", thdequcut$,e$
    "garde sur brut en x", thdxclr$,e$
    "garde d'approche en Z", *thdzclr$,e$
    "nombre de passes", *thdncuts$, e$
    "ray majeur au z accostage", *thdx1$,e$
    "ray mineur au z accostage", *thdx2$,e$
    "ray mineur au z de fin", *thdx3$,e$
    "z de debut filet",*thdz1$,e$
    "z de fin filet (avec surusinage)", *thdz2$,e$
    "Pas (positif si mm/tour)",  *thdlead$, e$
pthd_end$   # fin d'un filetage Code long - Cycle fixe - Cube
    gcode$ = 0
    n$, sgcode,  *xdeb, *zdeb, !x$, !z$, e$
pg32$       # Code long - Cube
    pas = thdlead$
    cone = thdx3$ - thdx2$
pthrg32_1$  # Code long - Alternative
    gcode$ = 0
    n$, sgcode,  x2, zt, !x$, !z$,e$
    !x$, !z$
pthrg32_2$  # Code long - Alternative
    gcode$ = 0
    n$, sgcode,  x2, zt, !x$, !z$,e$
    !x$, !z$
pthrg32_3$  # Code long - Alternative
    gcode$ = 6
    n$, sgcode,  x2, zt, *pas, !x$, !z$,e$
pthrg32_4$  # Code long - Alternative
    gcode$ = 0
    n$, sgcode,  x2, zt, !x$, !z$,e$
    !x$, !z$
pg76$    # Cycle fixe
    spaces$ = 0
    thdang = rad2deg$ * thda2$
    Diamfinal = thdx3$ * 2
    Zfinal = thdz2$
    Npasse = nspring$
    n$, "G76 ", *Npasse, *thdpull, *thdang, " ", *thdlast$, " ", *thdfinish$, e$
    spaces$ = 1
    n$, "G76", *Diamfinal, *Zfinal, *thdrdlt, *thddepth$, *thdfirst$, *thdlead$, e$
pthrg92_1$  # Cube position en rapide au demarrage
    gcode$ = 0
    #n$, "---", sgcode,  *x2, *zt, !x$, !z$,e$
    !x$, !z$
pthrg92_2$  # Cube position de prise de passe
    gcode$ = 0
    #n$, sgcode,  x2, zt,!x$, !z$,e$
    !x$, !z$
pthrg92_3$  # Cube Cycle de filetage
    gcode$ = 8
    n$, sgcode,  x2, zt, cone, pas, !x$, !z$,e$
pthrg92_4$  # Cube degagement
    gcode$ = 0
    #n$, sgcode,  x2, zt,!x$, !z$,e$
    !x$, !z$, !x2
#endregion

#region texte du PP
[CTRL_TEXT_XML_BEGIN]  # Post text edits MUST be made with Control Definition Manager. The entire post must be encoded in the local code page plus the XML below despite UTF-8 tag.
<?xml version="1.0" encoding="UTF-8"?>
<mp_xml_post_text xml:space="preserve">
	<control>
		<control_label>CTRL_MT_MILL|DEFAULT</control_label>
		<language>fr-FR</language>
		<misc_integers>
			<misc_1>
				<text>0 pour frein faible 1 pour frein debloque</text>
			</misc_1>
		</misc_integers>
		<simple_drill>
			<description>
				<text>Percage</text>
			</description>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</simple_drill>
		<peck_drill>
			<description>
				<text>Debourage</text>
			</description>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>Increment</text>
			</first_peck>
		</peck_drill>
		<chip_break>
			<description>
				<text>Brise-copeaux</text>
			</description>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>Increment</text>
			</first_peck>
		</chip_break>
		<tap>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</tap>
		<bore1>
			<description>
				<text>Alesage</text>
			</description>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</bore1>
		<drill_cycle_descriptions>
			<simple_drill>
				<text>Percage</text>
			</simple_drill>
			<peck_drill>
				<text>Debourrage</text>
			</peck_drill>
			<chip_break>
				<text>""</text>
			</chip_break>
			<tapping>
				<text>Taraudage</text>
			</tapping>
			<boring_1>
				<text>Alesage</text>
			</boring_1>
			<boring_2>
				<text>""</text>
			</boring_2>
			<misc_drill_1>
				<text>""</text>
			</misc_drill_1>
			<misc_drill_2>
				<text>""</text>
			</misc_drill_2>
			<custom_drill_9>
				<text>""</text>
			</custom_drill_9>
			<custom_drill_10>
				<text>""</text>
			</custom_drill_10>
			<custom_drill_11>
				<text>""</text>
			</custom_drill_11>
			<custom_drill_12>
				<text>""</text>
			</custom_drill_12>
			<custom_drill_13>
				<text>""</text>
			</custom_drill_13>
			<custom_drill_14>
				<text>""</text>
			</custom_drill_14>
			<custom_drill_15>
				<text>""</text>
			</custom_drill_15>
			<custom_drill_16>
				<text>""</text>
			</custom_drill_16>
			<custom_drill_17>
				<text>""</text>
			</custom_drill_17>
			<custom_drill_18>
				<text>""</text>
			</custom_drill_18>
			<custom_drill_19>
				<text>""</text>
			</custom_drill_19>
			<custom_drill_20>
				<text>""</text>
			</custom_drill_20>
		</drill_cycle_descriptions>
	</control>
<control>
		<control_label>CTRL_MT_MILL|CMZ_TA20_YS</control_label>
		<language>fr-FR</language>
		<misc_integers>
			<misc_1>
				<text>0 pour frein faible 1 pour frein debloque</text>
			</misc_1>
		</misc_integers>
		<simple_drill>
			<description>
				<text>Percage</text>
			</description>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</simple_drill>
		<peck_drill>
			<description>
				<text>Debourage</text>
			</description>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>Increment</text>
			</first_peck>
		</peck_drill>
		<chip_break>
			<description>
				<text>Brise-copeaux</text>
			</description>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>Increment</text>
			</first_peck>
		</chip_break>
		<tap>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</tap>
		<bore1>
			<description>
				<text>Alesage</text>
			</description>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</bore1>
		<drill_cycle_descriptions>
			<simple_drill>
				<text>Percage</text>
			</simple_drill>
			<peck_drill>
				<text>Debourrage</text>
			</peck_drill>
			<chip_break>
				<text>""</text>
			</chip_break>
			<tapping>
				<text>Taraudage</text>
			</tapping>
			<boring_1>
				<text>Alesage</text>
			</boring_1>
			<boring_2>
				<text>""</text>
			</boring_2>
			<misc_drill_1>
				<text>""</text>
			</misc_drill_1>
			<misc_drill_2>
				<text>""</text>
			</misc_drill_2>
			<custom_drill_9>
				<text>""</text>
			</custom_drill_9>
			<custom_drill_10>
				<text>""</text>
			</custom_drill_10>
			<custom_drill_11>
				<text>""</text>
			</custom_drill_11>
			<custom_drill_12>
				<text>""</text>
			</custom_drill_12>
			<custom_drill_13>
				<text>""</text>
			</custom_drill_13>
			<custom_drill_14>
				<text>""</text>
			</custom_drill_14>
			<custom_drill_15>
				<text>""</text>
			</custom_drill_15>
			<custom_drill_16>
				<text>""</text>
			</custom_drill_16>
			<custom_drill_17>
				<text>""</text>
			</custom_drill_17>
			<custom_drill_18>
				<text>""</text>
			</custom_drill_18>
			<custom_drill_19>
				<text>""</text>
			</custom_drill_19>
			<custom_drill_20>
				<text>""</text>
			</custom_drill_20>
		</drill_cycle_descriptions>
	</control>
<control>
		<control_label>CTRL_MT_MILL|BIGLIA_BV_210Y</control_label>
		<language>fr-FR</language>
		<misc_integers>
			<misc_1>
				<text>0 pour frein faible 1 pour frein debloque</text>
			</misc_1>
		</misc_integers>
		<simple_drill>
			<description>
				<text>Percage</text>
			</description>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</simple_drill>
		<peck_drill>
			<description>
				<text>Debourage</text>
			</description>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>Increment</text>
			</first_peck>
		</peck_drill>
		<chip_break>
			<description>
				<text>Brise-copeaux</text>
			</description>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>Increment</text>
			</first_peck>
		</chip_break>
		<tap>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</tap>
		<bore1>
			<description>
				<text>Alesage</text>
			</description>
			<dwell>
				<text>Tempo</text>
			</dwell>
			<first_peck>
				<text>""</text>
			</first_peck>
			<subsequent_peck>
				<text>""</text>
			</subsequent_peck>
			<peck_clearance>
				<text>""</text>
			</peck_clearance>
			<retract_amount>
				<text>""</text>
			</retract_amount>
			<shift>
				<text>""</text>
			</shift>
		</bore1>
		<drill_cycle_descriptions>
			<simple_drill>
				<text>Percage</text>
			</simple_drill>
			<peck_drill>
				<text>Debourrage</text>
			</peck_drill>
			<chip_break>
				<text>""</text>
			</chip_break>
			<tapping>
				<text>Taraudage</text>
			</tapping>
			<boring_1>
				<text>Alesage</text>
			</boring_1>
			<boring_2>
				<text>""</text>
			</boring_2>
			<misc_drill_1>
				<text>""</text>
			</misc_drill_1>
			<misc_drill_2>
				<text>""</text>
			</misc_drill_2>
			<custom_drill_9>
				<text>""</text>
			</custom_drill_9>
			<custom_drill_10>
				<text>""</text>
			</custom_drill_10>
			<custom_drill_11>
				<text>""</text>
			</custom_drill_11>
			<custom_drill_12>
				<text>""</text>
			</custom_drill_12>
			<custom_drill_13>
				<text>""</text>
			</custom_drill_13>
			<custom_drill_14>
				<text>""</text>
			</custom_drill_14>
			<custom_drill_15>
				<text>""</text>
			</custom_drill_15>
			<custom_drill_16>
				<text>""</text>
			</custom_drill_16>
			<custom_drill_17>
				<text>""</text>
			</custom_drill_17>
			<custom_drill_18>
				<text>""</text>
			</custom_drill_18>
			<custom_drill_19>
				<text>""</text>
			</custom_drill_19>
			<custom_drill_20>
				<text>""</text>
			</custom_drill_20>
		</drill_cycle_descriptions>
	</control>
</mp_xml_post_text>
[CTRL_TEXT_XML_END]
#endregion
